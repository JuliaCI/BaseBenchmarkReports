cset: moving following pidspec: 8789
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.622765294 seconds)
loading group "shootout"... done (took 1.191710715 seconds)
loading group "string"... done (took 0.430114459 seconds)
loading group "linalg"... done (took 8.037669486 seconds)
loading group "parallel"... done (took 0.153702425 seconds)
loading group "find"... done (took 1.410161895 seconds)
loading group "tuple"... done (took 1.932650986 seconds)
loading group "union"... done (took 12.831132868 seconds)
loading group "dates"... done (took 1.344345271 seconds)
loading group "micro"... done (took 0.206043925 seconds)
loading group "simd"... done (took 4.342407653 seconds)
loading group "io"... done (took 0.979997969 seconds)
loading group "random"... done (took 8.496273833 seconds)
loading group "problem"... done (took 1.629490715 seconds)
loading group "array"... done (took 19.455332405 seconds)
loading group "misc"... done (took 1.493957028 seconds)
loading group "scalar"... done (took 39.829380053 seconds)
loading group "sort"... done (took 3.084688539 seconds)
loading group "sparse"... done (took 11.710137009 seconds)
loading group "collection"... done (took 17.04179129 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551927825 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131816151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140768411 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12484614 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155890098 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120537666 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12759614 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088040966 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.932371097 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157057059 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116484827 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.485339899 seconds)
done (took 5.642925451 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178386386 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092582949 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081059664 seconds)
  done (took 1.348240683 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06638431 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131212682 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067595155 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067493373 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067812852 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067434419 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067098039 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067562942 seconds)
  done (took 1.712166924 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073865483 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069832062 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070255277 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069147627 seconds)
  done (took 1.459103703 seconds)
done (took 5.954674563 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.256441474 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.115357929 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.314693764 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.405417209 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.495624406 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092708849 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074613905 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.07068638 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129363338 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32008833 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.12246169 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.202124809 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.101499513 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184351228 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.058158729 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.135444634 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086194943 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.126861997 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093277453 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131454506 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.416609821 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077827543 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.075958615 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.07204988 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068688572 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.649017311 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66627673 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150626617 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084235606 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.104970641 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.117279407 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646363494 seconds)
  done (took 10.863268468 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105740428 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101618255 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069938672 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126218579 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103569806 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070232601 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07617541 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068124533 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091994089 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13151915 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094794487 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112962252 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06941529 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07138582 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087839735 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200766975 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081286884 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083153003 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069141373 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080530049 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108818298 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079199009 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081315765 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082514245 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131017282 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169540297 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097746205 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098729661 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067318977 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084085492 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11624726 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130570287 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068301417 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067208371 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131101959 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095979286 seconds)
  done (took 4.730383278 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.203858269 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093641734 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.111092843 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.661096831 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068077599 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.163854181 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255428457 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.076013765 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.43355332 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.167469227 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.154624386 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.153369734 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.125912431 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071426689 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.367476787 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.130619122 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.62359762 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.074246351 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.070570482 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066948864 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078621777 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070424139 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065097112 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079720035 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093098578 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.091658899 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.208493142 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.051851984 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.325745814 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070665918 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17328891 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.090957465 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.372507131 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.072366837 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097821074 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.095566428 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.412477 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.130732167 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068059334 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181052214 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.132822364 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066173123 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.12716126 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083461568 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086033515 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.071401434 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069442424 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079288931 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080778251 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102291963 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068193112 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064880352 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168085915 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064276744 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067354989 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067687583 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149650773 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064507942 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.155985072 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064247194 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06836964 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095707076 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070661414 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.09358882 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112902222 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066544039 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338677209 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064885564 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067784827 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.041149266 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.915785688 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079776184 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.068288627 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.086165318 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067916238 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.070670674 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06978438 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.079717395 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072876428 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068122979 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109649455 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066520184 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069846063 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065548759 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07192716 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100109943 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064692718 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.466058934 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098998145 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068116764 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.080471279 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108101066 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.177229684 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.073686264 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068556786 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.07225708 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066152137 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068100571 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070807312 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094337288 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069792881 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112718638 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.023288985 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071015635 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066509025 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071860933 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070950001 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063813477 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06969702 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065931708 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070990191 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068310924 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065687312 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.115989398 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06539694 seconds)
  done (took 22.641000613 seconds)
done (took 40.61938426 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.25641415 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085770914 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085732099 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.088574354 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086079301 seconds)
  done (took 1.890028791 seconds)
done (took 3.167911742 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109785066 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.064249287 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.102586062 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.102482903 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063588194 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06387842 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.099258208 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063521474 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099109897 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.102260697 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.10496984 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.103795462 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063646167 seconds)
  done (took 2.429711755 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.071876125 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080617925 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083342487 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062167304 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072297239 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081642258 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06200403 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080450834 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.088294221 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08142641 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082913379 seconds)
  done (took 2.115507885 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069280382 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080872508 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.084045891 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.062164628 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.073555698 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081736934 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.062139648 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.08124864 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085555594 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081471899 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.081032589 seconds)
  done (took 2.104312117 seconds)
done (took 7.912848303 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075477863 seconds)
  done (took 1.322049045 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.567355951 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.83650731 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.077936623 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.09892237 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197590341 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110615284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.249322319 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083641538 seconds)
  done (took 8.65876526 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09529563 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070046077 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070551387 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082154789 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069805928 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0691972 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068683104 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070001136 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069132381 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069918387 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069094721 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069779743 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068840921 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068721063 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068264536 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06890919 seconds)
  done (took 2.489741515 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098993521 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096752263 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073343696 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075746807 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072317099 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071907596 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074428184 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073865918 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070862814 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072425752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076328418 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073530998 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073775164 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064717792 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07442599 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077189067 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071159921 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074655361 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07538229 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076305084 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075955194 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064941616 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073813447 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074839084 seconds)
  done (took 3.182456556 seconds)
done (took 16.914994856 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.119151057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079263524 seconds)
  done (took 1.454298769 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080102488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081687027 seconds)
  done (took 1.431104985 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080612044 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06262886 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090169346 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076330354 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063364101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062954491 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087511253 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063954494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063160032 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063091916 seconds)
  done (took 1.984347857 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065441053 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075754175 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071045956 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081049447 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072229731 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064983926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069542758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065505866 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076188946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063791587 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069677821 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08451192 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069162986 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086310919 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069592757 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070018693 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072133291 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068659762 seconds)
  done (took 2.568754359 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.062695959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064369101 seconds)
  done (took 1.402727312 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06777117 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064679881 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06863978 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067317442 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063861529 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063449217 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06382349 seconds)
  done (took 1.730835428 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.375619537 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125148816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336455016 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070987043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08022097 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261648187 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064367435 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069438014 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069872985 seconds)
  done (took 2.771701235 seconds)
done (took 14.624745144 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08042192 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08713424 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099153521 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46131 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092350957 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067364178 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114082692 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181843285 seconds)
done (took 2.472621182 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210816235 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.533228475 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.841593867 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.068350566 seconds)
  done (took 3.723042469 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341060546 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088080991 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077835279 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066883677 seconds)
  done (took 1.864557304 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066922797 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070044339 seconds)
  done (took 1.422222127 seconds)
done (took 8.511284673 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064740157 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09056645 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064530593 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064279242 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063799705 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.063957517 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064278393 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064209166 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064729699 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064082329 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064162889 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.063995626 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.063945593 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063799722 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064334931 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064173838 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064124396 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063906723 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064112225 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063841178 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064524098 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064085277 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063977179 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064063733 seconds)
  done (took 2.881911679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081928204 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066396937 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068268005 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069158513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068474442 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068357305 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068317035 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066205254 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068504752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066076226 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06833563 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068529968 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065823971 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068601237 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065862672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068491587 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068174313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066171235 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066304213 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068604526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06791768 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066161082 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068270931 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067850528 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068212501 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068401419 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066155385 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066190107 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068360622 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068560276 seconds)
  done (took 3.339218357 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064498808 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060961832 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061702433 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07024337 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061012719 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.061941542 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062830803 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061309513 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061035799 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.062654248 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062094764 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060739598 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061824807 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.061254997 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060621236 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062179483 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065153533 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078113705 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061537875 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060935217 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06502728 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.061399522 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061401014 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061604984 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.0618906 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060971818 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063410925 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061460746 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.06099054 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.06187891 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.061210773 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064722156 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065505327 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.060849353 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069740283 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064762692 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.060842779 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064349974 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.062474 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060546966 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060629683 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060659507 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.061005757 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060847583 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069449169 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.061465815 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062553651 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.061471984 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061140938 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.060841304 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060999886 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.063521713 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065841559 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.062594467 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.060841237 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06245145 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060359183 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062097913 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.060936953 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060782571 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060440229 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063331624 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.06289231 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062052459 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078283514 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.063513262 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069605281 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061314313 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062070297 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06401319 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.061615652 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076044923 seconds)
  done (took 5.841090792 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091152927 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089697571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066287401 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065832224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062246683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062038086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069867643 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06179652 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065687145 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081128438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061663689 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065800949 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065852985 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065872048 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062041097 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066584962 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071147456 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062073768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061928542 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065732307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0620274 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069916991 seconds)
  done (took 2.810423265 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150797784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068091051 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106609265 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084026809 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071339424 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080119196 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06798785 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067991738 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068147221 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068206843 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068031641 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068483301 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071084418 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068121656 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068031645 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06806058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067696326 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067833375 seconds)
  done (took 2.681894873 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078542983 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067503266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088349083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066719938 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066876102 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067001952 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071587093 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072799048 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067260714 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067163099 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072833764 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066838983 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066986048 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067012351 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06693554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066598234 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067179402 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067541657 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072928421 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071747736 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071537728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073256941 seconds)
  done (took 2.849252336 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079106282 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066141778 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081503465 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067344706 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061608019 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062097162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067465518 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065882639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067413738 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066061332 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066010955 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06227329 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067475865 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065964798 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068089146 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06577481 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066279556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066396482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065965365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061776906 seconds)
  done (took 2.644975164 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095431095 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065041033 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065000212 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083318108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065587095 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065075063 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083398045 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064808414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065562574 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087055517 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065039564 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065405863 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083456448 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083623278 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065719354 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083901991 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08333123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086115731 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065195445 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065305579 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086912602 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06500373 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083427215 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064980826 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065264212 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0652087 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065145712 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083722015 seconds)
  done (took 3.373600764 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073631433 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06356869 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064221567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064287568 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064399174 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063983112 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064202275 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065364807 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064308399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06459163 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064431564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064468068 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064783068 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064396565 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064117875 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.063903552 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064265149 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06411521 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064188303 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064094956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063774659 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064328165 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063799832 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064533488 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064100683 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063890261 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064268937 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064242882 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063789633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064747485 seconds)
  done (took 3.247597855 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075149609 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073008957 seconds)
  done (took 1.460119315 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063958318 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080227584 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061604398 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072253654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071144962 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064126135 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071554113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070357637 seconds)
  done (took 1.861548978 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.078335468 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.100313682 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.065517624 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065525037 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075892474 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.124449496 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084889379 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072713527 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075488488 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064172864 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.064517164 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084034179 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063279602 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074456051 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066263028 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07085812 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070291631 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075187148 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074824075 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06175881 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076733077 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066604893 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062352506 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065135226 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063520851 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068885938 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077503698 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073999646 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070610847 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060394823 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.084373793 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061951297 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064227239 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070906742 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0752848 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.06227203 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.0991735 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.063027542 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.069552245 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061636241 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073924081 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083635119 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074377109 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.080541234 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064298757 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06499995 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061503436 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.065110896 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064633934 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070316072 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061458995 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068096329 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061237173 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.064987971 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071413584 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062894739 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.069790725 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070441182 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076991601 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072636926 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069837594 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076720803 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070324781 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.074137316 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063644987 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081355998 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.064728322 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074045133 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075598573 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.064489364 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07742605 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062110187 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06061578 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062290494 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096065513 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064418875 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.064686606 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.062947445 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062756964 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.064997663 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0711849 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.069776709 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068804301 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067265588 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078918865 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07248589 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.062308294 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073171934 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.080098402 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06436578 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062855904 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.078421045 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064291871 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062599839 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082819928 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070182698 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.065103044 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065416033 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06480818 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07607042 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06467278 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061188482 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069672756 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.065171932 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073610042 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.068894654 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069225595 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.062104521 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072124854 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.069348993 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.064615386 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060639649 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065596162 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.06338967 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060483319 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070461211 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.062528513 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076636062 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067277507 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.075404617 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076696986 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.071910023 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.208546769 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.064365 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0620215 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.082973175 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071862259 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.065129801 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082624399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062598945 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071692444 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062247957 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.065111669 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070931719 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061695717 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065058067 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063211038 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.070726329 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.065371767 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065302019 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066066628 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072951711 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076717254 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.065782779 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070370909 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063465432 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077974379 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071660637 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065926531 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.069073517 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.064605193 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073826783 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06810538 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072833009 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062296995 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.063786309 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062808779 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072662149 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072275482 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066806194 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074100547 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066271648 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.065278258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063776094 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.064202873 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066806169 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068975098 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063419083 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06972398 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071800906 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.077227193 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073755013 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070498932 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062028821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061873366 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064839857 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061693911 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066326632 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071558472 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076126083 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073858984 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082323858 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.062976427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070869412 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065476926 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079173303 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074615204 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.063955673 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.068925331 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06124662 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065264272 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072006795 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073775041 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.076330259 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07619731 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066703212 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065629091 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062629736 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075696885 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.063619491 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069510764 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.072670247 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069409141 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.062995515 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064991497 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07054526 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065611546 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062333292 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.078183596 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072209377 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061390243 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074637513 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.062996599 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.073036946 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061857492 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064500684 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065661431 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065213494 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070778082 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079946575 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060586356 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063886662 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079918927 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.064636688 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064644926 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068692848 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076601875 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0661918 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069171961 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071480234 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070341676 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065275307 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069619375 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06422884 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.072633175 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.067652078 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073367371 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.062529698 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079362216 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060296992 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.078369563 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062632994 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.0725058 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063466975 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07047876 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.063155684 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.077876113 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.064277288 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.196059439 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076138424 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062165695 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0732715 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062666947 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066850239 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067916879 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.0732385 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065923239 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071414782 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064753129 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070590684 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06682297 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070578666 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.073336949 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066209073 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062375163 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072118528 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074296775 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070769499 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.066000301 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.0655416 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063448015 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073281571 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065702599 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065138291 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07125861 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067324851 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068253794 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065842045 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.065916201 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.065459767 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073535666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072166192 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080312132 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069958962 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068956285 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072697614 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062275671 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080766274 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.062219147 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068163738 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062159732 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072338668 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072423288 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.063684491 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080947935 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065315223 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070263024 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075970324 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070238679 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064536421 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081086826 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.067905942 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071252818 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069221244 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065672593 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068031606 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065230157 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069955973 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072618473 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073174206 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063602911 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068537008 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070735393 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065404194 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.074613779 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06478481 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069623017 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065336671 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061225314 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067284022 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072880165 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066059585 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067230077 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062811439 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061016541 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063146722 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073273012 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066489772 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069748642 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076307163 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061178203 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.063963299 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062198954 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064829812 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079257301 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071282674 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069000491 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067068284 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061252343 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064823475 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.065482662 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.062761142 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.067728023 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061841332 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061749557 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071618404 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.064979235 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065486814 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062503374 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064344615 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07057219 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06841496 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06311055 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067243867 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.062359856 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06550227 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061182652 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064058797 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065183318 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060976527 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064596065 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070903761 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077693635 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067397407 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069596081 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064730952 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068979518 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077008807 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.072394361 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063932158 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069857194 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061128703 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.081961608 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070354552 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069159657 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071078598 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064980582 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.21534347 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066351533 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073187663 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.08077223 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064756579 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.073011304 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062660075 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.081919969 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06894564 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062206483 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069406256 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069180622 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067879839 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075420614 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.065045289 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070735054 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07092525 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065284365 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.066389664 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.065598477 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070703441 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078420729 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.063787186 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069219876 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.0700213 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070581762 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066192561 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074431461 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069994399 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064346934 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065123483 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064808938 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064576972 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07452632 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063385096 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066836116 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066542486 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062174694 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068478567 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077677153 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073092541 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071098077 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061858753 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062950623 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.0811855 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064812915 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.067348783 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069614377 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070710364 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074237724 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072078701 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079261911 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063203306 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06721585 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07441621 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.064050342 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.062556715 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06476877 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064813944 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071071325 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071631666 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068391399 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067443236 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067992815 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074102714 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.064778865 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065943798 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.07049561 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.064062113 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071600061 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069737019 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069815871 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064677563 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06183431 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064559519 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071737073 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068553147 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072140969 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06433928 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.074014561 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.076569851 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069026265 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067713167 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062071374 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067924778 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070215451 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.069468129 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062025846 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065993806 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065295042 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.073156997 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07254818 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066180213 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06219937 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079019135 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069925214 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.070718925 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.065285205 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.065395384 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06311036 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061842451 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072702804 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061857725 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.064822295 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065781911 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.065461133 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07968387 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069427569 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.080790777 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064139769 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065693934 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061460116 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071243893 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066285086 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.062497353 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070957467 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061473096 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079426721 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073157607 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.07110616 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061290058 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065223396 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06906238 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076531774 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070853923 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071222011 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.06688143 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.206375917 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.065909227 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.073703381 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062309161 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061304825 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072831703 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070360411 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07397504 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062193127 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.071786815 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.065548112 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069874389 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070475765 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065272103 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065525906 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065454625 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071575831 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066873942 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072010674 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066930655 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080358011 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.064484507 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073010038 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070943335 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.073193532 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075893336 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076438817 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073250729 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064253593 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069023253 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069716836 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.065025494 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066584717 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.068382117 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.087553866 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065386707 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06539171 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.079306414 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.07369138 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06356333 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073067703 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065822467 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071975363 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.064549141 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071738031 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.069381614 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.06424615 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066205722 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066514443 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061395982 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062180695 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062524502 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071584176 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065888615 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06285999 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.080646075 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.064672387 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069561388 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072873407 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06795788 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.064543463 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061507124 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065281338 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07341501 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075739631 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065169113 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069850857 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065442314 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072057942 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061106944 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070472153 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069646708 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070052318 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062145424 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063244114 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076324744 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076360292 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066512295 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071442458 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070654668 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065279804 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087339675 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070451311 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064585761 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07335437 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066239721 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061689543 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061410619 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.065409734 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073699221 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062139316 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.065672345 seconds)
  done (took 42.968219291 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103526121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063495173 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062158525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062450076 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074975433 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063297836 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062399975 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063457798 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06343758 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066024 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062743798 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063002089 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075601921 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078637536 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073968895 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067194068 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062136188 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063710195 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062589251 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063475992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073831463 seconds)
  done (took 2.84913363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071257894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078624945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075504597 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081065733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071585224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067946181 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075614074 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068207977 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076690315 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072793132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077169244 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068096389 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073478415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072912968 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073291638 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068229732 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076728914 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071437177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068561703 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075301974 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068588358 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075596288 seconds)
  done (took 2.995798786 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064111951 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063138019 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06945389 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061626758 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.061833913 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066940375 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.061611551 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.065126086 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.065197546 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.065102356 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069323093 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062979112 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.06174708 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.066484301 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.061372496 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.06267119 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110062669 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.063168892 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063062604 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.0615617 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.066634682 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072572024 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061571149 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061561039 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064578743 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066334072 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.061832761 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.066376171 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.063275772 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065186749 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063003448 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061567155 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069426978 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071535823 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065753602 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064856527 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06365424 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065946719 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061389137 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061393814 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070004553 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.063881692 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.062294398 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06485163 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071317988 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.062493625 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.061181735 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070037041 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06154004 seconds)
  done (took 4.602721551 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078424603 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113324108 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067538021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093597459 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077829615 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071141497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067645467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094928932 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063813376 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064511421 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079091085 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07897674 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066457767 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069056913 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067236956 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066637064 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067554537 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065695461 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070365305 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065766279 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070380429 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069285514 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077808055 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078683964 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067696325 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06527167 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065584153 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068304669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077642925 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071201895 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06846125 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06962499 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07845139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069876395 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06556481 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065563508 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079728172 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06655726 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066042069 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063896756 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065633416 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068917465 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069051517 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079766474 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066212633 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069801406 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066232363 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063614567 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078615525 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065904416 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071750464 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079605815 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067995465 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066640229 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068595985 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078686884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066538377 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064711575 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066713631 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077943822 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06374103 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067836243 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079182361 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065213153 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070940812 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07925437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069970233 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06777647 seconds)
  done (took 6.409248339 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07292026 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095261291 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074863669 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074889295 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074185915 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074382493 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073640863 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074007865 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07369442 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074501408 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073913948 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123937222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068605981 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080384805 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073666476 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073897196 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073803964 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074126632 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07428387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073810276 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073988609 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074722222 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074181224 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074518697 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077987066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068593227 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07376034 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073527623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074838425 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073697426 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078076522 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073935792 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073514696 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074683966 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078032756 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07363564 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062493758 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073603452 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073970949 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073415946 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068536373 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074780525 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073546388 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068708495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073796699 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074154636 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074541689 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079080889 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085048904 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074858668 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073939667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074667851 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07398181 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074263922 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074687433 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084113245 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074833719 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075003058 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073725993 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074550367 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074693142 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083915836 seconds)
  done (took 6.113465426 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080667019 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071937204 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083978933 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064536037 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062114007 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072565858 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061710178 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061882824 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07161588 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071346576 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073704362 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072259168 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075626232 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074042485 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072655084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075645248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072581889 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07293882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071838902 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072848999 seconds)
  done (took 2.859279775 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076284661 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083110411 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068373983 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072839002 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067715211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072107249 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066615933 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068460618 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067967641 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068075887 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074915592 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074634293 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068340354 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072423345 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075087528 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072433903 seconds)
  done (took 2.560943116 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.069106084 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072250764 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078827698 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063954618 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067123062 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062674627 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063729445 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062191038 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062989898 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077527931 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063383044 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074535328 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063945787 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06237564 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063013026 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068895277 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0626201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063691015 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063597591 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076534103 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070560949 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065303373 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06705335 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063611872 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068591657 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071594116 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065215915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066908231 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063481737 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064000576 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068818689 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070381517 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063207451 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064097056 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061886594 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063451907 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063610737 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064094893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068866246 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063460195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061689457 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068136589 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063827059 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064794302 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062562933 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063658404 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062502987 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068840657 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064037032 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068985377 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063495195 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066102996 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064161751 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071600896 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066542005 seconds)
  done (took 5.054426245 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079353133 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067929084 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062289472 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061276273 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066945629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067663282 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068422801 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067564036 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067545825 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062132311 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067535188 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066718003 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067899192 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068080173 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067668081 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068171081 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062009491 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067307802 seconds)
  done (took 2.631475854 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073197964 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067325647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071726472 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066979025 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067077214 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066546149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06265324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062792105 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062226859 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066777913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066355786 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066519616 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062578058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066506115 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066765903 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066376379 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066265879 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062779427 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066592862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062055605 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066614461 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062337246 seconds)
  done (took 2.867574598 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095991647 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084337126 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144278145 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07966797 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087476484 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071354425 seconds)
  done (took 1.983198635 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092668043 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109031186 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066936122 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067705026 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07981954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071049427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070959675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071001818 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079569067 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077258208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071298996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082174133 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079791136 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073367962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080190701 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082743221 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071267707 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071190063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066769644 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08299003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071296512 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079881915 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071321243 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088403816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071113699 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073555387 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082974434 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077122409 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071123112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079834527 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082601567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071051322 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079632955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077241399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067169137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079329368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071089306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08289836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079232766 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073983699 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066617099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07973925 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08013704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073183808 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083434182 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07122049 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073491095 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071264168 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071377326 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086392986 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079924909 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073286564 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079442729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082754272 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082822649 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086813298 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077316715 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073223512 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080143854 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077350368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073602877 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079836169 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07378632 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077469718 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083059887 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074051916 seconds)
  done (took 6.514587861 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101331273 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068358531 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072512782 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077894407 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07341751 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07157433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071358347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071794607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071100869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067699626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109023629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071608645 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07422151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073695359 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07183343 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071258176 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0713065 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073486857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067536829 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087330357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071733104 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073836779 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073977475 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073561003 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077485273 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083165489 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071348702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071045261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07120621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070995158 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073886444 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071351625 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074095814 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06738407 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0733226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071623711 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071168292 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073479272 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071051292 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07987925 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073860364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083107569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071103492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071250974 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077750886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071568141 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07162624 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067454795 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071737739 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067069358 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077484474 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077254319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077552786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073516751 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071724325 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071442793 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071213066 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071522095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071089566 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083179649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073478199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071161046 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086624464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071125566 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071385532 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073621313 seconds)
  done (took 6.350097073 seconds)
done (took 131.037797343 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21343931 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183755745 seconds)
  done (took 1.808517954 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073755818 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106195528 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083132612 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133963883 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071131519 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105423968 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104351729 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082837481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071070285 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070488476 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070519462 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074017714 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136847746 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070493189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070678076 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074077686 seconds)
  done (took 2.83138146 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105876978 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.191524328 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109809324 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068739115 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105097703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076790263 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068465556 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085860386 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075222341 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070083799 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077092862 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074844023 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069920084 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07504864 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075508949 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077109815 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070196081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076853287 seconds)
  done (took 2.987929532 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093375481 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.085896045 seconds)
  done (took 1.614790016 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163354516 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133406135 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207197087 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341324278 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.148912799 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.278854103 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13326358 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.132225698 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113251555 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.127732567 seconds)
  done (took 3.210673186 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105175645 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173798274 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299594632 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123290278 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075328424 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088074309 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124329949 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080619043 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081274457 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081034367 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081329503 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077868493 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102137607 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077153102 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075225328 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077402179 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104464644 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073967442 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075291073 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077298303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103511177 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069410413 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077427909 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074372692 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078629458 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078938292 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070816609 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068845931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076815096 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075058966 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079501231 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.085913505 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078774901 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106556675 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073497132 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10752397 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077492775 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07373329 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075271749 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073472823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078099823 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078602732 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077958621 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077364535 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070197927 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077286405 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070413362 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068767186 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080523502 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070692412 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080341754 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079384135 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106883077 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072300545 seconds)
  done (took 6.210069289 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112340162 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112632226 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073821813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119363069 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111205915 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074004724 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110556589 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102903187 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.1116975 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073572193 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07103477 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073201888 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083991377 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08381525 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.12237949 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114266383 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075949401 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073738234 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113038773 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111914538 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071460486 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106298149 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101457066 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110345657 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069450119 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073304355 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070165221 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073519296 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077494449 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079993217 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071347039 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083319271 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086600729 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079498051 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069048009 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070751093 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070959374 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08147163 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080603406 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079399556 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078419004 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069688027 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070885209 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07179528 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07214251 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069656967 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080067873 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08169383 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079487798 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070722079 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072729977 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070331138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071933236 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081300498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078439104 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081795937 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080861011 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0703336 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070676057 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075924766 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081565103 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080490918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081046407 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072901435 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079757877 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070360753 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083185772 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085322302 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070567826 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072350551 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070291966 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070837075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072035668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077957038 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078433303 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072620834 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071240224 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070638879 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079992188 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078780233 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070484759 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077166656 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069091263 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070900557 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072219989 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072430041 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077743518 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080953414 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072349668 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070527672 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071140508 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070514542 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069027654 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076911242 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081025765 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080687627 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079046279 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071940494 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080585798 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079718223 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072176865 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080561698 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069924285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072735257 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071426496 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079581164 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078009376 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080138203 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.202602541 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071139155 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079789189 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082577231 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07129387 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080277882 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080867769 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080424971 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070501137 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081976895 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071025958 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08032198 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071262024 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080440706 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071301185 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080700282 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071503995 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070401482 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070799592 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080445904 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07329737 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070772209 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07210925 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071329338 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080725608 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083003589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073047004 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079196338 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078815211 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072691837 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079816352 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070845537 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080103185 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071707885 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072348909 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069352811 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081706048 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071749039 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070925332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071482375 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08039613 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070993377 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081110737 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079244037 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070297875 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081832509 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082032759 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078673066 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081357355 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073467277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07116474 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070949428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072253284 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078180979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080746672 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072939429 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070911461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078880519 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079833746 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069299309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079410946 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079185088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079390142 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07109152 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072157992 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082093258 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081248705 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080032945 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07885688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07942064 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070994195 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079041033 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078919153 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071108091 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086349161 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070763698 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084490666 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079348835 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078076223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07963775 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081025645 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081128538 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081641052 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084862025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070165884 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070336901 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08092015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070640337 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071541802 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079685058 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072671643 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0728492 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084365301 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071203717 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080896967 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06993015 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081141214 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069835706 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073052806 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085335824 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071107159 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072519989 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080794344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0738174 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078647344 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080329109 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078861171 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069654336 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072060083 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07977721 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07900754 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.204400932 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070896836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074563859 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079304711 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07831761 seconds)
  done (took 19.223747723 seconds)
done (took 39.335791577 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.233425976 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170544679 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20462467 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.128017465 seconds)
  done (took 2.276448602 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115241357 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106902995 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09108657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065131946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097759307 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065245013 seconds)
  done (took 2.016931987 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330245161 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.223447294 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197087193 seconds)
  done (took 2.223181005 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22902564 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209913196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47491638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.292540138 seconds)
  done (took 2.778944266 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149741122 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086763393 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065167401 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083434956 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133166476 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157664999 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099573901 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124651624 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076010365 seconds)
  done (took 2.508581884 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148655031 seconds)
done (took 13.425795278 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.167165916 seconds)
    (2/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.2410388 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205106981 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073458115 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.092541535 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069113112 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.209260849 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.150830289 seconds)
    (9/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.17511419 seconds)
    (10/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.257077828 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19849139 seconds)
    (12/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075543628 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.215982162 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076894894 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085623788 seconds)
    (16/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.112180573 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075857499 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.149746466 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081412593 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074861079 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170821499 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178640363 seconds)
    (23/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.183504891 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.238406026 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085901518 seconds)
    (26/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.079477716 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074622873 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104325993 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166071336 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.202280274 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.122459632 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072171563 seconds)
    (33/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.244927718 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15941555 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074948066 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075264953 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07440539 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.400572848 seconds)
    (39/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.075945946 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.206259158 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106035296 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065318795 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093922448 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07268976 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.186033976 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126571381 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158772908 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071430076 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0851416 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.075945588 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.154323374 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.208770919 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105002478 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074843409 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.207585467 seconds)
    (56/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.140861258 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.116741145 seconds)
    (58/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077524836 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.066771955 seconds)
    (60/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07445913 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089360662 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074493336 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167976321 seconds)
    (64/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.065867768 seconds)
    (65/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073265057 seconds)
    (66/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.182939849 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065245384 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074790598 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089101309 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072524875 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065022453 seconds)
    (72/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.073358171 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067679941 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.240583417 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065284671 seconds)
    (76/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.075011282 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221685565 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186836893 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06440265 seconds)
    (80/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06617253 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076903995 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.228630717 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.149205482 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.218071208 seconds)
    (85/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065981509 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095032476 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073633642 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.187447394 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182990276 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092937256 seconds)
    (91/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.07048846 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07788089 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117771729 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068000008 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073715818 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093312882 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070162445 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138029392 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.169356362 seconds)
    (100/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.142055112 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.066009029 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091192085 seconds)
    (103/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.15156153 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093307003 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.137471054 seconds)
    (106/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.202389705 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068055068 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.20990324 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073033102 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092449498 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093606569 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066554478 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068220658 seconds)
    (114/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202931605 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177133621 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175901663 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199461163 seconds)
    (118/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145809496 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066274879 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082533332 seconds)
    (121/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.078144978 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075106439 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088684624 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065799306 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075906834 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074601039 seconds)
    (127/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.066282724 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065502588 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065359341 seconds)
    (130/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07214803 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14385875 seconds)
    (132/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065158963 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075915325 seconds)
    (134/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074859666 seconds)
    (135/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066851339 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076064481 seconds)
    (137/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096400032 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066653954 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.143714589 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073928297 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095012156 seconds)
    (142/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.129763112 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065719783 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073731556 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076112008 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125662136 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074632465 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065620386 seconds)
    (149/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065138279 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073811783 seconds)
    (151/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.142493826 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065749048 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134587692 seconds)
    (154/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066596122 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125027204 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065223748 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064610546 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.110818577 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065936083 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079245867 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066521528 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066296904 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065275382 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065155641 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.092145983 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066166085 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.064872536 seconds)
    (168/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.073697996 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090068923 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.06661892 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143604276 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074457661 seconds)
    (173/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065810104 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066484849 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14008236 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172335343 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068487663 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067613395 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065338681 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.141165907 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097936046 seconds)
    (182/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.170516398 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179079495 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 0.253285624 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090719392 seconds)
    (186/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.067288224 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074557202 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105234079 seconds)
    (189/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.238587299 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067076259 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093803124 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135213628 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095454982 seconds)
    (194/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.06774969 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06734291 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067846433 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070485771 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075148033 seconds)
    (199/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076922504 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070190444 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075543148 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066222918 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067874188 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065958995 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068628416 seconds)
    (206/309) benchmarking ("sort", Float64, false)...
    done (took 0.134506929 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174899668 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077331165 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073631566 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128129631 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094985892 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.16939408 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068778719 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115999607 seconds)
    (215/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.066055174 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078180366 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075544995 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068137894 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066180401 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140278058 seconds)
    (221/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.067947911 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080784782 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066193971 seconds)
    (224/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067297124 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074316299 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065965551 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067359106 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14139036 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067343518 seconds)
    (230/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071264147 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06717535 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067376542 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0664162 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082517416 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141159839 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123269923 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066113364 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071674608 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066156719 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067170552 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093444453 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202187362 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067079483 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072852803 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184128516 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066170524 seconds)
    (247/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068627746 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074481311 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065203813 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065609759 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065084629 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092631416 seconds)
    (253/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067030555 seconds)
    (254/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.065834444 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065692934 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167790509 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065441449 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066014585 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079462339 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06554499 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066990044 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065920371 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167980203 seconds)
    (264/309) benchmarking ("sort", Int8, false)...
    done (took 0.173235826 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132453096 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065900694 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065349598 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073980639 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065213672 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066238613 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064624541 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072580456 seconds)
    (273/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07885834 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121361043 seconds)
    (275/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080938521 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066734515 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12824576 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079516307 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.140676832 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066255908 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066814138 seconds)
    (282/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068057386 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066552984 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067300059 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065636855 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067269634 seconds)
    (287/309) benchmarking ("sort", Float32, false)...
    done (took 0.134701551 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065623917 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075538079 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067211702 seconds)
    (291/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067428464 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073018859 seconds)
    (293/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.065700461 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067302882 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114986429 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072912933 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065516076 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066029587 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07275609 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073990387 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066003272 seconds)
    (302/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094531692 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065144957 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066865074 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065776613 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065392793 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066619867 seconds)
    (308/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.066653999 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066073976 seconds)
  done (took 33.564204326 seconds)
done (took 35.055170215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087273636 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100426436 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074893924 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095725365 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083472531 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098999806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07456239 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079851619 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082056242 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081220446 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081299495 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072729191 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076456979 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077208293 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07407885 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098638844 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08075618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075420179 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075318435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065700221 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074826116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066669756 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065446068 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072296427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078275804 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074150404 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076315315 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076633294 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066582079 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066565764 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070943419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075442048 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065808096 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079270436 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075149037 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075420813 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077378324 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078990825 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066451276 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066464217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076233736 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066853447 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074309963 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073287651 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071027507 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072991909 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075139505 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079681502 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098758873 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071044323 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076409629 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078300253 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078875223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071965507 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071282953 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075409845 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072631545 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098703108 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075797486 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070327329 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076595025 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075859229 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072512119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075484126 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074973653 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077063008 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078547853 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073118512 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076909481 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073069664 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065929394 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075143744 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070734509 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068688883 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077308493 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078993025 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065410887 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07041722 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074706191 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07466274 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065726557 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069871967 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0655108 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070714195 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070197374 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072161408 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070798339 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074267916 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065402481 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07526543 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07342141 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073926465 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065710395 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079825193 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066175109 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072385197 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066430077 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066377619 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065741524 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071316538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065951889 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069904952 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074356509 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065474081 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070640578 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080368811 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066270277 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074219651 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06531015 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065696038 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078363599 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077201115 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06603427 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07019825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065772697 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071587343 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065586133 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065902051 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065859792 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065746562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07063234 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065800394 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069550935 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071327873 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079175955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066175274 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070441326 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069445264 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065453753 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072754642 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066163832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065655702 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065429196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080021648 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069516495 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066068532 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071039838 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069585446 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.212551978 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066545064 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076307762 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07264046 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070921247 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072480369 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065994068 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077772952 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070799291 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070036244 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066293003 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06634683 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065522266 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066327617 seconds)
done (took 12.881463853 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067186588 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115327729 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.084093158 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093477799 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.081438487 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067335379 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.072701516 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.086767646 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068207288 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.088510277 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088242778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089560697 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105281499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066309249 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066834079 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068365298 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068071143 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071586561 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.090005209 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09001475 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.097819432 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066949696 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.077813006 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.082540402 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079078373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.086771109 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068002744 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067826409 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069413818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087739262 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093014586 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069689843 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067793114 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.082775101 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.082885873 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.077918163 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067473695 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072490274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067479628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066614085 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068722084 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.083473254 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.073030099 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074446047 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069674543 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074796889 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068030781 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.076860408 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.082018703 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.071813374 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.076006666 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.081906383 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070178104 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.076313921 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066104675 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.077613754 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06969317 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066822685 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066931255 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071397531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06673402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069023991 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.070892052 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.067482213 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071073582 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.075955529 seconds)
  done (took 6.591292836 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087810751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095711947 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08462337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085089526 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066963681 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067835558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067578303 seconds)
  done (took 2.141429675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06725435 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090110235 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092509963 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092831932 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085079908 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093518637 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067287207 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101358589 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066308628 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088946512 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.125572983 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095062507 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070727978 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079529292 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06711446 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.083998333 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06707779 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075452416 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.085194405 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093193025 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072172891 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094410609 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080445116 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067425805 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.102707658 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08082858 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06667214 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067199848 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068400202 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068727735 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06854865 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111831379 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080294777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079789338 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068553216 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.067181637 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081637418 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071160624 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078715327 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079269817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081183215 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068791968 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066028954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068627265 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070211846 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078894818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065849265 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068273471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06857362 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087694559 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066349354 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080316242 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071309002 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073210302 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072994763 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072337772 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075831366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068979639 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08865932 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.075899818 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068344568 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085425655 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08520059 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08090359 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084600397 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071721216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080736541 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081146417 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068219005 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069639666 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068628906 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084866339 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067665475 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.069602615 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070927473 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069174725 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079037969 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093624504 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092776271 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081263333 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067699325 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068440844 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079685649 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093166789 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072927329 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06828251 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071180863 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066805411 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071695384 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069218812 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072934314 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068615035 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.076296868 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.070019353 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07152864 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085355167 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067086107 seconds)
  done (took 9.080365826 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070271082 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069460041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071949996 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069595761 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069066065 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069283758 seconds)
  done (took 2.03720629 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094566404 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069413647 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082537609 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070260812 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109131058 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084575775 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085296549 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079310457 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08167065 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081879477 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08430106 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087898449 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.083289174 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071260856 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084857849 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070241234 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085434168 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073639856 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080993562 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071402139 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082973556 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071138628 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07113208 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089095996 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072201049 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070509859 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077824421 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080881964 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081017886 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07946797 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070452524 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071674924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076870942 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079608191 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085566294 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07967995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069181401 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075452092 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071087181 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071684675 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087182362 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071045052 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071773476 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075178976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079395393 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076667963 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075035506 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077474943 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08455367 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075046366 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075164507 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069987034 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072185336 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075353438 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076595412 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079111007 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074869045 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084937972 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07044572 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07649996 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069010783 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071634323 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078754141 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071895616 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076577122 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075400381 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077051249 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070842749 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070859737 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069327918 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075478052 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069219575 seconds)
  done (took 7.148917593 seconds)
done (took 28.573555688 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.940280211 seconds)
  done (took 2.50915045 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616851326 seconds)
  done (took 2.219208474 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.428753436 seconds)
  done (took 9.030939687 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.37202124 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.380280734 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.803137992 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139208568 seconds)
  done (took 3.288061682 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703207228 seconds)
  done (took 2.311901271 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241134801 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228215875 seconds)
  done (took 2.085035173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.360466992 seconds)
  done (took 1.961001232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100082104 seconds)
  done (took 2.703500801 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276025325 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166225946 seconds)
  done (took 2.052218701 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465126156 seconds)
  done (took 2.069575412 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.316213469 seconds)
  done (took 5.926228498 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250979509 seconds)
  done (took 1.891189025 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243795117 seconds)
  done (took 1.854170844 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.785219757 seconds)
  done (took 3.392538798 seconds)
done (took 44.9095693 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084380418 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087377492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086394473 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082454296 seconds)
  done (took 1.92515788 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.076052161 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.072235074 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.076001694 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.076662455 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073605505 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074914143 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.075099251 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071870841 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0735382 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.072056828 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070415698 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.071885978 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.074717797 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.071378681 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.074668397 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.075872064 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.071921421 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071427833 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074933731 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.071613284 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.074904688 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.072001737 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.070123365 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070915498 seconds)
  done (took 3.366043236 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080472488 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075606127 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077076261 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073750286 seconds)
  done (took 1.922290552 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.077684533 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.089252624 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.090757585 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.096217905 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07801101 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.078122173 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.087495821 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.087910351 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067210768 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.091896174 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.069976028 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.06802883 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.068623027 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.088541781 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.086899744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065327453 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066625352 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.078411406 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.077439177 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079576496 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069354162 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06715282 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078525656 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.078248958 seconds)
  done (took 3.499418145 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083678588 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067689772 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084132233 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096893482 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096612276 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06778587 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086764896 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095915645 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141803069 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068889646 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074887993 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070501355 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.11086649 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070617892 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.088287762 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111016032 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11345061 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071026429 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101577358 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067598901 seconds)
  done (took 3.392509092 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086153659 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071652904 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071940816 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067363919 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077859656 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074418013 seconds)
  done (took 2.072336062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070190043 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069304003 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069286579 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068173068 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073613182 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071449304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06753011 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069090312 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069290512 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06872689 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068330353 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067225624 seconds)
  done (took 2.450753361 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16856797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071197274 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07408637 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067014318 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074177675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067405016 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083910616 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070473783 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087321429 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067943629 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068079513 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070289888 seconds)
  done (took 2.59133856 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124922152 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15637346 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107243642 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075638406 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202475344 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111361177 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.095294249 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.138972167 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106033085 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.072029824 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108050497 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148991533 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110231394 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.119565227 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088495744 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146314847 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119934882 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098970409 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131841293 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089559533 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.073118914 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165061395 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07298385 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101848695 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122482482 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.107377042 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12659987 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148485795 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096827448 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.103795318 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086356141 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079152414 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119669346 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.088165417 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.110204211 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107787073 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109463336 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094741267 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.089071826 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141145403 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183042215 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114187147 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115942304 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147238631 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083035299 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.12207015 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089231099 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114475144 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126849467 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106715415 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07968327 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100696656 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122083448 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117812124 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.087829338 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089262979 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135110579 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.116267771 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114129806 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085254678 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115258276 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.100168857 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117902498 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137868935 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307592058 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111484754 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154680501 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134121846 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113468594 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.100207801 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.105913028 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078685927 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130595215 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11583779 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156166733 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132276046 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114885672 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.100459358 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09256595 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120013836 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129050191 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107870496 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10739557 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168983492 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124336079 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102636812 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103968068 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.147458962 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075426708 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176290209 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099641953 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130038602 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114240359 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159573665 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10470489 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.091812771 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11488406 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118913802 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103899731 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11862893 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095670118 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131036241 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102652673 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115284949 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087785028 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103638273 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094146808 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.106572518 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080696079 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119891398 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131208334 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129623165 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079097096 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120574408 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099251993 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.080509042 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107059481 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160406126 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093410877 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082341858 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168567788 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.102457404 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.126616655 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121774878 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.088834807 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132917995 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159150796 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098175511 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099777107 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07862371 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177528622 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079370168 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129485252 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088059293 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109011663 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111920915 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152313237 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152207303 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103738491 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08124511 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097871582 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.120096033 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094450792 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09236648 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078940835 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116981605 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144021841 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.10984546 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084261712 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09867596 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.07160865 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129453298 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079743866 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086082808 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104322436 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.094775638 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.096581759 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159140154 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.088195344 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118598048 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099750977 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.068532362 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093259135 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167047907 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083988247 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.113377651 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123035159 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091952839 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069857152 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.10893219 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075350595 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117297638 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.101318636 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111633815 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080871566 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113199826 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070412541 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075974191 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141367228 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108652261 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098061118 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143683289 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10954877 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.098142504 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115281346 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.101774469 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101923557 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10778406 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.11290431 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112743396 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.076488051 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.407728396 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107194707 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086624169 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102341788 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08780801 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.085911481 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12057109 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13473735 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10292653 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113249733 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117926479 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105323386 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.11406675 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098606471 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086602057 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151557734 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083173504 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080956995 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106434246 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124100952 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096887939 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156289323 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.085498775 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155261331 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109643537 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091515948 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129155034 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073881755 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074587728 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093128747 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108769305 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132716239 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083595025 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084421236 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135716082 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149211094 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112527125 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119007664 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073026299 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106427334 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157164891 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.121257415 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087117774 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122419077 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091868864 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143633094 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108192071 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140158338 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115802819 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125317611 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.097687428 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.085758682 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079970202 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096197658 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124968833 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091827363 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087824307 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.07180413 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078741244 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105494349 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103070996 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130412104 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100663486 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154106043 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077409261 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117917437 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11981554 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119966001 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101427442 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263921404 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.101973627 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098342502 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101494153 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099282559 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079670109 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147290905 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118594318 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084243364 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098145187 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109459606 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118481736 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122513963 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119326116 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10408903 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119155605 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138043137 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11109172 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092625205 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094622977 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108296072 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.097963346 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086930345 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116207275 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133546401 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111129065 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119586797 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.102034888 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.098089517 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123858396 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107863208 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096174825 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127431244 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175739862 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.107851741 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119693807 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092865138 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1196008 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114216917 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122660938 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.125117132 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124072384 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074766297 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081172855 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.074545763 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118365925 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084943827 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132057577 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082313535 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11575705 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110484541 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086028667 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070917621 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109058916 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097738821 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.089101484 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146699386 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.117486725 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078571254 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10639183 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116310498 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093583519 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139561946 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.107678319 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10987402 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076304443 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103528621 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079488755 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119558697 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113241711 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087505222 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.080240103 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.229546666 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120888763 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091671321 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120570804 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103065815 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111131263 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131004734 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157571734 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097788436 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103637543 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135885863 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123752771 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.091444022 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126750858 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152879991 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.141980874 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08981643 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.095086837 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11560131 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115701726 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108384926 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082557293 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082934208 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124912985 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126036675 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.072851043 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091230742 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076664337 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.095427504 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130611711 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109664565 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089606214 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131891471 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08100409 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121387189 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106737772 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142840818 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137158284 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167358593 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105551975 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089784869 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083750998 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144356837 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.075827534 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132239959 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125015391 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099378447 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072835461 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092602326 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104125624 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.64759066 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119327645 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.0802586 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154311671 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095880224 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129231413 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095548949 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.128841868 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102434298 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109855708 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100827327 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152462444 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088465755 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121050585 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.180010272 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275041088 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119203736 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080133169 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.090079197 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079502846 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.088911543 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091161235 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0972245 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118911021 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096653649 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115732542 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.085997404 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120491105 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104331566 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09749312 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.108397727 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087029224 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157569637 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096639085 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145436401 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118678705 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083805853 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081003179 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.097483073 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112907381 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086998492 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10049323 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084690481 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.084035612 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170978808 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118316349 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091044007 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110215183 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.099172217 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.09988257 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09901795 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133199272 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122776877 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08003615 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.094102005 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112735181 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084871027 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079849552 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104937613 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.074130597 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101463388 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114879972 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107066796 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101841445 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116612315 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083459567 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099290806 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122052304 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093486452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082426695 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08199599 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083471489 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.08120044 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112432844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11861113 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128006899 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12493173 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097854068 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109622926 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.084532148 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.22971035 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086460235 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104532852 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.112130766 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081991096 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.140790451 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096204057 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255136695 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108574474 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111297805 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171174491 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079269672 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122496953 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099370676 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120615727 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097578989 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120655383 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105482978 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106666369 seconds)
  done (took 55.823428579 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12214912 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.164861729 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.154697853 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.084842976 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.098442712 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127234841 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205878068 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194826001 seconds)
  done (took 2.924588353 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.078140965 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099467312 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105175799 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08534476 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068538249 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077324545 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.24824722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083549375 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067962202 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103021878 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082366795 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070321542 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.456910766 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067653052 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069529519 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079175905 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068628981 seconds)
  done (took 3.672467349 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407574025 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623407193 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.378681462 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077530885 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.895404339 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091026554 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.293966665 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14124333 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083406386 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.507302116 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.37217951 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133393226 seconds)
  done (took 18.775311157 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083883047 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081035573 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093388312 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093803002 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080458065 seconds)
  done (took 2.200049928 seconds)
done (took 106.270294822 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083544298 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.209230715 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070630797 seconds)
  done (took 2.07732859 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.095110421 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092897379 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092556145 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.090745463 seconds)
  done (took 2.145302584 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076573905 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079090114 seconds)
  done (took 1.923762373 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.248585857 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.180801814 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09964417 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085911859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083188342 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083832525 seconds)
  done (took 2.03093909 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074802829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076055697 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075663708 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081394951 seconds)
  done (took 2.078734309 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072639172 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.068912563 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071157519 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074248625 seconds)
  done (took 2.058282639 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087625357 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086733411 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082406252 seconds)
  done (took 2.028820847 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111492385 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.100761752 seconds)
  done (took 1.983556342 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084641864 seconds)
  done (took 1.860655489 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095587728 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103090869 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139505412 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11872751 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147548876 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123556607 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084943841 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090076128 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080151082 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087150649 seconds)
  done (took 2.844960174 seconds)
done (took 23.415796347 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081804133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373096384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363682791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094636683 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.6754608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358689124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985864186 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094995064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111582914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07159638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089818912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652042946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014433577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33331668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965505147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.33250473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.670018293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070571059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070174344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071445498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973172456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069784775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070855469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070608009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.66668909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376524581 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07226223 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330951204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069985537 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073031616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358281664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072007082 seconds)
  done (took 16.433748762 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072718738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126028158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076679017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088212444 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072613926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071686361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074245955 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071264505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121772209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071488723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09006435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070576178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075060846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072091075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092547929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071180961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073054272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072337387 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071360956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072554817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091514663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070627036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07252745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071901821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072405617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085176431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073418063 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071544602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070988183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074091858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074779065 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073179497 seconds)
  done (took 4.297162048 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119540147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129583187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077190339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110046835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121437457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073234895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150282303 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095712415 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123978506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071450298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090358811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070517633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106203608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072866509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093727105 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071550896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073475037 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07168149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071351859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072736476 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092666469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071540821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072418647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072329433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072584946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087072692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073064001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071300228 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071573485 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074115952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075775461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073236731 seconds)
  done (took 4.563579497 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071989308 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074746106 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082966194 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085311409 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070015577 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071884216 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073276226 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07020763 seconds)
  done (took 2.392072816 seconds)
done (took 29.469601884 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080915094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070156945 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074602323 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090766504 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076425045 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082026703 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067778031 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077166891 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07452416 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074491666 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078172162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069408683 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072620184 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067592825 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074933603 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068741248 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083237117 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072672995 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082526769 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082832787 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071458183 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075234864 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077115547 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082294164 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082977888 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083065444 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07983418 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075116645 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070988626 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072416279 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.072187497 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.081707308 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084492357 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084601478 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069325977 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069483159 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073625565 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071612662 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08416991 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079217599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071541519 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079508597 seconds)
  done (took 4.972936671 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087962358 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092893984 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086260514 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081098796 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101965101 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084719996 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090595622 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079018531 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079413071 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089584075 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076564526 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082958231 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080064139 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074504094 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079064797 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076392448 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081402776 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075591266 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078986025 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079570498 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090796258 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074633776 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090788585 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081772688 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076274956 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081858187 seconds)
  done (took 3.954312242 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075906106 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087876855 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094513447 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148174896 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115169553 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.088127076 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084014911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095944255 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099371282 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070476891 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074977015 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095562297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095205862 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07606516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.113836038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086580615 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08252698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072332183 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076944087 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099158591 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091142845 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088057423 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098740354 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087525683 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069352565 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072596963 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075110266 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085721996 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073041253 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082136171 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073692492 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074995936 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071544297 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080969019 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073858479 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069903176 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090933487 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08171758 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083378475 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108870884 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079620259 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071108729 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095428656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130148506 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069715809 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073483434 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073128335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081658936 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068907147 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097668047 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081595647 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069446806 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070671341 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068793614 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068860211 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072337275 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071150085 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071664738 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080301756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075940136 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088587051 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074727135 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08927372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068703779 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080260537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069260431 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070621631 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06843248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09808543 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070921381 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113810809 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070271516 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068613336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.0812033 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079895761 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075295311 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069179698 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089422612 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080459235 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073803903 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077664014 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072276506 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072902959 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100388438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06989452 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068983959 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071430674 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072965918 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072792512 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070329882 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081599536 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068730912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073780144 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090252737 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069254388 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070127741 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072960079 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07159062 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069341456 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080855887 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074671123 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071265528 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080394524 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070522431 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073160908 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082988529 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076378104 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068532815 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071753423 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072894153 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071248204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071041239 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073109193 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07166943 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076349397 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076011426 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075703792 seconds)
  done (took 11.175535544 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.177510378 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168273024 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072199772 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.160011901 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079302347 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084342835 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.16126915 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100665676 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070681703 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071188251 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070005695 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114161471 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110196591 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119361258 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082937475 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070465442 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097336182 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119676241 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.164096485 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.159157094 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094329795 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078508302 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073021323 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071960416 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072289973 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080315871 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087529377 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079602152 seconds)
  done (took 4.725743601 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082390818 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106783532 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074908517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094903379 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09383868 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071380477 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072242405 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072136132 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087082889 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083498168 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07081259 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076357343 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074700236 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073931001 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071376082 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076884864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077564034 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070075884 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074676343 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075664118 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080954381 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09901665 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075916017 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070694447 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07303679 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070407589 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.082688622 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086164442 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070235498 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108782764 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068006934 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075512679 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08518373 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070782905 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070201821 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070892873 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070201882 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070395823 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070428763 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068703901 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069032214 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075076179 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069501666 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081424725 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08322803 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.077263766 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072585468 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073154391 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073222551 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068123669 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073151032 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07281314 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07285483 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078304069 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074444745 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072949405 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071639123 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098173444 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076183646 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069727604 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06941578 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068996589 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072666576 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.083500276 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085659592 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072304062 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069014115 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070203869 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083831168 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083275809 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069352557 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074478517 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067576758 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070791393 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072698807 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073024601 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071475635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068985942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069923489 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069986041 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070755222 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069506845 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.070026634 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0730094 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068525982 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068702863 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073193117 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072193992 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082179303 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069692246 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074018963 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070997713 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069015033 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073063278 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075408511 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073180033 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081733802 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084893404 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070445106 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068764042 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084524372 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073307698 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06977951 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076240656 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074700973 seconds)
  done (took 9.754349438 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091743752 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071132197 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087247607 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094371545 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080901126 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076827463 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080868578 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071173307 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086708909 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075647455 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078678713 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069423604 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081497644 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079877422 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071022358 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080841916 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074028923 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088111471 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085265647 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069507715 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078653549 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082361166 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08257407 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084898414 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083778687 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085067928 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082670345 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080865373 seconds)
  done (took 4.104389744 seconds)
done (took 40.473194995 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.886511413 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.128192009 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.871704933 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118508785 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.931534278 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.113653869 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.023687607 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.867738754 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.999089553 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.916698256 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.185189489 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.426147831 seconds)
done (took 67.400275882 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.895063001 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.014826958 seconds)
    (2/2) benchmarking "String"...
    done (took 2.118804056 seconds)
  done (took 5.931469698 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.144099077 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.575744831 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.13534705 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.866561066 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.873299792 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.371334352 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.632563927 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.312086702 seconds)
  done (took 31.565792687 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.068186885 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.088553689 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.620457998 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.634629847 seconds)
  done (took 16.254173286 seconds)
done (took 65.682883633 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.878359052 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.871804688 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.953902114 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.901137069 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.87774337 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.873126671 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.876287306 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.877238668 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.924683049 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.878797326 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.871719305 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.87637671 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.868543706 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.893355745 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.358661128 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.918755161 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.883088112 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.876026562 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.872257891 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.926465652 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.878655781 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.872043324 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.360745408 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.035841895 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.492019737 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.027868744 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.191598065 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.302538469 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.868195115 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.870042958 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.945394483 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.016545512 seconds)
  done (took 206.917554257 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.869139203 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.917439634 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.990343643 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.886757688 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.23489458 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.046007789 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.968041244 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.284533975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.874610241 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.874469391 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.990643442 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.869849681 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.99452854 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.847636139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.903892367 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.968457822 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.10890837 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.016053162 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.907820521 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.013292754 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.87452621 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.833282768 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.802155802 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.974971807 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.889628663 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.956030892 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.883025614 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.02751806 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.057273348 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.079335127 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.876720717 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.908418598 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.086480839 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.740206457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.89154874 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.878684216 seconds)
  done (took 173.12726138 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.056867518 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.883582626 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.869910031 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.923754192 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.993570913 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.87128933 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.556639323 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.878865549 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.876280901 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.873576588 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.870242701 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.870262766 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.874670957 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.883110891 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.987102891 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.872514795 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.88616609 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.872335719 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.895303571 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.873521104 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.871459475 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.870271449 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.871278847 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.872076956 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.87150009 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.869545999 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.116708813 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.127061886 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.872956897 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.871415539 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.965642504 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.884280494 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.962298977 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.87259697 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.871464698 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.961791924 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.926055412 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.989249938 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.874001417 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.088809213 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.95802892 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.87267751 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.872486776 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.936021626 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.884907975 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.877542557 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.872181101 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.878666524 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.938695706 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.121553487 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.873089077 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.994500035 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.355792003 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.875685003 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.872652357 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.871843706 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.477866186 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.874898851 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.873037309 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.87947659 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.878552508 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.873530355 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.878312355 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.266977912 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.945105984 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.874582146 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.947568516 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.872880237 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.874158601 seconds)
    (69/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.273855048 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.514877032 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.017853655 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.873460596 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.873802821 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.874456244 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.875220479 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.87347544 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.876073077 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.995445187 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.882627169 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.001283567 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.957348002 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.995837335 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.877743935 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.884186095 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.703511183 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.947028857 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.910379655 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.702816833 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.877984488 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.248421804 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.646119273 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.878228073 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.873160324 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.886579949 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.876856967 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.874466532 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.875485014 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.95474466 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.876934487 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.996916867 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.591188899 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.332068153 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.881036546 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.87402584 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.882149976 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.956629675 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.874527699 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.997980013 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.877077142 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.940782085 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.881888632 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.877514146 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.972230931 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.87630478 seconds)
  done (took 412.209455566 seconds)
done (took 796.171276282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.513032242 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.48487941 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.585764625 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.503331074 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.474048563 seconds)
  done (took 14.368492043 seconds)
done (took 16.177054049 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.890763565 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.881527907 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.934097128 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.959770952 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.892267459 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.896024584 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.957174665 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.896825494 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.926585685 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.930352207 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.960960172 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.961077817 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.901058541 seconds)
  done (took 26.794925867 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.885420752 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.026497958 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.10797565 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.917300181 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.909240047 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.13220285 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.94129766 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.02257815 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.023445166 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.102533349 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.113377322 seconds)
  done (took 23.990764243 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.885543275 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.028207356 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.100547955 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.921475132 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.886741526 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.128371789 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.948767617 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.019472109 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.027291043 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.110760166 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.113153231 seconds)
  done (took 23.985931596 seconds)
done (took 76.582599852 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.880727331 seconds)
  done (took 3.689341289 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.897732016 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.046377424 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.884789018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.878757028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.881568287 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.879632182 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.877089893 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.884467212 seconds)
  done (took 17.041488622 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.881523226 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.881414357 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.880803182 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.881817184 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.881804978 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.880972413 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.880850404 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.881951956 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.880787972 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.881709349 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.881454672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.881733623 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.882296093 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.881948178 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.881377113 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.881225036 seconds)
  done (took 31.913426024 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.883323166 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.881558274 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.881786406 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.881772913 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.881186008 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.88215631 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.883688398 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.881126293 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.881118892 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.881647486 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.881977398 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.881714256 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.880297269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.882290777 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.883092001 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.88254509 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.882307698 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.882358846 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.889600106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.881926258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.882440549 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.882482266 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.881730509 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.88246913 seconds)
  done (took 46.992182597 seconds)
done (took 101.456310795 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.635916926 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.4784517 seconds)
  done (took 9.924443671 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.886627644 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.882988404 seconds)
  done (took 5.64633222 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.883094925 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.883638718 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.88295637 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.882938704 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.883888568 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.882687622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.883300137 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.88400168 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.884480107 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.883856635 seconds)
  done (took 20.64496097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.883112502 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.883453189 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.883301106 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.883893543 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.88420225 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.887892366 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.884432964 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.885805681 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.885493984 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.884098977 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.884236691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.884120103 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.884272564 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.884474009 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.883762632 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.883595542 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.883878769 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.884181467 seconds)
  done (took 35.729308805 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.884770472 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.884388312 seconds)
  done (took 5.580734696 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.883894662 seconds)
    (2/7) benchmarking "second"...
    done (took 1.885529209 seconds)
    (3/7) benchmarking "month"...
    done (took 1.885780068 seconds)
    (4/7) benchmarking "year"...
    done (took 1.885797509 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.885379023 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.885587772 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.884121767 seconds)
  done (took 15.011130604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.885733684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.041551517 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.102817863 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.537960415 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.885341336 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.887202448 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.810353454 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.886974208 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.889301963 seconds)
  done (took 20.739758654 seconds)
done (took 115.090456389 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.620496397 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.888160625 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.159733937 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.941085148 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.894145738 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.176672836 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.91827428 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.201795854 seconds)
done (took 43.617111958 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.968877117 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.88694401 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.913576428 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.914617323 seconds)
  done (took 22.528865522 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.885225603 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.206955474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.9043815 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.736057674 seconds)
  done (took 22.561815816 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.254558426 seconds)
    (2/2) benchmarking "read"...
    done (took 2.272621166 seconds)
  done (took 6.346752385 seconds)
done (took 60.225047364 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.885863785 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.887223398 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.887165175 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.889481873 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.887908352 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.888036365 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.887058287 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.886384152 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.886390455 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.888155371 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.887406445 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.886591825 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.887283232 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887204866 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.887821843 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887935852 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888186955 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887497557 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.887708868 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889301973 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.889230703 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.888737728 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.889481553 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.887855859 seconds)
  done (took 47.121754929 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.888199778 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.888205034 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.887521759 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.889559703 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.888164628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.889589936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.888640241 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.888128732 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.887922823 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.887434437 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890560002 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.88848191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.888946104 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.88805226 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887881127 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.888321683 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.889049876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888701283 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.889024401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.888840641 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.888107906 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.889123007 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.889705825 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.889342317 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.89014983 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888805764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.890587846 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.889648356 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.888967592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.890426123 seconds)
  done (took 58.483541625 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.890078054 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.890941365 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.890712328 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.890739719 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.890547955 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.889975347 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.891532955 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.890121598 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.891238685 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.890606851 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.891730164 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.892166031 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.89087599 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.889587102 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.891189311 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.89177626 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.891289181 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.890372196 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.89077184 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.890275308 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.8905694 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.890539386 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.891147361 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.890925416 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.891471726 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.890958852 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.890471852 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.892551149 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.891678442 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.891648341 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.892641479 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.890908788 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.890941698 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.891695441 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.890603782 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.892097058 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.892366705 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.892017557 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.891715059 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.891763466 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.892004055 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.89193882 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.892597757 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.893521845 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.892332407 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.89233976 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.892393536 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.892937339 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.893989859 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.893210818 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.893965162 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.893265999 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.892393042 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.892683625 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.893244203 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.892635496 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.892110577 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.891613912 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.893244523 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.894404352 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.89448222 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.893926488 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.893196076 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.893096008 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.89252722 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.893949603 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.892986214 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.892827207 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.894035529 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.893119814 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.894264286 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.893061967 seconds)
  done (took 138.043020933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.894068897 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.894757862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.894366512 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.893455248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893845668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.895250341 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8944386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895341452 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.894347719 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.894438369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894410925 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.893661014 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894026332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893549429 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.894914973 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.89407687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.894514001 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.894817452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.895436795 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.894455229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895023383 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.894294818 seconds)
  done (took 43.499411794 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.894336782 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.894697964 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.894506874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.893692122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.894231295 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.894884712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.895400669 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.895166277 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894568964 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.895496182 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895839177 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.897080907 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.894739808 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.895034385 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.895527554 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.895216031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896262207 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.896289398 seconds)
  done (took 35.935869625 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.89605232 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.895382439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.89611181 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.89593278 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.897344957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.896918811 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.896355579 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.896877762 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.895927213 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.896773814 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.896678825 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.896002893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.896164265 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896809122 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896196806 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.896267775 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.896479674 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896603435 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.896909953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.897321587 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.896144552 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.897656236 seconds)
  done (took 43.545739782 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899408159 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.896461266 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.896515701 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.897103504 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.897677891 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896737172 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.897821946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.897057909 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.897244758 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.897717603 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.896522683 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.898469154 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.898294934 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.898075683 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.897329683 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.896409249 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.89945343 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.897529758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89744028 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.898687906 seconds)
  done (took 39.775965858 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.90135255 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.902293932 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.901948985 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.904643562 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.902016851 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.901692148 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902538105 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.901622885 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.902472565 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.903545492 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.902314569 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.903781814 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902379893 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.903173603 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903296458 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90311767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.902815667 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.903982086 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.902494114 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902737251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.902516465 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.90281071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.902921814 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.903024495 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.90423889 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.903797355 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902771109 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.905313488 seconds)
  done (took 55.107931228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.899160054 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.900497379 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.899671924 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.900403638 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.899842106 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.89971237 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.900335821 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.899830136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.899090417 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.899756189 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.898683113 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.900689135 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.899197457 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.899347721 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.902473937 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.899591157 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.900091766 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.900389457 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.900050494 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.899628318 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.901470823 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.900933373 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.900354969 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.901213888 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90035836 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.900355346 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.900869488 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.900746951 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.900575767 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.902356907 seconds)
  done (took 58.835167604 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.921253727 seconds)
    (2/2) benchmarking "in"...
    done (took 1.922165385 seconds)
  done (took 5.671660326 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.901657551 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.901349395 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.901927874 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.901518736 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.901359352 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.901252738 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.90213399 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.902361078 seconds)
  done (took 17.041477822 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.901581273 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.909733084 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.903234696 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.903753694 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.902586415 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.914114559 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.902199797 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.90887043 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.909141021 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.903026837 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.907374148 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.910291733 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.911131736 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.909817582 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.901948363 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.902021758 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.909157972 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.908501992 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.912107246 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.902757514 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.910298394 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.904203819 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.902452952 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.902973714 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.903163499 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.910303615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.916452726 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.908924242 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.910250579 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.903460063 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.915467818 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.903131273 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.90392377 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.909888289 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.90485967 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.904360034 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.914223899 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.904519723 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.90365688 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.904019633 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.910845741 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.911635456 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.910973532 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.916179993 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.905811471 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.904188934 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.905437571 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.905255704 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.904638956 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.913235113 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.914010283 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.910108797 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.905056575 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.905566825 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.911824851 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.906370017 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.905541517 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.912044799 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.916518666 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.916540008 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.914132387 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.929833865 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.919113874 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.905714511 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.906886513 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.92056425 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.929741152 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.911187327 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.912182324 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.906249358 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.916697493 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.905497685 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.904991517 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.906389418 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.923900723 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.915231761 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.9062088 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.906169884 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.906606407 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.906986836 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.913072872 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.907138086 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.911711866 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.906963281 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.921163003 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.935350555 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.907436312 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.908264389 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.913088136 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.907629443 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.91146266 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.914153983 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.907725974 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.906780379 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.913019952 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.908717638 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.907778748 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.907928834 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.906234548 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.919528066 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.908538893 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.907212005 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.915718573 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.915975872 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.908177447 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.908434519 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913455395 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.908650394 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.920108793 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.908550994 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.90943422 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.907752846 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.90960982 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.915553649 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.908345913 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.917450984 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.916499695 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.920573058 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.909433106 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.915820593 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.916857674 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.916191714 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.922173994 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.933403262 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.908501934 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.916661022 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.919025712 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.920334458 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.919165991 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.909086723 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.916397823 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.91010333 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.906747748 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.916360365 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.909329404 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.908880282 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.909628912 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.909464764 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.909029955 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.909348039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.910659799 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.915834976 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.916850379 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.909804709 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.918517074 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.909211694 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.917432873 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.920967416 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.910689187 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.910680436 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.909930116 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.917033457 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.911873949 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.916249576 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.91095995 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.910694597 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.910652088 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.91059385 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.917093381 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.910146488 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.913038326 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.911629875 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.914277563 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.910831038 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.911555771 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.910884506 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.91034145 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.911527075 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.917594356 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.917394261 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.918426009 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.912154112 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.919027233 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.911407794 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.910732941 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.912097425 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.912396786 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.91083591 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.919935055 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.927892854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.9200658 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.926508344 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.911674356 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.924145743 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.91190418 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.917929407 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.91673383 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.91168397 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.911911852 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.913362381 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.912440347 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.923016981 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.93730653 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.926405227 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.918418482 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.91388659 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.917431817 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.915910794 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.921771692 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.913097114 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.917899144 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.920397163 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.914127579 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.912967309 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.913476448 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.919631483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.913051116 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.916196049 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.921151092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.914254024 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.913331198 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.918670133 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.914038081 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.920300364 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.913905848 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.913962287 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.914196176 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.913654497 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.925411124 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.921013104 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.913467123 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.913940166 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.922422194 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.914950827 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.913675373 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.919836965 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.921514627 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.913055381 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.920360257 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.925412051 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.913759276 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.916096378 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.915878308 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.915132572 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.921322195 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.914067698 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.922579074 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.922964312 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.922429577 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.914350494 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.924177474 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.914729977 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.9214811 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.914784562 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.921842829 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.915793881 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.92167495 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.915625335 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.915650899 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.926524296 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.916181103 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.921001796 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.916551073 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.916377635 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.91708917 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.922022026 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.915681902 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.923481491 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.924549503 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.926724462 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.917001159 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.918753737 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.922881173 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.918412267 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.921089112 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.921741629 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.934257571 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.931290272 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.916984668 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.916998719 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.915315064 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.924495933 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.915688159 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.915583794 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.928046081 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.91673873 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.918061486 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.922442328 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.916764348 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.916755974 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.927739252 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.922943135 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.923709657 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.923424929 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.925274444 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.923444375 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.917767793 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.924953698 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.916858044 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.923674736 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.922459379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.918040605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.922414058 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.917599854 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.929548459 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.916946789 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.923287809 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.929279387 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.923157116 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.916822389 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.923503343 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.91960478 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.923592506 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.92447959 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.917880997 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.91903691 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.917595273 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.927785414 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.934627304 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.926987207 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.92781238 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.925549969 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.933325799 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.919780057 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.919200597 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.919076155 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.928806633 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.926061564 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.919669841 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.918066545 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.931567884 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.920039285 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.920111067 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.923572934 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.920241943 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.919951083 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.919758335 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.920439475 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.929871543 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.927304463 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.920371311 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.919996609 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.921062952 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.919355996 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.927962155 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.926773697 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.924712128 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.919445327 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.919107524 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.921001673 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.920606061 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.919623493 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.920250442 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.920803478 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.920202964 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.932517889 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.920366015 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.920838098 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.926160442 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.920710852 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.933410002 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.921050749 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.920492964 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.920672799 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.920598916 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.922572964 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.920013404 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.921362647 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.921287488 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.920331768 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.922553975 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.936713371 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.933497936 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.92362925 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.928332634 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.921253245 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.92738255 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.936360991 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.945580245 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.92309776 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.928917272 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.927327623 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.934274371 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.929161786 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.93290987 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.930555055 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.930918438 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.929052007 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.922235374 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.931179479 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.940176741 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.92334696 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.922674063 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.923503953 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.932843422 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.923535098 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.922608363 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.922388151 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928953847 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.92347789 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.938830058 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.923246286 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.923798948 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.923661119 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.923310165 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.923230225 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.922972971 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.92907132 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.928541836 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.922993398 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.923375529 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.929394549 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.933317061 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.923418837 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.931729923 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.937929869 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.924273244 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.923959589 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.924462408 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.923215929 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.932967431 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924061196 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.924691681 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.924805594 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.924746043 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.925555501 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.932564733 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.938305332 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.929935091 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.925244184 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.92401078 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.93258231 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.924782403 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.924732278 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.930628099 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.938900179 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.935789657 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.940989709 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.939129186 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.92494348 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.926265067 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.938629934 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.933265885 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.92567872 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.925258632 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.925503371 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.93209715 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.932085507 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.93009675 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925723104 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.925853673 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.936377279 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.924637736 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.924756218 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.926112263 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.925784632 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.932727069 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.933081559 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.936426947 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.925839935 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.926642852 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.924029604 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.931425816 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.932148337 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.932471187 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.926772373 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.926442404 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.934597099 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.933413888 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.930432685 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.925956096 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.926730557 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.933371966 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.926608635 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.927918273 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.925420789 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.926575388 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.927932642 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.935787081 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.934584583 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.927636251 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.933299054 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.928838808 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.934739984 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.928218506 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.92780029 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.927896258 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.928855283 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.939729907 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.92807525 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.927779568 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.928351563 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.927536208 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.938345299 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.933834425 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.937150747 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.927683792 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.928134244 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.92850211 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.936279984 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.936265798 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.932349824 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.936613612 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.936443639 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.936928251 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.934777377 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.928907249 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.928452523 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.927877602 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.929434186 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.936834063 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.935967237 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.936088851 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.930267747 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.935706336 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.928846928 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.935323122 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.928494576 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.928604668 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.937230331 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.943382711 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.941317061 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.929374504 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.936049605 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.928931455 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.93691618 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.939488812 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.930610244 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.92956789 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.930986866 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.935211288 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.930600003 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.942494955 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.93802847 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.939160053 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.931707077 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.938556639 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.950270787 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.935582577 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.94220824 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.965550914 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.928267973 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.928855212 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.933071607 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.928485175 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.927581862 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.928946051 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.927674097 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.940401185 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.928383518 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.927806206 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.940263526 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.928244941 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.927534887 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.928551009 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.928124797 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.938994303 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.927793163 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.938734185 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.928888997 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.92943358 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.92782829 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.928876653 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.927724777 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.928911696 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.927206326 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.935357069 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.927842496 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.927450062 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.941046014 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.928137893 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.934586192 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.946462413 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.936873609 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.927717935 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.927330527 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.93023376 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.937980106 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.934381955 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.925961415 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.93396622 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.936339509 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.936653404 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.934603641 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.932526933 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.933628935 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.932530811 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.923763526 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.919063549 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.93588701 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.934816523 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.92207149 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.922197241 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.931210197 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.919555955 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.93158237 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.930757991 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.920484429 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.92713719 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.91950495 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.919185894 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.920246299 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.919423009 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.928921216 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.928137699 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.92027943 seconds)
  done (took 1147.138725463 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.922523012 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.920110689 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.920078821 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.919323178 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.919934321 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.919769529 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921148029 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.919845434 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.919556993 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.920588561 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.920711449 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.920639676 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.919288998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.919376263 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.920006305 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.919755924 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.92188712 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.917489507 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.917060409 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.91747588 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.916742706 seconds)
  done (took 42.158325448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.91715642 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.915946573 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.916974674 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.916511946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.916258836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.917116838 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.916336704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916048956 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.916285405 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918004585 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.917174445 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.916860688 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.914710355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.916034723 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915548842 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.917973932 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.914688615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.915247171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.915081362 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.91485506 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.916252095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.916133374 seconds)
  done (took 44.000105473 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.916713068 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.915835824 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.924623173 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.915651653 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.91576752 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.915803126 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.916479878 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.915526086 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.914743084 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.914309277 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.926618664 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.922791412 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.913797875 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.916057929 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.914049048 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.915643899 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.060252062 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.915236655 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.918083392 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.91401802 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.915528937 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.926388268 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.914409443 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.91517419 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.91459888 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.914741845 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.91406256 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.915135726 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.915966915 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.916032001 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.919803185 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.916576337 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.920758096 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.925446533 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.916488155 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.916233393 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.919902391 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.91657036 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.91652496 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.916687779 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.929978029 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.941154285 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.915766572 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.916001998 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.926297896 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.91712733 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.914491406 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.923580871 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.923781623 seconds)
  done (took 95.979442258 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.916763261 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.915290329 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.914851193 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.915436343 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.91573116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.916827622 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.91512639 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.916348855 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.915075649 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.915777291 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.915769757 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.917649897 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.915607194 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.916394839 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.91665255 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.917604579 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.915274152 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.913675596 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.914180879 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.914299617 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.913880976 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.912034677 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.908897474 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.909948863 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.909765605 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.909909166 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.910970332 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.907699056 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.905951863 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.907472133 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.910879759 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.909748395 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.905984557 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.90445859 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.906198542 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.905383126 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.906874799 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.905435724 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.905346175 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.904850425 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.90487778 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905312787 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.905411415 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.903770073 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.904932059 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.905247673 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.906142884 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.905852642 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.903427937 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.902910098 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.904831312 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.90219649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.904892261 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.904403032 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.903925776 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.902146552 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.902804509 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.904643857 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.903336221 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.903472851 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.903157758 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.904869242 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.903650038 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.905062209 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.903288869 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.902952592 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.903196685 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.903482125 seconds)
  done (took 131.634652581 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.903154235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.903647928 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.903882675 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.904200453 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.903476641 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.903151091 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.902918361 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.903459966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.903744683 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.903859054 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903799948 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.902685447 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.904206642 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.903316419 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.904617966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.904781762 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.902432315 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.904378716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.904390904 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.903635293 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.903157637 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.903792919 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.904109501 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.902818462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.904519949 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.907501474 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.903891525 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.902335289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.903266903 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.903487131 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.90462961 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.902451312 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.903055548 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.903054912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.902985004 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.902962575 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.903596043 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.902429458 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.903059139 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.902532921 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.903819057 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.903243728 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.90233593 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.902174116 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.902663378 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.902213082 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.902387721 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.90286334 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.903408019 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.902312578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.904192084 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.904164612 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.903191571 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.902021852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.903328935 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.902224129 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90448838 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.903467072 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901675894 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.90344853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.902542246 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.902067407 seconds)
  done (took 119.839494708 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.90266809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.902886973 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.903564686 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.901726439 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.90416275 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.903544045 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.902454063 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.902411975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.902644412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.902029069 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.90497806 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.901826519 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.90303995 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.902037908 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.90189468 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903585717 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.901092983 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.902115103 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.902331747 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.902086157 seconds)
  done (took 39.882719447 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.901560266 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.903178402 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.902428333 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.90268279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.90478884 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.902623338 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.90289286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.901709128 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902539473 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.902188844 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903242338 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.901699317 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901896214 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.90238423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.902164684 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.902965465 seconds)
  done (took 32.270588265 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.901682187 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.902965122 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.903196732 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.905820118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.902749639 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.902214551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.903205552 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.903106808 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.903626017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.901940836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.902926631 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.902162763 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.90200681 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.903274646 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.902899554 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.901312996 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.902814926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.902724011 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.902983586 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.903920705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.901836999 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.902835628 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.902343723 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.903033432 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.902742923 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.902974975 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.90286028 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.902276217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.902781323 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.903164626 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.902889362 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.902701921 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.902753083 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.903194175 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.904847651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.903273069 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.902737907 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.902311403 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.902774414 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.902896948 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.902264969 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.901786494 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.901860245 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.903368379 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.902995574 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.904723602 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.903076373 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.902431129 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.902035403 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.901640847 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.90571376 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.903724819 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.902502838 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.903559535 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.901834106 seconds)
  done (took 106.488116261 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.902736251 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.902572277 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.90189532 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.903344554 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.902305267 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.903571381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.901140537 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.902205304 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.901518639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.903359285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.903863377 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.90147752 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.901083881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.901534534 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.902500517 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.901937034 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.903711158 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.902157141 seconds)
  done (took 36.072211759 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.902793398 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.902964594 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.903031833 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.901891717 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.902611037 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.903814399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.902727376 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.904712689 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.901879649 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.903656449 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902001712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.902766412 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.9036161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.90508005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.902966398 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.902755638 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.901701968 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.902343145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.90366071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.903518254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.903156121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.903746033 seconds)
  done (took 43.697012842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.904874018 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.901865152 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.915264454 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.921091296 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.921731373 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.934305624 seconds)
  done (took 13.328456952 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903155798 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903781023 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902260962 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904916147 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904124061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903011203 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903340106 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.903393311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904264497 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905753517 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903980789 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903972952 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904976836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904358827 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905980275 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903449334 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904310138 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90401224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.903894284 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906080846 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904286546 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.904064879 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90414667 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904501431 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905838155 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906802754 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904641999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905529166 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905447572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904326313 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906479415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906270354 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904561128 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905745676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906092555 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905914195 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905619381 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905591611 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906374639 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905043416 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.909262347 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906708657 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905912687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906065608 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907385622 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907210764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90547205 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906155751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905738699 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906032629 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906562474 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.905552378 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906060008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906157877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906154722 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907023915 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908936868 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906166892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90634527 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90705298 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906667232 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907045666 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906173493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907281048 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906949893 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907482305 seconds)
  done (took 127.59676734 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906112333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.907032328 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906246317 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906001339 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.906549889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910993803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906412564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907007897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907575797 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907010796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908312431 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90799544 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907648925 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906352537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907449098 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907832862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907311574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907876387 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907974908 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907642892 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909559742 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910035707 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907994835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907834972 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908958888 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907842185 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908428482 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908063629 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908239306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908096104 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907664807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908612489 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908645308 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.908528308 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908819812 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908249095 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910767151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908413589 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908456404 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908218434 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908469854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909166382 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908889738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90868321 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908184462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909465474 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908302377 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909684498 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907867826 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908272387 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909051372 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909287601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.910775184 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908729768 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909616323 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908924162 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90884588 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909354641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.90924688 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908274809 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910079525 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.909449561 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910452249 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909139042 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909154733 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909443489 seconds)
  done (took 127.790718586 seconds)
done (took 2652.760865994 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.990240306 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.988245265 seconds)
  done (took 15.814254442 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.085222111 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.03821371 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.922950615 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.941531593 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.924371575 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.945838139 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.944727493 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.923117631 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.92352876 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.924371344 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.923195678 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.106165108 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.939837122 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.923167904 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.923732044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.015898387 seconds)
  done (took 53.421453939 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.926065498 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.924916519 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.934442069 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.927521935 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.925210371 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.942989603 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.956715775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.92893476 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.980923891 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.937874469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.050052316 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.942713054 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.925925245 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.976611607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.938934281 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.941454604 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.01695032 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.003226126 seconds)
  done (took 37.028446565 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.003263099 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.937454786 seconds)
  done (took 10.796319308 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.934360808 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.977132348 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.01422761 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.920589645 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.928655646 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.920615814 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.933821432 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.920931556 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.936242595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.937379521 seconds)
  done (took 71.27389802 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.931780898 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.928543223 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.925431805 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.924040984 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.922239353 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.926589066 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.927182532 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.928038189 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.593414427 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.962161408 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.933438292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.930687104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.92626257 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.927707156 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.924847894 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.947373353 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.037713655 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.923492299 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.924920428 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.933132379 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.925883386 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.985209097 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.940077359 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.928934354 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.95582386 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.591422577 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.935694829 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.931357663 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.060721864 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.923242895 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.925724654 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.116305906 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.929191565 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.396886041 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.223904578 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.932744984 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.939654451 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.933020094 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.923844686 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.038584251 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.927973855 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.932352455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.8616629 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.207620601 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.035643261 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.969878324 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.280653007 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.945707611 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.927564158 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.954820507 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.930354555 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.927636553 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.940760092 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.44050421 seconds)
  done (took 136.051567654 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.928006934 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.287565497 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090782861 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.928724535 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.211312309 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.135849557 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.926699811 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972504168 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.928506021 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.168165638 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.089933593 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.031135752 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929182075 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.925753885 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.925873619 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.925327925 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.077297041 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.999201827 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.929480234 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.92725074 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953816117 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.16736582 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.066016658 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.928764985 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.945244923 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.140903029 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.049584795 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.028840821 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.256840051 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.92508895 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.989018413 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.930479532 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.927577442 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.926608569 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.088407831 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.020836049 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.009800655 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.929601099 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925078299 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.926628475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.590118113 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123767636 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.022896437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.058879707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.124381765 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.133872837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.706448702 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.926265434 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.667208712 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090164833 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.154641679 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.173167953 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.048767279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.930514954 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.268643945 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.927985458 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.927005157 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.177517689 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.073410084 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.026257313 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.932161627 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.926463527 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.927890224 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.168026396 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.931288418 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.022564223 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.929942714 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.929710972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.025756588 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.028099391 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.06921419 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139955774 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.959486527 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.81923762 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.477388668 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.175025765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.994791535 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178196929 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.932358318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929438341 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.007128499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.776469849 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089225817 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.17360847 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.186293764 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.964112282 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.662334082 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.928382011 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.15411991 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.149514426 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.180374395 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.135010221 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.087316707 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.095257373 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.931128039 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.930199416 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.138952336 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054843432 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.935207631 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.275339985 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.162743307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.492252631 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.947392129 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.234169195 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061624069 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.934418579 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.569922585 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.92839371 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.152316991 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.970507512 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.935776464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.930659625 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.149039144 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.903153368 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.932479191 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.858481174 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.989448401 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.932322664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.163170576 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.932877699 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.192349096 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.935251674 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.165687432 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.453623334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.960594159 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.102917807 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.13496807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.934963474 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.17539911 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.173920819 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046216284 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.203957796 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.89379371 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.934954893 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219412095 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.933755959 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.931376448 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.101665773 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.935519776 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.079686514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.938169936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.214938964 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95460624 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09107489 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.934868045 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.20350958 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.965712619 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983493711 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.936310624 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063275729 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933671528 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.846223973 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.089106938 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.935869487 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.932468393 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.483241945 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.934141915 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.081506982 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.159792347 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95738846 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.00684964 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.593863598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.934037649 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014447379 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.955948686 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.325714251 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.934389879 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.08971781 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.937649033 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.933488653 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.932938187 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.172268118 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.169934934 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.936218615 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.935700212 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.831335367 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.934516505 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.93345224 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.114470351 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.318908682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.934403483 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142856932 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.936786492 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063574624 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.938995817 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.009253918 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.266877418 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.934593671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.935378064 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.934344815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.937171554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.937487564 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.141082561 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.967638654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.463846883 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.071447791 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203512154 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.242846906 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.18598683 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.977957374 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.936246184 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.188916841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.938780832 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.997228736 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.937712882 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.954683226 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165985929 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.939809323 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.147426464 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.217022775 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.807377828 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.987144961 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.938143252 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.93782015 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.936178534 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.100660901 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.020406353 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.938059532 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.936088977 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.05081566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075400593 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.14657495 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.938345601 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.089489123 seconds)
  done (took 915.731925499 seconds)
done (took 1241.956257801 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.938519339 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.939352557 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.940002451 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.939497524 seconds)
  done (took 29.622313575 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.938792807 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.93800017 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.943263607 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.937877003 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.940000443 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.937703985 seconds)
  done (took 13.499930549 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.119339438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.937423917 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.940263794 seconds)
  done (took 21.860924434 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.009451428 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.32353309 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.077069512 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.353259166 seconds)
  done (took 10.627096007 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.944285459 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.944910316 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.944199301 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.941382499 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.93891971 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.940215505 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.94269461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.940750978 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.940727218 seconds)
  done (took 19.343716262 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.040785038 seconds)
done (took 100.857973688 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.94990037 seconds)
    (2/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.676095289 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.080069299 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.010484709 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.941203408 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.07319313 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.338724721 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.943705275 seconds)
    (9/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 3.476158706 seconds)
    (10/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.388001861 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.077657753 seconds)
    (12/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.945522578 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.112495158 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.961662125 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.253167752 seconds)
    (16/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.619701485 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.10270883 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.939491496 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.940983812 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.074374116 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.706708683 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.941618245 seconds)
    (23/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.027041006 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.44638069 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.030375333 seconds)
    (26/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.075005688 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.963146503 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.319919138 seconds)
    (29/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.176316402 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.240890757 seconds)
    (31/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.943536259 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.054489314 seconds)
    (33/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.448253705 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.944709022 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.073107773 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.036618764 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.109923956 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.396218476 seconds)
    (39/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.093922351 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.303173863 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.622309147 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.042403676 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.953567437 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.019537938 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.939023556 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.041117182 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.067291834 seconds)
    (48/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.960086503 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.739936631 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.366959295 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.182524066 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.242190064 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.199440331 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.944451617 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.88706893 seconds)
    (56/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.148829481 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.828482197 seconds)
    (58/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.947463546 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.685756624 seconds)
    (60/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.967658058 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.821238746 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.200359838 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.061323399 seconds)
    (64/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.114551807 seconds)
    (65/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.02831471 seconds)
    (66/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.944071592 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.371668385 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.963185639 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.882789083 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.265029797 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.3945415 seconds)
    (72/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.321095405 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.943652496 seconds)
    (74/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.465388947 seconds)
    (75/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.038462687 seconds)
    (76/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.070477259 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.943364381 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.997773376 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.171602186 seconds)
    (80/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.3929285 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.954791426 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.234654853 seconds)
    (83/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.084727703 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.94392854 seconds)
    (85/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.406148562 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.725294848 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.175369737 seconds)
    (88/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.945343574 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.553416263 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.058208561 seconds)
    (91/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.038886126 seconds)
    (92/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.944426067 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.324540051 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.959608779 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.195936929 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.337302634 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.008657247 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.97982167 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.070913448 seconds)
    (100/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.054052322 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.625002047 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.825960065 seconds)
    (103/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.463234739 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.887214453 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.080242 seconds)
    (106/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.020991991 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.103781427 seconds)
    (108/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.358935047 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.967072535 seconds)
    (110/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.955262438 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.202223734 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.13108491 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.948311872 seconds)
    (114/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.450307101 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.159578138 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.089370812 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.949156077 seconds)
    (118/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.1737901 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.103879382 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.510374351 seconds)
    (121/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.092569776 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.080341745 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.251088563 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.254739533 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.948707697 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.53032858 seconds)
    (127/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.581278989 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.309045155 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.031641936 seconds)
    (130/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.081414394 seconds)
    (131/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.197350549 seconds)
    (132/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.954416201 seconds)
    (133/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.949099588 seconds)
    (134/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.967510133 seconds)
    (135/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.19816148 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.982784033 seconds)
    (137/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.97043402 seconds)
    (138/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.044482656 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.111721469 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.204481275 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.946924231 seconds)
    (142/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 4.058093342 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.949249986 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.571704106 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.968556006 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.157797235 seconds)
    (147/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.959964034 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.94708879 seconds)
    (149/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.072885432 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.973427435 seconds)
    (151/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.17107634 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.310857896 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.954597398 seconds)
    (154/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.946313516 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.50650381 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.317763614 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.970862513 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.912177441 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.292435135 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.606292193 seconds)
    (161/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.207548821 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.043081334 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.17612319 seconds)
    (164/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.155717082 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.277631519 seconds)
    (166/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.271454838 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.312399279 seconds)
    (168/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.977787339 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.839003845 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.062473543 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.952383585 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.978972514 seconds)
    (173/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.322675908 seconds)
    (174/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.063232005 seconds)
    (175/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.108620458 seconds)
    (176/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.105938726 seconds)
    (177/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.090853578 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.949363281 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.372212103 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.109409666 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.953434684 seconds)
    (182/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.984012572 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.954587314 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 6.954053682 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07939321 seconds)
    (186/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.717677589 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.043976495 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.58351174 seconds)
    (189/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.835609329 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.036281824 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.961324781 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.069204056 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.715021608 seconds)
    (194/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.086242063 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.254981547 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.041072144 seconds)
    (197/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.012896967 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.016943065 seconds)
    (199/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.960581654 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.010095334 seconds)
    (201/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.029162965 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.331431573 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.164986874 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.193333406 seconds)
    (205/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.013685251 seconds)
    (206/309) benchmarking ("sort", Float64, false)...
    done (took 5.985069791 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.954921205 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.973050526 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.178514962 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.078751935 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.951140029 seconds)
    (212/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.637968177 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.954830228 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.660213284 seconds)
    (215/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.393961732 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.619328637 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.277497164 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.267962415 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.353957433 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.954659492 seconds)
    (221/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.140801049 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.240309697 seconds)
    (223/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.385483459 seconds)
    (224/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.955076062 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.083178371 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.203181815 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.955142645 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.491328253 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.954024812 seconds)
    (230/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.238881057 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.952595884 seconds)
    (232/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.569700824 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.289599205 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.773155504 seconds)
    (235/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.248085778 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.960707798 seconds)
    (237/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.176025443 seconds)
    (238/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.019943033 seconds)
    (239/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161345635 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.387107531 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.571580391 seconds)
    (242/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.410078718 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.959054914 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.062341482 seconds)
    (245/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.953508182 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.072455519 seconds)
    (247/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.039168154 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.976820308 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.079496204 seconds)
    (250/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.276355632 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.095667385 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.622511052 seconds)
    (253/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.42782288 seconds)
    (254/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.692415551 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.136726806 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.154150939 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.271201475 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.068362581 seconds)
    (259/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.44635814 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.173161581 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.275030727 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.278715303 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.196444673 seconds)
    (264/309) benchmarking ("sort", Int8, false)...
    done (took 4.858414759 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.982350188 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.955608691 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.392108172 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.985798064 seconds)
    (269/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.075926852 seconds)
    (270/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.95794324 seconds)
    (271/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.35777451 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.99456664 seconds)
    (273/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.953943936 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.01191872 seconds)
    (275/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.957781637 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.96177664 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.104910147 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.438111022 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.100010263 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.958008854 seconds)
    (281/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.340258511 seconds)
    (282/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.957727841 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.321201032 seconds)
    (284/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.95614211 seconds)
    (285/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.246817295 seconds)
    (286/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.45321993 seconds)
    (287/309) benchmarking ("sort", Float32, false)...
    done (took 5.69222242 seconds)
    (288/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.06807386 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.804421561 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.404169498 seconds)
    (291/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.083494056 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.9685563 seconds)
    (293/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.835345658 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.387935727 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.092879019 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.975869652 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.173906257 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.312322659 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.994912098 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.979505444 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.957665405 seconds)
    (302/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.081725067 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.082391215 seconds)
    (304/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.519759744 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.174258589 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.233607277 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.959811226 seconds)
    (308/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.887605223 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.966883438 seconds)
  done (took 1031.756661987 seconds)
done (took 1033.685633978 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.986809732 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.980382888 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.959494137 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.981408908 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.073942479 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.005926166 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.973009438 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.964273576 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.009777966 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.009457069 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.958955512 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.004293224 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.96188386 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.961727888 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.960461858 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979481295 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.255683822 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.985337127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.980367732 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.97296428 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.980211283 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.960739711 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.011196256 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.004741038 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.964314964 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.965562815 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.964471685 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.981160693 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.074196983 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.965363664 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.967177285 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.974910749 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258232916 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.983038941 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.959334376 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.9822855 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.974360617 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.973745902 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.96512967 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.995784272 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.347224803 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.992993092 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.963462841 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.962111476 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.962507454 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.969831693 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.963509375 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.96977483 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.979295809 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.980226965 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34689935 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.010529982 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.96769865 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.963149513 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.976467574 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.963097658 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.96671338 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981319258 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.982201699 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.980617159 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.247932738 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.993714429 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.967531849 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.981968969 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.971788075 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.37917545 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.992015066 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.97055597 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.347603881 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.004251276 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.380031153 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.007037258 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.967883884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.980342851 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.996999621 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.260638531 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.985967431 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.963984301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.973281465 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.962611102 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.976372776 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981667176 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.969707768 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.963837009 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982443407 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.010376166 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.977526855 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.966374108 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.976759513 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.984908913 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.975421363 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.977143818 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.970023568 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.962165038 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.976450043 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.96937459 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.968670281 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.969053429 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.969783084 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.977612808 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.347381237 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.016017298 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.963650546 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.963170293 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.965718572 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.981825501 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.347662376 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.999433377 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.988393926 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.015753714 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.966882443 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.249097807 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.993122207 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984532369 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.977769199 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.969257173 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.964019601 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.250098709 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.369779285 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.01757454 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.966332196 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.964981117 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.986210338 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.967950161 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.964464093 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.262312323 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.992746494 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.986429744 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.090197764 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.981102099 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.999053528 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.965421242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.413809803 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.013403081 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.989387036 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.000243089 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.970460851 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985768945 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.98525225 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.964117794 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.980191904 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.980871873 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.967548274 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.975535644 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.965341214 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.01416929 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.985442044 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.984901506 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.988643978 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.091039611 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.965538478 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.252433083 seconds)
done (took 308.868165376 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.04244663 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.965117708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.056849248 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.96642299 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.056058296 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.038804148 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.96764156 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.968630849 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.966988263 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.469202498 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.967199224 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.971947024 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.968015502 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.96751803 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.035443845 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.96766685 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.968329001 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.413563917 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.969302345 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.047497706 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.968204958 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.968902631 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.968885302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.469230586 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.968681243 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.967570174 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.047072448 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.969095852 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.416997695 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.967501713 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.966962313 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.416787752 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.047524832 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.99654433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.976844421 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.974450338 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.056308498 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.980979348 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.034625594 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.03513027 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.058663381 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.001297838 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.966824327 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.968546525 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.972261218 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.970198686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.969422927 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.002621151 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.967039023 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.974368564 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.414130058 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.97506824 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.977517346 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.970673186 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.968815598 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.997941927 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.970097247 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.970354516 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.048870922 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.972372004 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.037354172 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.473273427 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.471120577 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.969374585 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.967338554 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.969709113 seconds)
  done (took 191.869113211 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.03567808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.044134777 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.035002205 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.970960136 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.01674755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.033616656 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.971489226 seconds)
  done (took 16.00032083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.974830631 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.967335233 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.017019691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.016974087 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.967336241 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.146975582 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.979479672 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.973454291 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.99506589 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.973655473 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.633161907 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.018706147 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.975865148 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.967942817 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.979696339 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.024795102 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.96978973 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.968515599 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.083497688 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.117160249 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.974610367 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.9761587 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.994903589 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.981578637 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.970270427 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.973908695 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.968458898 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.976630069 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.969177384 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.968984469 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.969313749 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.020131887 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.969392687 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.968599921 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.969361174 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.969438853 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.971119099 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.969212243 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.969620903 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.969168548 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.970491975 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.970340932 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.970020387 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.970602479 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.970458641 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.993264625 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.969894122 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.969365708 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.970711567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.970655575 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.995874216 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.972227458 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.97269475 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.975727297 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.012303912 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.976626283 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.971576443 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.970534961 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.971004426 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.971878096 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.970948376 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.120182278 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.020054066 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.971346506 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.021050548 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.126274659 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.970921631 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.971755537 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.971773476 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.059312722 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.971265134 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.022742461 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.971635188 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.085446129 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.971053952 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.149272197 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.995029433 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.974893599 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.974434512 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.973520601 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.977967746 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.971164489 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.973278054 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.978195949 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.976472131 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.972070057 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.972089834 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.973140852 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.979030231 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.97182318 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.021550943 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.971501836 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.973204236 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.111391624 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.972576649 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.087442206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.999345137 seconds)
  done (took 215.836426099 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.980459648 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.979595309 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.974491759 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.988798476 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.973898641 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.973430258 seconds)
  done (took 13.766205686 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.974730928 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.977057511 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.976042427 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.97308878 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.973846963 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.974150279 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.974484342 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.975262717 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.977910658 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.974080188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.974050868 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.972937139 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.979247863 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.974377774 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.973944768 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.975150251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.974900373 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.97503181 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.973727318 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974999784 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.178792785 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.974254039 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.974728443 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.976678227 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.979365134 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.974748876 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.986911571 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.974969057 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.974191628 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.982656531 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.978694182 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.975003877 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.978104716 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.981723133 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.97876605 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.977173369 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.978975152 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.974721642 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.975178556 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.976448533 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.975290801 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.975634502 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.974621625 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.975872735 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.97709295 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.980811315 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.978891722 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.988782265 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.975443098 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.974766195 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.97466195 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.974926411 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.975884756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.976191557 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.979629729 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.981294773 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.980163428 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.977245397 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.977469464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.979375598 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.980630811 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.977664391 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.979335099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.98114849 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.983084569 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.976124716 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.978596546 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.980798026 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.976206946 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.976372196 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.976476689 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.976344518 seconds)
  done (took 145.446445306 seconds)
done (took 584.822055773 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.457087232 seconds)
  done (took 9.356008819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.019808125 seconds)
  done (took 9.02643697 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.298857828 seconds)
  done (took 10.20384455 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.993674166 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.996450703 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.990591068 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.980163883 seconds)
  done (took 29.875821178 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.352534841 seconds)
  done (took 9.253375219 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.998134301 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.976439599 seconds)
  done (took 15.936705733 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.02973087 seconds)
  done (took 8.936798968 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.287403901 seconds)
  done (took 9.194430619 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.998429931 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.987481928 seconds)
  done (took 15.904650275 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.978325479 seconds)
  done (took 8.878052306 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.179758433 seconds)
  done (took 10.162564387 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.990209588 seconds)
  done (took 8.955663201 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.998443438 seconds)
  done (took 8.89866373 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.87856526 seconds)
  done (took 9.778935128 seconds)
done (took 166.262508139 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.989229225 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.976606815 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.977349885 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.979751538 seconds)
  done (took 29.823311156 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.013434942 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.013837053 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.022127993 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.013082701 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.004105696 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.003271578 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.014317289 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.013917775 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.004246003 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.011306333 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.016103726 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.011739214 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.01337794 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.022175164 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.022773153 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.012168538 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.014072998 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.014676048 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.004066466 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.023006917 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.014437784 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.013515591 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.981968908 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.97964429 seconds)
  done (took 50.158412144 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.199672628 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.066761963 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.147952955 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.058515183 seconds)
  done (took 10.374331022 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.98083103 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.059106468 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.051340739 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.038510418 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.042523269 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.097963792 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.051322241 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.126743297 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.111137755 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.112557689 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.994008168 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.004050334 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.007375416 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.038529094 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.09832561 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.983506814 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.98299957 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.102534732 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.059671087 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.291995134 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.983036128 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.052152995 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.042864375 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.05203044 seconds)
  done (took 51.269734174 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.986233308 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.992666042 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.991129137 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.984215531 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.984639228 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.98479594 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.991622028 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.985736737 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.006011762 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.986384228 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.983490873 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.985483936 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.990952015 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.985638962 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.98434367 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.999388356 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.999903128 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.984557774 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.988057181 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.991571834 seconds)
  done (took 41.692016051 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.984343407 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.242059664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.327618868 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.235815497 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.983804079 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.982303267 seconds)
  done (took 32.660925246 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.995428859 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.988996097 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.984292762 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.039928777 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.126020937 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.989895178 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.984541175 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.995377015 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.0306896 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.047023039 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.007211959 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.014818126 seconds)
  done (took 26.109494218 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.986785855 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.989711003 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.987549091 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.997703301 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.995199357 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.991051985 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.992434101 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.983265141 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.998757167 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.001516045 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.990968973 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.996587858 seconds)
  done (took 45.820171442 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.692999163 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059779026 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.984311525 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.008593011 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415079762 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.530028282 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.878345955 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.652828669 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.797896167 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.912064577 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189025663 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.986122545 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072071272 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.987751355 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258132068 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.42151587 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195869533 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.229858379 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986684037 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.085647851 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.188827898 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201010313 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.268017916 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98707677 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990049852 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.998477188 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.686643385 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649450433 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.092177824 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.193923923 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331983775 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.937234279 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035916601 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.989992397 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.999843883 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991253524 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993370751 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259544981 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.000395891 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177358053 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057937365 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238483116 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992675689 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.397149289 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.6948478 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.26709299 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.098555605 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.989580598 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991241154 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989020846 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.914696907 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070743852 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.992529748 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994002376 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.689052746 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.98940017 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062768953 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.989709839 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193174313 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.795782792 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.671788024 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.992056122 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994124918 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.54474902 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999591388 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.183044983 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6606613 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.444432944 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401816016 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.088278308 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.990207123 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991481422 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.208903741 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031580272 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.601784979 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099160848 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.126694732 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.007006518 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630125598 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277278849 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.394742731 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.551495217 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909767784 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256614465 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.802770376 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069753016 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207136373 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.838736219 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.919166025 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202302549 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015661577 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993878485 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.253388997 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.607285273 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.174000098 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.003863041 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422249275 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011021238 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.997359414 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993596261 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207504699 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458187168 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.091278151 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.112142357 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008347387 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.073918924 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918460805 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.003848195 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.993271353 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.873917502 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.992189302 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879747926 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.118012593 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.852024544 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109792763 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.930642547 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996200717 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988257743 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104347569 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.943403442 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228973957 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.280376343 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.640018279 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913187778 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.204355369 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.342186275 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220586621 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.997998117 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208094979 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53421748 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.37041579 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.041469843 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272057354 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.04711817 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276892019 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407306715 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072239142 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.69033204 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.594685311 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.212293364 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00889374 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.999923303 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998073357 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00011466 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930809746 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.834193899 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.339442917 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.159726904 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209472102 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.419767382 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 5.064660399 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.892102261 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.38421702 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13032431 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.982223001 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.633291119 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.288724065 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.789421639 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.083943528 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.220887999 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281156708 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.035259095 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01045173 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088041863 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0136561 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.008961956 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.281784389 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360227321 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.997527299 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.997303658 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.951028068 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000717857 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.998354895 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.52105196 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.966965337 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.006835673 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.007640663 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.870597329 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055413669 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99887323 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999145516 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.545320605 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.500721208 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.002861919 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.673900642 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.005324991 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13895618 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259112284 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.329313947 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12484883 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.696793823 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.346395565 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.105427575 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.698516023 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924376783 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.998703384 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.937857049 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99956724 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999534063 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003217517 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.186742196 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269477563 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29470349 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.445117625 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.059373449 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201033776 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.609135428 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.028205334 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.998628378 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003637853 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.002581571 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.998911397 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.495037001 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.540362187 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99997196 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102673537 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007620518 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127463441 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.009659178 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.925588578 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.00228595 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.001401378 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452407291 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.097167016 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.958964145 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.274552665 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.734531829 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19445761 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047485995 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.011417127 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005160531 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.66191474 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.111340059 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926620969 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495503196 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114352597 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.619400068 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7461806 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.564274887 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290812954 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306222354 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.316003942 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.06622951 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.217591102 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085338217 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056646 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090361904 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936733783 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.925776959 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.641711791 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327513369 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311737125 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011934433 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217774606 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615297625 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30110619 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031570892 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906843709 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378530015 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974134 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018026478 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.474141072 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18892569 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082721948 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004513558 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.951235631 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321299025 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035730983 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.703923533 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016438026 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.353547022 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442379183 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.234924359 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.340415401 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213228092 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.010022738 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345082795 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274631726 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120169492 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008007877 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.980105334 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.222802539 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583628564 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.864639196 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008937231 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.196679909 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37159543 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.902528621 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.005443938 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.1954311 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340878441 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003336411 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.3042034 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360828122 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.098461177 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05376412 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22851933 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.737897736 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375502338 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.544973302 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.472980337 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014397419 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.930590908 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.706030932 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.207008732 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.004196014 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969280463 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208470064 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231109488 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680861517 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225833121 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247770757 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.015604392 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266121973 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072856877 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.10151764 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.272953438 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.440535446 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.242414098 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230401325 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560284797 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.223159281 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443160992 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.147129935 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.006466293 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.211177728 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222590774 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218003266 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.344511757 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164637762 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.716043158 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.009452199 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.212610359 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303753283 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062243592 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.331085666 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.176500647 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.090020541 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0126442 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070372757 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01071681 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015894206 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.335273411 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.525685343 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.02127784 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083857587 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.002776423 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.565465603 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.014579777 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.011090333 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268580758 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348467509 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330038181 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985321711 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.008280715 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008615189 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134670692 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.932274465 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012632205 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27813283 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.010545505 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450173489 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238231227 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023240849 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.280117903 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.394887869 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.728146448 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118432813 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013485852 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210872777 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.32155524 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.262813693 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201211392 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279753045 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330059307 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.034146535 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.335537234 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248958341 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011595315 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 3.031065453 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011074982 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128322815 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.211187936 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273085503 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.510990214 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620446208 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346074407 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.089723759 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012272617 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.678872005 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350607005 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272405909 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.055980357 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074227159 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015362067 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442682189 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.811798082 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140610492 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.866516506 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936392809 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.018455879 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.29106929 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.252041956 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.719742458 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014439392 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284832083 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308674406 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276013914 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.056092612 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.904573995 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225437034 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011776725 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.017122265 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230061406 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22518805 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248622914 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013441268 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.011421191 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.816754287 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937039419 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.012688496 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054663741 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238395999 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029113638 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.52498678 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.711213404 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277744619 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052768823 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014086637 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.276382426 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.514808496 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.542928608 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022609017 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221776886 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.950032895 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.392369952 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.012331768 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466237144 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.395451682 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.013766939 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.580379775 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.338928175 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282421215 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.945516429 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020179906 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225701244 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.945044656 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.01230452 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014315484 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46065598 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324127604 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.749328389 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.568197883 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.015484493 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.015279918 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.508214625 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123781889 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.555168692 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.107742329 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031155329 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.532762534 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.714856875 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.299519111 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.256956172 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.608333183 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.731137461 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.013944364 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.011211395 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.015356674 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931120062 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.199077733 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.199536816 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291772617 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039162563 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516075367 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126661053 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.35522379 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130061768 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218824754 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133902741 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535351937 seconds)
  done (took 1730.005943186 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.034181426 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.068735386 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.104747473 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.064542785 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.042621437 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.057832227 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.106589251 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.115163204 seconds)
  done (took 58.5298719 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.014384781 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.153172265 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.018187663 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.015601156 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.029267079 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.014124152 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.18662916 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.029396395 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.020699444 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.020713043 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.015272447 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.016005784 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.940923899 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.03780007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.031006437 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.019116752 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.019426225 seconds)
  done (took 77.588886755 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.022812765 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.153841257 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.054871717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.016858108 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.631464376 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.017075601 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.336070665 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.083845406 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.049733063 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.236901458 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.313477724 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.067120804 seconds)
  done (took 91.921182157 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.030239997 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.018933607 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.018641713 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.018290254 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.018949055 seconds)
  done (took 12.050620688 seconds)
done (took 2259.990657524 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.247407761 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.074659465 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116002078 seconds)
  done (took 6.127576617 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.16407806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.209535616 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.322354923 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.089236982 seconds)
  done (took 10.72941878 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.325731494 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.382187129 seconds)
  done (took 6.645165549 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.33528489 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.049006716 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.393156643 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.019485414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.020958955 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.025096259 seconds)
  done (took 23.007573386 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.018759201 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.019027651 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.018682837 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.019203642 seconds)
  done (took 10.013631555 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.016615531 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.731906435 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.020254038 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.030154495 seconds)
  done (took 21.736420815 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.208836549 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.134570356 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.218568498 seconds)
  done (took 8.498816191 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.207146342 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.237901781 seconds)
  done (took 7.383793516 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.166967715 seconds)
  done (took 4.107142907 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.047395648 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.2884818 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.502975946 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.526330828 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.594319397 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.8435313 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.349177317 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.240962411 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.449448687 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.460191627 seconds)
  done (took 26.240653453 seconds)
done (took 140.452836788 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.390312565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.048114103 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.22046947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.406275469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.349121444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.220357225 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.2413745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.430596672 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.092415546 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.063146593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.3724072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.257468946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.185587387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.040754311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.193540131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.041894977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.357259002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.386029189 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.090052052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.347774112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.254457271 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.022250354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.218303539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.039061986 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.364126052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.171231609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.563435271 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.043618097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.235869734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.580851672 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.174969105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.490670814 seconds)
  done (took 173.835278162 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.023866334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.024805191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.020967271 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.022051238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.541512087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.022625796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.023250005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.021415794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.459523294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.456755612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.022819451 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.529334169 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.023721401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.021300375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.025654015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.021588145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.640652996 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.02405297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.023482541 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.021308294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.023269987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.375327134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.023318514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.376993509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.627088511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.023149768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.022502773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.023186161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.021607469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.021751573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026456178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.023181675 seconds)
  done (took 214.50163825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.963603151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.024544325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.025693866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.024440984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.029023655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.027925565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.025231306 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.023507419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.626754883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.615468371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.02500933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.024947762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02724913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.022734739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.026654643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.023788036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.025028114 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.002316162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.027020536 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.02579419 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026461979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.755116346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.025972162 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.779098396 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.024698233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.027605544 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.024396495 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025069627 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.024742612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.026332662 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.026902463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.023997248 seconds)
  done (took 225.35323172 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.26297841 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.026827205 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.027389753 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.935453634 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.02790487 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.025764943 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.020598695 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.274322099 seconds)
  done (took 20.547028042 seconds)
done (took 636.187750181 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.404218324 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.243598941 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.188625386 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.053140108 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.302301754 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.097632811 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.046639612 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.11238908 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.888108297 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.125371121 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.685890442 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.069222935 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.780969229 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.075702013 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.149058397 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.10545033 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.598162949 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.701690852 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.168898305 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.098932244 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.208977221 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.987084811 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.127974851 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.926385493 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.703242347 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.031363357 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.117874532 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.605459152 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.060879915 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.184453242 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.731723798 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.380211376 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.063895596 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.047790762 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.100573078 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.082413551 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.304254117 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.060425643 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.153372486 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.784311795 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.130107074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.789412072 seconds)
  done (took 109.424696304 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.037220758 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.033385737 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.032578636 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.033256531 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.042198469 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.031986131 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.033228846 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.033016137 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.032922602 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.032849089 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.032614564 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.042744795 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.033640715 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.041998334 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.034431354 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.033456958 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.034334885 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.042511548 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.032984683 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.034173745 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.032523103 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.034470946 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.035255369 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.035437941 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.034102757 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.03412169 seconds)
  done (took 54.87553276 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.029637895 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.184246179 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.27185828 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.054538975 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.029583814 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.032621291 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.04723149 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.035268848 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.032506698 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.031869514 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.118735281 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.038894951 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.050331466 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.275123255 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.049974654 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.030194967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.031445693 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.032127194 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.193556277 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.047658045 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.050551098 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.03644925 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.049980898 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.046739399 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.033809023 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.032054828 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.034143029 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.495439409 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.043196743 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.120530923 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.080168751 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.054975229 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.422849755 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.283395251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.087532029 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.040551306 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.031353879 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125226328 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.039057051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.03188277 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.050187825 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.03723167 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.270734155 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.559981851 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.048122612 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.032414602 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.507429744 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.134437614 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.073969118 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.044235492 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.275114562 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.05085149 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.035857608 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.035168113 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.070779893 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.040628775 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.033914625 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.36841311 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.047168474 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.052038324 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.040036265 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.034796793 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.200421912 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.043172389 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.188775131 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.043449681 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.041882216 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.036061153 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.273890105 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.051475235 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.572644116 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.050041177 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.033886248 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.123502597 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.194174052 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.532953396 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.048434184 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.202468779 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.44065152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.059692238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.043122762 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.488956929 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.063632796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.043109162 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.035446775 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.035837624 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.03422765 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.079299568 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.051348153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.502818357 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.576532056 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.38874316 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.062609214 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.054048027 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.037155479 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.369415514 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.045474272 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.034998776 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.268215429 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.584468157 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.051403625 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.043226651 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.552510395 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.054070513 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.053790813 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.044387148 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.280026498 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.051965936 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.080125875 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.035613413 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.042667935 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.038161494 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.054981863 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.044255174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.0353592 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.545462751 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.145980128 seconds)
  done (took 251.645401789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.034991546 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.037973042 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.036312375 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.036919692 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.033995638 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.036831559 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.034739094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.034537856 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.036482674 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.035263635 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.034247966 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.035835366 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.037189194 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.041352512 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.043517668 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.037093428 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.640110471 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.035612787 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.035250734 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.0359773 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.679940065 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.041335166 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.035603316 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.036625051 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.037272962 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.037820579 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.044459337 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.041377853 seconds)
  done (took 172.246495181 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.037643465 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151487258 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.056859614 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.066547096 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.046362649 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.038457683 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.134852262 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.056133293 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.043916324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.03735532 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.037091095 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.09808674 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.04890096 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.135868608 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.069442229 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.145802862 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.143579012 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.04575563 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.038695528 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.037921751 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.067134782 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.048708111 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.100235519 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.161659211 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.056466943 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.151511091 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.055748245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.038992556 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.03876193 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.151327908 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.055739234 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.101329539 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.067520148 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.059456751 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.157561485 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.154510249 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.144374129 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.144929428 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.047305109 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.039776672 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.039904208 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.039905322 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.153317565 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.05731258 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.040419005 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.155067336 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.057935428 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.041425388 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.040423034 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.041200791 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.054460536 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.060283498 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.106375991 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.1692189 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.076470039 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.065823781 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.138504581 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.165463323 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.042071233 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.13830763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.050244229 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.154156649 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.060078576 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.043336101 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.042709408 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.044896516 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.070311329 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.148143008 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.147129136 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.049147856 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.139246391 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.077512767 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.05093123 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.042784353 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.044815452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.154157063 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.157198074 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.077683238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.07928941 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.07419826 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.05039628 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.041393781 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.042890974 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.059552677 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.049467476 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.156356009 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.157608774 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.04887394 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.044724273 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.043138091 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.0436989 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.067758915 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.164268571 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.07832062 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.148964024 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.109940131 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.115334468 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.055332263 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.056654704 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.048290805 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.105760834 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.056253009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.055081467 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.341362443 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.103858713 seconds)
  done (took 220.911091876 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.438973928 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.091097187 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.098851955 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.368497955 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.409845409 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.252087842 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.088374879 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.0949498 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.111686064 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.273355961 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.167299784 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110364293 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.079349193 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.067344802 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.091728404 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.111946587 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.100307731 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.425952769 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.311611838 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.277226076 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.083198566 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.391117473 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.411682542 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.667738956 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.138915982 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.491214295 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.679947689 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.227174013 seconds)
  done (took 67.030218856 seconds)
done (took 878.080634421 seconds)
SAVING RESULT...
DONE!
