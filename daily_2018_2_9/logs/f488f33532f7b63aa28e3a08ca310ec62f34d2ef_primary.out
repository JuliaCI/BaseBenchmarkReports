cset: moving following pidspec: 28546
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.146879329 seconds)
loading group "string"... done (took 0.532631064 seconds)
loading group "linalg"... done (took 8.585868776 seconds)
loading group "parallel"... done (took 0.162950447 seconds)
loading group "find"... done (took 2.446448469 seconds)
loading group "tuple"... done (took 2.045027476 seconds)
loading group "dates"... done (took 1.373933869 seconds)
loading group "micro"... done (took 0.189594169 seconds)
loading group "io"... done (took 0.50170262 seconds)
loading group "scalar"... done (took 45.649565992 seconds)
loading group "sparse"... done (took 13.251701861 seconds)
loading group "broadcast"... done (took 1.132488643 seconds)
loading group "union"... done (took 8.924849155 seconds)
loading group "simd"... done (took 2.976107102 seconds)
loading group "random"... done (took 11.275302767 seconds)
loading group "problem"... done (took 2.171933901 seconds)
loading group "array"... done (took 23.182670085 seconds)
loading group "misc"... done (took 1.05440401 seconds)
loading group "sort"... done (took 3.718863439 seconds)
loading group "collection"... done (took 17.7898769 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.767805207 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123819098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203099415 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.221988866 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.268718174 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169905075 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.151490419 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162342346 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.646241744 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.191126308 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155665883 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.367999934 seconds)
done (took 6.118315244 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.307753804 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.064152097 seconds)
    (2/2) benchmarking "String"...
    done (took 0.19452332 seconds)
  done (took 0.903114247 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082008497 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.16396496 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112085002 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098371933 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098045075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113150313 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.099531644 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112893806 seconds)
  done (took 1.435205973 seconds)
done (took 3.362991471 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.493577653 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.944142972 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.582509058 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189631442 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304786682 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.310452435 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.275493427 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.234791133 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095063097 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08827173 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.260438669 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.46893842 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428218217 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.982277972 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.072816563 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099138277 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.163447596 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.844629872 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084937294 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.126707106 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506221229 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.218470701 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120491179 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.110561595 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192295371 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130868839 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.145869671 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109926381 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.74095618 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137283434 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.21165527 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088396267 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.142574358 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.172066022 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223996848 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.116069348 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.755282046 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.204535534 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099992109 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105548466 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.741415314 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.128699429 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.213249997 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109467787 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.073756833 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.176343355 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119055914 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084716193 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098689674 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106586562 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175783095 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.50362995 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110850921 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.200115499 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098558296 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.761670368 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102238074 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.289713781 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.131402693 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112731179 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083021266 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.095288143 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.177348299 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.104701278 seconds)
  done (took 21.041434642 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.194671387 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.211238184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100572054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150637292 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148593955 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087544807 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09431403 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100677047 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120226324 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.201690673 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130370567 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.217482045 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081335436 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.11225439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.186887743 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.239917667 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.117640981 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127648115 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095668228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.118429262 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133394406 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100777954 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.116759324 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.102538143 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.176627359 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209464255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114979511 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12816517 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095469237 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.104175584 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14812229 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153948222 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097588355 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094743206 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.197364167 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113027627 seconds)
  done (took 5.582200949 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.238771503 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10909734 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.248776819 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.219029821 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.194429031 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132140986 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.201322623 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.182093001 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305720212 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089309543 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.272521918 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169177637 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133173588 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111432727 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100741243 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086034359 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084810235 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.849568005 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158060882 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169109417 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.192571359 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117376039 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087932388 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.728387651 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10880847 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089841219 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115746582 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.070412315 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225633123 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097950767 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.479949312 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088211457 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1208042 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13391596 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201522262 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128111849 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14260104 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099353021 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10648183 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.198124681 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121876232 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083725844 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083474789 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138406537 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136612983 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097876999 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125654664 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1395692 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092374974 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113129274 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.151472582 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199367501 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.167687127 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107035145 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281128413 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112494014 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103574154 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.114689705 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.861156617 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140072788 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.088590984 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100641384 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099973539 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083897419 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.833606271 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110516213 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.509528172 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087026522 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163833793 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102034995 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12104145 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091294522 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107129233 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113097268 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090249549 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.107699134 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086085545 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.090710089 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.102966778 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.095078645 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.132631097 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.091663891 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086111738 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164806629 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102719041 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109927857 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13114329 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094630751 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.106033642 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118180617 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103400041 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.093290434 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207331591 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117835753 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089941834 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117636926 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118395559 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.148449961 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092665854 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.317382245 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.089055443 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128230776 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10621957 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131878745 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102447008 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08644519 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106127696 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085242235 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.087138035 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165344388 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092612343 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086960915 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.108965731 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09975074 seconds)
  done (took 28.9119751 seconds)
done (took 56.17059125 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.801030928 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081685085 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103859806 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083086497 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081777161 seconds)
  done (took 1.8520772 seconds)
done (took 2.538814699 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.188293763 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.268625152 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203037895 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.133142424 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154048704 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174109967 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.156369023 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.174527992 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153463905 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.173810038 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171550146 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111275261 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196549855 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.171577489 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125854098 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.190876429 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.108318211 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153472692 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.109073673 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.177009763 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.108059752 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091241949 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093860077 seconds)
  done (took 4.28968621 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110048949 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10554134 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.108912548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127799844 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092114153 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109247749 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125938006 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113256111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108013702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120524847 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094071229 seconds)
  done (took 1.909540475 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106313074 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103333337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098728654 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123076357 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091719527 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105488182 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123156625 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114201057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105369324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119652324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093327673 seconds)
  done (took 1.879105572 seconds)
done (took 8.762089007 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.208309892 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.940079094 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.186486284 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.249926956 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335075049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301618519 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.606209417 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.206041838 seconds)
  done (took 15.834558775 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.224755725 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097404708 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09947888 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100508855 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.114838837 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098107335 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100797042 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.115116584 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104847882 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102217202 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.112276235 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101892216 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100022211 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.116632271 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103003648 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097963401 seconds)
  done (took 2.535459989 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142343299 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121676242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.120613119 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106762654 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100634683 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.122522617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108385674 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.120446086 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101101526 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101783445 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.123584397 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105894803 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103812875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.115595376 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104798006 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12359886 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116399685 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104907764 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.122413986 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.121254685 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105969387 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102583875 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.120967398 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104936446 seconds)
  done (took 3.481850912 seconds)
done (took 22.546376591 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156637935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105842078 seconds)
  done (took 0.962585319 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.170821431 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.189482882 seconds)
  done (took 1.064952071 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118652103 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096572665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1451047 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110878449 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113353553 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097689834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122456517 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114316549 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098100153 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097639804 seconds)
  done (took 1.825656099 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.101764619 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10119638 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127639182 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16540806 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121837784 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100551455 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101798951 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117672724 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.102897032 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.098706571 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.119034303 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115134683 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10094253 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.133277233 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101805909 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118239608 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107182066 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099880284 seconds)
  done (took 2.745324838 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098092453 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098754168 seconds)
  done (took 0.909444863 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100152797 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097634247 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099218553 seconds)
    (4/7) benchmarking "year"...
    done (took 0.115901307 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096786644 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09557177 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.113773661 seconds)
  done (took 1.431841961 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.524328464 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.24107743 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371547353 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077086009 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125887466 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.332717522 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108076485 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07682615 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096568385 seconds)
  done (took 2.691520201 seconds)
done (took 12.337154482 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.099147184 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.211887335 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.604028458 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.135531779 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.098419361 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157202252 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.346768613 seconds)
done (took 2.367160475 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347072683 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.182021275 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088393341 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098066603 seconds)
  done (took 1.425232681 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.089238114 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105164385 seconds)
  done (took 0.913476536 seconds)
done (took 3.056521469 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117894791 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098027654 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116108009 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101040171 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099890953 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116081996 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102117814 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097465908 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.116738101 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097806377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100003982 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116035322 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097835519 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100496512 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113596442 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.22369994 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099570596 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113703095 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098564119 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100007046 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115536612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098624262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100372939 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116490644 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100154601 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09939542 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114586975 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098067376 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099166061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.116676654 seconds)
  done (took 3.998574314 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102136751 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093560583 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094798937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.121414589 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092868935 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096279825 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.110152758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096998961 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096840836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.111837343 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098642543 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095245544 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09493112 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113811612 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097563517 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098637392 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121537735 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09611458 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095537885 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.114083603 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10074919 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095487108 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098890261 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.113745577 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096583885 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09173735 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.113161938 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096544761 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095666712 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.113171802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099919676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100446295 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09534767 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122639353 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099777419 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096159382 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.119644903 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093404687 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096923216 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.109933604 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093973066 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095240365 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095430033 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.119177418 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09656342 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095729393 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.114095107 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097593241 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095977116 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.115404046 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095042505 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096106745 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.114534957 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098525164 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099552186 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09230247 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.114434565 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094277516 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096826842 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.112391868 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09359729 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092794162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099881815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.113793482 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111437199 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.118429976 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09774603 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098254252 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097246157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.118011467 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09970686 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105980069 seconds)
  done (took 8.095913252 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098431569 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096615153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095053851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113436487 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096989473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097146296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112361201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09697056 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096760217 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096011458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113749112 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096832495 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096588308 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113520568 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09726554 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096205281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0960233 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114109573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097146157 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09628733 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114024394 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097119558 seconds)
  done (took 2.956447036 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240140246 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10331298 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144913649 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12783331 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113626765 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.126475472 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101082195 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101839572 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118445067 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105929711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105280972 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11875342 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114661644 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122399716 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10821371 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107354659 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118855471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107287047 seconds)
  done (took 2.915539196 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09897208 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096972822 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096266815 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114652425 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097179074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096541489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114173716 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097339855 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097122673 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095527433 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115875281 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098236041 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096512863 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113557951 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098492813 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096222037 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096761702 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113602726 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09766092 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095967814 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113863574 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097227394 seconds)
  done (took 2.969393083 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111778193 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099244421 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134342001 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103365693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097303904 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115336741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10592361 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099291865 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.122113468 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099665237 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099812076 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.115206242 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.113643437 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099582558 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.120713082 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099499465 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099993329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098041388 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117631022 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099895175 seconds)
  done (took 2.884952618 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.189989797 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132752373 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114562179 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122507476 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133503016 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116042725 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.140762137 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114898319 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113990593 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143342821 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116066482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131793822 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12439983 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118956596 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131878207 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123588889 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138529708 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123353997 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114248176 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131494858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126181982 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.130688828 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123523925 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113946226 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132303215 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115860189 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115032385 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13675811 seconds)
  done (took 4.305448474 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110428502 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107561167 seconds)
  done (took 0.951222597 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100521673 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100430924 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.098781338 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118083337 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100896385 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099194607 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116595477 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101254465 seconds)
  done (took 1.57344663 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.189281348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.212082684 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.122651886 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10970126 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.211857241 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.194436741 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136303992 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101376597 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.116576289 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.091751788 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.204830221 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.090540428 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.117500746 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095170048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.096361236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.123162157 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09953694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106118643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.124544182 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100539585 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103181076 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119668809 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099838621 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107629376 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.111175567 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100863119 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100235102 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.127363371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094629846 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.098459599 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.115384164 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099455795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100716027 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.120342383 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10018726 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.212425092 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103978967 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114170126 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100607881 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103242481 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14828037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100718409 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.099213769 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113615114 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103205107 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103030169 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.121030614 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099793864 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.091483812 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.110440587 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100623266 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094033175 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096969282 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117022304 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.098473318 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120982093 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102186185 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094772233 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.093924664 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.112850008 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.098451729 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093482226 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118391407 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102184915 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098431219 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.118048399 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098253457 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098742207 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.117372849 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100961438 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096963079 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.131527163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.100753032 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102219463 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123487688 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100314079 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094383503 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121962114 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097715171 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097607794 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.121548956 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126442712 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099014826 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112018854 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.094635338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105351443 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.120129054 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103045719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090917691 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124907939 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101770439 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099668664 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.110057463 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097237828 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.093553557 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.119712912 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092436459 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098185769 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.117271452 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10450428 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104326401 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114735526 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100808242 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104180738 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122607964 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.099487271 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.148288235 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114885295 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.095675671 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098802791 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123458039 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093698041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097134433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.117893201 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09611545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.094031964 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.123073288 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.100094839 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100497311 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.121689875 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101334521 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.100442593 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.120070151 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099310305 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095715922 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.122554371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108730388 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100069746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.119992944 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.100699242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100720943 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097334846 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.122293274 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.096541037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103116832 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1155333 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099338999 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101113505 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.124277905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.100360153 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.093273057 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.116343381 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.101648925 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098061597 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.121672501 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.101225223 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.094131524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.110926334 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099729851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.094014715 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119622292 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108527519 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093621233 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.121482527 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095757008 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106737056 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.116240262 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10529701 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101298292 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.122895123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104551496 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.091485105 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115017856 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103298891 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100011866 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.114547091 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100458846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099384955 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105557294 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.111551778 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103396938 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090498306 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115424802 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10539692 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100418 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.12171346 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.097530744 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135488602 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.130377622 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105232189 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097443059 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119065728 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103494295 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.098271148 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.123138408 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106410066 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103776048 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115882658 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.098854212 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104460472 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.114638775 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.10311827 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097794037 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119205305 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093478849 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100820567 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091267486 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.123517314 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101958911 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103451673 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.12422775 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102999146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096992244 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127609632 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096369386 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103762541 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.112697752 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105030422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10880636 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.126037263 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105664192 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09949437 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116140615 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10131222 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107410721 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122131739 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100051079 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100323427 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.11239919 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.094321549 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104587107 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.121610919 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096456316 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100118483 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099966638 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120730827 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097109645 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.091649054 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.123523672 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101872866 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096492767 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119259075 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096648613 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097020248 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125746764 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.092900189 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095260278 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.12100325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105048648 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099434203 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.119700516 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103663419 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104478869 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.123362311 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103805801 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096436255 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.127375768 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.098137726 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099618967 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.11556667 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103168083 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.092665923 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100713414 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.118864236 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.097254761 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.094884028 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123186637 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106166762 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104171087 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11742885 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105087642 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105904825 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12576945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097723524 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105394902 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.115312826 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.093631625 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.095835464 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.112802873 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102678836 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.095705332 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.123805798 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097805739 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097889518 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.123521294 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102593329 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.096397081 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.124249337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111013176 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.094406363 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.113735429 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098405302 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098364119 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.115521572 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09755584 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101510621 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120465695 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104819027 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101368013 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.118081183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101764211 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105476258 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.116032184 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106967367 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106895047 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.127552985 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096097113 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104640616 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.095915636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123708743 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.094017589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098736197 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119672898 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099500295 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.096242856 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.117546167 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097107792 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.092422157 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.116405786 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106565078 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.097697146 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.124333549 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099196935 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.096942586 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.116347337 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097024661 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106066746 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.118199821 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106581301 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101104513 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.112706887 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.094931437 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105419917 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119729366 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107024649 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094431342 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103287543 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12696194 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10474977 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.111763256 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.128626828 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109189121 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106304929 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125585643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.094543959 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098076392 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123987896 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101424637 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102955583 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.123062958 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096406126 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101684023 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.126712287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10234826 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097777896 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113973787 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102009465 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10665726 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.123565517 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10437121 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103130498 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101014863 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.115714603 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104362704 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.1057544 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.120760774 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107375108 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099746383 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.124323681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097740632 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105667223 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.123256206 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.095589209 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.093134944 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.117081685 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107461676 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094100372 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104226189 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125740731 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09849088 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097788324 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.125291926 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097066428 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102716877 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125608806 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.099326938 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108663614 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.122632013 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108734034 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105742779 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.126633753 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09495903 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098780348 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118622061 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108019917 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09825977 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.125659259 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100645304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105795518 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.123012009 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105876962 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106164006 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106064558 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.114664787 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106863515 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101955687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.123732247 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098051036 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098066236 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.116232755 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.100422581 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106743379 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.117672577 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109272556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104758511 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.119064928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099398629 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105868982 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118823409 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10755565 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096710636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122249243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.094241828 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102451153 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.119205814 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10860234 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.096610929 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.115087912 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106149591 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105665335 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12439388 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.103697557 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108255016 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.114607532 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095653374 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104623261 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09674193 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.130630715 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102929382 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.098381732 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119771749 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10385597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103144603 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128221076 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095816315 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.097277585 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.12104814 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102990233 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.099009551 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.115906854 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105288236 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099126702 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121963178 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.100156593 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095306344 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.118833751 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107844686 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099127802 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.116495613 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099220448 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108547232 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11953532 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098546142 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095198909 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125870038 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104097371 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108610968 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.117459868 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101663859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.098220231 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103401843 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.128821172 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.098745966 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101827866 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.118955683 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107728706 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106775683 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.114709014 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098134092 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110739355 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.127314348 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.102663526 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104357414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.120318379 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108589318 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108662904 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.124409351 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.095378998 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095225556 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.121071522 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096021016 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105423157 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124809683 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.100454373 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.098635128 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124738581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106358006 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104489683 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104270771 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.116467005 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10896877 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.097759187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123563222 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096274934 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095629038 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.124376966 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107136525 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100289938 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.121873946 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.104889482 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103568503 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.115486631 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.100728462 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.103874039 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124984722 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107937775 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100830931 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.098955508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.124927964 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111564182 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103365304 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.121278015 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107674608 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107540514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121148484 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100752573 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104687245 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.127754196 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104525063 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10765653 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.119828807 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10049012 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109426994 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.128854692 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110256283 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100091655 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.116103499 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105844241 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098778667 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.116798476 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.105453962 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108969759 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.128991578 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10130988 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098996261 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.131011322 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107174941 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101952198 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.120086011 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.099361271 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106397483 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120123063 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107375962 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098294166 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.130081857 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108261524 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10773434 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.130134834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.096174188 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106198981 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123539142 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110943652 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103767873 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.096458207 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116916314 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.104900435 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108043601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.129482824 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105954873 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105959717 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.126287758 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103126154 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10146542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.118894621 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109307111 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107687967 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.12327201 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103713932 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101488224 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121799942 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104002059 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.108317249 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112074595 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.122723478 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112306348 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105977931 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.121083099 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09916036 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102553105 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.125347881 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.102898185 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105951785 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.118813635 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097780833 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107196093 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.130038968 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101471295 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109306674 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.128766 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.100312444 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104397682 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.130444926 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106616759 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104031494 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.122181169 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10608645 seconds)
  done (took 65.653038947 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151482886 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109981677 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125422801 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104741105 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121286171 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126139259 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104691768 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105167639 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126480863 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113402487 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104642158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125684692 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119348488 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1446026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122322037 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113706862 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124748749 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105894946 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1048263 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12648915 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118005155 seconds)
  done (took 3.289059827 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105089106 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104418144 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104455115 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124396416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104640186 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104682821 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123467535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105123727 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103896091 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104609087 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125598656 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104909049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104408888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.124046814 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105794482 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103852928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104395505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12484507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104361183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103540033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12532968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104694086 seconds)
  done (took 3.211114984 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132739508 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107459053 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102519026 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.125148592 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107527764 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.104752389 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.128746543 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.104766661 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.113468776 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.121951169 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.096880761 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099987133 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103199767 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.125524607 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.098330652 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105291348 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.134708106 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10887169 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108904657 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.125806601 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.096222227 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104964503 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.125914235 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096919758 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109227019 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108529777 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.129187051 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107896933 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.095412921 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.129045025 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106029337 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097845434 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116097769 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.096295452 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09535089 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107349901 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.129790984 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105807907 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104834738 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117468023 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.106093778 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109032605 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116234542 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.105428444 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10538931 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.098820029 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.130130189 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105647397 seconds)
  done (took 6.107044945 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.134081871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161909591 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.108389249 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.132604656 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139836884 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114721791 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.108532765 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134768728 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107904137 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.129781038 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121598129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119089861 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1310612 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112557147 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110353434 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131870856 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110739319 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108090455 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.133867681 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108647413 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.133801916 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111360396 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117288728 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.139198826 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111752621 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108809764 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129804913 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112466552 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11652747 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133982328 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113042332 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.133417724 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119462037 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11145366 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12974562 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110437418 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120279339 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.130368451 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.11046907 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106845561 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.132016248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112803565 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109419991 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.14187941 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111626421 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.130899744 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109959697 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107191306 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.137055635 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.110258809 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11528421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.139661302 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11136075 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110162921 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.134016458 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119170679 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.129431287 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108775226 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111053025 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.138991661 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107875736 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112541506 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.139782611 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109980903 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114733103 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142421458 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110915791 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.132507997 seconds)
  done (took 9.148644104 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139843533 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111645525 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141426523 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.373791912 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11228101 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.135060845 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112722848 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.133047277 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11338783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118101464 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133330837 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.244273987 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115368034 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117890679 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13428393 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113859817 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111910667 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135717144 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114552946 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111589449 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.134112469 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121006818 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.133211561 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121958242 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122930283 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.131170743 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113946171 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112093835 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141303056 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113768167 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143762398 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114064226 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111953759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141766239 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122295064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.133900776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107971761 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112331819 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.133493693 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113894545 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109753398 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142326449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114569038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109835136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13518126 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112603124 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119558221 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.145437586 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117457396 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139822581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113827298 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.141072273 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114557368 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113383851 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.142476666 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128493126 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140920371 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121206343 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112132954 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.143036855 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122597972 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.148312695 seconds)
  done (took 8.892623998 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110239337 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11000904 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.107002895 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.129745293 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108396106 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107608944 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.129532408 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10936019 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109065291 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108525571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129468021 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109171706 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107586364 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.129937632 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108564717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108123792 seconds)
  done (took 2.625619735 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125970823 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123104371 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207339641 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110645464 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.130973299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115496124 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10856016 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.133863841 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107198808 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113987847 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.135288701 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111887727 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.123684767 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.131618115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109015692 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109882942 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.128069825 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112150137 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10822558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.209321235 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11164004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.133418868 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109746893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113583272 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.132262992 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113114332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114428313 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.131840704 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.111056093 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108748973 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.132184612 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115697916 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107069921 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134358115 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110165258 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109959799 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.129055859 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109977222 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110660573 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.130221964 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.111364615 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109909045 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.12959974 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112158996 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.107772882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109201445 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.130213757 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115483404 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109105101 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.132201774 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110516175 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113287898 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.136743378 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117349078 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114916184 seconds)
  done (took 7.494814138 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.121099767 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11025691 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.141185907 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107898111 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110490117 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110019162 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.132201955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110989459 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11084296 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.128822932 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112132461 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109936236 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132800443 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110581286 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110152775 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.131835219 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108037818 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109163716 seconds)
  done (took 2.923259261 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1078024 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108222542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106773723 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.128259596 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.107876085 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106690669 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.127862842 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107817932 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107237101 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107232741 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129546616 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107778019 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106453516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128392704 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107682973 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107388288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106424574 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130014819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107938825 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107204666 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129404513 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10827116 seconds)
  done (took 3.307877217 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120317397 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.2314963 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.114453502 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.240202534 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129510118 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105756449 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113948565 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128561624 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122264571 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.103695707 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.127150411 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105632799 seconds)
  done (took 2.460606884 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137370762 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146617457 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131679012 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111430274 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117386999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13558875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114408039 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112544119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143413401 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123837285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134662241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121593125 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120096803 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144590726 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118177649 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139569371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114795032 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113998884 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132273884 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129103518 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134533025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122826924 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114355551 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13497677 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114457259 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121151171 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143589818 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124682999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135725078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121822318 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117330632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135932517 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121896989 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14626381 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110732749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121108379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135539521 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127253567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138821186 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123216844 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109562399 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139775389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123401775 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140103078 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124810808 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113392373 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14027438 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115018854 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112901003 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155454536 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118910858 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144171785 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118971944 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14215376 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123552316 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1320154 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146699309 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120791112 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139762744 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12496939 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142076964 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119563258 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120772533 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147198367 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117984971 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143879406 seconds)
  done (took 9.289805392 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14920956 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109982957 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136315115 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125354054 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143953526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114682492 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113642398 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135951412 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115320924 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11001566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180416224 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113211156 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145748428 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123449746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113120083 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136184879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11465855 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142366921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111584678 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13274301 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135151856 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121372059 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142622215 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121952031 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123895211 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140929986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114469913 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134336619 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115216341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113234281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140626419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114536747 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121959898 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.132449861 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122879753 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113683245 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135951103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11785755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13427068 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119377085 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120941481 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150278558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113764279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135275324 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125201376 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113314568 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136208796 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111261749 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114417408 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132521349 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125108022 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145077917 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124965909 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141747785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114897987 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114038444 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13466626 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114955172 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113910296 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140349233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123414222 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113152123 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157043981 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11348108 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136245992 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123040432 seconds)
  done (took 9.199327315 seconds)
done (took 164.972360676 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179800866 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.219745862 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.201864923 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16145215 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.099278989 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.166208746 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133482796 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.205156265 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100195983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098532229 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.122680284 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.103111165 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179181483 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.123373945 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101007323 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102270325 seconds)
  done (took 3.117779489 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200855185 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346370535 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.137654711 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103944374 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107302447 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.12750267 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10496639 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107092058 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104639554 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.133202042 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10507945 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100382637 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132252791 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101830646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10421532 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125620324 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111217423 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.125493252 seconds)
  done (took 3.213093721 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123899205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158548651 seconds)
  done (took 1.110337822 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134628682 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.219740573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299451984 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176357317 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12537266 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.144596015 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15517312 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139716898 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195037936 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138811647 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1175899 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.12467947 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.130656751 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.109434075 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.143738031 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103764579 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1314209 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.141052993 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119389691 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.105093778 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.151636854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10850199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.131935908 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121219668 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184435307 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.140305694 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111423279 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.130825454 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107525137 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118504 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.133622204 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121486252 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.137163858 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162644433 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.130117744 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157676271 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.134310177 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106767913 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118494151 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.128184538 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.109604766 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.129445548 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.118768602 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103210916 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.129023973 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113432573 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107747337 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.130485834 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114299462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111689032 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134979472 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11228735 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.179716604 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111518413 seconds)
  done (took 8.132770751 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.915688062 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153371401 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103308293 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.067501712 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150476088 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119073138 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.93253027 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133241345 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259095595 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.932724481 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121212756 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135615743 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248009007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284923649 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284735284 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362747858 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.766197007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117633627 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157486103 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.149858632 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132018203 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124483127 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119263502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450329415 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.105080115 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127758021 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111869196 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134528352 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160820692 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128242667 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110580283 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206457283 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.298889232 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217749376 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106625747 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104124552 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125827485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169861342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296638434 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224605813 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17482983 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102417243 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127496163 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109858549 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140484886 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10271923 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187042013 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177771209 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199378435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132022912 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115158749 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112698076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130897859 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.186208969 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103668274 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36481909 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371220898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127492018 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112222319 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139463914 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276010911 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108148938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241344731 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148512521 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21989942 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106068555 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808883276 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191930774 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106309061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108676398 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131209674 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111524559 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130234307 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165472836 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.427356755 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113097612 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109751351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127057477 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.249986078 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10662996 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104696103 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186865031 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10519815 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134385316 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113657159 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133682261 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173971019 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27932584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13391724 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112082678 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111164521 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136647948 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107545062 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238186106 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.236167943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.185205321 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234207267 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111492499 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.190312419 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192150148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110552685 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19625276 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111638937 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117538853 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131876918 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233511323 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164891553 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108055944 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111516084 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133558334 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14579024 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131597927 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.112276081 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194865684 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487772972 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170205824 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.125656318 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11104488 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112226105 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185116977 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134797104 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267126901 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114365557 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192042 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110822301 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102610743 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1328229 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18944214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114459165 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110877911 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132055007 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116244006 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286498848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229059707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114280179 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253187862 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.202432184 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11024837 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200722378 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133279291 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170976127 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137926263 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110538191 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106062965 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848936135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117095541 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111008118 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13361932 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189985509 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127133061 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109045352 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105520287 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103904552 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821174779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109635686 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104667732 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107831767 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133042467 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111686228 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132603802 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112624868 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188090678 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25421129 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113928244 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132408333 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106807993 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18672156 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10747412 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106755166 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128594736 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108410156 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111994288 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133238808 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109404137 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195880476 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184083518 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240660073 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574444832 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105771224 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12771267 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253083329 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106520884 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331381031 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134853858 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.243569221 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189959596 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104633157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367247842 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.1924943 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209368607 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110073587 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19813727 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105404882 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111595859 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185700361 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105062334 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137569676 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183302404 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11589722 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112420869 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.289964281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107374053 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253428245 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104748476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.195509792 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107996012 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111321561 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35847705 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107295717 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117394069 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18715215 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110429208 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.129776067 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.886682657 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108420558 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114333108 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133696213 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.243380379 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.191222675 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112629975 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134409898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116393959 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188226953 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234638688 seconds)
  done (took 47.936636476 seconds)
done (took 64.338616073 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260038054 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174530268 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.357784311 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154626901 seconds)
  done (took 1.848745566 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262150804 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.170231266 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.245154475 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104508695 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.253544024 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103805948 seconds)
  done (took 2.000719413 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.175973741 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171520066 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148315188 seconds)
  done (took 1.354811224 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214115704 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210894461 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353733982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.239265342 seconds)
  done (took 1.936839269 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.275673274 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122163835 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.133478359 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.229333523 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.245012181 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211945562 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129620931 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180804768 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136078341 seconds)
  done (took 2.553714325 seconds)
done (took 10.54864926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.348616289 seconds)
    (2/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.258874335 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.411554171 seconds)
    (4/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135822914 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.382199683 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.221750369 seconds)
    (7/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.103466242 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.240022819 seconds)
    (9/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.266088659 seconds)
    (10/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106537406 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116295157 seconds)
    (12/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.249541931 seconds)
    (13/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114325463 seconds)
    (14/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.336738051 seconds)
    (15/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.248145129 seconds)
    (16/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.395594902 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142756453 seconds)
    (18/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.261653314 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.271462403 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.32128693 seconds)
    (21/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.257565674 seconds)
    (22/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.133773359 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115459926 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.207087044 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131980811 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.315984719 seconds)
    (27/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.167061877 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.148208449 seconds)
    (29/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.412614195 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.124784417 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.14177521 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130389193 seconds)
    (33/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08912774 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125627596 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.142344529 seconds)
    (36/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.166425678 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151163443 seconds)
    (38/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.279479555 seconds)
    (39/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.148032687 seconds)
    (40/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.139560647 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111035467 seconds)
    (42/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.17661738 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.202356802 seconds)
    (44/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.236899143 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105231362 seconds)
    (46/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205436685 seconds)
    (47/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.201827057 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.136543719 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082734294 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10806715 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.132492357 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.216584967 seconds)
    (53/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.151072383 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.198462728 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.089532602 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11613531 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083423324 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.109607175 seconds)
    (59/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175545387 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.277197887 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.256046237 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.150409585 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.204508558 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.114538193 seconds)
    (65/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.136015029 seconds)
    (66/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088826438 seconds)
    (67/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.149702744 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.162984351 seconds)
    (69/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148845044 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088798053 seconds)
    (71/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.115421541 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.1088335 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084180777 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.084597922 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.202773042 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090259192 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115890323 seconds)
    (78/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195349629 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.123812229 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08917274 seconds)
    (81/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.140257664 seconds)
    (82/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083356085 seconds)
    (83/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116522464 seconds)
    (84/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.219487095 seconds)
    (85/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116605725 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127893227 seconds)
    (87/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108114423 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.135789299 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130547277 seconds)
    (90/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117528089 seconds)
    (91/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.106796808 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137619887 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118528544 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.129499073 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117249675 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08582672 seconds)
    (97/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.097214853 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217766577 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090877649 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194379729 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.157479936 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.138435016 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.135680726 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083655708 seconds)
    (105/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083750001 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108070101 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133676657 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.141151055 seconds)
    (109/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091647328 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108065219 seconds)
    (111/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.141611034 seconds)
    (112/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.178239118 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10845957 seconds)
    (114/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.113785576 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.149168335 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114624732 seconds)
    (117/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.159281664 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086412376 seconds)
    (119/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08966284 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085662906 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089000609 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.11053931 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119241546 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108726018 seconds)
    (125/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.167288988 seconds)
    (126/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089368703 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.122816873 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.143176847 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.164905529 seconds)
    (130/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.08899518 seconds)
    (131/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082706129 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090133264 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.115854323 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090750771 seconds)
    (135/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085873633 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128652603 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.140873134 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129879959 seconds)
    (139/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083370087 seconds)
    (140/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091568322 seconds)
    (141/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.109896081 seconds)
    (142/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.093247586 seconds)
    (143/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083737373 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116414643 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.132917745 seconds)
    (146/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.08376283 seconds)
    (147/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.086612349 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.085487794 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.132876348 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091717604 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085999597 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115582182 seconds)
    (153/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085116812 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.130892758 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10757355 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10930046 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.132972334 seconds)
    (158/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091220013 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109130757 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08598383 seconds)
    (161/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.171874826 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109431438 seconds)
    (163/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118219222 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.131846731 seconds)
    (165/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084348606 seconds)
    (166/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.088603491 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108828836 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.141533703 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.116978667 seconds)
    (170/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.086400688 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.154442471 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092407954 seconds)
    (173/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.089456086 seconds)
    (174/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.122324178 seconds)
    (175/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.130951379 seconds)
    (176/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.119485725 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091138428 seconds)
    (178/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.08359905 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.135162386 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108558928 seconds)
    (181/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085071432 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08500971 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133841759 seconds)
    (184/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116741782 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.128710076 seconds)
    (186/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.107853631 seconds)
    (187/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.138797777 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089086304 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091173905 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133186172 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111159907 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.087591761 seconds)
  done (took 28.213567603 seconds)
done (took 29.077702515 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228571684 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134109158 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116965998 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.115961007 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.238401146 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122960639 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.160610366 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117932469 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.128015455 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.143176547 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.106998417 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129216385 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141233404 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.249194088 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120637072 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.108204675 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.133169109 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12899115 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131906297 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.158385233 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.237668381 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110688458 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12618622 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.107263655 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237442847 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134601931 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117509193 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117557736 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.154592055 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11749627 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118986311 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.133380276 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.134864085 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132145339 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131662028 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117976684 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10700954 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089832773 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.143605547 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118595578 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130139017 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.142187737 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117824255 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108610674 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.142699608 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.116992709 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106949 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.145257557 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107792162 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117144875 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13406383 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.134090266 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115482004 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.130801181 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10705822 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.108879658 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.151808268 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108955196 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129357039 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.130525587 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110403096 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107254306 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142249496 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108912845 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116925406 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.108789244 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143071931 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.119336148 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115973648 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13499812 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108528752 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115783712 seconds)
done (took 10.426363659 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112878175 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.151401147 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.252912153 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.254328541 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.162771616 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125058344 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120705377 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158514063 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121877748 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125047385 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.170395323 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.139619226 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.258159574 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.149457879 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.124984312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119837021 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.145020385 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116264418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.254160672 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132064741 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157601566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124765148 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.133424926 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.151186964 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11319739 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158462015 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.116299261 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11959421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.135461317 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.132275576 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131661673 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.136308841 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116306618 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129980349 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.154549301 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12226618 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.123199122 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.145332911 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113803147 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111589759 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14400441 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127662533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111465198 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.149129262 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120492143 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.152108605 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121383112 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12420708 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113262352 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.144415292 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11267419 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.160518433 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12562241 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12631292 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.150325054 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124491509 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124344319 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.148766532 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116273253 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124080767 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.136836242 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.113015994 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112803318 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156880712 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.115804232 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123714977 seconds)
  done (took 10.103666396 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131764246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143258773 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.147216438 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122984105 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117341391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.131273801 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106678879 seconds)
  done (took 1.820903752 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109081501 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.270578966 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.260677987 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26112071 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.252121974 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.270543787 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131223116 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.107454542 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.171947079 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1181901 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.269567003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325070005 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.145724623 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124053476 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264541825 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.107396276 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.264674182 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.136177767 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123972673 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263631762 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125134054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.168339434 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121641291 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.108561343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264793915 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.136571026 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.313665706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125926566 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144558009 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.123172426 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123359542 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.21228389 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.265876467 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122396889 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116066653 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259445226 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.256672135 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.150059906 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.309955865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112379866 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249562801 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.148958795 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124160104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.124531237 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.150592881 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.249110732 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128617237 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124572922 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14787358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.275151395 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121055562 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.266546976 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120681155 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.147870708 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12111458 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124069979 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.157460243 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124846524 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.27428709 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125059624 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.262379917 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.262381015 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.255344314 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.262758279 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131641987 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26596753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.246115204 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.149563789 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119180326 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123446393 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.2634672 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.149983291 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.12298896 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.252806695 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125550056 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.26531838 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.265614234 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119894785 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.149582826 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112328796 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.120978779 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.136631852 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.254508918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122963905 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11993753 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153329872 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122166167 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123095065 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.140846957 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132505358 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.146796228 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122548531 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128269494 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1487154 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125614691 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.265791949 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119986544 seconds)
  done (took 18.157958316 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111957549 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111441533 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114239721 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.136465458 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112304954 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10987577 seconds)
  done (took 1.642743071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146698838 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123143585 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.157663771 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126448759 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.196086853 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.228956455 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262520835 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144172676 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143341938 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.135066207 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256114235 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.25842636 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.258233002 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126248312 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259164566 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.151550349 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.238469529 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.149926784 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133251015 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119923656 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.149144454 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128763299 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120629479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246900894 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.152549182 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125813409 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116500875 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.16262778 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132269331 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117193269 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.153413133 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124355412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.139799091 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119673557 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262376871 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116324004 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118920238 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.154581958 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126524343 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.123275687 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.261836918 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14879485 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131939437 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126384138 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.145429377 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116701354 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151841522 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118601606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262577399 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126475955 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12652291 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.151470755 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.124449783 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126130069 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.144241534 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118194741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.151670842 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.237832983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.154954067 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116339762 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.150618218 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126254499 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117841715 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.154654862 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.125948462 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.126828281 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.141659987 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126531843 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120887853 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.149547163 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.127738898 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.123821013 seconds)
  done (took 12.08875021 seconds)
done (took 44.721478009 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.622471674 seconds)
  done (took 2.566315806 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.085875448 seconds)
  done (took 2.0326389 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.887898248 seconds)
  done (took 18.867939889 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419551068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.351551727 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0191139 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154986106 seconds)
  done (took 2.895203955 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.097777393 seconds)
  done (took 2.059476494 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.416028513 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279849769 seconds)
  done (took 1.647360361 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714730475 seconds)
  done (took 1.67627741 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.879060332 seconds)
  done (took 2.834060677 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.274252053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.247973247 seconds)
  done (took 1.487003898 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.670195895 seconds)
  done (took 1.632053416 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.057824473 seconds)
  done (took 18.023324727 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26050373 seconds)
  done (took 1.228793766 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297838579 seconds)
  done (took 1.267961912 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.657518146 seconds)
  done (took 4.626078832 seconds)
done (took 63.801033997 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125061767 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127642651 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.150846113 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126424718 seconds)
  done (took 1.485768142 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12895835 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122999716 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.150700601 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124295734 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128914719 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122699663 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.149411965 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.127474982 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121532744 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.150398874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124742991 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12208283 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.150835973 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122864598 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121656086 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.151658263 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127127739 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122351789 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.150730776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125026421 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.144476802 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.151310655 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12754224 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126640777 seconds)
  done (took 4.165279503 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120669093 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11477405 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115835673 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.141543713 seconds)
  done (took 1.463983791 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132307065 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135448799 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.157700127 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13131298 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136590405 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.159859228 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123425541 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.120572807 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149898165 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.134231667 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.138125665 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.162611296 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135285436 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.150535886 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.134877487 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.118666324 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.150612537 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135824645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130600817 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.157308647 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.12599944 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129806677 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.155305032 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133040419 seconds)
  done (took 4.308304987 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200343512 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.135335314 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177298729 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169314894 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180180842 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.122888125 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150867669 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154916668 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129978733 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.131526848 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.150387855 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.171167672 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.154835668 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.127107016 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.12420171 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155265597 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133053448 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127875215 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191687517 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.127423474 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.155977522 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.136386492 seconds)
  done (took 4.28330699 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127439924 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114141505 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.137863774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114114164 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.148373036 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.141767331 seconds)
  done (took 1.763290942 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115065936 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.109116546 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.109992448 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134484754 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113172493 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108659687 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.133447579 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110744038 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110333555 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109072283 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.136324047 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10982111 seconds)
  done (took 2.371301604 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211677206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152494898 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256632281 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397809405 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195252728 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192866985 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289103092 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190585582 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210818216 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143643686 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215038911 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16754546 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185839856 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19115232 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176281328 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162184556 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208294354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239778986 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147058749 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244128916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161124162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208221057 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.221267615 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154367538 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142354699 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195583098 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124385559 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160712089 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172623571 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196863093 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207327195 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156799919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173231785 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191918625 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264340642 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210048113 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299471387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138835611 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202475739 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.221287678 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259557701 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147849941 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223797286 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157379624 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160144437 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196715228 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182763012 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.190655019 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.166448778 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149133739 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213837495 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211099848 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174204402 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169086917 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304415544 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166364815 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145665385 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212372579 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220162221 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206089392 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211524349 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126930707 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203971488 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222562385 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246974713 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147116076 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196906155 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130597087 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195083295 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209917009 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215565431 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191358269 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.195688363 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166002994 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177789791 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198092241 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159725775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240131123 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206637162 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125937756 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182089694 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139566777 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130945522 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223479789 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126996205 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249455228 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136394644 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.215453074 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180428694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184671274 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191774226 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165260373 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194641824 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153794164 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.106419603 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177303642 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161874596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191058548 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132751306 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184457241 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144895356 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130852155 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184125766 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127285553 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202671664 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.139349038 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191523069 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174867165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.166047967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183205003 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178938684 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166198508 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200197362 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225889275 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136583465 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136218533 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249958958 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203453993 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14105716 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201868622 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226775192 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15870395 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139584333 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198241937 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226430981 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148100556 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231441613 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143354593 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168300768 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.143719013 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20552952 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163041481 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.191842136 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132857824 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.197287656 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217581587 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.1334942 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144180973 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216285156 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138299829 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157719932 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142843848 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168672067 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149754615 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154513407 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.172039528 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158701033 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200460631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170154805 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190036928 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138968324 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205880866 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135323271 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.202322462 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152231915 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.151461756 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177633733 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23032074 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134094455 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214249294 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.194042461 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184945387 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205278334 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135096634 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216480952 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132428189 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.153916459 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167022854 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203811809 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166825189 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.221621679 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207022197 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.196189888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.168929227 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180487336 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173646826 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.215866572 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161522261 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172455185 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176335588 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204699322 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124854159 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.156477211 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133479722 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141347115 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163679087 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142070417 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215089185 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195051601 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18031258 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200218415 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142177727 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224364806 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130553446 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193099971 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179582186 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172380622 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21941429 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196274915 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215933683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144690137 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197581385 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12524555 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13118054 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.166351944 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164316302 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171640156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140492773 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174559125 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196379424 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202204362 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153119268 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220939262 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195512103 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234187718 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.126062673 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165483893 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199160774 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198573352 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188243827 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139237509 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.190921154 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196068692 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175648606 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223755757 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173347666 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212709014 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196326673 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.200253514 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134950061 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177289103 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164462747 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171730444 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163908776 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1758616 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135859628 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180269471 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.143503211 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145136169 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218050892 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176869902 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179400578 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186098676 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172876964 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159644344 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145689884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20765378 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150085098 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.136302111 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171085559 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223236449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15385476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185955537 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172832489 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164938213 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321325633 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214377338 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202373129 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14184969 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142354185 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205719947 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160091485 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191804805 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217469141 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146879995 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242103046 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174041313 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173140535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136069707 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179481937 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154832866 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.1698909 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.155648113 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195799807 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.148714453 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219547681 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141160305 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203917475 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180996478 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.179560682 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.153125474 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172140583 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256525247 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174963209 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20597587 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.171275239 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195657793 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187359444 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15750347 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132995877 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136340839 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217898266 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133277836 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211350074 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194972834 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210818976 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17996162 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194841858 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146247157 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.1313838 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201954844 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152978539 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217670983 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168599738 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142330399 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217643287 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13165255 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133731796 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194052974 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322632387 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151596535 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200010728 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110772761 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312864739 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134803619 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135919188 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190585591 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201085036 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138429072 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187815703 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206520299 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14421603 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193750955 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140904244 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206297359 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212369035 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172252055 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208470537 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148546874 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195511417 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159700103 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203318941 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149420874 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.182155003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162128224 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228566427 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207766511 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1373041 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202075953 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17606165 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204537878 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177092616 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17233522 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186179983 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160932597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16946997 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172388151 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129842225 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191658172 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.169089624 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163150866 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176753369 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205205819 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135722513 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159815097 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153096904 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199554321 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146264675 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133832159 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21746109 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.162074057 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190677836 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244009362 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136594016 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201150483 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147838749 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162713842 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145502448 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14898736 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165371582 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178818995 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211499233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13574235 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207360451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170874448 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197081557 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157461603 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176255787 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.269894339 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.162136631 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196672846 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18618173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199828157 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182410942 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179597033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204435134 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153680767 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199530262 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178756444 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227703934 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198618622 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.174770747 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163299543 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149076957 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141613688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.166928967 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154567802 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20273657 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14666151 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.169302663 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172609871 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178211351 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.151604005 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145317434 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232211596 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183614263 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191621515 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22013401 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141352437 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210415897 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209068952 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134120628 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195504106 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17676284 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17618398 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157423797 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138132874 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.171425422 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24733789 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132461388 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164590219 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208386089 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201352812 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178153149 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.166459949 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18286595 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173727236 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181652178 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13005626 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.186062995 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2012867 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141138768 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13195361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20460452 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163696046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.19885683 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145902835 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.207615062 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200825081 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.156203993 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141988954 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317164937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167017587 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230858207 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136480617 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171686031 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151656628 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192032022 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.169349387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205600506 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135460129 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134329605 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.178413936 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162975035 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167938545 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174471809 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2173723 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160733398 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217074749 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138475381 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.291345724 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146415328 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206172016 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120238773 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.162809465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146843488 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139485955 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176853059 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210027602 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223275958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.198879097 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150082374 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170467213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133159332 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135808064 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1950992 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154761994 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203550286 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151605758 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.137012727 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145909258 seconds)
  done (took 87.507330719 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179308033 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.176022456 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189367441 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.245620214 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.218618556 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312825498 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.254075287 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265179805 seconds)
  done (took 2.903348942 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126232923 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165851774 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147036279 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.150732855 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.115540415 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.513231451 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16750362 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126016313 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.196107012 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154367124 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.117967899 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.570108459 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121498237 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154561989 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.15216573 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.115753234 seconds)
  done (took 4.148970298 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.059491635 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549275323 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.066237909 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.312877374 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.268316033 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217783297 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.786751767 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202983168 seconds)
  done (took 12.525947226 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176881974 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.714869799 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.468108332 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.341635001 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.222108281 seconds)
  done (took 2.987654583 seconds)
done (took 130.873286583 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130039149 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129573951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129560527 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.159691875 seconds)
  done (took 1.603825468 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.198546966 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096285869 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.127637413 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095525408 seconds)
  done (took 1.58446013 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394434347 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095944467 seconds)
  done (took 1.576463518 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15318491 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143111929 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169373108 seconds)
  done (took 1.539914242 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141854819 seconds)
  done (took 1.207562883 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122676888 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122400853 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280771761 seconds)
  done (took 1.594758499 seconds)
done (took 10.175928671 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149213871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.936229499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.454305306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139219149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.745985492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405562241 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.43823391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1820174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188552865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.146591383 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149144066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.741938699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.452968895 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.886427578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.437246211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.885858121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701578795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145679973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124879225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117250046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.445446257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117025017 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11714585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145672664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698820867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425374347 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143895545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.898207478 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115039194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.149438166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406959136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115863877 seconds)
  done (took 21.265605002 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157076861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173105979 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.167468947 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118117765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119370758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14795896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127991028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157636577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193420507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144905736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139189707 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116486797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150399466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119187726 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140320672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144390747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.121967507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119101353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.153065515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120166513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137630988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143159378 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120879193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119502859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143501546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141199992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115737145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156443032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117018598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121767223 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.151609612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118699526 seconds)
  done (took 5.49801777 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166805505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182963926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.167810571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154462324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196406279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119211357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.233361774 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155153265 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225425366 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117422477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137737336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.145957849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157227463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.146228031 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142896967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116161187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.148950946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120122717 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124343265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147972694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140171651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115982557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147465892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120189972 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116503717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.170059442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117581663 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128786708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145662934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123319551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.123199106 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14914058 seconds)
  done (took 5.785721582 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132687483 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131884111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.140012122 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.171349642 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126975804 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131359574 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.162633056 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127383251 seconds)
  done (took 2.20546558 seconds)
done (took 35.826063777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141413802 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133757161 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137655721 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.164802326 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.278359006 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.124570541 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13561701 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.155635102 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13331436 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138364705 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.146238982 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.127113348 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136806185 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.127924088 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.276314967 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.166093704 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.284032738 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.281004895 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126042708 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.132868538 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.155699883 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.252519977 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.163496494 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.12681567 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27431669 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120948037 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.271948149 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127182296 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.160719744 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117670525 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.281679945 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128749548 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.156812439 seconds)
  done (took 6.756839085 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.232032277 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.158313852 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.127508466 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125692494 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.126951315 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.156498383 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.266222225 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.126330074 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.125907427 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12473329 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15732918 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21618703 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.164078945 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.122637778 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.129231281 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.146791145 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236912565 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.160822494 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.119237931 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.098611594 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.121529649 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.157802397 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.247810595 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.154315384 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.127009964 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.125200562 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.159163929 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.132485323 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.128763924 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.159209282 seconds)
  done (took 5.720633683 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131390879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139572118 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.175539292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194890188 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15547351 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16954982 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142695014 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136251065 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.178038254 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120380028 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.13467804 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18621743 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136823819 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130447031 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149407167 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136988955 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134800846 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.152491648 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12870017 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136438912 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.169158884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13686055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141129639 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.158504363 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119438171 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126743295 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.161073082 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130579387 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127037303 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.165222541 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121204927 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12151342 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.152615232 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.154881367 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120108413 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.164024312 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140684175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132079339 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.164684525 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153726002 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1213008 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.153727512 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145753918 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.205723892 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122119797 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130631009 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120977783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.165458481 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118273068 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139941391 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.193149151 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120112601 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.169433403 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119955739 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11760035 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126912228 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.150672125 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124278578 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133265293 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.151447628 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140529301 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128087269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161620862 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122807402 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130573141 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.148332241 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.120904269 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122876633 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.176833506 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128705868 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156559034 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.148672122 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132874062 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132332848 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.161078897 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133572775 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11869995 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131036949 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.161704592 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123688199 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131479505 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.153556156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1216119 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135941523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.169461282 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134249852 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.130388953 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.162584335 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122246548 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.120926575 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.168227575 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121208077 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122143527 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.163342149 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12062069 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122775138 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160236974 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130196207 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117306983 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.175062013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123932719 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11868592 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.174455555 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124254501 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123185615 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128570479 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.191899231 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119114207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157278076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132495693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118881811 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.126872092 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.152187006 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118852785 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135195851 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.166516651 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127335053 seconds)
  done (took 17.659260889 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.376888708 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.365953551 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.218179456 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413578432 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.164812463 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.285919374 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.36527265 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.369437862 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.119570283 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184711887 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174308276 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329539609 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.153049993 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147571677 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370567064 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447270814 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.147792269 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.190872942 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.154293501 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.166307971 seconds)
  done (took 6.254061133 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128823173 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155135893 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.171247111 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139396448 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130929438 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.165992482 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.122204319 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.14102962 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.161057064 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128799744 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.122554016 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127090458 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.165414657 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135956168 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134494997 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.181580894 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128059176 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124097547 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.173979336 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124042128 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.106382597 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.175685931 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128594116 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171017658 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.139375214 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12956748 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.147384727 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125922847 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127255396 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128729963 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.154978023 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128443058 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127457676 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138388342 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133333522 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135909179 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15567445 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.124241799 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12544438 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121716205 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.163374446 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.131745849 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127221895 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133375731 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.139719472 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115298871 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.132990193 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.16308837 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111476744 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139266427 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.163465241 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.133933205 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126933426 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.171290406 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.127777528 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.135488147 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.160896609 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.134397705 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124593405 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.150035725 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119189454 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.122061645 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.157947629 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.135607362 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131329593 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.127001389 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.15846445 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120126629 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123621743 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152483015 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.123896152 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.132732398 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1704202 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12969429 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126380106 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.161546372 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.129011767 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099376177 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127967726 seconds)
  done (took 12.043481092 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146092255 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130467092 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.165157005 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.156127857 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131698268 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.154523213 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131370257 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139598926 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134290228 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.171216287 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134158715 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133700974 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.173438986 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130479343 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129638879 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16862462 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132490509 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.188176943 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133730918 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145645626 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.165571009 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125386567 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.131977744 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.161965739 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.148983966 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.130652217 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.177219345 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.132831258 seconds)
  done (took 5.227931701 seconds)
done (took 54.744954401 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.277741941 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.45661094 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.228614878 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.227488722 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.237360472 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.270533687 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.228097506 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.227632698 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.711953155 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.197246578 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.230059867 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.226916699 seconds)
done (took 28.634357204 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.349073408 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.386512013 seconds)
    (2/2) benchmarking "String"...
    done (took 1.566714266 seconds)
  done (took 4.071331457 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.220750244 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.220328471 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464528585 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.219562222 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.220364129 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.222104651 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.226464547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.229988535 seconds)
  done (took 15.911316437 seconds)
done (took 25.661892856 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.247508415 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.517311186 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.485147043 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.201531966 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.222594162 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.233537177 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.223524399 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.286522517 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.226375021 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.206686522 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.650806646 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.500752564 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.228843611 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.639386377 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.20110834 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.231735349 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.237973043 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.601164459 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.225718343 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.254007036 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.197013804 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.20352695 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.247987004 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.223668269 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.230552411 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.234648466 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.228398942 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.224268977 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.516484682 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.238741947 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.255019838 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.225440794 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.227119048 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.242247832 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.22731655 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.224171667 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.532058797 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.233632248 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203441037 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.235634692 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.515482588 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.228312034 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.222428581 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.250206951 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.206923432 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.269235318 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.202023485 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.346087517 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.25176987 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.231405562 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.301047722 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.642790822 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.236735429 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.228079171 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.231816791 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.569180683 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.249059748 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.326794086 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.248533614 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.229271934 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.223015816 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.24076547 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.30248455 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.23944444 seconds)
  done (took 145.877068246 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.223231379 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.227989017 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.227942215 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.235399833 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.223869366 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.22794283 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.223884554 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.223808821 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.228671716 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.258291789 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.225253165 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.230264578 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.230818111 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.210443467 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.234591943 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.247307276 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.229809219 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.249727617 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.258463884 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.225379452 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.247163248 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.226453085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.22726359 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.229911217 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.276885442 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.321317075 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.240444964 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.230250593 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.236395047 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.225989651 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.235989153 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.228014654 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.897644441 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.097069568 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.244895334 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.257491941 seconds)
  done (took 81.17961056 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.226269161 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.227395005 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226420315 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.226575623 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.2614857 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.227392311 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.83402532 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85439231 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.288863917 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.228037265 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.50778364 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.692458328 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545172924 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.232274164 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3209075 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.241657846 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.228999457 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325964583 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255581151 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228072923 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228657455 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860429905 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.244223078 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.251917441 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.412456934 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.245457268 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.263741998 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620243934 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228087493 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262935943 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.568287297 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.281960043 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.229241442 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586914363 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.739945504 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343909533 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.23050459 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264549206 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.229806619 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.517726226 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.230432582 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.231818616 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.232933095 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879764996 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.228753939 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839358896 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.231300434 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.223226439 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.229814635 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229687327 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.639205476 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.967968241 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230548478 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.230257606 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.232611928 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.230289378 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231239233 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.266837279 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.705071439 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.13709555 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.23121448 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.234937453 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266400113 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.231207597 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.274479227 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233540013 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.387539164 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293422806 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413011736 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866372898 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235934855 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328941813 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351381041 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.233361062 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.230957254 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.232010933 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.233029456 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.231518028 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.345810035 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.232844871 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.035568459 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.416528437 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.251271114 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.69605575 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.33192733 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233317697 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621730387 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.233070116 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.232523827 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.985907771 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328599589 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.231846743 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.233350897 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232445509 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.232397548 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.036025335 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.864302307 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547080796 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.233205474 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.25209152 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.237485944 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.190634356 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.83752898 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907509684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23448259 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3479946 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.418488878 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.25354605 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.233214021 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.703935362 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.234182653 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.294528847 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.235619867 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.636686093 seconds)
  done (took 382.420862698 seconds)
done (took 610.586448478 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.211553553 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.213576554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.212577252 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.213013179 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.212849343 seconds)
  done (took 12.183819684 seconds)
done (took 13.30377746 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.45754392 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.449118345 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.448309803 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30740587 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.460162828 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.470384082 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.365752879 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.311327655 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.438872955 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.464772936 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453741308 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.275877916 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466601822 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431676361 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.256871521 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.352068638 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.383800669 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.384132409 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.326071176 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.354307094 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.481261779 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.277146302 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272539123 seconds)
  done (took 33.010240548 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526957125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.247382904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303282181 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509829508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282954417 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530885043 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.579025132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248067875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405592341 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260229431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258744181 seconds)
  done (took 18.276969657 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.537138135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.247895201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324997918 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517351355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283968549 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.534582457 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.580238305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248408234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434100341 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26182898 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259904079 seconds)
  done (took 18.354368835 seconds)
done (took 70.762377868 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.280851061 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.343674966 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.276539243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.257327981 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.256631721 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.256013089 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.258871386 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.256747773 seconds)
  done (took 11.310561505 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.25487974 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.253503412 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.256444132 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.253174001 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.255685359 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.253749975 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.254930973 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.255264898 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.254851091 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.255591353 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.256250268 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.255039016 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.255039876 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.255892154 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.256146731 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.253864656 seconds)
  done (took 21.205536212 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.259736079 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.256246571 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.256268879 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.257515105 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.254516949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.256434658 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.25702509 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.254745207 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25538232 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.254980894 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.258312691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.255920979 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.256051515 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.256587402 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.25608266 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.257429134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.256611734 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.257700034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.263342465 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.256483502 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.256335928 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.256510267 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.25717283 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.257402492 seconds)
  done (took 31.290520196 seconds)
done (took 64.930177161 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.256264338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.244160336 seconds)
  done (took 5.627132672 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.316113899 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.313790669 seconds)
  done (took 3.759175766 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.259661033 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.257948846 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.259478019 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.258466316 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.257555435 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.258057379 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2595488 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.258755757 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.258525249 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.258765571 seconds)
  done (took 13.713893726 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.258717086 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.258843552 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.258733502 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.259562579 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.259617944 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.258599972 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.257981604 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.258949238 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.257990722 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.259377756 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.259866814 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.258659444 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.258468896 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.260356204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.25986598 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.260788667 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.258914038 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.258588908 seconds)
  done (took 23.79278789 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273495026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.278896112 seconds)
  done (took 3.680202479 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.388181677 seconds)
    (2/7) benchmarking "second"...
    done (took 1.302674354 seconds)
    (3/7) benchmarking "month"...
    done (took 1.364222252 seconds)
    (4/7) benchmarking "year"...
    done (took 1.355593738 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.300714034 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.281270042 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.302491899 seconds)
  done (took 10.424715418 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.245564082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.5380446 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.73438527 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.409709973 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236107122 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.267507215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.221605925 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.267822341 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.270926547 seconds)
  done (took 14.320466281 seconds)
done (took 76.444209339 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.245527821 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.278801093 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.260255156 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.260032571 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.555625333 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.284890825 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.2456996 seconds)
done (took 16.260144042 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.228152904 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.228636538 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.231444711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.263861369 seconds)
  done (took 10.081325008 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244355827 seconds)
    (2/2) benchmarking "read"...
    done (took 1.575272845 seconds)
  done (took 4.948380399 seconds)
done (took 16.159682334 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.26190813 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.26255034 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.262555955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.263013334 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.261726788 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.262516163 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.265711585 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.262324158 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.262163761 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.263770187 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262748887 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.262992111 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.262091126 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.262605364 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262834908 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.262600221 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.262786119 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262200406 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262909121 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.263126076 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.263200251 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261919899 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.263445084 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262195469 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.262549388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262928697 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.262870942 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.262657924 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263138871 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.263132912 seconds)
  done (took 39.015682503 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.269902898 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.270235649 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.2638437 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.266336558 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263347092 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.264110159 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.264369881 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.264735165 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.264232303 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.264589705 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.264029877 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.262438716 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.264082013 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.265016762 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264174916 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.264763015 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.264259206 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.264863358 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.265038534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.263971159 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.264124202 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.26434467 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264678006 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.264283909 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.265946533 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.265738251 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.2651693 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.266723918 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.265736763 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.265455615 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.26641378 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.266613052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.26541153 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.265512212 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.266724195 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.266917512 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.27241897 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.275429938 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.266122202 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.265077614 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.266135127 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.267270994 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.267300949 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.265893515 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.265902453 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.267332625 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.266579559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.267373093 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.266138049 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.267620866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266027264 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.267307281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.267080828 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.267185936 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.267504652 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.266801716 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.267715469 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.267694471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.266553868 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.268510474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.267588629 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.267882983 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.268300811 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.269513843 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.268941728 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.269187186 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.268565755 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.268274784 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.268652638 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.26909808 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.268148654 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.268480203 seconds)
  done (took 92.325276723 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.269156346 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269140874 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.268438998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26810828 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268146495 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268218427 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268979299 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269354496 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268513695 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.268910602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267568197 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270629205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269206738 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26984178 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269350129 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.268959727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269182545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26965909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.269831172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270028724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269414235 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269766714 seconds)
  done (took 29.057826696 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268696684 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269907335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.270515386 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271118663 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.272269045 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270451994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270128503 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272172166 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269472349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270074051 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270119896 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271270709 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272549598 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271980056 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271351386 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274595278 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271515846 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273519111 seconds)
  done (took 24.018156989 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.269862639 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.271583967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.270619862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.26976258 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.271609963 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.271203153 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270926131 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271571195 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.271684049 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.272115586 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.27365843 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271066724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.27273299 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270479232 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273690059 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.273131364 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.272162489 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271847689 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271907213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27387207 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271959435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273051987 seconds)
  done (took 29.120007476 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274630005 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272980354 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.272126813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272478597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272594493 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27302023 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.274821739 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.272668094 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.273397513 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.272497058 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272728179 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274076739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.274158738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.272434899 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271814457 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272592501 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272843691 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27337847 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273549512 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273210579 seconds)
  done (took 26.603122036 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274312768 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274051522 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274396606 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27426023 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274925265 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2745301 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27584433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.274896864 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273772239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283507918 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275312316 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275757719 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276120398 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276093577 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276092881 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275659343 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274967825 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275623318 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274961221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27559734 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276212099 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276158395 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276061513 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275877062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277862372 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275925826 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275204704 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27554945 seconds)
  done (took 36.860666637 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.293431887 seconds)
    (2/2) benchmarking "in"...
    done (took 1.294040415 seconds)
  done (took 3.729792654 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.275422443 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275969756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.27707698 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.275891187 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.275709624 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276061698 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.27585805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276035867 seconds)
  done (took 11.350692391 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.266776742 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.278592466 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.276358468 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.277023645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.277527543 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.267988163 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277612222 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.281463111 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.269604924 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.271504203 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.276747824 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.276491527 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.271303505 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271289334 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.271185936 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272955034 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.280364956 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.279609964 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.27946808 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.279223237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278664755 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27284479 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276005892 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.281387107 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271423319 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.282726491 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.2800388 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.282197823 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272675939 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.278450484 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.275650222 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.282816438 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.280326174 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.279379862 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.27969127 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.280549717 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280327194 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280139991 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.281333873 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284566864 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280350743 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.28099966 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274250984 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.27671018 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277764379 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.285359648 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.28132933 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.281079 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.271675266 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.277636781 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.288679245 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273613083 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.282598896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.27693063 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.280682823 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284169992 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.289183603 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.275700667 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.280728186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.285620178 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.293212678 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.290271556 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280443915 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.288397878 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285113921 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.299216371 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287661445 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.289352972 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.284760357 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.281501772 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.2825784 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293108654 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.295107822 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.287401298 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284421685 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.284049632 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27627812 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.286932851 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.284849938 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.287310419 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.287936123 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285024021 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285819739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298247136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.278292836 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.286756938 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.282798887 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.285731104 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.277451452 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.288306766 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291620455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.284606022 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.274760946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.279496166 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.281926285 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.286132313 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.27661886 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.280032385 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.288094149 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.286002875 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.284421379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280078502 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.287609042 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289773853 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285736735 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.285844986 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.291816174 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279527706 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.291228605 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.292893035 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286690919 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.279650352 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.283273018 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.288556142 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279612316 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.288521939 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.289699111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.282513069 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.291080922 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.286299161 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287983417 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.306962013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.292592445 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.285668253 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.282924995 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.296765664 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286884141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.284185052 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.293745845 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.285960201 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.285161022 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283797417 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.291776013 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.28024635 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289846519 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28011414 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.288944583 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.286500549 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.286717262 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.2842623 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.288084909 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.28396179 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.286440756 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.290804932 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.293662644 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.284870842 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.293749422 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.287960389 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.28573946 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.288980547 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.293457209 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287881209 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.281898708 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.291318397 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.280603355 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.289809492 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.282325678 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.290859702 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287673347 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.288191803 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288932043 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.281611129 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286798636 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.291991052 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.288733242 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.289437681 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.293049859 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.289945725 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.28911589 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.282361924 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.290427245 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.281599313 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.286553018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.297686326 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.291717162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.289911294 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.287535245 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297820758 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290369116 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.288516417 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.286269507 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.292301329 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.294947597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.291409756 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.29710743 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28982883 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.290364093 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.282967737 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.287473448 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.293014477 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.285581291 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.299344705 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296826661 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30468757 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.287824346 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.29484185 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.282514314 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.29455208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.290186984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.298891891 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.292894225 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290352127 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284414894 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.295241517 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.285401103 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.294681139 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.281723718 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.293332324 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.293314475 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.292086219 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.292056378 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.286156186 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289295964 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.29483826 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290917556 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292481674 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.285645894 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.296382518 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.282925929 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.287265847 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.295266277 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.292498916 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.294760127 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.299759237 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289470534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296647559 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.294282144 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.289850716 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.295954292 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291217753 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.293675494 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297994936 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.296353678 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.290742613 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.300049167 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.296308352 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.287224219 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.293664509 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.303472094 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.294416655 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.288741424 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.301102155 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.295171578 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.294984185 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.294021709 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288169373 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298634891 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.296607637 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.303321562 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.287989438 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.299144956 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.289519203 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.29909043 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.292928497 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.296372752 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.295640259 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.299280125 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30528671 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.294716474 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289097854 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.299213544 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.296019918 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.295424544 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290021313 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.303135434 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.298352033 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.296988479 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.294647334 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.293053638 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.299057323 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.288145915 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.297261077 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.288480611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.308501175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.316941718 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297659057 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.301107239 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.300536348 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298521728 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.300594728 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.292972972 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.291571104 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295790443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.293632462 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.293197395 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.300635975 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291695768 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.301521045 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295603786 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.299129694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.302630657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.297537806 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.291433026 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.300263773 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.297647127 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.299951808 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.289768254 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.300323116 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.292492005 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30157278 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.299851191 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.29411686 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.306934742 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304248907 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.296330254 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.296159375 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.294091037 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.292531887 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.296333743 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.303741804 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.294017358 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.307084812 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.294341305 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.302126735 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.295845554 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307108199 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.310578428 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.295762926 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.307411962 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.301488955 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.291809208 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.294987848 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.301186393 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305222576 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.312299845 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.29328065 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.304615429 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.300977686 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.300113579 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.302109084 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.300954808 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.30147919 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.300373553 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.307002411 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.307346667 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.298365693 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304301913 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.312374516 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.301363334 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.301528272 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.292620896 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303861581 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.312867579 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.296192402 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.301885423 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.297938368 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.30184295 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.30321109 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.301189597 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.302249561 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.300804452 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306182003 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.309512176 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306422398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.302642874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.306525009 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.315503604 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307385578 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316010765 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.297702701 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.308279187 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.302202565 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.297366429 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.29925142 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.299535025 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.307833162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.295063703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.307482669 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.303001285 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.299646671 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.304702136 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.311529414 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.294488988 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306696888 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325861406 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.296547318 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307260868 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.305391465 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29650852 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.308417452 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.305235249 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.295471312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.300643087 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306086641 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312340566 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.29893569 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.309035393 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29770182 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309225477 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.305519253 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.304914837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.304118905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.306346303 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.298501069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.306363844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305610746 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.317252985 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.300577535 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.305606469 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.302163105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.313631687 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31839436 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.300888409 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311218303 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.306480316 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.299973182 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.303082566 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.311407221 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29986048 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.309771361 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.297698287 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304207059 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.304467164 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.307936184 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.311630637 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.311398362 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.299358816 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.302276322 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309515952 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.30845895 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306534722 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.303982087 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.31375405 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.300278151 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.30051932 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.308405918 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.30126149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31207716 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301032548 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.308527198 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304884312 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.310475379 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.308262663 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308399826 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.298398673 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.301394936 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.315566482 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.314147122 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.311902389 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.307934161 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.312345084 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.301058358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307429441 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.310346181 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.30398901 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.30460428 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.313492836 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.303440434 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.30588686 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.304344642 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310672135 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.312624506 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.315268392 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.304072927 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31763846 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.319244542 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.318165656 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.302532179 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.306864512 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.30591791 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.310856056 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.307995334 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.302762333 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.318522982 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.318711319 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.313606909 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.308390285 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.311754132 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.30338147 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31316494 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310723948 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.30807892 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.318259031 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.307304335 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316863568 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3108221 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.310076188 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.301975335 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.30505321 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.307737955 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.31100334 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.312359183 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.309815652 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.315948608 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.310347841 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31723694 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311092998 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.312001844 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.310611011 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.303721935 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313732614 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.303757716 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.313465574 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.314040761 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.307109729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.314992245 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311698121 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.306898371 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.312770377 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.320099053 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.31210782 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.305916914 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.310836999 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.31925928 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323964426 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.311504205 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306114145 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.310837832 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.316568679 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312182193 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.312635157 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.307393849 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.326585346 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.32710838 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306739609 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.312076474 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.317325133 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.32605367 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.31234811 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.314384486 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.309476738 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.313239881 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.320655461 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.31259227 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318680419 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321489491 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.310162846 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.319346689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.309818638 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.313906358 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.316459016 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327590508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.314221857 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.309969746 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.32950267 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.326001433 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317790471 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.342732032 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.322728156 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.316134689 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.320723688 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.30815292 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.316736357 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.312866703 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.322086319 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.315711492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316247652 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.316079319 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.308536255 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.319533731 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.325140419 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.326663774 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.316731679 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.306314985 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.312122432 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.318729636 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.316146251 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.316688111 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.316203351 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.317363364 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.317012945 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.31085614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.330152027 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.336769451 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.32303235 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.317512559 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.316344609 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.317452553 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.323356043 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318849941 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.324572671 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.315720793 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.316337304 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.315782666 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327446627 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.318379471 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.310340216 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.313617432 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312684601 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.320949557 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.32717209 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.342950971 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.321341618 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.322888984 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31892789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.317886964 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.313078568 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.321760878 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318457931 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.312737465 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.315417866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320589753 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.318871947 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.317792066 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.311916374 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.32520894 seconds)
  done (took 775.344095828 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.318107263 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318877859 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.317832499 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.317942693 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318608007 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318293557 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318711644 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.318857479 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.31814994 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318012198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.319159164 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.318938053 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.318608998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319693098 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31924609 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320853821 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319102557 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318624428 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.319005766 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320486172 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.321173925 seconds)
  done (took 28.876953939 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.318353315 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.319890843 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321246439 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.320368043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319377248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320449426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.319596276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319818956 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320327672 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320977998 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.321780191 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320613894 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.32126308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.322081798 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321716055 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.320525832 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.321096117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31953154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.322258065 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.321662329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321976153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.320614384 seconds)
  done (took 30.236250059 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.320959392 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.322227385 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.315075517 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.326679922 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.321790287 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.322535359 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.322155378 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.3222264 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.322990644 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.315024966 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.316032992 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.316608024 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.320101157 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.329025191 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.318798733 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.327900178 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.32213891 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.321544284 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.324182903 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.32348748 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.327013367 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.336388179 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.324475281 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.315323826 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.32611932 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.323059081 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.322917618 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.322170195 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.315694913 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.326446955 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.323295842 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.316827682 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.327053893 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.327666111 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.319061106 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.327260281 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.325345348 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.323202774 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.325085138 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.325651339 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.346442297 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.323999954 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.32821847 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.33779807 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.324960732 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.318650628 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.332368607 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.324493802 seconds)
  done (took 64.731044498 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.326190509 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.324067444 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.324226538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.324325969 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.325904052 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.324567515 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.325570074 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.326557155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.325869372 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.325692145 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.325026629 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.324962881 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.326276103 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.325402776 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.326421749 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.324728001 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326162257 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32646847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.32665515 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326364308 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.326155933 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.325257244 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.326639304 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.327517678 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.324544309 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.326063311 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.326685644 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.326343339 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.326166397 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.326725701 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.327303579 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.327375875 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.326544632 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.326684761 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.326969027 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.328750326 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.328714604 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.326104319 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.328218721 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.328758 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.328532727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.326638784 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.32888605 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.32669447 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.327348756 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.326655325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.328012274 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.327264863 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.327895332 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.327082507 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.328900466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.328566514 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.328451519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.327331362 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.327519297 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.328290234 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.328608621 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.328375664 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.328303195 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.329556621 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.328704756 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328988247 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.328779456 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.331207717 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.329493914 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.329259668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.329185239 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328775682 seconds)
  done (took 91.428717175 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330692061 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.327929283 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32872836 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32993981 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330223402 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.329851184 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.330081578 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.331173537 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.329778344 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.330580059 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.330793723 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.330456218 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.330563598 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.329811168 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.329909456 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.330003741 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.331394309 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331518271 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330665395 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334055796 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.332796723 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.330427613 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.331035598 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.332765607 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.331636598 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.331704306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330633957 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.332524383 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332274359 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.332861761 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332071743 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.332262268 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.333764061 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.332485242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.331568752 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.332536828 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.332543741 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333522569 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.332036873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.333374026 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.333943451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.332476057 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33336352 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.333894084 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331934466 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.333700548 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.333703014 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.333762771 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.332927704 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.333726228 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.332868978 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333426072 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333822131 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.333778121 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.333132513 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.333083823 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335454041 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33396251 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333560304 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.334427106 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.33455389 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.333238442 seconds)
  done (took 83.78249619 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.334013966 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333900724 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.332479464 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.334537118 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.3341242 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.333485146 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.333020894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334837857 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334000223 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335311323 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334865131 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33504439 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334586079 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33432249 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.334526053 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.335449482 seconds)
  done (took 22.53990755 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.334951461 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.335571781 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.335871072 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.336299755 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.3348832 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.335709873 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.334086237 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.336246891 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.334460431 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.334903104 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.334788334 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.334902941 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.335281638 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.334995312 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.335151196 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.335341081 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.33577947 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.336632338 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.33536641 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.33590443 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.33657623 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.334595009 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.337124787 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.335424349 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.337221869 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.338082434 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.336504752 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.336572379 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.335994056 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.338383589 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.336722397 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.335266599 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.337514384 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.335852931 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.337361502 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.337996295 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.336673742 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.33747457 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.337890121 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.336757842 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.338999895 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.338149243 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.336454302 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.336725923 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.337067127 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.338620299 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.337650155 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.338196128 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.337764012 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.338045102 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.338452159 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.339969957 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.339129745 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.340197735 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.338151623 seconds)
  done (took 74.711185632 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338425026 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.33947027 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.338426227 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.339001776 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.338242765 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.338349431 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.339671908 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.341322753 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338508089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.338823975 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33913785 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.339613802 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339737765 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341095429 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.338305883 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33852026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.340750158 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.3396629 seconds)
  done (took 25.302395801 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.340011072 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.339335337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.339377924 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.339622136 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.338797232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.33920814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339710288 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.341035385 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34112581 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.340484235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339625391 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.340076325 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340279031 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.342281108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.340652108 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341178072 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.341353383 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341823257 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340232561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342143728 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.343032061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341379138 seconds)
  done (took 30.690444599 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.329975136 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.33222422 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.33145595 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.349722771 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.350798359 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.332860215 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.332456797 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.332464955 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.357334804 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.381593796 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.375620685 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.350548707 seconds)
  done (took 17.355944229 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342510398 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34299527 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.341745757 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342214684 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342301755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341908388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34387969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342203772 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342514387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3445051 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341967814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343465061 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342400456 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342006411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341395718 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342921502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343730443 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3419311 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343063878 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343719338 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342667425 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343780303 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343076649 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34335865 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344035403 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342058655 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342749942 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343780062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344178495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345499042 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343121783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344659355 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344715457 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344367745 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344250245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345967363 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344110425 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344725182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344181439 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344362875 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.344790694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346029016 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345663684 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34484461 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346034041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345548681 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345242523 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345095046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347099809 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346199914 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345339193 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346856737 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345252411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345377836 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347119752 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34547127 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346190247 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346458286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347197565 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347260514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345938757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347190524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346526499 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345891871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346734591 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348355179 seconds)
  done (took 89.933983344 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346578233 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346501556 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347046343 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34763157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347065848 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349020925 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347035521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347156376 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348251331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347411835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347935096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346715458 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349146921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348320125 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347828069 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347443651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347714701 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347063767 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347676063 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349723602 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347835081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348367889 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348147296 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348221053 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350741899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349246625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350069061 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347659872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348405331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347559377 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349560431 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349188825 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349872433 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350005432 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348756012 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348649944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349173486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350177242 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349601483 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348380496 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349973935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349110407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349067832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351394396 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350627291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350370093 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35080496 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348858484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350292802 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34856293 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350563233 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351960252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350338295 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351315383 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349680395 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351740774 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349976426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349228114 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35101799 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350971856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351129065 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352085837 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351443582 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351994312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351102634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351685878 seconds)
  done (took 90.253271293 seconds)
done (took 1718.397799104 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.509896616 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.464523504 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.341974696 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.349940734 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.341231956 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.371425516 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.353422067 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.342966095 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.342099283 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.342774057 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.343572057 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.541396623 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.344005014 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.342914145 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.340864046 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.442160459 seconds)
  done (took 27.32266826 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.371853117 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.350762603 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.477374342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.346241596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.372056892 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.559917969 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.408103661 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.348379824 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.545779236 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369021147 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.336659831 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.370841003 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.345977215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.354189244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.368059729 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.561827223 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.636339366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.341470013 seconds)
  done (took 29.672591813 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.872303841 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.385055984 seconds)
  done (took 5.466103251 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.370545052 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.347713705 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.350138409 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.347051324 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.339368951 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.339984463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.345701086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.345988554 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.352609943 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.491917492 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349611526 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.360784624 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.370113222 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.348603546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.356203204 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.395005959 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.503514139 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.356817405 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.356720139 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.354432024 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.348145986 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.448190372 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.397008931 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.359572139 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.4949932 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354680596 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.356317923 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.356253232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.486152748 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.359473326 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.348572117 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.350401523 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.349724031 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.360542018 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.934334262 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.353087416 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376366991 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.357066293 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.357599715 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.509000986 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.350189236 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.358354469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.342552917 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.916809171 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.463691619 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.479338928 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.362372339 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.351907784 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.352795174 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.418856452 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350607861 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.351750621 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.413931314 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.245204843 seconds)
  done (took 86.617447477 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.372666356 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.343067934 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531783986 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.371408482 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.343474395 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347762135 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.369941964 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.697472539 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.407199514 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.344286485 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.689507646 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.031447658 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.3521624 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.392016096 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.39160713 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.376749293 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343002355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.343313556 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.344155246 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.349693318 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.944061792 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355631711 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.343223857 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.495756614 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.387802255 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945861486 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.343843187 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.368689798 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.366528424 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.344744337 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.99895313 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.356294432 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.400996855 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.348213455 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.657702079 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.798190046 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.7551904 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.348014238 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349102596 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.344337961 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.378869721 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945846012 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.777287571 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.345322758 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343620752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.948461937 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.344731901 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.353715847 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.350808881 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619462476 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.344950461 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.348409383 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.356574858 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.3450609 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.34412572 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.406329352 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406742722 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950224308 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34508227 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.346611034 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.38935552 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.348094566 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.357534724 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.347513513 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.345944673 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.780846879 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.524985224 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.34941805 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778021992 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.995373824 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.346747879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100920883 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.350010919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.349073067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.422264405 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.347584124 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.350287997 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942341493 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.363842112 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.348031325 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.759958127 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.348864867 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.676256659 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.368055744 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352602472 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.98704934 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.349390714 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.41584862 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.348208776 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.348117158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.348244708 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350401369 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.665566729 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.423038814 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.348202656 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.348987855 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.377392816 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.34896051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.347804521 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.3569581 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083282065 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.358075936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.3485177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.350544085 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349972456 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.348875166 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.348866416 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.348321822 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.636379873 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.350221927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.356847689 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.348200269 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.34999205 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.34969753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.500868038 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.356645275 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.715475135 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.352244684 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36446411 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.351495035 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350316604 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370295554 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353651407 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.352825322 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.300200466 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.674251911 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.388513447 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.351345536 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353822636 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.350707792 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.35076109 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.352302426 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.391681565 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.35269549 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207714097 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.372823998 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.379837163 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.349694825 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.361607173 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.351859618 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.35366417 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.352044437 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677062856 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.665396085 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.557353239 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.353464367 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.351660791 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.209407274 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.400288388 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541732509 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.372220959 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.352100726 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.655579218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540322191 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.352312893 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.354063825 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.354525008 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.642845671 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.35443555 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685023905 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.025258086 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.353862704 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354410895 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.204544494 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.10794532 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.355658959 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.355738216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.678298381 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.374259314 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.354285474 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.354643579 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.352983782 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.353741796 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.359006972 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.360167467 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.354310701 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.354874547 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.426883243 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.553282121 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.373058152 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.355110112 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.951459473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.367630545 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353757406 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.358430122 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.354564286 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.353684177 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400030019 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.358071016 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.392218756 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.357493432 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.360451901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.990034506 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355219054 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.354313294 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.553911858 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1662975 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.355395429 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.356603563 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.35645582 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.395431634 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.985373608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.412995022 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.723405105 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.359083376 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.398565122 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35709592 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.399699658 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987024574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356709217 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.355918344 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.152587499 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.356460581 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.039882896 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.356070152 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.356378591 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08679408 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.357942159 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.359945933 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.35622206 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35774539 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.668605609 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.358135302 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.397752733 seconds)
  done (took 504.235564536 seconds)
done (took 654.520185018 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.357181059 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.361440744 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.362494006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.362765424 seconds)
  done (took 10.668613426 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.37506836 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.365041681 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.374622243 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.363597884 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.374825593 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3640988 seconds)
  done (took 9.443373807 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.358701524 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.363626502 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.362846146 seconds)
  done (took 8.30891055 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.601440996 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378930451 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.775435396 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.367560545 seconds)
  done (took 9.350949313 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.375375192 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.375233556 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.373593954 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.375561995 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.37612587 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.37674016 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.37560444 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.375666182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.376075065 seconds)
  done (took 13.601791932 seconds)
done (took 52.597761187 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.577728289 seconds)
    (2/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.567197729 seconds)
    (3/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.766560014 seconds)
    (4/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.767672216 seconds)
    (5/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.757888528 seconds)
    (6/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.499030896 seconds)
    (7/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.533176799 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.435250167 seconds)
    (9/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.349929203 seconds)
    (10/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.569867298 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.395498737 seconds)
    (12/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.444814982 seconds)
    (13/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.488372043 seconds)
    (14/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.372190799 seconds)
    (15/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.3537028 seconds)
    (16/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.375264528 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.471055212 seconds)
    (18/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.498434543 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.465589414 seconds)
    (20/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.388928947 seconds)
    (21/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.338430078 seconds)
    (22/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.459420372 seconds)
    (23/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391486754 seconds)
    (24/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.624624148 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.448574663 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.675580869 seconds)
    (27/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.339491312 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.524743139 seconds)
    (29/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.35924875 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.524782928 seconds)
    (31/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.47775516 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.443824216 seconds)
    (33/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.803158343 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.630192369 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.437368949 seconds)
    (36/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.36304867 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.363930033 seconds)
    (38/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.584307811 seconds)
    (39/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.412896554 seconds)
    (40/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.534667382 seconds)
    (41/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.450394111 seconds)
    (42/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.514767461 seconds)
    (43/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.339921036 seconds)
    (44/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.666538303 seconds)
    (45/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.456799611 seconds)
    (46/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.579000706 seconds)
    (47/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.695159275 seconds)
    (48/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.490061215 seconds)
    (49/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.34019505 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.482236917 seconds)
    (51/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.541277585 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.749035203 seconds)
    (53/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.447108167 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.340365237 seconds)
    (55/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.377706847 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.403768034 seconds)
    (57/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.34429023 seconds)
    (58/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.701964594 seconds)
    (59/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.473119014 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.882412886 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.180470973 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.363342565 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.342996167 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.011256214 seconds)
    (65/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.473907878 seconds)
    (66/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.679988462 seconds)
    (67/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.634133457 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.454631345 seconds)
    (69/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.346596498 seconds)
    (70/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.348368809 seconds)
    (71/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.347331552 seconds)
    (72/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.43214982 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.352639107 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.44938867 seconds)
    (75/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.658067089 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.341274531 seconds)
    (77/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.447362733 seconds)
    (78/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.341339034 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.466594121 seconds)
    (80/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.879550729 seconds)
    (81/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.400735478 seconds)
    (82/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.342273735 seconds)
    (83/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.410690362 seconds)
    (84/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.598473602 seconds)
    (85/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.402099111 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.454235842 seconds)
    (87/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.342624901 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.50249532 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.446189101 seconds)
    (90/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.438776544 seconds)
    (91/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.439273587 seconds)
    (92/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.487812963 seconds)
    (93/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.546787927 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.499126659 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.399752234 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.813285162 seconds)
    (97/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.829153419 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.761361571 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.891181949 seconds)
    (100/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.727152823 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.45025607 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.662953628 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.438422827 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.344407025 seconds)
    (105/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.356661418 seconds)
    (106/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.369824977 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.485649161 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.825207875 seconds)
    (109/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.349703881 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.536512112 seconds)
    (111/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.407990096 seconds)
    (112/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.344959437 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.547501505 seconds)
    (114/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.703711338 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.393821823 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.410975909 seconds)
    (117/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43833641 seconds)
    (118/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.40759693 seconds)
    (119/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.561285767 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.976761748 seconds)
    (121/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.68491875 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.499307621 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.499429643 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.367870868 seconds)
    (125/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.447008556 seconds)
    (126/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.519227664 seconds)
    (127/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.370650158 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.470594453 seconds)
    (129/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.384581169 seconds)
    (130/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.523194636 seconds)
    (131/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.455146918 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.994084434 seconds)
    (133/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.943756293 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.679348719 seconds)
    (135/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456318802 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.457530403 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.407535448 seconds)
    (138/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.505095968 seconds)
    (139/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.347374632 seconds)
    (140/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.347222092 seconds)
    (141/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.358186452 seconds)
    (142/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.346435389 seconds)
    (143/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.473698313 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.441980883 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.405117935 seconds)
    (146/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.399085978 seconds)
    (147/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.549103487 seconds)
    (148/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.590592487 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.496472305 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.989849491 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.346531208 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.406249675 seconds)
    (153/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.346415877 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.495803104 seconds)
    (155/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.488893618 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.373547607 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.54035668 seconds)
    (158/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.935586195 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.661509316 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.664592139 seconds)
    (161/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.526276365 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.373168248 seconds)
    (163/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.460299004 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461188815 seconds)
    (165/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.400218082 seconds)
    (166/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.593546528 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.482151692 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.409817053 seconds)
    (169/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.402437467 seconds)
    (170/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.76917464 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.485995607 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.381610028 seconds)
    (173/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.650005707 seconds)
    (174/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.406089583 seconds)
    (175/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.438562122 seconds)
    (176/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.461848284 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.001592324 seconds)
    (178/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.45723048 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.649918599 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.509286593 seconds)
    (181/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.348775659 seconds)
    (182/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.349523139 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.549675018 seconds)
    (184/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.411604033 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.571861005 seconds)
    (186/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.349175247 seconds)
    (187/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.512341389 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.643463415 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.188852257 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.479136211 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.506444902 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.719021632 seconds)
  done (took 340.249574733 seconds)
done (took 341.474592375 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401905487 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.475695615 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.380398233 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.380823704 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38415262 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.372492675 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.403942795 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.384324298 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.396976213 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.396224347 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.375572713 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.390993736 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.398814715 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.394275707 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.41703229 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.381600154 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.381964329 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.393944798 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.399627831 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.400111587 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385414365 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384426004 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.41211854 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.382335467 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392266512 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391971769 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.390345839 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.383015684 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.391742911 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.39783884 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.389352657 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.390370117 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.400208104 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.396092932 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386823109 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.394544119 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385867397 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.479042619 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.406148327 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.395499339 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.393583658 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401704725 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.390778397 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.389357191 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.398197693 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.412550118 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393832663 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.399681113 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.390794221 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.375251904 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424405266 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.398439556 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.393196987 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.392975841 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.387571678 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.39965333 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.394456474 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407342989 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.392252524 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387517361 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.418848008 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406535502 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.397480078 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394123467 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.394041861 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.400466271 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.395909145 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.402407165 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.392985971 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387971077 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388783619 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.395759204 seconds)
done (took 109.786044844 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.509243884 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.381099615 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.54361371 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.394041242 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.552488632 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.50563493 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.393931606 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.393962672 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.39425588 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.18804054 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.394306757 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.394124357 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.385438512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.395009394 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.50657452 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.395096225 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.394901213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.08586966 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.394447414 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.522603652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.387128528 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.395107219 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.395678848 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.197532717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.382793874 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.379736869 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.527280976 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.397072839 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.098426206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.378120035 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.38089186 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.096470293 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.524444751 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.415710141 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.406574516 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.405892023 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.55153593 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.40030688 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.508311676 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.512085228 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.560897553 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.435037916 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.382486179 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.387190022 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.398280055 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.396563067 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.396830207 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.426584117 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.384724691 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.397533638 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.090233744 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.406821235 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.398283944 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.39771598 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.398533317 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.425126393 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.399042296 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.399265653 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.526849723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.399815043 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.508584262 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.200026921 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.19168713 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.399237505 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.386715632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.399326527 seconds)
  done (took 112.203554399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.456681928 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.465532556 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.512568275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390005876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.439898146 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.510857758 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.389127563 seconds)
  done (took 11.40912269 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.395757357 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399198559 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.438229563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.439481242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.399701927 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.562814081 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399011587 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.400400906 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.398791193 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.440013039 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399468006 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.399755592 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.408877378 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.388946967 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.437202569 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.402091786 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.510328994 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.391908548 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.401236206 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.543446279 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400110855 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.409709829 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.44215213 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.403917146 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.401512932 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.398808169 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.151152441 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400634492 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.400673865 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.402236449 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.40057756 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.456398393 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401755388 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.389870677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402958697 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506751656 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400640289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.402338269 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.400726606 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.392811225 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.401294901 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.402458597 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.401603385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.401524746 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.402319879 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417519978 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.402787272 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.40303628 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.402211872 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402567408 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444979944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.402388765 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.403247124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.402457887 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.447206286 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.412221432 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.403538299 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.401933426 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402838523 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.402695095 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.549880382 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442695427 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.40277055 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448170646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404238625 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40304382 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.403340502 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.403498541 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48456679 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.402451413 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.442610326 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.403228 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575826198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.418228353 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404436645 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.396588815 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.398202334 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402994475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.390668514 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.399459188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.404397135 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.396678105 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.402892761 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405454048 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.404652725 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.554324386 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506231031 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.40488198 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.412401323 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.402185676 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.404502064 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.449138294 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.405355234 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.404091554 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444746555 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.517131923 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.447391569 seconds)
  done (took 143.877835247 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.408152638 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.409349591 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.400792732 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.425601595 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.398123353 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.395802845 seconds)
  done (took 9.689252338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.398683673 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.409018526 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.405262935 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.405921353 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.407895973 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.406179145 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.407815541 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396729787 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.411023809 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.407178768 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.406572765 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.40643573 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.408278898 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.406460625 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.406528046 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.407725512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.406928233 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407218289 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.406527052 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407439696 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.393880659 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.4073979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.408077452 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.401277483 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.411833416 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.409684456 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.422237234 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.407817429 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.407709485 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.402332022 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.411513584 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.409451197 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.401671897 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.404348444 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.41230383 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.401486075 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412969017 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.408195084 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408009984 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.408389359 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.40949426 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.408518237 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.408793015 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.411282124 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.401051814 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.406211896 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.413730247 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.423308557 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.408436244 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.409066726 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.410400608 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.410133383 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.408871697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.411710569 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.403951944 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406335605 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.413519441 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.409712548 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.410429447 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.40410598 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.414374315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.411174906 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403780809 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.414618008 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.410508435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.411909148 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.405102069 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.414885452 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41110887 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.409450791 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.411099815 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.410659212 seconds)
  done (took 103.650441714 seconds)
done (took 382.072989823 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.941967008 seconds)
  done (took 4.197649477 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.515793758 seconds)
  done (took 3.774091196 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.747193474 seconds)
  done (took 27.008145205 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.43847955 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.400096941 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.429369678 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.399032804 seconds)
  done (took 10.924606877 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.948757298 seconds)
  done (took 4.204492227 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.407470385 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.40519622 seconds)
  done (took 6.072096962 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.685665889 seconds)
  done (took 3.94255198 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.221251127 seconds)
  done (took 4.483633139 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.425474823 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.416088606 seconds)
  done (took 6.105521984 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.372661312 seconds)
  done (took 3.629530269 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.140399266 seconds)
  done (took 20.399215333 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.417620634 seconds)
  done (took 3.677573515 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.439900066 seconds)
  done (took 3.696720202 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.685626236 seconds)
  done (took 6.943414542 seconds)
done (took 110.315716238 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.396111807 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.396625455 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.398157317 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.396877913 seconds)
  done (took 10.84623352 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.475683369 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.479384294 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.487647894 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.473535585 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467742238 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.479999357 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.440041397 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.457605594 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.468499359 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.464506841 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.483172408 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.470739271 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.480025066 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.440131473 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.466067819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.482446675 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.467776698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.486005108 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.439911993 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.472458892 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.415620732 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.473825516 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.466566992 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.414784096 seconds)
  done (took 36.412542404 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.925035826 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.474813935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.563345204 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.457178691 seconds)
  done (took 7.680293801 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.5196064 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.520306659 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.537536918 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.577145078 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.62163632 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.532425909 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.443416974 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.437652912 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.424279963 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.52093595 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.606302717 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.520409576 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.735474359 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.415009 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.734507713 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.415567376 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.415082046 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.521808876 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.569205703 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.600009305 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.417311262 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.519652171 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.526687879 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.519052347 seconds)
  done (took 37.912200014 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.4245883 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.433172413 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.4178465 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.431984606 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.417217244 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.418614263 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.419737391 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.42526833 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.41877513 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.41712194 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.417485589 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.432277161 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.418728609 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.418055099 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.425227799 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.418989009 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.419759803 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.425128804 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.426542444 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.419472207 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.418324721 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.425968963 seconds)
  done (took 32.552002461 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.401774139 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.402078682 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.754046105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.659161294 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.401170628 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.408620754 seconds)
  done (took 14.290686767 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.492233001 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.641515869 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.408399146 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.838806975 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.922505178 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.409899607 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.410200656 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.688654923 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.089423113 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.09079983 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.476503837 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.489486745 seconds)
  done (took 21.222873555 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496497519 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413809782 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417790942 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49573632 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414222189 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416056141 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472911451 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.935874681 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.419929256 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690164603 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433069654 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497258474 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664430568 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431653127 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413717698 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.393611506 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642925086 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976136577 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417851416 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432230899 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447814529 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413443091 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432125265 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.660012411 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416966383 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415422684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.677717537 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415186961 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753395667 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728841613 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730311158 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420698094 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692159462 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922227434 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527764847 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657274915 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412413833 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416454348 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.401606341 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.432777463 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425416184 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418703176 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727868077 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417698061 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417284813 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433988792 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949229635 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.427894003 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.418555071 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419157922 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731674941 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51750833 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.422884809 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.416347153 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510285023 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417000707 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.423117823 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537789876 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05881624 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422823801 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424278695 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.422837638 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411589055 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418426837 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150515703 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425983301 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.423338474 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423831506 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417958825 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417924261 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464134834 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418021265 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.439176502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418687019 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344337058 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419200357 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418922981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03071993 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420379697 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.445667696 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64633944 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417826684 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417827131 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.417963803 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420087889 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260329088 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428269601 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.387108925 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470618812 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941515586 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66320431 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438819176 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448844092 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643575225 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.386300745 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422057884 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.420670659 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422485447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442780104 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94746724 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418610766 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.427386636 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669890258 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.633768613 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421739803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393803995 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951749878 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421493303 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.468643343 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.430178135 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671749578 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.138262656 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743122056 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42247126 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478361192 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422772756 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318965262 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421225039 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.43386666 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421444709 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737947214 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.348405599 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423090367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498228604 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434181984 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422516644 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422470914 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424869886 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421570573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.646571432 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432422719 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.743374974 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.425443625 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423323584 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.434392731 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425897402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.423682917 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645725381 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421534524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706416819 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423812647 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424560973 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42444011 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.644841141 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.43993122 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.431356248 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765927319 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424375409 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432101045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.744788914 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461603778 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538788724 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460439014 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.424950745 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.681275191 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.431584978 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.431246107 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427162024 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426842583 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429549321 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.434617197 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437026988 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143939072 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414819459 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43323897 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426046924 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.443537691 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501505426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435815348 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670083132 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.433782128 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421340822 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.434234974 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.435296497 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650258166 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740226729 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.444506574 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601350785 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.953406519 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142670903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443670254 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.425140873 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.425713662 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.425698236 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426893975 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426368163 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426694403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678217911 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759352744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44526878 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.149310003 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430156402 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427554905 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.434881283 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74008982 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.436107848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426863359 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.427648313 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427494167 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449970888 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.772735677 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649835004 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.443886059 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427662952 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.94802605 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437636212 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428783104 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428535377 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454276852 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427102086 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047604423 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769791822 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421806994 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746945205 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429867821 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.466895262 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.427414613 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429638375 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430966186 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.462134312 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437834012 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.676275492 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432773035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43065231 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078077886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369855831 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086070027 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432358598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.43082595 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435732728 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964787942 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43318027 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42977447 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713656214 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961229095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430202747 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960581487 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.447073795 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337822048 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749612039 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658891828 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43116043 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.434902182 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751321091 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647061113 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459282883 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.443051685 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438061597 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.399750709 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050863217 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448745896 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612281452 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963288156 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434387407 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432942277 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.498080444 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432521245 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911960961 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43664764 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432286111 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431876313 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442132158 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054498544 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.441469686 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433510058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171315857 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.436300555 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.973136372 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433493557 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688875414 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.75584161 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.725058417 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.450838095 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.445494653 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.680844058 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752253838 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435303875 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436297779 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095821579 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.293568911 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.44348287 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435106495 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338045482 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43979319 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789378483 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.453889614 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.4400645 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443947378 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434629568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434685572 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.435389424 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442397922 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422526448 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999003508 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.437573163 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449329271 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440835096 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44042105 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.685081708 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.451253669 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157125876 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666907566 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430420167 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468960541 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.441032506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447208249 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.403866384 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.434979527 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434813002 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524675434 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658532276 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455861014 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.402419435 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500800225 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647877172 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.436878345 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440925034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702698203 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.442854953 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.444008352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40189027 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469133897 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442344448 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437998556 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431409125 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487108426 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512983585 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694472366 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.7612861 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.755942791 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922606933 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448563807 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440647385 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.452977769 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518868943 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437918918 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.43770223 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.437862154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159885293 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375826026 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168207385 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758593437 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442219588 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439262556 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436311419 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681676274 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442747818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714723719 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439834055 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.452564323 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462971065 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455371374 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45084646 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655122012 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715350489 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439818427 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440093402 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444578163 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.441335968 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764611612 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.653004693 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009762376 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061357664 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442980674 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439360084 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980202427 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717180871 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439807667 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441073468 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440796833 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.445883736 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.444485521 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.449014735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455568146 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666762664 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759477429 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953144465 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.763402442 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.470346704 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.308971234 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45268348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691332175 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278912911 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690352941 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171463751 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.286317595 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697374513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516149399 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690749453 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.442567038 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677684641 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.442079198 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442555717 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442612501 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442599124 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.441425657 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.760980936 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170554498 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6979042 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.448189069 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.443232093 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47358285 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.700068164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672265411 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293694359 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666717418 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76516717 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451747786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441939723 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174753078 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.767218619 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444549133 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.446526589 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716763615 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449006419 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478021362 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316076147 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.443143432 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065575284 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.657404573 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464987402 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457430844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.294940918 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174034434 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448285445 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01482682 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445407161 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455739206 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726772973 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.452472528 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443939022 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736321632 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.44980641 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.445016558 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70784121 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.174387185 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.358536321 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.454265069 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447382373 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.446527095 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446713283 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523876739 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44714097 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457342434 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.914814192 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450756109 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447013523 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461750647 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.449352689 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4475032 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.451953789 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447273064 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.455155991 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.422394095 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.426751732 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451863919 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573701758 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075233434 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449688163 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.063685146 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.784490023 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.696075677 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449750013 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.418988813 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.452834209 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447810545 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448246947 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448139745 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442418997 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073256271 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.447842997 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.772042596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454951643 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.660267009 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662688623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.460856959 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71045134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473735078 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475618485 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.415249379 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448871935 seconds)
  done (took 1014.387676098 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465453805 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.475423874 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.49219384 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.538846161 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.483118108 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.57930089 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.460181095 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.553117365 seconds)
  done (took 21.343141009 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.45617009 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.447920414 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.4509891 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.448448508 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.450182069 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.995801522 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.450332563 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.450080532 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.464788799 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.452617264 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.452167603 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.165087885 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.449340557 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.444011864 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.452876057 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.451344038 seconds)
  done (took 33.782633813 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.635121973 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.647660876 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.980405002 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.443381794 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.50366367 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.442081 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.842883041 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.468311932 seconds)
  done (took 28.258675963 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.455652777 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.456674744 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.458128039 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455836087 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.456821685 seconds)
  done (took 8.577580066 seconds)
done (took 1268.524909227 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.456522265 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.459108956 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.458071287 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.458555784 seconds)
  done (took 7.128092323 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.420393155 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.420506443 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.421109704 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432141407 seconds)
  done (took 9.98989732 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.870033564 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.067531425 seconds)
  done (took 5.234653318 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.452078089 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.215052931 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.202122194 seconds)
  done (took 8.164885243 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.750372422 seconds)
  done (took 3.047984787 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.89264604 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.975933777 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.446177515 seconds)
  done (took 7.61183748 seconds)
done (took 42.474331103 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.444115189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.21153143 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.598261428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.442855851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.605030808 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.600129679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.723604106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.456091007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.450742242 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.448221139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.443659022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.606696841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.714326714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.21240438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.714641717 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.211592971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.655709232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.452313084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.449049366 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458040718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.727380535 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.461342967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444338074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.44314666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.626552923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.588699484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.445429308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.21326579 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.445232545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.448629619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.589878633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.448037479 seconds)
  done (took 85.07956222 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.441471254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.44391603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.467783889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.465181469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.477473089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.444740118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.467485832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.445588456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.443870443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.465741289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.445928115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.480203158 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.447164748 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.444693067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.466683572 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.446394105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.474080201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.445150197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.445536789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.464367785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.448715049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.448153553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.445848483 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.46901006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.445775502 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.448550979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.468342348 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.445630275 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.44527269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.469007351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.447689277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.467181317 seconds)
  done (took 79.875082921 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.462934434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.446512572 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.44733072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.484191294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.448488779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.447364805 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.467336412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.449218318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.446421268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.467996224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.481548254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.448624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.469569954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.447092674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.450848701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.448509403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.447203789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.447582898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468234296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.468858161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.450032855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.448406872 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.450513139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.446919232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.447794127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.449123681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.447788049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.460347952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.448868601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.449527332 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.449402743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.456859475 seconds)
  done (took 79.85461987 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.69292838 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.464489769 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.467704617 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.459905708 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.46977435 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.464092679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.460262944 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.699271481 seconds)
  done (took 15.481244455 seconds)
done (took 261.587330723 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.458562486 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.459442482 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.484163663 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.476092727 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.476842802 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.487874179 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.687323456 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.484434161 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.682002338 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.476314176 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.475893056 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.461196293 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.432798906 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.606541321 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.465377236 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.476193189 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.452613299 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.451343752 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.462681201 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710115455 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.487906356 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.45312201 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497029541 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.464140429 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.428206167 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.536301129 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.536743173 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.622003726 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590000676 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.53524371 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.454837954 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.460910089 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.462558167 seconds)
  done (took 69.001345673 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.458151393 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.468281924 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.469273167 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.469252509 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.469756369 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.468950636 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.460879873 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.46815004 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.468448724 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.468857623 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.467802186 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.46943491 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.472454759 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.46873903 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.468965542 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.440933937 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.459509314 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.469723913 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.45905413 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.441940354 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.469032226 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.469291981 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.471426293 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.469716313 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.469571573 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.470558121 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.468749825 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.471669332 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.470292479 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.470766254 seconds)
  done (took 45.297350019 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.471203855 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.470985399 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.454958831 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.468187937 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.460114267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.467085434 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.819652878 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.471846291 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.466467513 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.466712269 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.456563191 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.496156404 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.518583723 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.461629096 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.464528638 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.47202573 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.472162322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.46040401 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.456011265 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.479235518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.826838073 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.473388052 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.820012109 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.480801355 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.467591549 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.46495855 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.467796775 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.457361155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.4642569 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.456802333 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.460193575 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.82093065 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.458120974 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.469968943 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.459962098 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.480668886 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.47243537 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.457437815 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.467857562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.465260156 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.837976565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.47098178 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.476525132 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.461822202 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.472321687 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.476769972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.463130269 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.462513627 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.784862865 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478532208 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.466343415 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.473050527 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.483133948 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.468048143 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.787494583 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.477424081 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.472299373 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.463775018 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.476628114 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.843558698 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.483323345 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.467846535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.459677362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.494052469 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.483450319 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.474521636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.488937746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.475164314 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.477071934 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.474743207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.468790273 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.472716238 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.476969858 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.461801158 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.488637178 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.47615568 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.475352107 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.461661602 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.4691253 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.839704416 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.478243492 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.472089939 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.856627795 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.478748434 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.485822957 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.483294405 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.47805391 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.545109325 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.834295188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.454643959 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.48833931 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.469255877 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.845877644 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.484740578 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.477866906 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.469427218 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.481957366 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.479070885 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.47584742 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.468267743 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.47745784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.484321871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.469801799 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.478216405 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.844396894 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.483091076 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.476751964 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.477149833 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.549788266 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.480978792 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.484959441 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.483530939 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.859902071 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.483755786 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.487422159 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.466795183 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.480287222 seconds)
  done (took 216.803391417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.467871289 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.467531879 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.467720248 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.470847927 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.469593344 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.47690084 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.468052083 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.472063298 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.474184084 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.466408199 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.469163513 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.478801623 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.474433211 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.470107006 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.478181752 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.469226961 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.467016606 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.47741975 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.473827111 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.46953282 seconds)
  done (took 46.746710526 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.48323466 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.160243931 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.137636602 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.491939324 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.486797852 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.477453187 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.547906098 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.490665063 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.485579331 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.842841274 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.701213641 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.491091186 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.486406111 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.484324551 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.132196688 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.460276107 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.843857059 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.164616941 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.489859183 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.161553351 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.458437855 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.485810799 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.476114982 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.211222879 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.8852266 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.847342166 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.55384123 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.21815052 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.492960234 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.488527038 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.210105229 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.49104754 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.476769936 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.193258456 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.492490778 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.50294048 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.487868864 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.552208587 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.55766221 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.871963268 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.201487634 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.845445143 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.501544428 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.658665673 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.490476902 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.458936851 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.174557808 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.492392436 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.459160792 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.490587671 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.494009904 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.150538092 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479495736 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.146025698 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.487597795 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.488122515 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.163990785 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.146510596 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.137108519 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.700795704 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.482621002 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.833643977 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.487704517 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.175647223 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488196281 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.488919339 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.488829649 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.704190113 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.165628383 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.835164674 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.848605717 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.847524901 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.489500985 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.558437203 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.488074721 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.849207155 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.561979706 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.90517069 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.848236285 seconds)
  done (took 137.013736948 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.787108461 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.606566477 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.927283893 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.127089268 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.048013606 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.629854057 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.612486851 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.758416867 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.483216189 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.587501896 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.252365427 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.582940218 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.290851235 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.558976799 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.595943256 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.613799357 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.947776781 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.474003739 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.211353501 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.228844675 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.499010453 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.595868596 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.300470025 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.89315736 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.488377663 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.2784542 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.475854832 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.069150453 seconds)
  done (took 57.249581601 seconds)
done (took 573.415216529 seconds)
SAVING RESULT...
DONE!
