cset: moving following pidspec: 5865
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.566404848 seconds)
loading group "string"... done (took 0.538206569 seconds)
loading group "linalg"... done (took 9.67813868 seconds)
loading group "parallel"... done (took 0.172327361 seconds)
loading group "find"... done (took 4.522191894 seconds)
loading group "tuple"... done (took 2.09481485 seconds)
loading group "dates"... done (took 1.423986598 seconds)
loading group "micro"... done (took 0.193779251 seconds)
loading group "io"... done (took 0.520175575 seconds)
loading group "scalar"... done (took 58.792023973 seconds)
loading group "sparse"... done (took 14.215856849 seconds)
loading group "broadcast"... done (took 1.753792015 seconds)
loading group "union"... done (took 11.329885037 seconds)
loading group "simd"... done (took 3.914915577 seconds)
loading group "random"... done (took 14.243379274 seconds)
loading group "problem"... done (took 2.259541804 seconds)
loading group "array"... done (took 24.27589996 seconds)
loading group "misc"... done (took 1.155955097 seconds)
loading group "sort"... done (took 3.809843556 seconds)
loading group "collection"... done (took 22.310868792 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.690750758 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.205466421 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.196764686 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.20651865 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277445128 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167112382 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159298959 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.171480955 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.659261768 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20660693 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138317449 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412811713 seconds)
done (took 6.255788812 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262434071 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241316161 seconds)
    (2/2) benchmarking "String"...
    done (took 0.184802551 seconds)
  done (took 1.135387468 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07972578 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158722488 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110145013 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096120254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098319346 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11104778 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096476794 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110648707 seconds)
  done (took 1.496744384 seconds)
done (took 3.690496676 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.510697415 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.897958812 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.542510957 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181249725 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31627339 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306991413 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263954166 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221190767 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093038577 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085365185 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.180606696 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.434145921 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.388065061 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.965196552 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068966242 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095870222 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.15372318 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786891126 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081206137 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109304612 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529066161 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212256391 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116282106 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106704561 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187300424 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135187722 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.14028013 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10285023 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66898542 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134807855 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.216473199 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085557039 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137464198 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16589882 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21614676 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111546168 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687523393 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200577741 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095864425 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101297239 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690212561 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11901681 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205830294 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107591196 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068219708 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161767079 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113401083 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079854987 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094812336 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.104228827 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165126934 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480615866 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10743957 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.191926432 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096106565 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699875871 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098932134 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273232861 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128710571 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096313993 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092311739 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089227548 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157463809 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096033721 seconds)
  done (took 20.300160097 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168816719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187537465 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079944594 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159048368 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123212316 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099938896 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086433478 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079521146 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127845587 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183800677 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139863037 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192859581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079107545 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091073523 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.17093284 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232044662 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127744457 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106076757 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089601129 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110271564 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123730678 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114654664 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093339174 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092621136 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173604968 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208669901 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113800575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123678716 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092258939 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096607467 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144018105 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146218455 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094280285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089783414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189057212 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109526568 seconds)
  done (took 5.374685426 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.244268772 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105047297 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250890354 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199133563 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153073306 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182865363 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176172543 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295874496 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.227594305 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16438061 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130492152 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097175277 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081063101 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081346168 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097215994 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.322411949 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150787122 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.192804546 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186209643 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100028014 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100309194 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384584171 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102404712 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086980334 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112123057 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064512394 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224112088 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095809251 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.06898042 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084374346 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12279264 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116476753 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212687801 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.19051019 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.144481781 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086056963 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115698721 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122892304 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087157173 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224973371 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121067561 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079969248 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133838738 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119022817 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13180929 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095533657 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.12775193 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225402825 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08847857 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129953606 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.023860995 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196587848 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.160384012 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085866157 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294773868 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129461226 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102363226 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.112050911 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.787875539 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130736527 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084050144 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080780594 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.116438271 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079881247 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.474857871 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127097867 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.457571036 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087469782 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158919511 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099117003 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122092132 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087274716 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103518471 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112650359 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08549495 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.106349836 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08213768 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088082709 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098266826 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.094499517 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127814577 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087717858 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081588378 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159906787 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103252935 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110262905 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127427098 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091018837 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.105096884 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115031108 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101654617 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082505744 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089948589 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186167039 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118569757 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112949 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117081788 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145448454 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094248996 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.269486853 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100399499 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12498391 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100468433 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115398544 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11837057 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084090163 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085620665 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097580565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083601413 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149410061 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103232401 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083254232 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090473167 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111429603 seconds)
  done (took 28.940513666 seconds)
done (took 55.325891863 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.430950751 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084499153 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085417077 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106653716 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085158245 seconds)
  done (took 1.584574547 seconds)
done (took 2.352473314 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.313141287 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202019475 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088567547 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190247866 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089309821 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198315163 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185452494 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103463646 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209367057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087620709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.196984198 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086894709 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108786669 seconds)
  done (took 2.849956129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105471793 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107326009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103652636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12285417 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087103675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106019278 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122402995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110049958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102940604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115027896 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087878214 seconds)
  done (took 1.937314235 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101902554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105185304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093523206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120492836 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088232658 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100319042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118517864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108769209 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100610769 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115156962 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087509173 seconds)
  done (took 1.908286871 seconds)
done (took 7.459660129 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.223650927 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.978552859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191727034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245444899 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.369309324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.305578873 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617154249 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20148449 seconds)
  done (took 16.033165251 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.20610065 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.115142505 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102258953 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098825137 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.115825902 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09454659 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.093824082 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.118685832 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099712121 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095214063 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116899712 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096657962 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101835994 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09632866 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116040804 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102827321 seconds)
  done (took 2.603380849 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.147597749 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.146344308 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099435759 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101113207 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115606531 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101386008 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103977189 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118144214 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0957216 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09678207 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121528652 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100054134 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098794616 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113014022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100473112 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120566449 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111886854 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100458375 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118370081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117179706 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101627239 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099672172 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116787407 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100995943 seconds)
  done (took 3.503020112 seconds)
done (took 22.908870186 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149401401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104523557 seconds)
  done (took 1.029182761 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.165921868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184851161 seconds)
  done (took 1.13007059 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113734785 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092247206 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139855494 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106418281 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092128196 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109879616 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118303313 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10950324 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092594736 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093262139 seconds)
  done (took 1.853165895 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096435657 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097345409 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124283332 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169563462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120823814 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096107892 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096576737 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114479711 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098398686 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092799511 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115792727 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111737743 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097857626 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129631499 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096764889 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114694055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102585462 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096124025 seconds)
  done (took 2.756132955 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092567498 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094424578 seconds)
  done (took 0.972621449 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097779404 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092642019 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093986393 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111725171 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09251386 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092545777 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108501926 seconds)
  done (took 1.474847954 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.543864342 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243168702 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377334576 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075502199 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128191231 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.451665467 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107876148 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072807163 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092074069 seconds)
  done (took 2.912870484 seconds)
done (took 12.912403945 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094286501 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.242785204 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.640812006 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115485077 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093806831 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163299816 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.321657314 seconds)
done (took 2.462926186 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350299923 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164963016 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084767274 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094323377 seconds)
  done (took 1.479041015 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084590506 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102357499 seconds)
  done (took 0.980547876 seconds)
done (took 3.25475579 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092043898 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091531822 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091954361 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108239812 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.09069184 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091183104 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.144285597 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090423859 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091138056 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110359774 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091780735 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091135541 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09022118 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110712332 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091861333 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091205802 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109630422 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091342272 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09045438 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089831535 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109202923 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092164932 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091873764 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109535088 seconds)
  done (took 3.181963642 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114857064 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092008418 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113068708 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096177244 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096885505 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113360295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096000756 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092590754 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113322302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094840412 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095430012 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112472264 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094686901 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095811695 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109976066 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095978965 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096789054 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093695853 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110817514 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096280399 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095802266 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110963342 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097939409 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095108323 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113140714 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096870908 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094623136 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.113707965 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096616686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098804044 seconds)
  done (took 3.833935796 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099137467 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088857388 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090901084 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117332727 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089983998 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091925656 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105817297 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093674691 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093199561 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091250291 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110821494 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091889269 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091167319 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110510771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092929345 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095133676 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118051953 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092468043 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091157402 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092790781 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112187939 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09311624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091002634 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.110195996 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092578882 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089100506 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091204755 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109192447 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093228126 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09152323 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11329227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095345295 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091513662 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119802455 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097023512 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09202546 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.116021458 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090034494 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094239917 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088270652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106575145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092492139 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091425592 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115949242 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09207777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09222779 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091897789 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111398034 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092407282 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094085708 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107438383 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09324384 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093743974 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110835184 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09617061 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088168964 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092122329 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10614171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093848806 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091139872 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106146459 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090107548 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098216121 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091696576 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125141891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098228622 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090899339 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111360599 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092891352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096871885 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112081921 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103396598 seconds)
  done (took 7.892484442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115778899 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099931633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111181596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095065162 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093532075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092604863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115394982 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091951847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092832755 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11723523 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092969225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094226717 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110336238 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093934361 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092153897 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110982409 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099543384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093203891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.111253044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094588075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09279958 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095946488 seconds)
  done (took 3.01119018 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240971216 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099198299 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140551322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124960932 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111763793 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124681917 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096876007 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098527823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115188042 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104109538 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101108458 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114752232 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111319952 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118427141 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102864896 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102828439 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115691248 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105056726 seconds)
  done (took 2.934506057 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107005717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094830495 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156178799 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094978768 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094661968 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113812867 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100653652 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114316073 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112775445 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095330837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100300883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113096016 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095746813 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094232653 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111594149 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095087371 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094826444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112189407 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102962395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100034718 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1164301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102049359 seconds)
  done (took 3.129180952 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107726199 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094426253 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129532603 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098372356 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093542482 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112621305 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099703181 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094855638 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118609636 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095507466 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095504533 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093874996 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127318425 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095823009 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100397893 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113878308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096403461 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095678996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112610619 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09462118 seconds)
  done (took 2.880809215 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197305747 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128732083 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109871304 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11688714 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130135054 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110047025 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13774936 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110641164 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110006377 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13908291 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113332848 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10928792 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137520281 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116193966 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127952514 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119527072 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135775227 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120242456 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110061412 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12815254 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121786437 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109931996 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138358586 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110277362 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126899168 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110393089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109259495 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134130813 seconds)
  done (took 4.282072671 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09404485 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093665333 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092017707 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112291444 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093158634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092994367 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092257612 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.111980371 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093636837 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091688615 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111269946 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093913688 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092492558 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09220132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111901102 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094310527 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092631892 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111203457 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093681466 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093282673 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092449885 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111664549 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094974089 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092595714 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111217564 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093845454 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092881504 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093087187 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11239446 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094069294 seconds)
  done (took 3.755257774 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106399354 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104824713 seconds)
  done (took 1.025902875 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101853734 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107487062 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091997593 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112114815 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100600293 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093317174 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120290366 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10201402 seconds)
  done (took 1.64462946 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.169987259 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192107181 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.100225384 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124492228 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.172403348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.187915447 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133445322 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119391859 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092594456 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086630919 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.1853837 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085359598 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113429019 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092011211 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094100514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120073928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095314914 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101907861 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.121923675 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09678668 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099265766 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117240188 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097223258 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104404897 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107299818 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097325784 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096600063 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124933555 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091478812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096588539 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112622213 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095346343 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098107727 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.117760575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096221524 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.192937942 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102998782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090503967 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115495203 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100393353 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128219657 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.11893796 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097255314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093745232 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116223019 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099799074 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098738744 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113625832 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089098341 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090375459 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.114011077 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091928101 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094140394 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095136888 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.114479502 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101479315 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.113850861 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092612685 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091181776 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09096436 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111973666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091490475 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096184577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116894753 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097198394 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094954812 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112997889 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095834254 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096495231 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114249026 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094101072 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108962181 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114161166 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100340972 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09832249 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114162352 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093343644 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100953341 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112811692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.096701962 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098014698 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.142445488 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09787774 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091121015 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109010022 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103089157 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095847593 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115518042 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088994767 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102374471 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115007642 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097123315 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087875141 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092017287 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.110441069 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098440381 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088569852 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114294353 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094184742 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099719943 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118244855 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094681384 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096129264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118955839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100988191 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093923605 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.179253381 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091679745 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110676434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097997098 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099340286 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087554849 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.116260734 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093197186 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091145179 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110292727 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10008221 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093542901 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.117141712 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098636007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096620457 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.116879527 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097883816 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094747593 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110191876 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100744515 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102785906 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114821305 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098808166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095996984 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113897235 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096866438 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098514552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091610323 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119385293 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093271707 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093819193 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.115450994 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100652115 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094865555 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109607583 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094810032 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095806247 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113872721 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097663537 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09448932 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110466562 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08808676 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095783619 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109699984 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097562616 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102765722 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.110156257 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098770521 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0920689 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121425147 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094277491 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099640394 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098631536 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121369065 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100815544 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08693375 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113321883 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098188464 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097171225 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.11088058 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096277188 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094936234 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121322551 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089810024 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099700318 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106329932 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.094191936 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101536516 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096739746 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.11871363 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091515339 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132377029 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126535015 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100556572 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094216729 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113972943 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100979042 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093797472 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118667604 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100509569 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098942401 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112551115 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095585828 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100089054 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111063355 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099736356 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094821485 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114426982 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087984792 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095482114 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107050066 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101162235 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096834939 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099628103 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120078957 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097291562 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093618609 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124217192 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092204603 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098270597 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.108245818 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100956903 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105010071 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120700614 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101920293 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096105797 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111986098 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098329683 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103446884 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115632581 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.097656483 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096513809 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088625027 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.109442199 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101625772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098042845 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110940365 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096314692 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099019226 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126080978 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093616514 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088836367 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118464646 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101214686 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091020094 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115774429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093189435 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094900126 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121379193 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089992519 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091710614 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11616603 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101011798 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095247308 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113957508 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098699702 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100924845 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09778974 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.117928195 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093783295 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103489906 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114335908 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094930298 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091326488 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116521801 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090577021 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097581613 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113391514 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093790908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091771726 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118256658 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101924902 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101334394 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093813117 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119837445 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101843817 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108879907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113720467 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100038909 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090969878 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10813093 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092571688 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088197389 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.11719067 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093216044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100734248 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.112753585 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095446355 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099565105 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11638149 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.094665809 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100490781 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125617162 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090584774 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088408519 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112012708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097754051 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093209967 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110627057 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0996464 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096875727 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099394203 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118464646 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091988234 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095297453 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121649478 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093524323 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102285353 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120826817 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102928452 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09146163 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.11965956 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094052882 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098914324 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108111723 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097043765 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094601345 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114864746 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093673854 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094119231 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111423387 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090259382 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092421669 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100413607 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.114865235 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10009995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094291041 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114686372 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093003237 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091496482 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121831694 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094439733 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102193303 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116343566 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089455301 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090579256 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119392557 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096765587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101934331 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110648568 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101104756 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103576579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099883303 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117405502 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105334694 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103678687 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122945243 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101664604 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089610976 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11377187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101691353 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096923498 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118195407 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099965087 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090195268 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117677465 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102983836 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096578831 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113286404 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091559548 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097032451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102104185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118639668 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100215118 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098302305 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116951395 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092633218 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100441334 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119620589 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097584127 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102296877 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11548815 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10071588 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093060018 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.121200677 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097894921 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090883065 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090546291 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113100416 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102583715 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090418412 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120025459 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101660553 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093586063 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113522606 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101770274 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092294767 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117003566 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101897944 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093631529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124774037 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099202768 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094553924 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099807525 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120903922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090637993 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094906063 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11583142 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102161804 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094249066 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.120092646 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097021765 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100824693 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.118684366 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101107201 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100826578 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.120488646 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091657117 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102921049 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098998553 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11982201 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.094816178 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093193206 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110398536 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09591059 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101065575 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113280118 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104665893 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100940559 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114072886 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094591428 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101546922 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114141679 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104366414 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09384266 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116461947 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09140897 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098831353 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114332975 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105224204 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092730507 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091266564 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121049541 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100511524 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099694172 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.118925947 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102334732 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090287808 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.110576631 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100423385 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092780723 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125177231 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100588559 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094943847 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114346315 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099575931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098180222 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101968064 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.112184727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09283478 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096728292 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118537001 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.096366793 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090541122 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121277643 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095674387 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098211232 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115346512 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09204725 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095630527 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122517046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.095760641 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092396596 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113863502 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104219049 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.096345561 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112551185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092389682 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102574846 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117499649 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106065443 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093830438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115774709 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09576539 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099493868 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102492712 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.116113299 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09738934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094846279 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122979046 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101645538 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089777059 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.114724365 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106746256 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101801982 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120625046 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100019004 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095605733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123928608 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104541017 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09929426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110241673 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09441885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095359333 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09065657 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.121063161 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101923227 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094734393 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114866702 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101995303 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100611328 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.120555065 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100316249 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090508367 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124307707 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096359041 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099687537 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110781266 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093166527 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100070546 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103579791 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116963338 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098070013 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0989424 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.121690964 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092705155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094248787 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120936188 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101610686 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102491385 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116648842 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097623867 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102986699 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126586489 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100396775 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096860432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124144628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106812675 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098722889 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116588639 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102720883 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103328293 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100686407 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126188952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095337194 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095397327 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125073098 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105318491 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105332319 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117355636 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090853452 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103687766 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11681276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092183231 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100157779 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1255388 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106199468 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096534832 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115328353 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108396187 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103173874 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118527083 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096278933 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095927143 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.121917808 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096320488 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100836636 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094664063 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.125605497 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105072439 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102119551 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127518171 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.093427942 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102863918 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121009872 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10502816 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098202293 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112554956 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092604584 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100764001 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12456137 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104802643 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10056188 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100744655 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.123107135 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099269328 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097070305 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.117335801 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104848389 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102852744 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119211179 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100955575 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097211314 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119443122 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101849404 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103992624 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124717466 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100294109 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108224097 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124516532 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098425436 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094765473 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118202531 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102785417 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09896035 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101974978 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116962848 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092805657 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103697963 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.12578939 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098116946 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104660726 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125738895 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097637486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100669296 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126534317 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104562948 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099469213 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118823281 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103611849 seconds)
  done (took 63.240249687 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148343724 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10581178 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121492404 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100332591 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117726982 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123111536 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10064087 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100601411 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121929961 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110910473 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101428261 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121203122 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117768747 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141917349 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118951998 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110252917 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120598856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102190229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100644223 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120851402 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115930524 seconds)
  done (took 3.288784 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117328607 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113125698 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132118128 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11415921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106475831 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133469836 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11087653 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132380172 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114266625 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107372523 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135756928 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111149818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127952794 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111434213 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107715373 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128884406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114859787 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107195894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134061182 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11111399 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129017314 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114617159 seconds)
  done (took 3.482305676 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130998432 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103801538 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098272063 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120998347 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104663799 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099948813 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123017809 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.1013499 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108910078 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116183419 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093528374 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.096084355 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098545981 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122177967 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095336774 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101040083 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130483562 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105196269 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106226777 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.122076208 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092572945 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100469968 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.101231099 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.113370702 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105887277 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106047494 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.122842507 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103913005 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.092436615 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.123547554 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103299029 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094163021 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091798964 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11318213 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092291275 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103164516 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12307857 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102373563 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102075271 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091664171 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123004539 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.1046631 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091927402 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123216437 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102337804 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094960818 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125631967 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.103502198 seconds)
  done (took 5.997101377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130460305 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.397690376 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105172523 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138707164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13840056 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110799006 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102679468 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139841875 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103368103 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127231892 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115569305 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11379834 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129409473 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107398504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.128887829 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106966396 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106155887 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102382852 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129590501 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103352458 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.128686407 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106320224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113299464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134085138 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106958643 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103411683 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124884247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107398993 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112179419 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131910838 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107729412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129214616 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115938556 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10755397 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123789625 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106875323 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11615255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.126614285 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106723208 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101980496 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.127163936 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108880745 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.1057367 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13717331 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106569767 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106325812 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12720654 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10259503 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112859324 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127633689 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111443152 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.136333747 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107953393 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10647604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128559504 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115561692 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104310541 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.125367758 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10800759 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114738334 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.125941434 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109464758 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11536942 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.128212463 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111795222 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135858827 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108030427 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108371253 seconds)
  done (took 9.222508323 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136678205 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109108917 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137826814 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118177598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109027622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.131489905 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109514625 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.129269092 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111085844 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114650892 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12973654 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.229033454 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129221391 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113339553 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130369232 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110425495 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108677716 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129592736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109458402 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108602567 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129726832 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118050067 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108586923 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.139472205 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119966023 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127013218 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109745939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108426078 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137906014 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109306637 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118813992 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.131534604 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109484174 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.13739722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122635707 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108781011 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126268362 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110117774 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108924885 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130403385 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106343202 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116465718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12953861 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106416675 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109478447 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131633848 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116210518 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141225571 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116701502 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11487187 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129920921 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118970995 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128895721 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110254942 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117010201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145201774 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117541414 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138355373 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11193679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116771344 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139042542 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122452862 seconds)
  done (took 8.489961468 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10352336 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101625074 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100945379 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122168189 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102789398 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101969532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123302202 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103037335 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102070661 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101676896 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124035536 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104058065 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101621861 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122051903 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.103623931 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102022611 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101165448 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123829643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103200973 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101726274 seconds)
  done (took 3.03569993 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112429311 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118126962 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124976158 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112559355 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104115335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130441587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105169519 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10527512 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104457278 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126816336 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111790612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132457836 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105394129 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110184891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.133051627 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111417172 seconds)
  done (took 2.733889205 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122852774 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119821802 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.213565636 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10583804 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128072153 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112269653 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103316211 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129337956 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104540459 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108601031 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129677733 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107470161 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103878364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126223873 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106402288 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107222573 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101770344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129470654 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104672738 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218304855 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107802745 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106047214 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128443009 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107779558 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105056935 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132639632 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109530549 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104232459 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129290533 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106054338 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105704853 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13352501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103295188 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108740993 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127148362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.107909253 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104393792 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12567038 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108990536 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104283862 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126129517 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107477424 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105257169 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10581604 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123822659 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1056179 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104687405 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131701664 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105938611 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106852904 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.12671779 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108796028 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107273209 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133735442 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11194594 seconds)
  done (took 7.350675181 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116114696 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105403557 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135990757 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103596763 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105354948 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104836307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127897828 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107165303 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10482136 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125210196 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107557742 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105976675 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128307936 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107733672 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105583049 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.127136279 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103858249 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105538491 seconds)
  done (took 2.919979489 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110548485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10464096 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107558649 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125941924 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105264084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103750694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126276463 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104232668 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103174014 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124826488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105925062 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104862985 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102462262 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12629099 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106336777 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10368211 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126270107 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10513383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104230643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123799123 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107344656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104102414 seconds)
  done (took 3.329626414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117042118 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.216275687 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111458168 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223977784 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.102368814 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124036513 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.112380492 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102711176 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139700307 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.101981963 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099789925 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122921148 seconds)
  done (took 2.469561318 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131957772 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141090497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127815276 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107151684 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114127781 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131204814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110389038 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108586573 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140475545 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121474944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130892343 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119316081 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117484004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139617335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114531534 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135921894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110695501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110105342 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128162666 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126814031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107989081 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139778738 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109759488 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130152794 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110310536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117153166 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13892465 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121018671 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129901365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119075966 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114441578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130996337 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118501592 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141099717 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107232002 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117980226 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12925233 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127244253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114454289 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139748079 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105565868 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134533239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118829426 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114342613 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140188428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109919216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114916079 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132314172 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109768777 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152929363 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115806695 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116848239 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13558463 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117590093 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139597361 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131292464 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141841361 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11801389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114877458 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142553253 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117170626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137070504 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119763484 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142596136 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114672194 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118188563 seconds)
  done (took 9.086698944 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146084638 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105909907 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132311728 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121517269 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13993232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11160274 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110391203 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131965525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111359692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106610624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175981526 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110335749 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138523202 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120192868 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110324295 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131200833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11199895 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117602455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129913866 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132167366 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131074768 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120429072 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117223286 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140379653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121478576 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136573862 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110947978 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110321222 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134414579 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110640397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114174854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132232737 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11812857 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128222451 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120839389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110895318 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131999188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116381629 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110838466 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1369399 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11920224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146767127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110584663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110133419 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14340846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110857254 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109697749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132194255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110663654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106446498 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144485064 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120193008 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144696054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118403953 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130919511 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112353324 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111465501 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133399785 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112801845 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114814112 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14057025 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111797807 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152402062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111751082 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111525635 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141159711 seconds)
  done (took 9.06636689 seconds)
done (took 172.082624059 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176821299 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217611542 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199305232 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159143911 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096128216 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154045916 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129577372 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200730624 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098394007 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096335784 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095712591 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121774215 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.164474058 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096898495 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.120737211 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.100359131 seconds)
  done (took 3.12333845 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184819801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.336544612 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111981768 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123339497 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103215011 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102365112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123940063 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104239582 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10134536 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131080076 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102041398 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098231416 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131354972 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098840153 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101881671 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124095948 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110135374 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101755887 seconds)
  done (took 3.199484655 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123416183 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146265318 seconds)
  done (took 1.180781858 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132927169 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214230385 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.286521701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172438129 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122217847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142309997 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151175649 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135526452 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193838616 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137504357 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115375496 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099595696 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150003992 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10896204 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138996796 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10163988 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129985384 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137110173 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116313115 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.104613303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147820544 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10565764 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106895157 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137696281 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181103127 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137577132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105884415 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104499322 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126183155 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115613934 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107898567 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140434688 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115026499 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179889566 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103941221 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178482264 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130138127 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10371242 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115670575 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122828259 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105981703 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105023831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136900161 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100132705 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104901189 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.131764242 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106334123 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103870122 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132806623 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109921729 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131233587 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.1103882 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175150625 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10989945 seconds)
  done (took 8.031309777 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.870931353 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.144360607 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100780134 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.988879173 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146134016 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1166054 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.864772957 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.150147934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252900736 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.891129871 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118081077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109359228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261265626 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260574546 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.283669802 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362322891 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.728850925 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114627566 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131936959 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165821715 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10985112 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146944035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121801243 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52272129 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103001296 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102867201 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133180274 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110426612 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178698911 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102208807 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127620978 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175012759 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291873149 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209438156 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101577582 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124399548 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102478814 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184044563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274039737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220697129 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195098482 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100159873 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102509055 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130393676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122507757 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099829315 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179574791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192298336 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187575389 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107269926 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110474453 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135407303 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108625056 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179142264 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099621327 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356406496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.379902221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103803144 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110952867 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137141462 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269661945 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10407322 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235408846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150099325 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216054849 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102677093 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839264197 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185047833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102528401 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10706564 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.13263195 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109985914 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130014438 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169402408 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.504278512 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113024289 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105783354 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124306938 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234422688 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103631893 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102095734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181014359 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103603608 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133170356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114035102 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132247544 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168225163 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26972592 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111213095 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132874299 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108467354 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137332966 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104309773 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231969721 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231351208 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173210155 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208929851 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132852579 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.15758212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185364983 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127325898 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167310313 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131085454 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115572937 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109706759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246569414 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135340464 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103625817 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.130716482 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111373381 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159049136 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106325742 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111991965 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187211725 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.561141749 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187888977 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099834484 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107928949 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135136459 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179890823 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110556587 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264915392 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11185759 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184759738 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109215215 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122603929 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111675863 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179886562 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110338612 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134625499 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110208428 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112163844 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280090576 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220312234 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133568452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254717726 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177833718 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129447746 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170744059 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132860331 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166290559 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13611263 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109980675 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123852342 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831929186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116963127 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110530745 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130957226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186074849 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124489923 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105717075 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101500686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100194794 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837280075 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110447425 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101040363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10474663 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131170591 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111418848 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131953162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109721984 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178354873 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244988836 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112081083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132423404 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103699499 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179608804 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.104580967 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103762287 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1249485 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104227779 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111854587 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129596019 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10710531 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19101165 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154622385 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251623268 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.655296878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103836599 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103468954 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242011502 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125517917 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327451208 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111021729 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233270726 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184918837 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121593186 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36372677 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164202445 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208300441 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105360605 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190085276 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100904172 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134441608 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.155080265 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12504572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109764167 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177392112 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114341077 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135792617 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281434112 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103323265 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252307643 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100250248 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189720494 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103729043 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131039778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328277569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102587068 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139239005 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157117606 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13055508 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105127335 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.686533882 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10349235 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137037817 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109359158 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232009183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185270208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111738721 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135991176 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113294435 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179704626 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227933175 seconds)
  done (took 48.061865969 seconds)
done (took 64.498820348 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270115424 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178516277 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376494804 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179357166 seconds)
  done (took 2.00808378 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.275196029 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169338573 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253949193 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101579328 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.261964528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099619652 seconds)
  done (took 2.090977421 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179965763 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171147113 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149558753 seconds)
  done (took 1.438576302 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204976345 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.218948164 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.332393526 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237237989 seconds)
  done (took 2.016846626 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.294155982 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120340722 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126867041 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.238125393 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254505478 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207766853 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125926209 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176514206 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131995626 seconds)
  done (took 2.654687862 seconds)
done (took 11.142043203 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.226623511 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.434226238 seconds)
    (3/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.150230835 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.227274642 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.232508478 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.225184711 seconds)
    (7/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.414800793 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.255574889 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115790003 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.225261676 seconds)
    (11/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.341521852 seconds)
    (12/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.339756404 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.183862487 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.175217044 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128715879 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.317543592 seconds)
    (17/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.202873703 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.225399752 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.285618443 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.129050559 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.232262427 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102620382 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.14677013 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120332481 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076999037 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136126598 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131418039 seconds)
    (28/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.313676551 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123057688 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17505627 seconds)
    (31/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131462179 seconds)
    (32/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08064594 seconds)
    (33/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085791147 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.132268706 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.238976689 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.151795211 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127662254 seconds)
    (38/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.146693096 seconds)
    (39/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.147076803 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.146845559 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114872149 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085542791 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.249472925 seconds)
    (44/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.207710841 seconds)
    (45/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.202627094 seconds)
    (46/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.144398739 seconds)
    (47/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.140273424 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.136861817 seconds)
    (49/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114863699 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.293079588 seconds)
    (51/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.132712756 seconds)
    (52/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.214619191 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109422783 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121271916 seconds)
    (55/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178971781 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.247591052 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.217601694 seconds)
    (58/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17687766 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.194526902 seconds)
    (60/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.135420294 seconds)
    (61/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112276219 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.132594934 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207738218 seconds)
    (64/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.150900614 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149949795 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119840589 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086129807 seconds)
    (68/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077344333 seconds)
    (69/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103510789 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081196429 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143991355 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.122917726 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.217366747 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113330054 seconds)
    (75/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086077217 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148709274 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.140512003 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105922268 seconds)
    (79/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105289436 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110823381 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.133253677 seconds)
    (82/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084323014 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149808925 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19662242 seconds)
    (85/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.29231294 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223792495 seconds)
    (87/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139806117 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109503171 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104990865 seconds)
    (90/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.110613089 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106094427 seconds)
    (92/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102454649 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.127305854 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113850232 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090664532 seconds)
    (96/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085213769 seconds)
    (97/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.102738484 seconds)
    (98/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.210715133 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.152933624 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103938845 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084771255 seconds)
    (102/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.104858655 seconds)
    (103/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.103022808 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107560046 seconds)
    (105/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.140196319 seconds)
    (106/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084219439 seconds)
    (107/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.102488732 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.178747032 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111935044 seconds)
    (110/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125521409 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083684245 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.13658825 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093458044 seconds)
    (114/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.137254954 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.112912542 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105787335 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128300184 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087841687 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085986982 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079101679 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111301025 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109730853 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.307357521 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10755858 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102718998 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083011813 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158150139 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11343768 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081573013 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11219618 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.16115066 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115997642 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125743085 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.149924373 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105665322 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082710727 seconds)
    (137/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084989788 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129747086 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106156796 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10403369 seconds)
    (141/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.103147055 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114518403 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085515484 seconds)
    (144/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086243789 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10479978 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11415062 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107436707 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087240983 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109306986 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106676206 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087137967 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085783464 seconds)
    (153/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.166707442 seconds)
    (154/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083046105 seconds)
    (155/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08594857 seconds)
    (156/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079438035 seconds)
    (157/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134504954 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107175012 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106765183 seconds)
    (160/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07963352 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.109207323 seconds)
    (162/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088120354 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.104423475 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080278854 seconds)
    (165/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081896099 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131014076 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113908898 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127807174 seconds)
    (169/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.171829044 seconds)
    (170/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083915629 seconds)
    (171/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080854765 seconds)
    (172/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079884669 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079847863 seconds)
    (174/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.1071931 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.134498179 seconds)
    (176/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114637273 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.110426612 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106126066 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083091851 seconds)
    (180/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081960702 seconds)
    (181/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086928513 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149909077 seconds)
    (183/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081439965 seconds)
    (184/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082557076 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083601483 seconds)
    (186/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.105203042 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11495582 seconds)
    (188/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115531451 seconds)
    (189/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080240302 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.10387564 seconds)
    (191/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081742937 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10876453 seconds)
  done (took 27.572480342 seconds)
done (took 28.512778966 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.228205556 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129935797 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114044111 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113573171 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234123487 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122016634 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154832678 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116399927 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124291783 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.140008865 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104146903 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126463219 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138075031 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.207106644 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14130065 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106237392 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104204871 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148844277 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129345289 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12927475 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.235024789 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106391253 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149690543 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.1061151 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235815392 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107622275 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11320881 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140588269 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127726927 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113888505 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139612517 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.107428396 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128818965 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152848627 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106771259 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113594263 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127496172 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087317249 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115049128 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114902461 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.152313154 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115524816 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113558924 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.130152444 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115797057 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113148257 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127772394 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11803114 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103398275 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.139235094 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107422809 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127981848 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.136971398 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10536291 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103485715 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129803797 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124801624 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10470682 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14918608 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106010129 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105650935 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127163797 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117281953 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106104904 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113062492 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12950774 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11522855 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115404829 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.136872363 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108703209 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104844408 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136796376 seconds)
done (took 10.258565073 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111314504 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149481089 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.235348434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237418599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133183278 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146930486 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119116055 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128663219 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143897 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124823065 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142512466 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160322203 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241345076 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122600228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120483059 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142338561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11737561 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113118994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238136079 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.154269618 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134074801 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122357529 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156922818 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122745986 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108292542 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.157438876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112331743 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116929884 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132936458 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128842572 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.152915954 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.111377361 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112264207 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150680125 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126800621 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11991888 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145351724 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118955211 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10977632 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13319543 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118451026 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12470678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132734896 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1226517 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117044702 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.147252175 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117337407 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122083332 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133632147 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11709855 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111423736 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158258533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.122980793 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125957777 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145751146 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122936304 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122187954 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.145679139 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113390676 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121445472 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13387694 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110413412 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110446098 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154769472 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113161318 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121727839 seconds)
  done (took 9.915155273 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129374203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139635006 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142916917 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120690069 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114618835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127382051 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.104102973 seconds)
  done (took 1.865307872 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105972694 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.243947991 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.220022671 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.2440538 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242536708 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.257120057 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128703308 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104331843 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165806001 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115051363 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246594626 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273788657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115697115 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.145856746 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22433139 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130178426 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223907314 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131701734 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120331363 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248553185 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122267713 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16293329 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.120273115 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106222097 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.2411674 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.106521297 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294411112 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150264919 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116131737 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118953884 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145540575 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186544183 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245122722 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119205522 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139124256 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.244699763 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.217592963 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.147125553 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.23293409 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136285417 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242394441 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120353503 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120444017 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145153723 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.1212613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.234035208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125608222 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120541935 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145361362 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.226505759 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14329378 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.243401063 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118166702 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119978735 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.140761685 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122204297 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127211009 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146536861 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22743793 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149535916 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247157407 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221300069 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.246878392 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.24913196 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129692121 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24881069 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.233067696 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118700848 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115054644 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147260207 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.249649135 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120296862 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.118281941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.239955374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122268621 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251839148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250547782 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116942525 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.144663089 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109956511 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118301775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132824153 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.214413998 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145311356 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118048601 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125258317 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145389229 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121947281 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111551476 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.155481643 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11972556 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141997945 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126609396 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120233306 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14823142 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.227603664 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.144758212 seconds)
  done (took 17.272452873 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109020149 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.108565412 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112151412 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131685531 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108027495 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.108098592 seconds)
  done (took 1.684678757 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145623197 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12242744 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153543548 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121123503 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.169098808 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251598545 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261552115 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113972384 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165534947 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133130966 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25623 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257060552 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.254450305 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124326425 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259528673 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122514812 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.263605309 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118543147 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155242577 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119374258 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120146703 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.149088861 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119916646 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245320721 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122086056 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122922125 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140561311 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130673809 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128731803 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.160236927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124343466 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.14511119 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.115291686 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114365801 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259990324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112211267 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142599698 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123380285 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123075986 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147450804 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259058012 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121465585 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126636774 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148404207 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117099318 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113951502 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149856976 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114874734 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.260263823 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122793338 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149489052 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123694151 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121778964 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14985076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115531312 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114917127 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.149826176 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.237869075 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150773573 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113435934 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147422099 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122913535 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115121134 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151669008 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122520469 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123460392 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.137934789 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123737942 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118408563 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146546987 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124610748 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121880722 seconds)
  done (took 11.946114866 seconds)
done (took 43.660232842 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.627405203 seconds)
  done (took 2.636634449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.917744499 seconds)
  done (took 1.929181986 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.921215192 seconds)
  done (took 17.96294885 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.429238732 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483378787 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.125163821 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153176183 seconds)
  done (took 3.197711874 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.819805996 seconds)
  done (took 1.851010872 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299218217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265093487 seconds)
  done (took 1.578700336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.710825378 seconds)
  done (took 1.734054798 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.529037107 seconds)
  done (took 2.542778031 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.287258875 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242266213 seconds)
  done (took 1.558500072 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.650308255 seconds)
  done (took 1.678728909 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.860724748 seconds)
  done (took 19.891693211 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262245639 seconds)
  done (took 1.294516573 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285080666 seconds)
  done (took 1.318522837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.390346147 seconds)
  done (took 4.42610216 seconds)
done (took 64.623048017 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118254213 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.120193287 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120201389 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143189926 seconds)
  done (took 1.525528421 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127766317 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120808588 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149389249 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122180342 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127800819 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146813921 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121994355 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123665656 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120880176 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147571629 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12176716 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119624011 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148394779 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.11998998 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118606353 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149051915 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125167104 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121070773 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146301565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121421656 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121508189 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147124017 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123749257 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122215472 seconds)
  done (took 4.149847407 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117608043 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111671603 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.113099787 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134801499 seconds)
  done (took 1.514718108 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129165866 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132205988 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15461177 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127810527 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132441981 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.1578332 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120205998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117540924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145043374 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128594077 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136190783 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15909586 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132093822 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.146596715 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132091029 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115953572 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121027122 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156239282 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127638927 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154052202 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.122051345 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126134057 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149795794 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130840731 seconds)
  done (took 4.28847558 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195985537 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131739378 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177950911 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165338832 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179282924 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118566335 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148381439 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150990011 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127698991 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.148010372 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.123310652 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166165334 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152585884 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122240615 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120330386 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150412982 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132851182 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.151570671 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169196795 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.126275625 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154159408 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133015937 seconds)
  done (took 4.285616418 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.124009275 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111721679 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.132540458 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114367058 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123820704 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139045196 seconds)
  done (took 1.792518378 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112006911 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106927773 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10717578 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130833886 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111075229 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105601627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.130037207 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106912897 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106822592 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105951532 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131467417 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105505875 seconds)
  done (took 2.399542707 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207182422 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149782734 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284335948 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.463070129 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166945811 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189211212 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.30448439 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165762141 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207439438 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139584859 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217512576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16377327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184342157 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214587833 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142967692 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.159030698 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196206445 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238506866 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145194511 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24356973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159719402 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207283202 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219816989 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154538088 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170127361 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164949886 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.149024258 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131463644 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194054007 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168262179 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204208231 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151816163 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170311742 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220215713 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235604333 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206608396 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274201768 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16192527 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173549374 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.217340488 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261947696 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14340832 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219330126 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152625065 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158473155 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186519669 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182008481 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211197458 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137534249 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145682353 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212509775 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208586301 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172527805 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166274706 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320738203 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137875983 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17080056 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219213141 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215984868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232865297 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179539242 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151642398 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202873215 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1931724 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240983438 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142710327 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192489841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127249142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1928732 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234199195 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184062792 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188277434 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.238870739 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133176223 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200484153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16950277 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184632487 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233965297 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172240828 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146834455 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152866297 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134344528 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154838475 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190834742 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148822277 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216502183 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159163745 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339552327 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181169337 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186744906 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162127879 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18868831 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188633834 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150181249 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101612013 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171053316 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163973156 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186209922 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129932235 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183443998 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142287647 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126732317 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18122102 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124650139 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197939347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135477912 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192619048 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174637152 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160542273 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179858766 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178121114 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164104457 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197725144 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219513739 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132167715 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132742229 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246605382 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197206363 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138568948 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205036688 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223686825 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150665178 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138236783 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193550381 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221536202 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146451445 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227753124 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140494193 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163679823 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142652777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200467671 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161915911 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190415764 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129756165 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191996552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195625854 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156533872 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141553266 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213003414 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135083868 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152303027 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138733145 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137963633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171877723 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149749141 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167550566 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155935472 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194871219 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1683367 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18790539 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136954567 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20155105 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133741449 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197984744 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150121255 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.14630394 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.176897704 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226665137 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132421798 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210891343 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163605092 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211644931 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200479474 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131164585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212276924 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130359594 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121871574 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190970793 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197306375 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165483265 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216956361 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2059639 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168498871 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191552152 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150541909 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198434382 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211945248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157588894 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171171557 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17510851 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199604294 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122121884 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.150966125 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130872787 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138111487 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1595492 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1388715 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210912785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165969639 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207401724 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195330356 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13928503 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219995993 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126954133 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189943148 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17627479 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167803601 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.188924373 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218996704 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204827443 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143140479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191973993 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12319744 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127265695 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.162790813 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163258679 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166007842 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137226179 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169756852 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194196064 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201874274 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149343921 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220035453 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195622642 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227419352 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123891523 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161622857 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198825074 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168400325 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209039711 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135452071 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.190042672 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19347593 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171508961 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191844507 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196479594 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207950676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19689948 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195118806 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132262909 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176118137 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162394533 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168281944 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164422794 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175427755 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13250875 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153236665 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167030109 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140460669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215270671 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172314789 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181711306 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18713504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173011945 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15400024 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14268651 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203204053 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147707541 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131337232 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173221609 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226899733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151138703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185700919 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201295081 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132421518 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314859522 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21640203 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208456467 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137675259 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165233651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17483201 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188426475 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165052972 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213406467 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142272561 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235515703 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198537119 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.145073756 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131753556 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176936746 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152030925 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.166684255 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153684697 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193092711 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146478753 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216924862 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137832821 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199550167 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208116828 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147703768 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151434341 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168531207 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255378355 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169619475 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202737792 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165226667 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194494356 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210831559 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126043542 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127183981 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161648559 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187615478 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131019874 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204702707 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192752863 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210434721 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176169749 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192212432 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142429076 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154811027 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169076947 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177894899 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186966653 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1625412 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13938644 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219577713 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128634863 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160471453 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161352502 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314780322 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149589833 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201730052 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107027018 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306577534 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131837156 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159595714 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163415613 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200568661 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13552743 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18555537 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198894496 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141731222 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191706431 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136835627 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208976365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212039115 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168195201 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204922288 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173895088 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164836115 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190515009 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176193704 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175621494 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149799775 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188407828 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196627938 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205635647 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133256401 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198382629 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169741208 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199734757 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203652644 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141327119 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211061686 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130972311 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166376186 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167768121 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125982292 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19081819 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192532793 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132349511 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203000256 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173541481 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13193235 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157638412 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149099896 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195968915 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143086422 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157826913 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188787485 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159106685 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183566499 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239802212 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130804762 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195782578 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148453725 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15891099 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140075774 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172149056 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133803677 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174687508 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2096518 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133364376 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207698339 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16709981 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195518718 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188610367 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145092403 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.293458267 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131291695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191438869 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182728055 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227370743 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152075903 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204752364 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170615481 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181400931 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165330032 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178236772 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219993059 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1949676 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168681087 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160231409 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145112098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168702179 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137130776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152885922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198098655 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143089774 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166970116 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169410859 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174401297 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148237077 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171679234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201033665 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180351496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218252266 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18831871 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167972338 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176260613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208141273 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130497042 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194841397 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173310028 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175093984 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153644747 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163699518 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138422141 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244302436 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126939256 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189887555 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175603755 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197570655 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173739272 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.164408407 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178714625 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17015369 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17840013 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156542043 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155414875 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197724864 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13616103 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127934426 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199811583 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190181587 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167042471 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169319017 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175364968 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197186598 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151146735 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135396268 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314578621 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163146515 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223152539 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136347296 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167595754 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148570499 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189362418 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165226946 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20202185 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132514058 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157538329 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1473114 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182002963 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142617577 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197045169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185176061 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190921206 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187230513 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163277816 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257388946 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170702224 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172031234 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117147648 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15875713 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143187272 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163240311 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145874905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209615622 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243697959 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164913778 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176500657 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137709132 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12777861 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158404222 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16635642 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.655864828 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169554522 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176513368 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104304256 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142224371 seconds)
  done (took 86.810529679 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16265609 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152493903 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168843468 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223374146 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195604832 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291750369 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230296464 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246721668 seconds)
  done (took 2.804252971 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121356004 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158777593 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.145071381 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144868842 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111498815 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.482569955 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159923759 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123625497 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162830972 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153967135 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136529722 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572043484 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118138486 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146406117 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.1237473 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136481322 seconds)
  done (took 4.116421369 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.570670474 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522639715 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.756294498 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.276200975 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263336071 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.206596174 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740814387 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204189024 seconds)
  done (took 11.667418252 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.171808929 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.166793138 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.45203367 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.310533902 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185422113 seconds)
  done (took 2.424200522 seconds)
done (took 128.805210568 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127747949 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125662977 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126322697 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155469071 seconds)
  done (took 1.657137964 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.195646667 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093053872 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094811847 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119565693 seconds)
  done (took 1.636752272 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.4580755 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092648164 seconds)
  done (took 1.710003835 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156713155 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138906491 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171357615 seconds)
  done (took 1.614131937 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137910275 seconds)
  done (took 1.27561368 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128098063 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130012762 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271513926 seconds)
  done (took 1.66966784 seconds)
done (took 10.704454387 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122745497 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.928472259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434184752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137070712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71374621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42886152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.404897159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17736641 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17718573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138368573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135011582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.694339902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.418717143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878679056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.37399735 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.907053613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698601826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114481458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146591616 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114851477 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.375599788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139570611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11501281 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115237838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720487222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424584719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112719012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.921570124 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113212441 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116723642 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431416104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11352561 seconds)
  done (took 20.970975779 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116586822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171462447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147684982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116411033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116058544 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141277742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126258723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126109821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205214085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11307248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162654203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113238422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118738004 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141344581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139315132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112546784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143126092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116225464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121249567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141596288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135999348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112012359 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141885571 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116844677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113172422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161889022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113872232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125295053 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140287113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117280417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118198411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141531825 seconds)
  done (took 5.373082849 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161687391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181162004 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149354258 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150712461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189952437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116178949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227561898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152697421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20750446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114496823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135142534 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139703659 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153891846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11358686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165828211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113963305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116710442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142962663 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121999802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115908525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163218312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113308612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114930537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142514212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114185121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160990095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115270385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125919225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140017386 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118786265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119147484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140382377 seconds)
  done (took 5.683158033 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.128067752 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127998889 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.136052916 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163323073 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.12394998 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126381225 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15607299 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123150227 seconds)
  done (took 2.226841765 seconds)
done (took 35.395126155 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138768904 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13207308 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134366039 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156300183 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.256183835 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123769301 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129797511 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120866278 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157301358 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133774972 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113416098 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149254944 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134851785 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123821472 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.258338089 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.131196852 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.263308833 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261272191 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121039065 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128071943 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.153151947 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234341532 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156282792 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.122565098 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.249524747 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117097293 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.25176337 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123781803 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.124819085 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144121889 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.230891651 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156754152 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121241605 seconds)
  done (took 6.491806535 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.243183299 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.15244222 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1240817 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12255092 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122520469 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150651769 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248387871 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153511839 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121945465 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119606481 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151336144 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.228244667 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.15872179 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117671597 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12371231 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111568308 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.280429445 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.154526564 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115582156 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095188711 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117472061 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.150394684 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.26153207 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148141324 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122661967 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121474735 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.153586849 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.127920387 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123595047 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122894818 seconds)
  done (took 5.703141091 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129563403 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135890395 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.167219379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190335656 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151849338 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162754007 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141191418 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136757754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17376239 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11677742 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130679328 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18046401 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132103181 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126065262 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144242993 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135318116 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138219601 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144932467 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125372088 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133202204 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165540394 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133896147 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138615462 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152882221 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115579083 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122701428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154612678 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126322559 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12457939 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.159236521 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.118032677 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11962883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145570117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151641141 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118162303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15865097 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141887596 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128720768 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157680736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149635858 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119772424 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146241432 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142183863 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171517761 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146223762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128932876 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127056591 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159670654 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115131819 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13433901 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187566868 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119914272 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13594536 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.144180066 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11430434 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125151808 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145255343 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120496748 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131249023 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145636676 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141533919 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123494126 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154815497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119953172 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128057975 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115208505 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142927882 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120145935 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142589711 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152907224 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.154262773 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115840848 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.159734559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129192197 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127517683 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156982602 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117070474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127598349 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15521457 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122630748 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130405619 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147248194 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.120019173 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132885194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164738268 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.131001505 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127657295 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157639041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120694747 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118222995 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161507758 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118657826 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12138457 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129893473 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.146929089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120484735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1290324 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.156218539 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.114677222 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142331437 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148740423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117155121 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.141748472 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148258029 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122649256 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125815371 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186028824 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118790525 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127233149 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157564101 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117174188 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.125619885 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147637909 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.116806613 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134620122 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159490114 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126271504 seconds)
  done (took 17.328498757 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359056064 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345648354 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188743275 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.429662739 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131127708 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277663941 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.344806067 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.34739278 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116514328 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180575267 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179885934 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.313396976 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148342676 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.146656987 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346758062 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.40427599 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178626556 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153670589 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182508474 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131023295 seconds)
  done (took 6.078626549 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138152065 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151275662 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167916326 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145209736 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127111625 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162411435 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116625585 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138570485 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157757981 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126939256 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.119439839 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162274058 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.130425314 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133601486 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161389657 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148785819 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124569542 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150681173 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139627113 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121383243 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132696902 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143158429 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124602227 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168271188 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135738141 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127007841 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144697311 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122320094 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12365958 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153972583 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123419535 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136292681 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152456678 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107275583 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127532419 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160275549 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124403459 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120176386 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121098639 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.149663236 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132150184 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129447955 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153708373 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102149233 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135897938 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11118027 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.159505479 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128905289 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107715304 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.166121474 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129944108 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13150974 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151495243 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139706732 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12387965 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160810324 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128989727 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.13122374 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149257738 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117481629 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11606427 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120313275 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.154342951 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13194548 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128227829 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.167313944 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132723581 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116022156 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.150195566 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121187757 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119981528 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159895473 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137324515 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12542398 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153726741 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129565708 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.125047396 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095848781 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.157627726 seconds)
  done (took 11.941748109 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14216731 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128576127 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161781816 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15506539 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133191378 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149986461 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129822235 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137527265 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131028813 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164910496 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132418864 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130892203 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.1681475 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.128053295 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126611213 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162320362 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129938381 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182137757 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137561068 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14512921 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160954686 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122815688 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129423301 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156598755 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146595178 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127779517 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172451887 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131934096 seconds)
  done (took 5.208021425 seconds)
done (took 53.903078249 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.33351839 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.568419839 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.278928068 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.276016943 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.304159908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.292784858 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.29444722 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.279385039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.695857622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.246820214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.278195014 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.274570949 seconds)
done (took 29.298241488 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.354033987 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.245738861 seconds)
    (2/2) benchmarking "String"...
    done (took 1.64855021 seconds)
  done (took 5.060486253 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.263615086 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.265598649 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.594995775 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.264008293 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.266134541 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.264690363 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.264770751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.280613966 seconds)
  done (took 16.365664866 seconds)
done (took 27.212994125 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.292041676 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.460369576 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.512743275 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.244609737 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.272007634 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.264437748 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.279538621 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.288964609 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.277561413 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.242259019 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.735884081 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.539468043 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.268884262 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.65216771 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.244685654 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.29273101 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.264923912 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.529678809 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.26602489 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.311092283 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.243707947 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.250014475 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.297273836 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.268758688 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.269221736 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.271579856 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.255346159 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.265408262 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.479509371 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.29369922 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.295163792 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.264139735 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.255420889 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.265477335 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.267064617 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.283690055 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.479435758 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.271824022 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.25321565 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.293676592 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.465770473 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.274205261 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.271377736 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.276765642 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.247799529 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.287509745 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.264868459 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.437241076 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.293465461 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.267324008 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.301899634 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.674988209 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.281083999 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.283386386 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.270964974 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.503602379 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.272583826 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.307686194 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.289339797 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.283139776 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.267808916 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.265606192 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.30887643 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.27610208 seconds)
  done (took 147.904234684 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.265175551 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.269518003 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.265958611 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.286162437 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.270398003 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.270089165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.266228338 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.264756922 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.27022291 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.271489202 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.267714351 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.266592979 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.269116695 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.274431266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.27538928 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.285953123 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.266075386 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.280910094 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.278480036 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.265808522 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.27321994 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.26869185 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.26532543 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.264475252 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.299679519 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.333190066 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.271570568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.276596277 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.280115579 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.266152979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.298468332 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.27215933 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.897830723 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.227487518 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.280658944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.296492941 seconds)
  done (took 82.667651384 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.265432566 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.268182427 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265471329 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.296262325 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266600452 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767768234 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768647745 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.219950665 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.486859189 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.420427626 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433684968 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.265581328 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.354996819 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.278840487 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.268181799 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.284081027 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.291376578 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270369996 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267375691 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.764462576 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.281726538 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.386091556 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.43007138 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.280724525 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295143607 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.654821539 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267439805 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2957719 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.587999843 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.310476493 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267312624 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.559207425 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.181540614 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.267069855 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376238626 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.266875697 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296003074 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270294917 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.267501475 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.540530399 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267302428 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.268922256 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.270597539 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.861541332 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.272466771 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767021211 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271821717 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164056826 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.267673284 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267411659 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.390027461 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.838979734 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.270936619 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.268988675 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.27167952 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.269927132 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267944059 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.297596154 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.350610159 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.358733328 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.269173126 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.274905629 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299296719 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.269453958 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.390117696 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273590937 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.7906041 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.326277035 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.371817882 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76616817 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273135222 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3591991 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382625612 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.269446973 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.271230231 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.270554727 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270690218 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.269914561 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.377039287 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.269436498 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.918085184 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434073006 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.286477981 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.404925934 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.367840422 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271889882 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55097614 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.27358472 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.270642866 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911921621 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271546542 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362732859 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.272815419 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.270631412 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.270430199 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.916393768 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.768318653 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.453962197 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.27540674 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.007748053 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.273874562 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.083399433 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760892499 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.841680845 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.273063635 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378571535 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.437981813 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.286604463 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.272026003 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.405045292 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.275299394 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.328631874 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273413888 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.670506075 seconds)
  done (took 380.18695465 seconds)
done (took 611.926523633 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.251981903 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.252715656 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.251956342 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.251571796 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.252792202 seconds)
  done (took 12.430860167 seconds)
done (took 13.603202963 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.525869176 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530845088 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357156102 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527444307 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324547836 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536886989 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.502621737 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.31695937 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438768785 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.374015579 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437146093 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335639329 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319287739 seconds)
  done (took 19.699539516 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.611721784 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.269423157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.391313658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580282032 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325193448 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.60888986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.668203687 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.265938077 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.507179579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.300461951 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293897709 seconds)
  done (took 18.983424359 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.621485456 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.264237652 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.384606869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.588757831 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325517442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612975993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.647575086 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.260164159 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.494463926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.300092771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.29513369 seconds)
  done (took 18.946759082 seconds)
done (took 58.802413563 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.309701953 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.374378683 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.304605635 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.289293701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.288362926 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.288927943 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.29453948 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.289982127 seconds)
  done (took 11.591226231 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.293704528 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.290623479 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.285066558 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.284573758 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.285235224 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.281336614 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.283246005 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.286738069 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.284327986 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.283369414 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.284709669 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.284463618 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.284988335 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.286756298 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.286857568 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.286061307 seconds)
  done (took 21.726765464 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.285683047 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.283286723 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.285950818 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.285120266 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.286052298 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.284369612 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.283263046 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.287057244 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284926875 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.283867802 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.291208749 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.287222838 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.285665517 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.285550348 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.285712311 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.293940312 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.285680812 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.28865654 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.287760894 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.287332069 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.28446278 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.287129949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.285626126 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.285279644 seconds)
  done (took 32.023068227 seconds)
done (took 66.492929514 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.253026241 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.257910311 seconds)
  done (took 5.660954372 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.406460906 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.407276512 seconds)
  done (took 3.964527403 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.286602158 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.286807561 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.288316482 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.288533898 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.288620711 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.286870139 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.285238088 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.286213561 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.288209415 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.28716906 seconds)
  done (took 14.02348909 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.287678203 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.288667086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.286461288 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.286913371 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.287220812 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.28648266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.288756133 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.284105821 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.288725961 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.287843447 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.288558902 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.289557981 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.289981149 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.288126514 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.28913146 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.289938197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.286998996 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.292078553 seconds)
  done (took 24.34187497 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.312313807 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.319319447 seconds)
  done (took 3.783054046 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.473085859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.369844168 seconds)
    (3/7) benchmarking "month"...
    done (took 1.45588856 seconds)
    (4/7) benchmarking "year"...
    done (took 1.446490158 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.371980404 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.322444146 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.373391407 seconds)
  done (took 10.964917396 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285366596 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.628137279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.80896181 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.489802649 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.279417306 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29886936 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.247965122 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.301913463 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.303068498 seconds)
  done (took 14.797365294 seconds)
done (took 78.688597204 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.257153092 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.301038072 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.278664557 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.280145261 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.694570518 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.292860496 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.262028293 seconds)
done (took 16.52284952 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.237965736 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.245324004 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.243061635 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.272288606 seconds)
  done (took 10.149573281 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.256903409 seconds)
    (2/2) benchmarking "read"...
    done (took 1.667530417 seconds)
  done (took 5.081596968 seconds)
done (took 16.391122293 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290394959 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.293119328 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.288357199 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.290638216 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.289514888 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.29214546 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.291381187 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.289231822 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.292262026 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.292056064 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.290075994 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.290078997 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289987715 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289530813 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290908362 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291938451 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.290101625 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.291629124 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293237569 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.294055481 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290972826 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291509905 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.291942013 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.293657315 seconds)
  done (took 32.139498396 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.287822286 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.291198762 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.291381467 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289528438 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.293469582 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.287117936 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.284477167 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.286633517 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.287619466 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.287904628 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286941098 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.283533751 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.283754799 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.281014227 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28266318 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.27655081 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.282250697 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28331857 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281255669 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.280664741 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.279860099 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275002009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.281368532 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274963807 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.275475254 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278190544 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.274439857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.274741362 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269484059 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.274316029 seconds)
  done (took 39.621311063 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.278519846 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.275330963 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.270941508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.271090828 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.27445187 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.268590579 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.269968549 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.271672745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.273235025 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.27232206 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.270144479 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.273179013 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.268462282 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.268238161 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.266268427 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.266446872 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.264517436 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.270027844 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.268037647 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.266425291 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.26726164 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.261773093 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264027779 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.263393899 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.261209683 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.260720096 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.262475626 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.261920388 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.262269804 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.256048203 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.256081168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.257931193 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.25752786 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.258902616 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.257594209 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.259866286 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.265392967 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.256915492 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.255849644 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.252490069 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.256408025 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.255659397 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.255690057 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.255787625 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.256635848 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252562215 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.252294723 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.254987383 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.254356437 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.254671771 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.253512895 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253865872 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.253201752 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.250826309 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.250908303 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250748297 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.255264793 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.252974627 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.251596659 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.253531891 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.252508925 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.251915206 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252032329 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.2519437 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.251939999 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.252280056 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.251853256 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.251842849 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.25200998 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.251557897 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.251197726 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.254066666 seconds)
  done (took 91.853745859 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252074653 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252842558 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.250919339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252009072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252701268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.254929765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.253127091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252622697 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254771225 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252179694 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254129733 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.253597681 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252590919 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25476026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254035866 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.252341796 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261624959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252330272 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.253926215 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254028463 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254766615 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253213275 seconds)
  done (took 28.707084889 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25653346 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255236368 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.254705085 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254418526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255739434 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255199212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254471605 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254081961 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255394069 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253106977 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254391428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254295745 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259326972 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253899535 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253567789 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.261685722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252128361 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258395429 seconds)
  done (took 23.725765895 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.25456219 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253470221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.253579802 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.254501637 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253595866 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.260229671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.255045212 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255802012 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255573492 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.255466215 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.253794983 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255720856 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.254987593 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254754254 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256172241 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254558907 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.254960914 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255180495 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255757594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254095719 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.255302088 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.255169321 seconds)
  done (took 28.742483524 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255476761 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255934291 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255425847 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.256450069 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.254367402 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.256739213 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.258951854 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.256416546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.258361556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.256564889 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256900476 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25556539 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.258705174 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255779104 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.25555205 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255018114 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258365886 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257423448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257851645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.256142628 seconds)
  done (took 26.262206179 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260663315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261273798 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260288337 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260554572 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260773176 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.259884165 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261275544 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.260437378 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260418591 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262391747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266603316 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262474788 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262776642 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263926439 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261003163 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260750756 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260791264 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262109449 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261414528 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260834146 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.261084248 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262571029 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261236293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260501213 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262318064 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261289582 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261125594 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2631299 seconds)
  done (took 36.45590637 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261356908 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.260242171 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.25938927 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.259002349 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.259024908 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.258837245 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25968428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25975021 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.259725067 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259557029 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.260562464 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.257973587 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26056435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.259669333 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.260306775 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.260332965 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260782255 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.258495022 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258684641 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256971226 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.258965893 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258965753 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25752374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259802311 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259791905 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.266124554 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266119177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264676604 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.264851068 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268437208 seconds)
  done (took 38.95076022 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295269112 seconds)
    (2/2) benchmarking "in"...
    done (took 1.289879949 seconds)
  done (took 3.726774403 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.260328077 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258227321 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.260884292 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258924197 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.263462973 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.263500408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260387023 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257773981 seconds)
  done (took 11.223397054 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.248714589 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.255950495 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255021256 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.257643378 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.259916921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245761839 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262776224 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261348668 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.250196621 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251110215 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.25571953 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.253383898 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254597599 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252563612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250486392 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254710603 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.260175962 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.261126293 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.260987657 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260021683 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261274985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255906216 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257636743 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.262165182 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255567066 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.272204098 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264611653 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263325176 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252735141 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.264332566 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.255890641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.26034386 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.26217035 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.261223722 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257634369 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262503493 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269027088 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265463646 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.2663727 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268946282 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262611398 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.257811485 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259854134 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.264822992 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26119809 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.266100669 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260771429 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.262464661 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.252966177 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.26020369 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.265999887 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254684202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.261513423 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264748122 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262201918 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270222631 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26930806 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260439334 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260614635 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.269702383 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278174759 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27010383 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26497783 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.26773279 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273755063 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.274517591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268569627 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.267827913 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.258082469 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260785747 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.268715456 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281114938 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277790703 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.268112167 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267080192 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261733563 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257941879 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264508846 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268655532 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.270648104 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.269884878 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26504383 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274818467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267174757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260777296 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.267793063 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261209403 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263607544 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.2585268 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27498881 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.274497476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262979321 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260586419 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.260223315 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259835695 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.268907449 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257647778 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257202609 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.265569665 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263593506 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271070085 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261506858 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.272978987 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273053229 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266974732 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.269288714 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.271580555 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266318783 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.270246586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.268155259 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26443181 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.25948146 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.269486504 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268129697 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26339788 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265748528 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.272329183 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.269690161 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.273311501 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.260473625 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276148315 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.282788055 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.27124406 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.263300382 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.26359183 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275225572 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266817938 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.26899978 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.272173508 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262078579 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26119369 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263985944 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268717063 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260095575 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271395336 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26269807 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.26962039 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264391024 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.269742612 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.271660663 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266983392 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262763931 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.274337819 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.27911601 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.269286409 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.269763215 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.28135163 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266555405 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271456517 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.273037304 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.268516408 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26704143 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.257626616 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.272954753 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.258367073 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272668333 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258602997 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.268549233 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266210319 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266456998 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266912224 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.25731673 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267933722 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.268823082 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.275028899 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266894415 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263397531 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267946713 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267390986 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.261371994 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.276193152 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269386352 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.274218949 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.27854841 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.271520841 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267049253 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.272234758 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277380175 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273779368 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273087591 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267504269 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270618352 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.275224734 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.278261922 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.279136962 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273090943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.26898644 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.263410103 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266796846 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271960911 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267763938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272952238 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286260285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283213528 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26818131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270538314 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259337518 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.275198194 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.27884349 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.278175388 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269600415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27457947 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266015113 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274982524 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2688675 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.275826765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26529889 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.268844453 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.272015457 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.271878568 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269370568 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265959449 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269467996 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.27080392 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270204821 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272645006 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267350688 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.27339985 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266375424 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270522251 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.275276905 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.274739755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.280489998 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278041991 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276752512 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.284972621 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.274466886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266031805 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.273174054 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277905661 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270774587 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283575726 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.276128619 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272488422 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281092658 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271021406 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263678782 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.282725059 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.279995313 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.271529152 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.266756687 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.277841756 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272748511 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.27575874 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.275634982 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265270744 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275128701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2818929 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.281277668 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.269707971 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27856161 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274281247 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27326345 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.279517668 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.282523986 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.279584436 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284841878 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27977629 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.274937826 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267598903 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.279814284 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.277949102 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.277267451 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272019018 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282146144 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284143396 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.275414841 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.282955465 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.274999565 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275759788 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269373641 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.281254062 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267335881 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291387962 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.289979193 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282357624 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27929655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.278016569 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28461238 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278441763 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.271260054 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270169551 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270958409 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272875133 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270886403 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.275694975 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274736403 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.277977947 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283793001 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.277313197 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.276849871 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.277610791 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.27260813 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281111865 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.279549376 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.27186432 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269149101 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.276174435 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.277754664 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288948616 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.276298962 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.272943089 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290211207 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282986265 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274794651 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27827575 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.272881629 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.267044364 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.280355414 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.285195345 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274402003 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284086336 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273761558 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278411033 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274991813 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290044495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.290194584 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274703089 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28490292 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273847533 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.270773679 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271854612 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.284743752 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28774965 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291862673 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274031705 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282472513 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280213008 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.278976468 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275462473 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276622886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278406423 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276804334 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29178934 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286776272 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.275430906 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289968438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.288237212 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.279815122 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277807674 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272161216 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.291102661 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.288565676 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.281989001 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.280037636 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.275377826 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279021375 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.282045154 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.279088633 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.277886943 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277917185 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288801739 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.287787295 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284527383 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.278075096 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293651169 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292230458 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.292037556 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.296349208 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279898932 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.288446108 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.281247357 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279659864 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274301432 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276684067 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.287675898 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.274150924 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281675973 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.285671942 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.285258831 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.290880915 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.290560063 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273159178 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292508286 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299028598 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.273281888 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284579764 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279295433 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.276846868 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.285786831 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279337687 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.274015711 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278540518 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282288342 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285009567 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278009724 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.287195949 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277200823 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.286481193 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281776544 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281256507 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.286210209 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.28111417 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277479839 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.285037504 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28809753 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.290720139 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.28487184 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289179441 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.277694112 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.297091271 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.294965931 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.285201211 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.29032833 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284297326 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279455928 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.28998562 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.290996432 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282637547 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286034069 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278250607 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28362224 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.282130849 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.295869398 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.287689936 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.289151435 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278526061 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28000083 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287929632 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.283720786 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286429231 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.289828965 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.290877423 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.279961929 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.27888735 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28619652 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.285026608 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.288376894 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282598297 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.285142755 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282657173 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.287470425 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283130068 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285459345 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275435235 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.279871205 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.297753925 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.292956178 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.287404146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.284628653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288717511 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.281686729 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28176935 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285487002 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.280101052 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283964462 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.290881822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283926748 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283445542 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.281445148 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291867073 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.300418859 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.293234217 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280411915 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303330124 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304606682 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294646128 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280335299 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286210907 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286784164 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.286354571 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.283184684 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.279364646 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297860224 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.297351011 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289416343 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296741925 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.287729675 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.280680595 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292139873 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288945403 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.293150058 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.294190414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.292608019 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295046109 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285109091 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.286973853 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.279640378 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282739796 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287440951 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.286673746 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.288768844 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.297913443 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.292125136 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.293503315 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295528363 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287676876 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.288174006 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286177174 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283101643 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288943936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.280130246 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.301648625 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.292365461 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.284338183 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28986626 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289726718 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283899231 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.290737391 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294458674 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286976437 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284391263 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.290810026 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.305468593 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.3028258 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.291533442 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286009346 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.28701967 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.292505004 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293345194 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288380107 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.286085472 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306619648 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.303504098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284507967 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290254158 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.301794243 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.296839144 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286926012 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28900393 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.29725037 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293578464 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.295028509 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.293218991 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301047221 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299179526 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287370691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.295313112 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.287629663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.291140863 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.303276555 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305731546 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.292061163 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292558223 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307636746 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302002231 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300716313 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316165833 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.302839139 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.299842389 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.299310408 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290861778 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.294578521 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.303103908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.305499044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.29747023 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291885512 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.298518059 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.285613625 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306933445 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.314299115 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.310390239 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.297262592 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285810996 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.287195949 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.298584059 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.297461081 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.296150299 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.297922522 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.29430167 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.299168421 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289180977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.3159781 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317223022 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.301006503 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.298819145 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.295640389 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.305541089 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.301084586 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297929716 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298355399 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.299433329 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295469208 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.303838289 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302774675 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.301503564 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294743766 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291751766 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300327088 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.301381691 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.313528068 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322075314 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.31270876 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.30299719 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304494796 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.295893563 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298074915 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297391379 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301639476 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.298832135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296780128 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304489698 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.302714961 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.298361335 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.298023583 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298846173 seconds)
  done (took 763.504336919 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299314739 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302042948 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298765158 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.299818294 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299686015 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301736205 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299741329 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.302011938 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2995471 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300078942 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.302408777 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302788504 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300307532 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30190606 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30260566 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299517907 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302137793 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302949977 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300275964 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30072218 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29541124 seconds)
  done (took 28.483275283 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.304275635 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.301711971 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299425017 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300078034 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300842306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.300630757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.301344955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300442605 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300648567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301442942 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.30059011 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302902834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.301753037 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.302129552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302428961 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.3000707 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.297631773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296907309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.300128669 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303223405 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301233488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.299483266 seconds)
  done (took 29.790732677 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.302989926 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.307471502 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.298523786 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.302863653 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.301234466 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.302549368 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.303989146 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.307829648 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.300088091 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.290893207 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.299514554 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.295792572 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.299200408 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.306020899 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.304644955 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.308539445 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.300865564 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.305854606 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.304689863 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.304346314 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.313148969 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.315677084 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.299260891 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.296584713 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.303799387 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.304086504 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.303771171 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.301921424 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.299305728 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.30250907 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.300818072 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298986764 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.318807371 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.302315679 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.296647988 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.30653912 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.304590759 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.305413838 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.304471539 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310166538 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.311985972 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309633997 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.319192475 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.314638894 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.302864631 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302026326 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.311188734 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.300517545 seconds)
  done (took 63.783767755 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.305958041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305033692 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.30492488 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306692771 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300337354 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.306913051 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.30602481 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306984289 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.304001228 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.305026219 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301297742 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.30430804 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.302711819 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.306087596 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.30141291 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.306617552 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.311576284 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.306229934 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.3079078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.306852987 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.305080835 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300909494 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30651321 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.305751241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.305643267 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301734948 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300126014 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.304252237 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.303422942 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.305618682 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.308200226 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303592516 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303606136 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302070676 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301553501 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.308448302 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30545267 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.305516086 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305776942 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.302325386 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.303264612 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.308580931 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303065425 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305422289 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.307698276 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.304742035 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302426447 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.306439597 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.308940334 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303421127 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.310175896 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.303101114 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30908288 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.307386296 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303174447 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.306601349 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.304087063 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.304479641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305336104 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.305344485 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30562406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.310216962 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.309090423 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302397812 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303798619 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.305961533 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.309226334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306587381 seconds)
  done (took 89.934033932 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30780241 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.309139522 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306302009 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306073629 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307691292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.306458734 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309009127 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.30671973 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306186701 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.309968467 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306693539 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30831267 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.306716098 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306751089 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.308023947 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.308725502 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.312537928 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30998453 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311264233 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308752321 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307552867 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311113935 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30770128 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.310637687 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.31014768 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.309015274 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308631985 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.310069947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308707413 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.308988804 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306867724 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306527317 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310572804 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.309034759 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.309364341 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.310964335 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307589603 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312098417 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.311403077 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312223922 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.308015705 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311124201 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312847185 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.309665495 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308520937 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.312143325 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.31103648 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.313475059 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309998709 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.310139858 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.312094017 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31057057 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311571185 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31733819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310089502 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.310256702 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311290842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.318065447 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314515065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309821521 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310518118 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.309333401 seconds)
  done (took 82.383965449 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308315883 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310510017 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.310850912 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.308896823 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309732823 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307413813 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308398296 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.309631693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31012093 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.311876532 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311182309 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310168214 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310941287 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310105775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308941102 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310584816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308395502 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317576069 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315609548 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312213027 seconds)
  done (took 27.393849945 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309642937 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310388493 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.311139916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310305381 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.312921636 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312187395 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309347997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309268588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317509441 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311697388 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314955624 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314579459 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317107503 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319079891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310566379 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.316943307 seconds)
  done (took 22.189070342 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.313299198 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311717502 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.313645192 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.317101567 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.31735977 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.313547623 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311625801 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311721693 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.314263986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.318500558 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.318504609 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311357611 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.314881662 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.31848212 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.320988584 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312535902 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.318577873 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.316072806 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.323118254 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.318595053 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.314754481 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.311078385 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.313024792 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.31434996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.311700881 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.317546456 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.312168747 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.314471205 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.3130169 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.315767529 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.314263218 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.321247555 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.316879751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.311739643 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.317726367 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.315666259 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.31294217 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.318444754 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.32169894 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.316332475 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.319808126 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.317437503 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.316197123 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314023034 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.320163409 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.315292399 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.316829395 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.318566837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.31935367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.32013659 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.319864977 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.323916959 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.319483085 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.318247383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.321248672 seconds)
  done (took 73.587729908 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319047275 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318789421 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32198487 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315299593 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.321629657 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.320175841 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3215976 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.323552317 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317994698 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319006209 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321391848 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.322353353 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321983264 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.321861321 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322209968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327078046 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.321376622 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.324190458 seconds)
  done (took 24.96714701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.323740959 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323985823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.322724699 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.321447022 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320184222 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32154438 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323544984 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.320625689 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324719156 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.323373873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32229727 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.319120678 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323307524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324433016 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321204184 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322577404 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.325303518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321458057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.322608412 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322362851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.329164553 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325100559 seconds)
  done (took 30.291647843 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.3171705 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.317710374 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.317187472 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.342825159 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.328973887 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.313994538 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315227725 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315782475 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.342064658 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.359805671 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.35486859 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.329922681 seconds)
  done (took 17.144432613 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32509986 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32367461 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.322155422 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325974134 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323815829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324776915 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33132691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325788985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324015645 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327618757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325964147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32403974 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325442362 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325790941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32490214 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3238988 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323495257 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323675587 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.324312889 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328848452 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326222 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32741042 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329519557 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326174019 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320558012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326676668 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326926001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325888229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325660198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32243346 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324367436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326239531 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324971353 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328232592 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328190128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32290468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327219823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32391647 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327248388 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325864972 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326630781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.325063892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323649536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327222477 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32886242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325967778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322680279 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326481391 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326221582 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327364604 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328021811 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329298928 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328882814 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328693753 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328050794 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324107067 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328279805 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324468146 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326874877 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330062852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329822039 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32940837 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327764096 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329698211 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327966985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331624434 seconds)
  done (took 88.726222799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331046846 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32684708 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329384554 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33034131 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329537576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329661475 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329975271 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331152726 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330558516 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327865716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330876782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330672846 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327836103 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330426725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331755107 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328016293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327151169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333538993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328418648 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328317868 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334016777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331777176 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332163329 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333764231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330597348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328736915 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33370752 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328341893 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327955391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329248852 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332783659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331074503 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331935856 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.332214173 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331833329 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329062655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329614122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331901075 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332257685 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331644129 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331153424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331799177 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332487882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334743336 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333170371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334874707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332006675 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331989983 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334205907 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330807919 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334245158 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334863952 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339838536 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332592573 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333293431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333260815 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332804682 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333638167 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332465881 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334369545 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333626015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335837819 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336989152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334933513 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335871692 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335206244 seconds)
  done (took 89.09482924 seconds)
done (took 1793.842729488 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.554809799 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.504799737 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325660547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.324607899 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.32194995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.30836121 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314443827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323069505 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.328662465 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.327682312 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.322417955 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.582534483 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.346355706 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.320695669 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.326769277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.482792679 seconds)
  done (took 27.214205173 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.360719824 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343888005 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.455712839 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.334321704 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.368765679 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.560605437 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.404631273 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.340070061 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.506342252 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358615016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.312971572 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.369235152 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.334504269 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.314244919 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.360283245 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.561023437 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.63687582 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.311600239 seconds)
  done (took 29.430381895 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807884787 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.325002921 seconds)
  done (took 5.332423138 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.36349385 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.340440429 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.341515705 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.33412985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.310404976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.319871892 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339276593 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.329746401 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.316905872 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465055926 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.342615775 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.36124091 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.337869153 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.336915749 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.345569922 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.398505006 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.54248784 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.348401148 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.345001064 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.35253226 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.334159183 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.485230071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.384815276 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.349038379 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.466353089 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.322782387 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.344388277 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.355542279 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.516275569 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.346412697 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.338961261 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.342140645 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.344077414 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.320378939 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.927850951 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313879859 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.366222408 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353960096 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.342576735 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.554321398 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.340770779 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.348728913 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.315110672 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.933228241 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.493316224 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.488184566 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.314404576 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340918981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.341611039 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.415530704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.343605217 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.344897071 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.430764694 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.186306722 seconds)
  done (took 86.12145148 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.376058715 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.315919085 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580710088 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.339129647 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315005072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332201532 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.32778044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.644062558 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334720428 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317362564 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.71252748 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.002108369 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328388338 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.382481599 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.352124527 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.362661132 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318917581 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335108116 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.318397333 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.311252709 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.954523966 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320713409 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.318009225 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.411634119 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.383106609 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943867373 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.317202768 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.330226979 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.321501358 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.309636232 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.977617335 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.328930795 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.404206499 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.314396125 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.681375544 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.781421646 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.745021626 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.318024171 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357142413 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.317834412 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.34300954 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942100458 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.766136811 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.316416914 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320617377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944597215 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.318794241 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.329357176 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.320658444 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.671640926 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.319558793 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317656247 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.318725866 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332463716 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.317603517 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36587446 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.368440219 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944984414 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317499872 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315720316 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324450546 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316821294 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.326618211 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.326166757 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.323106171 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.759965356 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.574086063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328885538 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.766751065 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969419785 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319668165 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036843163 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317228748 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.35479868 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.369071514 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321543264 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319408984 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941695448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.323193683 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.315270678 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.743549232 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.316657377 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.694942702 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333386529 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318249758 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.971774134 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.324790254 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.36629665 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329500141 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319206863 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.319373714 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324420794 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.679186927 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359498858 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.320393606 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.322330794 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.362937144 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.314469948 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319594551 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.327975227 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039184802 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.32277673 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.322722044 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.338413076 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319015497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.320175352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.325833893 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32149654 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.683955411 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.315266488 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.329193608 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321969295 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.325933696 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.321224298 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.412827498 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.32858948 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.699445719 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.327087614 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317655549 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.321889676 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.319879086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.345194036 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317489187 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326421607 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.3216636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.725299635 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.338151661 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.319033447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322797962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322175746 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318974012 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316743141 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.383727288 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.325586096 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167354522 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.366393101 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.326928795 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.322197257 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.324456273 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.323400343 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.320785695 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322868711 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7100412 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.68494164 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.634494373 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.32040066 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.320028965 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.194503994 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.330241157 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582590007 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339602963 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319181371 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.706911123 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.546934285 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.324084369 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.318522278 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.321973277 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.684011214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.317882254 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732682207 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.994627949 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.323319327 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.3360398 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.162722997 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.216038296 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325391169 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.326760897 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.69260679 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.338317324 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.3263415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.324977988 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.329989798 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.321266692 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.326969582 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.326379213 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.327895537 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.331439494 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.669506437 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.601761928 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340869814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331450739 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946508701 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.349884857 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321625886 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326182959 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.326360985 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.324368762 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.379015027 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.325872445 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.327139087 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.324470102 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.336214752 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976376604 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.3171221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.329059023 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604732627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127249562 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.322662051 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.326370344 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.325393404 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.387364622 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967861346 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.362534509 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.699891935 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.322048984 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.396701494 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.34070436 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339615813 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.966380851 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323128031 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32639402 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.141997457 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326173321 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.816817837 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.320957644 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.328197042 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.063473296 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.328920388 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.325576109 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.325407093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.323536813 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.712643347 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.328119798 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.339423051 seconds)
  done (took 500.444884101 seconds)
done (took 649.738562581 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.330329436 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.328507068 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.327268154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.331385507 seconds)
  done (took 10.538342271 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.368244663 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.353744006 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.365449336 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34975963 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.367484929 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.354406031 seconds)
  done (took 9.380622773 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.33088258 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32917489 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.331092173 seconds)
  done (took 8.211631521 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.601506379 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346812608 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.749476801 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.328096471 seconds)
  done (took 9.246266093 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.362416617 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.364305195 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.364876288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.365920555 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.367293704 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.36729566 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.363002656 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.368841387 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.366290155 seconds)
  done (took 13.509452774 seconds)
done (took 52.105859831 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.475295566 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.317464393 seconds)
    (3/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.390510134 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.583029448 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.615178718 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.461469507 seconds)
    (7/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.584161436 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.507350481 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.393815024 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.478275276 seconds)
    (11/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.322991212 seconds)
    (12/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.310450232 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.497052034 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.534662823 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.567871934 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.323288527 seconds)
    (17/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.745578052 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.339017902 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.714774204 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.592315964 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.679370959 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.478616938 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.509989294 seconds)
    (24/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.33334183 seconds)
    (25/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.318101485 seconds)
    (26/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392297024 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.488597119 seconds)
    (28/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.324065721 seconds)
    (29/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.323108337 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.590643056 seconds)
    (31/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.464492727 seconds)
    (32/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.310425579 seconds)
    (33/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.651655563 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.510536361 seconds)
    (35/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.902788267 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.354316634 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.486277549 seconds)
    (38/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.40975476 seconds)
    (39/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.611615485 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.650273544 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.461375989 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.311116658 seconds)
    (43/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.567280169 seconds)
    (44/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.311846429 seconds)
    (45/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.473900208 seconds)
    (46/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.614576477 seconds)
    (47/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.466462949 seconds)
    (48/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.307241444 seconds)
    (49/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.393347296 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.59409133 seconds)
    (51/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.494417691 seconds)
    (52/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.511119046 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.46577613 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.535647375 seconds)
    (55/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.653968986 seconds)
    (56/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.652498897 seconds)
    (57/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.660945851 seconds)
    (58/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.626139749 seconds)
    (59/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.311306487 seconds)
    (60/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.593643787 seconds)
    (61/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.395410478 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.51727367 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.313658602 seconds)
    (64/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.527046351 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.499423425 seconds)
    (66/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.337253152 seconds)
    (67/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.346664404 seconds)
    (68/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.315853224 seconds)
    (69/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.607448056 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.474351941 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.343438087 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.561108015 seconds)
    (73/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.627594892 seconds)
    (74/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.406350347 seconds)
    (75/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.562661983 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.507142354 seconds)
    (77/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.41164718 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.643973023 seconds)
    (79/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.499123038 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.504026455 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.551890991 seconds)
    (82/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.573282958 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.49220896 seconds)
    (84/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.757592359 seconds)
    (85/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.569477934 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.311660373 seconds)
    (87/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.573678398 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.501884702 seconds)
    (89/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.34865998 seconds)
    (90/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.297553202 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.562444079 seconds)
    (92/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.58314727 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.497090797 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.389001702 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.297977906 seconds)
    (96/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.566393044 seconds)
    (97/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.30592808 seconds)
    (98/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.483061149 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.473195509 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.51502534 seconds)
    (101/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.521385715 seconds)
    (102/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.324239765 seconds)
    (103/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.32002659 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.484487308 seconds)
    (105/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.396661964 seconds)
    (106/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.517668902 seconds)
    (107/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.382480971 seconds)
    (108/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.307424778 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.384089625 seconds)
    (110/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.435535553 seconds)
    (111/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.300401189 seconds)
    (112/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.333285609 seconds)
    (113/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.719015456 seconds)
    (114/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.461562814 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389609251 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.55570691 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.517814451 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.30523253 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.570140449 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.301424993 seconds)
    (121/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.386860718 seconds)
    (122/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.728404848 seconds)
    (123/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.484939041 seconds)
    (124/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.332207469 seconds)
    (125/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.495737552 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.675342514 seconds)
    (127/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.511665834 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.389868293 seconds)
    (129/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.299756205 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.423243067 seconds)
    (131/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.575893694 seconds)
    (132/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.553724744 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.533798327 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.49305816 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.50446457 seconds)
    (136/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.507773021 seconds)
    (137/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.521891925 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324940343 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.382438298 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.529203679 seconds)
    (141/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.46662114 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.461262217 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.612085169 seconds)
    (144/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.660744358 seconds)
    (145/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.702365922 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.38880454 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.639364056 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.689516174 seconds)
    (149/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.753668257 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.550467137 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.90564268 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.649961563 seconds)
    (153/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.613041644 seconds)
    (154/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.621442433 seconds)
    (155/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.612131193 seconds)
    (156/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.309834581 seconds)
    (157/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385764628 seconds)
    (158/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.506232531 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.551993378 seconds)
    (160/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.306574321 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.560586021 seconds)
    (162/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.303452764 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.423083271 seconds)
    (164/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.329994129 seconds)
    (165/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.673149777 seconds)
    (166/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.509560539 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.39343844 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.514975263 seconds)
    (169/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.302771043 seconds)
    (170/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.735375357 seconds)
    (171/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.316968241 seconds)
    (172/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.320887314 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.304521755 seconds)
    (174/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.324015994 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.496457336 seconds)
    (176/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.455787429 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.750055367 seconds)
    (178/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.496415291 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.499244283 seconds)
    (180/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.55683757 seconds)
    (181/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.754606085 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.613416623 seconds)
    (183/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.452126978 seconds)
    (184/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.678488026 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.82868883 seconds)
    (186/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.308500054 seconds)
    (187/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.394431722 seconds)
    (188/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.480914158 seconds)
    (189/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.304829057 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.495472364 seconds)
    (191/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.493895488 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.325925874 seconds)
  done (took 334.808287362 seconds)
done (took 336.030291082 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388185118 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.509286481 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35556379 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.351025993 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35582367 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.338585514 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.389250058 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.353241707 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.37700709 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378185313 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.339752702 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.372480467 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.379526404 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.362990293 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.399679456 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353788565 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357201778 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.363745278 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.379553992 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.38103372 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359297716 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354949117 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.390887486 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.354668844 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37263328 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372112683 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372697185 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.337775495 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365594606 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.380446424 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335697507 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.377274862 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.381518977 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367667355 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358596369 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361637817 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356026768 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.510046913 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.388606051 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.360463506 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.36337917 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.3763165 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36535505 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365846593 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360836179 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387925658 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369748346 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374065725 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319972813 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.323248927 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391586877 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373349711 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35961256 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.321383117 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335179913 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.374854931 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.361927798 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378398957 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.3522112 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350128742 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394003595 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380305694 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.370992778 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366718351 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.352397746 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.372209204 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.359803086 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376800709 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35306487 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351577111 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.355074412 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36146063 seconds)
done (took 107.773817679 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.533074842 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.321573226 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.559596999 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.352057548 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.570555306 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.530571311 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.352696247 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.355013861 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.355591308 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.221384717 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.353228577 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352800031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.322153467 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.353146304 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.525029615 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353376641 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353464292 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152958766 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.357740254 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.540651712 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.32584395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354136234 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354375651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.246153089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.326163264 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.333261373 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.540485142 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.356319194 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.127437714 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.32921484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.322363969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.147049007 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.536746538 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.375253166 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.365388993 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.364330688 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.571059001 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356753537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.529195507 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.526981678 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.563121959 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.398341228 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.322114006 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.32563268 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358748693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361768909 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.356026698 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384749625 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.324083949 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.355819899 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.120580417 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.366385488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.365485514 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.357374357 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356364381 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.379533459 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356617835 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.360538306 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.542214062 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.360935843 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.533363775 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.229270077 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.255946165 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355992197 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.324980013 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.357323023 seconds)
  done (took 110.798579697 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.472830728 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.485223156 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.51501172 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350201796 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.445743135 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.516081201 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352191504 seconds)
  done (took 11.354445074 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364445576 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358663766 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.442323218 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.444338069 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362004414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.587128293 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357114127 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368472276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358509696 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.444968037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362161417 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358852546 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367258783 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.329178033 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.444888139 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369490143 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.529435552 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354749581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362187049 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.566071496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359092522 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.367429546 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.446286431 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.370526028 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.367426472 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.366283171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.240630879 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363172161 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358213569 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.36035637 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360523709 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.477320056 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.360846306 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.33174924 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360290579 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.527586643 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36414058 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362304872 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.360042992 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.334144796 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359836192 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360603537 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.361177843 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.361589278 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.362927925 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388289251 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.362540027 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.361634884 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.365043977 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360808243 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.450020495 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362772878 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364927341 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.368846835 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.45922362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372601921 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365930961 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.361956783 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361430249 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36087969 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.573253275 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.448153288 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.363534497 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.449533701 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364700567 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.362946503 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.364055723 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.364767545 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511635942 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362569779 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449468679 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.362740891 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.598826778 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390369055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367404263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365217532 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.363301786 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36522745 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.329718255 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.373094511 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.364211399 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.360408541 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.370898213 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363870503 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363619284 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.57949499 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.530506428 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.365542852 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.38241937 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375248766 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.364828516 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.454275575 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36731291 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.370714949 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451867797 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.533493749 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.454026172 seconds)
  done (took 141.448180809 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379827491 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.378450011 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.368161272 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.396042262 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.359716903 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.359070591 seconds)
  done (took 9.468409076 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.365222561 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.369064669 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377474887 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365588878 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369806593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.370646086 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369030168 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.362211354 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.374401312 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.367907819 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.371837997 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.370345698 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.372291966 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.371186727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.372269336 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.371080079 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.370603902 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368041844 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370376917 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375026321 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.337471266 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.372491851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373567896 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.365703069 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377699077 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.370302606 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396377779 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369072771 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.369018644 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382044043 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.375978887 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377289249 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364519958 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368926594 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374312683 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.366655146 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370293597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371508765 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37291893 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374984347 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.375059427 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373971299 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.371051794 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374847458 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.366157526 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.368548193 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.373138302 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.395670148 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.371616251 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.371847636 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.371883324 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.369245837 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.371378441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.373307946 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.364618922 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369549088 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374263654 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.371217736 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374139756 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.365732472 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371686302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.37601255 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368761349 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375278239 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.370550892 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.373382537 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367862841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377423414 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373787477 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.370332778 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374532335 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.369296473 seconds)
  done (took 100.978778728 seconds)
done (took 375.26199869 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.643114603 seconds)
  done (took 3.873617308 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.352178375 seconds)
  done (took 3.597081096 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.217205415 seconds)
  done (took 22.457959354 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.371473356 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.376220188 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.359950173 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.349033979 seconds)
  done (took 10.699511998 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.615000622 seconds)
  done (took 3.857107807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.3639951 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.358770972 seconds)
  done (took 5.967872311 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.539966709 seconds)
  done (took 3.779020223 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.593822999 seconds)
  done (took 3.833209516 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.390474305 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.385735225 seconds)
  done (took 6.02486238 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344518601 seconds)
  done (took 3.58814183 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.82330295 seconds)
  done (took 21.069963856 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.360137487 seconds)
  done (took 3.60277344 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.404654182 seconds)
  done (took 3.643447257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.817827603 seconds)
  done (took 6.059923752 seconds)
done (took 103.283287842 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.354172622 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.359802319 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.357490991 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.359526167 seconds)
  done (took 10.678559823 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.508954386 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.506566792 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.507827357 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.499431038 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.492757704 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.508421776 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.415335777 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.418683829 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.482266565 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.482781016 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.510002773 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.485552737 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.509324336 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419014876 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.478729523 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.511818437 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.486490217 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.511751739 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.421163683 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.49495037 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.38423231 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.498933489 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.482033155 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384655199 seconds)
  done (took 36.647389239 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.93707887 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.508480234 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.591399088 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.471397445 seconds)
  done (took 7.754090657 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.549927474 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.557498408 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.564913736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.61262092 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.660694422 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.565839692 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.423600236 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.418836012 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.405530549 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.555593487 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.637900532 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.55088793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.772098324 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.385225175 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.770785237 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.384577047 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383551916 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.554259449 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.603968563 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.637322805 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.386814482 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.545612748 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.566679255 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.552596528 seconds)
  done (took 38.288124 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.401928067 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.412605402 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.394567005 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.408404868 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.388620927 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.392750223 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.388567499 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.401468162 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.386528623 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.390429397 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.391125645 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.408774189 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.389340432 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38888835 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401758841 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390127474 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.395069163 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.40133679 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.409728849 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.393968465 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388334299 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.402599311 seconds)
  done (took 31.972812047 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.358404445 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358740592 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.799515287 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.699662157 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.359353728 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.363812186 seconds)
  done (took 14.18399344 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467870111 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.641714006 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38501593 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.741633904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.867008018 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.39231595 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.386475962 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.679224292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.970718972 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923580017 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.461971316 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.471148671 seconds)
  done (took 20.640937511 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573135732 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369326994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372015255 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423200115 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373033889 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369989298 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429013774 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.175281997 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396996922 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723253775 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371803705 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557147316 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.707865923 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372612257 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378746138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.355732458 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684943735 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92229361 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382273333 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375927624 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43392145 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371855527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375579814 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609141708 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375030303 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370571007 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.715778243 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37236481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723960917 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674932056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685695786 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382561009 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723858111 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103135532 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549982229 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606475656 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37505335 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376864963 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.355022381 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.392735347 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380309885 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378738176 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678991092 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38268379 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373786569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383577479 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188051987 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405678893 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.375618854 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379094646 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68727797 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538257484 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.398367488 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375623953 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393559894 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378201167 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.397322593 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585448471 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10160496 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386673542 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39363623 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.380166221 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389897486 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378348811 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096162857 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.405882061 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398134497 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398071989 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375328944 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384794882 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425133531 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375310156 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.421071352 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375386842 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20875413 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382581542 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385196469 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985891781 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381790799 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378562385 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689074078 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377343237 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377297421 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.376825573 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378285954 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175101387 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401523057 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.351165257 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484541505 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153040201 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611834229 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426941862 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429026484 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67726287 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.344063795 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376080646 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.373309762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406354956 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420078768 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176282822 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373710512 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.397472192 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710676756 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.671087364 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381048246 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368508174 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929382291 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395909285 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.433715279 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380060691 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.61873294 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.067396979 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705395638 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383025453 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442404302 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379137948 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236196865 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381692253 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.419537568 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37783918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728639306 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.258996622 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383252158 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525962764 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384583752 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381700843 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380535821 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407216797 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377788125 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.608856895 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394080351 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.688604396 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.389857118 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383891555 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.383632583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381985586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.385423244 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.684188401 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377389332 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733376849 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377699496 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378526697 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378895529 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.680110718 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.39139188 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406698785 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807401625 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388490883 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389007359 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697211216 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442926925 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574252075 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435038003 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.382413853 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.717647614 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.402644568 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.400640752 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380124176 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387723956 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39033155 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.413579897 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376542297 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069409106 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386046159 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389134121 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378269122 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.419661118 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531806873 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412110576 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619322262 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.387746793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381483777 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402615165 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.387047892 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689742809 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689396396 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.387151328 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637076544 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.919834708 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065683562 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426420497 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.381191002 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.378287281 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.380737104 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383241892 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379486386 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379814221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615363937 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706178139 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37940551 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078020815 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388125823 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387194559 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.412559446 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685771704 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.419205543 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384257384 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.380852691 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387817823 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390271346 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692361857 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692718327 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.42032021 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379930646 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.985065 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410853015 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380585199 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382848475 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437434397 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390398527 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303777806 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81106508 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385926311 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69356187 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391591417 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429967525 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381012139 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38880915 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389495479 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.404533845 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414327199 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.619869748 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388094114 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40608914 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105950834 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218612577 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019748322 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394840922 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.384251517 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389673226 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191201409 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388884438 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386922946 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714113435 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169561227 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386166355 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928648189 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.401151501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221807327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704825523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701095998 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38557948 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.387722908 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701601859 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685546675 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437214328 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395460764 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39159442 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.354773676 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001953809 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384956635 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641031517 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171281418 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39918938 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393575887 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.428869272 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38746715 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850464155 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390559373 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385306749 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395137538 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390669721 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324629689 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397937825 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386707416 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106352072 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400652835 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.943359697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391636813 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.625339926 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.705088126 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.686575716 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.393331792 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.397572205 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.723535863 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702474246 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390247182 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401239641 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027191656 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.332812923 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.415152374 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387596146 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247680448 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394385348 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750988237 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.398027571 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.399561424 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401675101 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387386343 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390180273 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.387124787 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398515901 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39018188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939251073 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.389909359 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385654768 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391038972 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396053926 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.721296961 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.431923151 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083807515 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701646348 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396825812 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450722889 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.411251598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389611137 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.364673748 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388341073 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388846724 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382815162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699487274 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402705051 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.35952023 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442988735 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689660815 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390839785 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388674356 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673883459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393752306 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.390730413 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264659773 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449113187 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392372662 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408095401 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38650725 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470742194 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542680811 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629677558 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.713105765 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.707411047 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865560907 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396124326 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397699107 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42936326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549098527 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391918274 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.409854633 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.397854224 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082578797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246669706 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.089849066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710475613 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395527811 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394613169 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391606712 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721767621 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390880083 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74527941 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393725278 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.384494774 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438266696 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393290166 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415529377 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693700016 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742393079 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39466576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394680427 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399684275 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.395274567 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717606687 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.692570403 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948032986 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006949696 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396701494 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399462739 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187441923 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744365118 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393783804 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394201944 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395405798 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396299697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39594644 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.423168687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394254115 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711355823 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702649129 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131187563 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.708297403 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.432274593 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.38837795 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395077475 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.729517979 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312872817 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631401312 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09980955 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190760012 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735882475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546218901 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633182335 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.401175596 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720155405 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.40221658 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395621747 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396470459 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394975087 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.396164624 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704652666 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095723974 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727822442 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417562456 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.401248721 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452716997 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.632328175 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.705339904 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197992077 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.701978373 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717363988 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410578259 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39766677 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097228007 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715840053 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39857345 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418678171 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673242735 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399058637 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462684047 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.354636787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.3955019 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012341653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.69411208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441144018 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409077858 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200454261 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098881779 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.401546593 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970446172 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400200193 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3988459 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753971298 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.423982966 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397904091 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782736198 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.426667106 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404878301 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649475746 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.096919936 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241884391 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.404726886 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407087312 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.402729774 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400212905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477697618 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403385166 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402355914 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.870187612 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40323375 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401753323 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435882663 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.408278106 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398648948 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.404923 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400366555 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.431085475 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.391135214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.392985239 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406900208 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607695434 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028699809 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407400899 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.09796588 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.818400092 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.734593624 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415338152 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.368786142 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42435501 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4018694 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401197876 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401497076 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393370903 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02311076 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.403457451 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.719016154 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431022409 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.698061325 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697642836 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402884892 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647638781 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421070305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450161714 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.370110822 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402204848 seconds)
  done (took 1001.058438742 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412410265 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.401381489 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.406928982 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.470655032 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418499447 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412771834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.417979269 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468886721 seconds)
  done (took 20.683468548 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.392477144 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.426373284 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.393498922 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.423668121 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.400829114 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.963989066 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.403220409 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.423657994 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.4440425 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.408794093 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.41134337 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.108418605 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.42462802 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.406332607 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.407761909 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.428176935 seconds)
  done (took 33.143257394 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.114241762 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.423987576 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.967108247 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.434658485 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.433598784 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.394796922 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.540425706 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.395367805 seconds)
  done (took 25.980884302 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431569266 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.429070694 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43474013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.430717132 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.430606085 seconds)
  done (took 8.43158959 seconds)
done (took 1250.707109923 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.428321647 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.426954572 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.425830897 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.429233634 seconds)
  done (took 6.986824023 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.374976106 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.377570779 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.380025211 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41503958 seconds)
  done (took 9.823675692 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.15712445 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.014498492 seconds)
  done (took 5.448782489 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.008297284 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.002570788 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.999579905 seconds)
  done (took 7.285386082 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.771052799 seconds)
  done (took 3.047250632 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.396514808 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.402277622 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.418904038 seconds)
  done (took 8.496783075 seconds)
done (took 42.366157178 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.395807247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.162179982 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.556807957 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396825462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.560999761 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.557077824 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.648649734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39551489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.405418524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.402884333 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.395516078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.560654466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.635022931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.16234767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.635163872 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.166616858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.561455685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397530719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421958756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398228574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.648614534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401870587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397907094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405319699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.560389907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.54734153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407774341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.164635461 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396601901 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398380548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.547238863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405565051 seconds)
  done (took 83.377136647 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410070024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397048396 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432098384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397766224 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.40374387 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.398457165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418360812 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398958136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.397670472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413491129 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.405909858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.404850436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.413605529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398976364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.399507507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.398249037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398124859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.403446206 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403321121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400624129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399921876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399764523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.398332846 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415753567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411200754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.399807546 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415113263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.398757412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399418739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.399956866 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.406768347 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.420953809 seconds)
  done (took 78.23967622 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399799025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.406152556 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.405905318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.405591801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.404576867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42109915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.4084085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42219042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.432530422 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406549325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41991555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.40593528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.410175414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.399702015 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405342467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.401141165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.4064102 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.40631815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408022137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.406866264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.425917849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404834861 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.408107973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418249695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406980874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.407665807 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426913646 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.418063847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40738288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421065486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.408477014 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422589073 seconds)
  done (took 78.44183461 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.726721045 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435382739 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.442029185 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.411261377 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.441927566 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433778136 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.411535713 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.72920921 seconds)
  done (took 15.31308765 seconds)
done (took 256.653774624 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.410789319 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.977657005 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.470979934 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.411528938 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457523544 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465960441 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.690304472 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.470985941 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.677879289 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.42256414 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.451592972 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.412860672 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.292274457 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.628640276 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.29148567 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.411667782 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.355496534 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.407732506 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.044129634 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.719029773 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.470833826 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.40467234 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.313092118 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.370269431 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.390075931 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501359356 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.508930011 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.640926336 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.601499744 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.501231127 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.972358217 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.415358894 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.431372873 seconds)
  done (took 66.277445409 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.425442719 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.436813928 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.437033648 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.437071362 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.438201184 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.437737648 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.426419938 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.437837242 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.437570448 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.437647483 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.438572461 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.438839255 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.438207051 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.436439159 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.436798283 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.415948425 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.428172395 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.436943063 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.431593501 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.417405454 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.437607883 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.438398836 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.437001241 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.438473845 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.44021841 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.440242506 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.439022868 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.437004384 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.437442429 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.437416728 seconds)
  done (took 44.340547357 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439706823 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.04194863 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.224986641 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.443438373 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.429945246 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436524086 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.759100302 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.444917053 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436913451 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.434821844 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.966630183 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.447788996 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47377149 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.233225538 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435181667 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439587674 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440510697 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432210967 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.051280683 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.454991727 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.758076219 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.44579845 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.761442499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455316699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43753462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432779056 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443707332 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.286638685 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.458436859 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.972201563 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.202423297 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.748422687 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.215255585 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.284537022 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.202205532 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.448558996 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444415662 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.977410535 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.439150258 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433734416 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.760475407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.439795871 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.238441215 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.183524176 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450913206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.441280417 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.31492231 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.979220262 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.689880186 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453784941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.273432536 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.443347161 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443060671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435722238 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682624516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443557871 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433254396 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.354124432 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.452001823 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.743782572 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.448456958 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434090886 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050204359 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44126589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.045247234 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444267319 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.453152387 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.434871502 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.241154828 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445023002 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.194240273 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450400152 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443450036 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.970910896 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.053473001 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.368526682 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442575693 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.058170595 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.254405046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.766494608 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448030368 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.264254623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.774192165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.447608876 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.448291434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.448592171 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.44453558 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.566451851 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.741486889 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.114613737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.191796108 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.361353493 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.760964366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4587839 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438481668 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.347065922 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450540045 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.446484012 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.235775932 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.203327183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.453506902 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.454745537 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.182031039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455069741 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.755439571 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456446312 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.280534627 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444075954 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.568610435 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.446692767 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454338223 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443730868 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.751237919 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.448976088 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449594673 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.180176125 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.008026439 seconds)
  done (took 202.530094789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.414336767 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.416201739 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.415247009 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.415349885 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.413941465 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.439865013 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.416389193 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.416231422 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.438067788 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.415669409 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.416810057 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44271356 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.43935622 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.415613885 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.422834566 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.416582653 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.417994216 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.42332569 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.417216743 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.418356622 seconds)
  done (took 45.726018373 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450164717 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.057073389 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.019296657 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456366414 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449305041 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.440730417 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.504484823 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.449094819 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.451069791 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.782343411 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.63461422 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451613016 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450472228 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.450049688 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.015512517 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.434990999 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.783049507 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.062746667 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.457557138 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.05702492 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.433504918 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450011625 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43988436 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.054925909 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.799578075 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.75081943 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512974241 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.057996202 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.456668757 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.451281968 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055911719 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.457251722 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.442070532 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.040995926 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.455885905 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.477165078 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.453704483 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.508986234 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507230703 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.783663132 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.067188223 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.76124408 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.479518031 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.690910415 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.453456825 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428040954 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067718597 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456780503 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.428189786 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454963442 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.463358643 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.029690089 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450213117 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.025547103 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.459323493 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45333607 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057824182 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.031312082 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.020613236 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.637573395 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451011124 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.748321906 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.462864237 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069144966 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458584643 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.455232331 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452251226 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.633633928 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.057371681 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.757758651 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.792694308 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.792980308 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.459256865 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.523542554 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.459017799 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.786442396 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.52801484 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.90648762 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.795106626 seconds)
  done (took 132.252638275 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.769004983 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.580755625 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.918919648 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.131691956 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.058684977 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.640681193 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.576768456 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.750157964 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.443958272 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.622244282 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.204036003 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.55997505 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.270343597 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.5310382 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.609007053 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.63440742 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.931185803 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.444655008 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.194666025 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.177637394 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.437295483 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.600622258 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.028543923 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.711725562 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.425989995 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.079881807 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449626101 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.074442986 seconds)
  done (took 56.160568186 seconds)
done (took 548.571123898 seconds)
SAVING RESULT...
DONE!
