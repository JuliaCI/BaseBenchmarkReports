cset: moving following pidspec: 10461
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.560386346 seconds)
loading group "string"... done (took 0.518000648 seconds)
loading group "linalg"... done (took 9.741867315 seconds)
loading group "parallel"... done (took 0.17022451 seconds)
loading group "find"... done (took 4.570200792 seconds)
loading group "tuple"... done (took 2.062483085 seconds)
loading group "dates"... done (took 1.389219048 seconds)
loading group "micro"... done (took 0.191323491 seconds)
loading group "io"... done (took 0.522663392 seconds)
loading group "scalar"... done (took 56.98633765 seconds)
loading group "sparse"... done (took 13.975944218 seconds)
loading group "broadcast"... done (took 1.711181009 seconds)
loading group "union"... done (took 10.557889659 seconds)
loading group "simd"... done (took 3.630494632 seconds)
loading group "random"... done (took 13.352185428 seconds)
loading group "problem"... done (took 2.21414888 seconds)
loading group "array"... done (took 24.236389558 seconds)
loading group "misc"... done (took 1.147026239 seconds)
loading group "sort"... done (took 3.809191658 seconds)
loading group "collection"... done (took 22.194537798 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.687756243 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145944816 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.195906896 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204488154 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276920899 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167307659 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158100901 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170175551 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.041898415 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208356174 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137438986 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414191776 seconds)
done (took 6.635291681 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261555957 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240541273 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186949611 seconds)
  done (took 1.141415329 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077422275 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156055319 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109029577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.095169853 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096706711 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109356644 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094649047 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109245037 seconds)
  done (took 1.488413226 seconds)
done (took 3.685801944 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.516377327 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.882940911 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543020799 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.180546702 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314932855 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306372898 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.263923576 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.219203224 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093620634 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086146849 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177319266 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.431821044 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.385068799 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.968521416 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068618642 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09258405 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.151267839 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.784424821 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079595736 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108980968 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529499526 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210586346 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113997667 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107419316 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184761344 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133538839 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.143679234 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100820572 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667465395 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134371277 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217195287 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083341674 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.141673532 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16350501 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211347267 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109186581 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671243948 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202697634 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095630666 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100098483 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690450231 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116232029 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203673735 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104092986 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068672769 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162965277 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.0996244 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093083555 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093538641 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086102499 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162123061 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.48448661 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106353328 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.190371555 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093377936 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697244391 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097622051 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275028689 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126160735 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092175548 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090219713 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086498639 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157127313 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093093123 seconds)
  done (took 20.198622465 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165621061 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.184246335 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076363622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155866189 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120444576 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096949759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083810308 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07646552 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125229403 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180342626 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135873493 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171738249 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093077129 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088639903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167861849 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230832636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127440577 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103151594 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088340144 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106349557 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122119789 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094776508 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107054256 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090641834 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170095792 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202617036 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107487621 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121876811 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090264202 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094585841 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141108726 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142625749 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092604095 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087810608 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16912416 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122457401 seconds)
  done (took 5.271165139 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241489089 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102598312 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249547795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197378801 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149974658 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114583146 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184906405 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17621326 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294841125 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.297134223 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17994013 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114735261 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113644061 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079771387 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079815667 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080814188 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094417243 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.294118966 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.191915955 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169322789 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.183038919 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097481181 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099046394 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365636999 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101370782 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085496138 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108255177 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065513569 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222563568 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094749479 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.067089048 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083131591 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119648106 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114404282 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207607825 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124499631 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119907985 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1122362 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086239389 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221020076 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118157693 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078125158 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113835217 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132678813 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112999356 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.109294275 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125147967 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222062038 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087285261 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.109526149 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.042597596 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193703054 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.143710803 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102162293 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275077857 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127846006 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099687467 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110147177 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.809298934 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129078565 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082015946 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078025285 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113242613 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079616689 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455564636 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123508374 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.177298733 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08084813 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159438012 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.420416381 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09730127 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11868304 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085692601 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08428062 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12817007 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086049629 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094440083 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086881789 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079814688 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107762656 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11382041 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08447415 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097962318 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146651889 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097916711 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09883275 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108287234 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12408219 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091991028 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08448707 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127824425 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083108683 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104464401 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168063411 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116241668 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113021356 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115885477 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14425298 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088465999 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.262837055 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097905886 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122261637 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09892047 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11330547 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116176715 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08157867 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083337133 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095192552 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081641248 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146779769 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102044959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080130232 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087117433 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10912086 seconds)
  done (took 28.726823573 seconds)
done (took 54.910481984 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418512159 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082199908 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081978581 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101246115 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081639921 seconds)
  done (took 1.564448105 seconds)
done (took 2.337941648 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.310043337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199924376 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086948696 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191371193 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087679725 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196014521 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181737706 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101320985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205437857 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084462696 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194525855 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084892848 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104595773 seconds)
  done (took 2.825725813 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103498846 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106064884 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101482877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120199294 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084760639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103675335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119239046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107349126 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100865061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112787806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085881033 seconds)
  done (took 1.91719366 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100562509 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105868211 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090805052 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116537096 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086336189 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098420547 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115337712 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106370021 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099259061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111418568 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085478677 seconds)
  done (took 1.894360449 seconds)
done (took 7.406052613 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.207628498 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.025819345 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191973434 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243386048 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.352164126 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298312446 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609880837 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.200034795 seconds)
  done (took 16.036488788 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.202600624 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.11446267 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091665218 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095546647 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113163273 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090696589 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095267422 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115860753 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091104812 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090945364 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090222367 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110892594 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096803301 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091876837 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106118173 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091253154 seconds)
  done (took 2.529892244 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144747946 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122344888 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11558495 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098897632 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09308586 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116677687 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102465684 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.095637301 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112098124 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095478901 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101581284 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113740581 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098191467 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092246786 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11518015 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120278493 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.093621263 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114634271 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116670633 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097852946 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.114667724 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097711657 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112218809 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100414515 seconds)
  done (took 3.451553092 seconds)
done (took 22.796442202 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148142721 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102324884 seconds)
  done (took 1.037177772 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163814337 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182018747 seconds)
  done (took 1.131080286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113416867 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091111656 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137658636 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103632383 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090244227 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106737666 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116932328 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107489857 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091714176 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092090761 seconds)
  done (took 1.84192515 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095351162 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093624127 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122290202 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166255639 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117894392 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092074418 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094243968 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112508791 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095686819 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091401009 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112993699 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108702161 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094655263 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127181257 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095115518 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095653714 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115684753 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093773447 seconds)
  done (took 2.71637336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090972323 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092511345 seconds)
  done (took 0.975365582 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093883237 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09102666 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092171218 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109381367 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090360792 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089817846 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10595244 seconds)
  done (took 1.467356079 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.528784491 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236996758 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37148013 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073949907 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124432513 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.45103445 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.105818764 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073495938 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.0920117 seconds)
  done (took 2.886632231 seconds)
done (took 12.847538992 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091660678 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.240884612 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.634205928 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113619407 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089422265 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161730204 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.314854144 seconds)
done (took 2.441487287 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350988279 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164138889 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084151483 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091676742 seconds)
  done (took 1.487295416 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082360055 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100345722 seconds)
  done (took 0.983452993 seconds)
done (took 3.272596187 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091682119 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089799966 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.138106878 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088832176 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.089287331 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087547865 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109068409 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089255135 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088585567 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087778132 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109088313 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089438678 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088519776 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106266167 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089229433 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088160792 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087280722 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106192414 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089003986 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086939548 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105196548 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088451751 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088973256 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08778323 seconds)
  done (took 3.108966091 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11150601 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091114729 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110105692 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094073345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092864463 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109862923 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092341072 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091124577 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111525006 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091273688 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093196977 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092381511 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109042777 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095984691 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090132621 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111007133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095233828 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091071847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107987615 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094285523 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092915028 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108703279 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093268773 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092621485 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111218054 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093919135 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090425396 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110719178 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094019148 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094133269 seconds)
  done (took 3.761580366 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098421455 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08568841 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0892309 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113933972 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085981674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088646119 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103214453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09161591 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089554614 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088467465 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108757126 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089738228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089720208 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108733659 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090949415 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091469383 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096803512 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107188351 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090768945 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089713504 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110452733 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089713992 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089375192 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088010144 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10798992 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086712424 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09019883 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107711044 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090195268 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088305572 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09065636 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110389317 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08994412 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098562673 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111274695 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089795916 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094724127 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10399437 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091422519 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086878995 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0859661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107521285 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09052443 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096266502 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107521494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090603211 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089747377 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08975471 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107922173 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091517364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086376906 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107285012 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093784063 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091344996 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.091276691 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104659258 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090706577 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086471471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107616199 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090318538 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086415947 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086266138 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111904244 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091186805 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104155423 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113587419 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089342647 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090560399 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110802009 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095985041 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091157262 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117753801 seconds)
  done (took 7.71930404 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11395192 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097661511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108486631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091655301 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08965777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08879509 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113842689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091864126 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091850437 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11420286 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09061285 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091512545 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108533076 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091652577 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089825598 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090519611 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115204664 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09170831 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089884754 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10959578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090713072 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094295231 seconds)
  done (took 2.963912939 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238973126 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099211569 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139258212 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121233084 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106593024 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120787846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094383162 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0960164 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112283273 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10021009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099372204 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112019831 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108338149 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099283785 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117972963 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101596789 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113087495 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10159162 seconds)
  done (took 2.89314549 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105874427 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091969098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153307205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092061078 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090706367 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11092046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098075181 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110466631 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110883723 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092802653 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098584883 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109988847 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094000501 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091454926 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090988037 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110908238 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093316825 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091436767 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117493503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098446527 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098108845 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117536595 seconds)
  done (took 3.083718398 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107121513 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093081669 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127911168 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096863505 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091090703 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090956469 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116918849 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092075116 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096843531 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110242859 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093497643 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090934958 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124627371 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093514056 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097531536 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111090873 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092462387 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092436755 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11026472 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093012387 seconds)
  done (took 2.841565817 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196529391 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125700761 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108112351 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115779179 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126575454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108320548 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135658871 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109709342 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107855894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136148877 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111082841 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107577158 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13408409 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113246594 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126148863 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116757584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115742023 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134613487 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109240008 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126459866 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119841426 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10757171 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134027169 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10905905 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107816992 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127350272 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108889615 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131418248 seconds)
  done (took 4.232675049 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093324577 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090169916 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090348151 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110471659 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090646863 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090336977 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091029243 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10914293 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091359034 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090236545 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110213457 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090454589 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091598171 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090556278 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109764726 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091613046 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090234101 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108225285 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091645733 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090966735 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091604666 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10897566 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091665637 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089620125 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090155739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109378016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090516888 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090866304 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110025095 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091764462 seconds)
  done (took 3.695627216 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107581488 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102224382 seconds)
  done (took 1.033975969 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101439854 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105127894 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090560608 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109830447 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099447771 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090240526 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118055515 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098541232 seconds)
  done (took 1.639154742 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167700725 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187900081 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09618793 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.121839935 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168111252 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.180056067 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12927475 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115760531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09151904 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084206868 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.182562601 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082595909 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110745088 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088966551 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091376983 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119440189 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094524451 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101193385 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117833979 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094304869 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097792114 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114708442 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09544866 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103286738 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105105404 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095345085 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095975822 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.12180236 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090715167 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093114774 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108632948 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093728818 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095764133 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09655327 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111393355 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170844071 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119710125 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090376856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094107568 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118105941 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126321371 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092384304 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114032936 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091986278 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095460044 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114825286 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097671638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09274217 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104400148 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089750449 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092630006 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10644119 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092264387 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093981015 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111002174 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09980522 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094768965 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088933307 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109103958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088664976 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090583796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106981621 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095641213 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095022838 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113360994 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093348742 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091890247 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112500689 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09529906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093673016 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109765425 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107757976 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093326114 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116059871 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098142579 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094386863 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107669069 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099868915 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091740856 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110206472 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097218647 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12113356 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111808142 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089283909 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088605262 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099407195 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113858474 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096437194 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085276836 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119942068 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095591555 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094949225 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103743989 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092559187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088427097 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114637414 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086732118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093636489 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092395828 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116223579 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099264578 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091506329 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113363159 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098469854 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098267035 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110624682 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156847529 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109442758 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089632278 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095137448 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11838384 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088816043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091549421 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09104398 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110331698 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08916469 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096875378 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111507616 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095236831 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097097962 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112938105 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094867999 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094804863 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110262555 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090369942 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098144953 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119885916 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09535626 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095893829 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093285535 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113915184 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093537034 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09617878 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109590333 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099007143 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09054238 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112137864 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095400959 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098451486 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111550568 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089951034 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092353015 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112237877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093633625 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09575198 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093405243 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108014574 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08659523 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093492266 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107987405 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094656171 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101441531 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109030974 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096464013 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090293256 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121057294 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091313427 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098939397 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116563217 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10000301 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099348667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084453826 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110422632 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095912965 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093394977 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10929651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094952508 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092644113 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118894658 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088521802 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096885365 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103914472 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091748818 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099535143 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093943999 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.11551462 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089370303 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130679816 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124413028 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098689156 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091257276 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111792359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096667739 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091627364 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.116236569 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099310045 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096904293 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109162276 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093914038 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09831313 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108876205 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097096425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092669116 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093391834 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106408992 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096191492 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085588188 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117268124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096215657 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098337505 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117447267 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096263987 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092865859 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120960703 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091826482 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098155219 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085453395 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117860658 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105788522 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100489873 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119221865 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095573815 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090844233 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114208658 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102946751 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095509213 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113271527 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096241289 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087583344 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086290862 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.119572119 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0973056 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089741091 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.1135342 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098432699 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095128927 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11091138 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097213898 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098725682 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11785975 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09056459 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093375841 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108788345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093960342 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100805277 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105460198 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091031478 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095714755 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.11659695 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094193263 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094245016 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095433714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118975395 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098772896 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096810984 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11081919 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10303489 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092348265 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.112961292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090732069 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097128762 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086649287 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115569166 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095459555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090091205 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109970758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098134406 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100017328 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118711604 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093004494 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0995276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118193522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1095918 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091396189 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118196106 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091767116 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08818782 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089865827 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106492173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095837188 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090232634 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118073674 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093063441 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09273833 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.11789942 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097411899 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091101668 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118326849 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107064663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0877569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106670688 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093670781 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094082704 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109835685 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092102354 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094625161 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11455046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099366546 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097082108 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091059833 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114373134 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100238235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090305828 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1203329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10035934 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099294121 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108622682 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099392877 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091569675 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116337699 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090290113 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093024189 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110952308 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095557543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091345485 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092392894 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109728409 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087748798 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090319028 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120792456 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093552609 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097906654 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112473032 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093155492 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090950322 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108795539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10134487 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093396305 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.118895916 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096775993 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088653313 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087222195 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118911001 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095579612 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099785734 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10999667 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097871873 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100348585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.11705888 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097169899 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102310427 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101924693 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120608913 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100299277 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087473554 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113050479 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099640045 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094632914 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115586137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097069956 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088484716 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115550029 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102431671 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096127308 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112338448 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089839986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095539314 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099977518 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117379661 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097878368 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096726896 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115376264 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090913306 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097126248 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118595877 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096417499 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101880484 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11375427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09967776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091404151 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098764235 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115273178 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089887059 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086909096 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110609666 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101882998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088292652 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117234881 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10128767 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090957097 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091259091 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119125344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092678196 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09644327 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119934595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09331445 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103600744 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114257896 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093450221 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098506171 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119204055 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088915497 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093080481 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092569383 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121655554 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09405379 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099290349 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114588455 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100115664 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096028413 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118142328 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100245918 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09952795 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106843336 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101731652 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097865587 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096030088 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113167114 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093905726 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08873803 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112975051 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101065366 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09136036 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122044919 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101738147 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091702374 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111489108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100970871 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093200749 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12020998 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093676577 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095976731 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087796011 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118156017 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093060298 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09982261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112149736 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090596786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098439474 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.118305198 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099189568 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096779416 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120071834 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089811072 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087794963 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096083657 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112514518 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104603805 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096490273 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115854328 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093541155 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096832844 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115929477 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101690864 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089167554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110116866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096877124 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095970165 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111579902 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092335764 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099237759 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092298399 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117450411 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093819682 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088001973 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114327597 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101881811 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092986755 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111714695 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092828146 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10098009 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113029317 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092898545 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089365624 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120083426 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097689867 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101145543 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110892803 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095973099 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092858108 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09629346 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.122784189 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093283789 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094116648 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113774454 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099966972 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098857683 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108498993 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093166805 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105144307 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120429142 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097291423 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097319569 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112926721 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103128408 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102531265 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09671579 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109285894 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089677604 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092673936 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109826605 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097716896 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100111963 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113146162 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093054152 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098158572 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118554392 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098353638 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098191677 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088932817 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122520259 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092821371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096342349 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108176116 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089401662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097699156 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11884116 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096220057 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095234387 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.09579179 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119335008 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090995719 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092055421 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118799744 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100448318 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099552394 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114482436 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094209327 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099822051 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124111383 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097969721 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094614616 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122059376 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102806579 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095734869 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113183387 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099962921 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100886991 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096668438 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123456272 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093733288 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095446145 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121677135 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103252096 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103458408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115117991 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090153783 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098615403 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113682333 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090884951 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098723658 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122646881 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103939894 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095245422 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091045796 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125598443 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10083063 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09462153 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093956711 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093188178 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099062039 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114093699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100372191 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091483142 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122446786 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103607588 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101148337 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124081282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090852126 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10074633 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117526537 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104365157 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096166838 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088880227 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.110590879 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098598502 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101202465 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122166024 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100800597 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098975575 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098694463 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.117690246 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095600216 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092493606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123745764 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100507823 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096429092 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117154982 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094839434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095431968 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116759889 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10263917 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102331239 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116674124 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106970236 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10110315 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0931696 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11464733 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097256921 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096806933 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117357242 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101465557 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09262365 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110623425 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103110878 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102799664 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115207946 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104444637 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104114915 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093988349 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11987949 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102923424 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100773499 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118510531 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097381587 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099626705 seconds)
  done (took 61.966402363 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148772829 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104061627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118452842 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097766552 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114377743 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119508494 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097832133 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09881941 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117962487 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107653284 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097712146 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116113858 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112970092 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117653789 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13609056 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107109082 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11753422 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101334045 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097746927 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098580832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132464959 seconds)
  done (took 3.238132167 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118874823 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11056378 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129408635 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111876029 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104577753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128708337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108292192 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127649822 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11236806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104528655 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133449163 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109075323 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12468485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108408618 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105159671 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126123231 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112714473 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104081182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130030223 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11045825 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105562866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130389835 seconds)
  done (took 3.430657907 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131279962 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101885652 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09591506 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117748213 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102864966 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097099219 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122737885 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099344686 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105907951 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093101434 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110339171 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093644241 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095373022 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118037077 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09323064 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097682324 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127187682 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102469106 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103310554 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097302247 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110201025 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098488991 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098510222 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109805933 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104488567 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103890585 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097763969 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123612996 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089731941 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100270223 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11788161 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093276387 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089030456 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089555452 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110714148 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102553544 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100303118 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118380906 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099464953 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089247313 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.117874696 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103684204 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089209598 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097124991 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119702792 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093170996 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100741233 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118679757 seconds)
  done (took 5.87274087 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131160813 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.407122442 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102821525 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135423226 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134453201 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107578904 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099468794 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137040332 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100760509 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123889288 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112618372 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11121058 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125916431 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105167633 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102332426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124612564 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104193348 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100181734 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126459238 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100909201 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104588021 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125068349 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111305565 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130984044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104520694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100221473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121333796 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105801304 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109562117 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126947219 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105928275 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105812199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132454553 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101676686 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100105817 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123540151 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113354568 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102272432 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124261612 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099755981 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101342427 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124960234 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104235532 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112445444 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124249389 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102893951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100377569 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120738957 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110981432 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101846611 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130749867 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11119333 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.124524983 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103072464 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104461399 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131968667 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102926496 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100335664 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124108799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111995178 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099955518 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125536285 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112554746 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.100699328 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129696101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.1129314 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123353745 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104793005 seconds)
  done (took 9.013165641 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138652408 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104739087 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134236134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112784943 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105548198 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127523759 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104932617 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105339443 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127545828 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110614485 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125860697 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.223622571 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12592984 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111618803 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104460421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129646025 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10599637 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105471583 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129272096 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106179494 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.12692913 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11538646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106078084 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134982807 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116562169 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101961989 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127882464 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106235855 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134108464 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108285837 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115548213 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126698304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107339837 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113559063 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.142183165 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105944269 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100134941 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128327841 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106750796 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105217151 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124264196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114065832 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126191606 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105325964 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105961798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126509453 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115318575 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115303001 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133361162 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111311362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126555409 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114902042 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106473595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.127597301 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115626994 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.118982379 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137877939 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113499699 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128472203 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11439688 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113092244 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142533698 seconds)
  done (took 8.298552211 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103661855 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102221728 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098391073 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120827027 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100440985 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099415436 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09828247 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122824069 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099748928 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098697467 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120754042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101560192 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099093118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100860522 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121390577 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100817569 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098720933 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120224856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100645271 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09962447 seconds)
  done (took 3.000375397 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110420955 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115290639 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120957141 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108853717 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101735982 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127121612 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102448572 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101520103 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101016547 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124700006 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10999646 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10876439 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124628488 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10692938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130163828 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108373628 seconds)
  done (took 2.697800817 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121846221 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11694476 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.208824879 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104106535 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126304888 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109696212 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101070185 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12684944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101970579 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107152592 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127266184 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105681246 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102121646 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102122414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124582113 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104666243 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099690749 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125618278 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103345475 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214971471 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106008662 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103882344 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127819047 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105820719 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103961824 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129481968 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107784307 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101972325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124688552 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104544719 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104772542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129358838 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103793296 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106127532 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102571564 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125570367 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10310557 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102254972 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126610025 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102575125 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10432444 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124824183 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102685544 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105205138 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120786798 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104673227 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101039105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108380402 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126006805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104159614 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101751347 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130920629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105972135 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109687761 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131136438 seconds)
  done (took 7.235529532 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117341039 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104434649 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134328744 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102065703 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103497868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102982439 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125779612 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105060008 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103177366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122545821 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105157367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10382703 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125236666 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105285595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103582516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103368382 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124503892 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104023703 seconds)
  done (took 2.890965743 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110264022 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102840173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105517748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125436342 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103263551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103435151 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123473034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102392909 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101271258 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101157836 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124751129 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103035937 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100092756 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124014444 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104884986 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101362191 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123754494 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102709779 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102355963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100374775 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123783548 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100964446 seconds)
  done (took 3.292314267 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116286714 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213888582 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108631831 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.221785047 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099803753 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097428311 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.135109849 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099924019 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137246713 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099826242 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098529638 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119418678 seconds)
  done (took 2.445857815 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13192334 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139556224 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125505555 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106103856 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112119006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130279905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108654879 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106552516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137449532 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118401369 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129299473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116930162 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11396121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137270249 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11085872 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133792083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108623939 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107934396 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126686781 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123459764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106919881 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137534599 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108186453 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10765964 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129779842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115728124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137075113 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11940429 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106268052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136783875 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111625507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106483164 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138741107 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117291172 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125344362 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116263527 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107924339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14501034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11182679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135192262 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105392453 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111099045 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136777379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112296892 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115533058 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129922038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112764479 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1286716 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108883259 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128008107 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134470033 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115013927 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13356063 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116887839 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114562403 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149538359 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117686194 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138113443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112458435 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139730269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116565452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112568714 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137883665 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118553414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133073068 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116336302 seconds)
  done (took 8.945619971 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142345895 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103754884 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129901714 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120025319 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114429426 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131515327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107499075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130504374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109228345 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104848738 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171481513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107927481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115291267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137573919 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10785778 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129377765 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108929774 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115837915 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127107016 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128742629 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107005646 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138336097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115688175 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137649628 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118220131 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133298585 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109883107 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107093437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128534152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109560021 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114018061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129617181 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117510334 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103635315 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139630046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108742808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10767305 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135198408 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108234783 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134840401 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116316887 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121748304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131168845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109061006 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141645875 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11038757 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108223469 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128481142 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111164137 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104621545 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141879006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119017928 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13990997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117605249 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108630853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129405492 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109250695 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108291285 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131687487 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113673534 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116585426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131982566 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128402851 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131596273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110234619 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116383794 seconds)
  done (took 8.895089103 seconds)
done (took 168.99758161 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175777311 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213365889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196471563 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157741777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094146749 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152289547 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127050374 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.19833395 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094220152 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093608412 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093537035 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120817529 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.162522273 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09408019 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.118333973 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097628127 seconds)
  done (took 3.095641911 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18158636 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.334388053 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109770454 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12222085 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102904287 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099379537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121695504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101656991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098513086 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131070508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10130122 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09551033 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127565594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096487968 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098465664 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120383954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108079317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099225327 seconds)
  done (took 3.16507127 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119878861 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143383317 seconds)
  done (took 1.177188873 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129543568 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212984626 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285974914 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169759018 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119707122 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140084574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149558963 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133691792 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190693174 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136212713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112336632 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098707873 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147507794 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105210306 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114503248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121324507 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127628101 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13524995 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114340657 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099856763 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143780854 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104248382 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104732872 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136284649 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180341997 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134077315 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104437093 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102371398 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122836012 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113681286 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104951405 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13918446 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112439229 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179256873 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10262981 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177903838 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105680547 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122895237 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1145154 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100560134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126727218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103804681 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112939293 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120486272 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104076363 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105019501 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126618685 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102126744 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129001251 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108714523 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107308199 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128704844 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151492309 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129697708 seconds)
  done (took 7.919981515 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867599295 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140652942 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099262064 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.015884282 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146019197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113290873 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.865239078 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148363629 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251157916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.892007217 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11509641 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1071403 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257325949 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256701498 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.270305463 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.379639897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.70375311 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137065335 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12941492 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163061378 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107632123 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144611476 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120720449 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514376444 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100680261 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099006236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130081765 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110318358 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176517977 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099865632 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103249582 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194068953 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291794019 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207599793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099661207 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12097055 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101284667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183811852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269348428 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218310722 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169880122 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118381255 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10020527 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107078002 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142637901 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097575746 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177069793 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.165513645 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.186349884 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126586558 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109565259 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109932695 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129902483 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152920913 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119899115 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358547131 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361045703 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09965094 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132401823 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111916187 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264147417 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123345434 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234772732 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1275188 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213755464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099038502 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849232783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1625808 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121004564 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105858713 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106985811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128520743 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106675786 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18931779 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476150214 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131257263 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10670037 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099700597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231510097 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10024927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123740037 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155843351 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124056208 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108468612 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133312902 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110136561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187375853 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246828455 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132390928 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109821088 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127066718 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113982581 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101440693 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23179023 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22709061 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175976219 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228241874 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108147621 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177521946 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159328152 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127914869 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18594676 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108623729 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112453196 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129871683 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22470532 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.131639156 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125860907 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105217081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10840338 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158442355 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103900293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131328782 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163529804 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.551428014 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184214626 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097331232 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126777434 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110458879 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179365127 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107938028 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262090521 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10984651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183513211 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129644209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099410407 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107750085 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179095191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108195183 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133069715 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107291088 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109506244 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279290614 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218898646 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131921664 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25237909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174753158 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127971301 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168950116 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132375562 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162640584 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13335348 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107163767 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101320985 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841346236 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116105616 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107835361 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129166984 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182311103 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122913046 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104608135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100678166 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098398128 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.809797112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130560667 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098595219 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102416516 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128410254 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109796155 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109747825 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129368336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154095434 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264229061 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110023697 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107535113 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124797504 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154417192 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12562638 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101056216 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101533861 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124395846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111496161 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106192554 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12772588 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16617176 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174500473 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227093403 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639166964 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124923637 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101870496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239823165 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100495042 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.348650482 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110520549 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.231601309 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18288436 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098303981 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359194699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183625376 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205369342 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105376599 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19057633 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098809981 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109575526 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177852505 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100026338 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131275562 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.15102975 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136380541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110856136 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.291294026 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124999415 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225079669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.12181137 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.185662995 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102618357 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106575983 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325423017 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124008507 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116889236 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179127178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106011805 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101436992 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.638430557 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124785352 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113732619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105238034 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.252198202 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158930755 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132795937 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110512797 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110054288 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177419 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228711695 seconds)
  done (took 47.518201931 seconds)
done (took 63.787278189 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268038485 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177455737 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.37584102 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150592334 seconds)
  done (took 1.977085215 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.270701462 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169050408 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.251810304 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098080978 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.259557029 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098345607 seconds)
  done (took 2.087738951 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177596397 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170656338 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147269914 seconds)
  done (took 1.436335096 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201934687 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.216795935 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330897456 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236015767 seconds)
  done (took 2.009827088 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.292800921 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117968493 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124800926 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239109666 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252010608 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208400104 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123309396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174177317 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129088902 seconds)
  done (took 2.644481606 seconds)
done (took 11.092149148 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.383838825 seconds)
    (2/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.347668862 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134857163 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.257370577 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.241634708 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102749519 seconds)
    (7/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.417961949 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.13210821 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113074993 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110459228 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120558347 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.435672092 seconds)
    (13/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.237866771 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.277051432 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077361723 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.191902057 seconds)
    (17/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.303079812 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.308340188 seconds)
    (19/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140947463 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.381280678 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.261625798 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12859205 seconds)
    (23/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.115566581 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.1360159 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079901012 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.330836414 seconds)
    (27/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.190559498 seconds)
    (28/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.275285146 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119892761 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.155650868 seconds)
    (31/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178379317 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106927564 seconds)
    (33/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.164780521 seconds)
    (34/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.242428245 seconds)
    (35/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07829152 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.135633729 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193886736 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.129959962 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119353167 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.189825326 seconds)
    (41/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.274138981 seconds)
    (42/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.199002191 seconds)
    (43/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.284528152 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135194077 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142942968 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116746271 seconds)
    (47/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.225265098 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.133060915 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.244135305 seconds)
    (50/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103962033 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078361082 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.147275292 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12156951 seconds)
    (54/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081130988 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084412201 seconds)
    (56/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.124601599 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104611696 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104025938 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127150107 seconds)
    (60/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110939247 seconds)
    (61/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.265832827 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.19191393 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.078319457 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127604146 seconds)
    (65/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081677845 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123952285 seconds)
    (67/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079455006 seconds)
    (68/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136133722 seconds)
    (69/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085522467 seconds)
    (70/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.178266524 seconds)
    (71/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086719059 seconds)
    (72/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124751618 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134961087 seconds)
    (74/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087238189 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13127661 seconds)
    (76/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086420068 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087073643 seconds)
    (78/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.204952739 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127708768 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195076832 seconds)
    (81/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082538918 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204020567 seconds)
    (83/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111035838 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126983955 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.110699761 seconds)
    (86/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.167296554 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.138996027 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128856609 seconds)
    (89/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.130807556 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080928867 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106428478 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148460919 seconds)
    (93/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.135396966 seconds)
    (94/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109593615 seconds)
    (95/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.112074028 seconds)
    (96/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081814385 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.17215157 seconds)
    (98/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081797692 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.125428799 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110753749 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103013029 seconds)
    (102/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159979422 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078767978 seconds)
    (104/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109341279 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103713119 seconds)
    (106/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132256903 seconds)
    (107/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082599121 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082668753 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078820009 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150266944 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106784599 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108959666 seconds)
    (113/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089363249 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105986033 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.208172003 seconds)
    (116/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.10916486 seconds)
    (117/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079806936 seconds)
    (118/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086695382 seconds)
    (119/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167541417 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223185015 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117744163 seconds)
    (122/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.149233572 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.165504286 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10400757 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.144786987 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.133715119 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112544131 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.079801558 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.218031707 seconds)
    (130/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087040607 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101306039 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081894981 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.178100022 seconds)
    (134/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104106605 seconds)
    (135/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112464651 seconds)
    (136/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.106947818 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110583895 seconds)
    (138/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08795497 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086875293 seconds)
    (140/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08112561 seconds)
    (141/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.110828479 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102575195 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123393135 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147459673 seconds)
    (145/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.137973901 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113241775 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126722609 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087635865 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111420593 seconds)
    (150/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082119731 seconds)
    (151/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086492493 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135259449 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087312429 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085779553 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128032972 seconds)
    (156/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.081271997 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082694944 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086285623 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087428995 seconds)
    (160/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.169818383 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110809692 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101310439 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.123886005 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103671423 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.13206442 seconds)
    (166/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085212093 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.134410039 seconds)
    (168/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080701254 seconds)
    (169/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080357565 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124937326 seconds)
    (171/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085279559 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12790111 seconds)
    (173/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088077332 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081130428 seconds)
    (175/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082989604 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.103440389 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104882612 seconds)
    (178/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131702572 seconds)
    (179/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087578176 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128503213 seconds)
    (181/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082475851 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082347134 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124009904 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.110975844 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086475521 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110668403 seconds)
    (187/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081238403 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128523956 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083199826 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104949799 seconds)
    (191/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112957731 seconds)
    (192/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.108048656 seconds)
  done (took 27.43373735 seconds)
done (took 28.378229243 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225835212 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131080286 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113364556 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111395591 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.23476484 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119115287 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152817338 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112667609 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121512729 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137577411 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103058636 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124618361 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135709157 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.204500586 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14007724 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104237627 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102461284 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146916029 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12661652 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127908444 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234236351 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104461817 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.146716283 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104761437 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234145558 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105164491 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111322327 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.137644878 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125523016 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112367711 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138280993 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.103821024 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127455034 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.150522772 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103868935 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111365628 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102411068 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110706257 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113719629 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112227889 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148465528 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113180873 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111892372 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.126908736 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114921807 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111522142 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102165575 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140932796 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10178103 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113012486 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129839975 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128318063 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111756111 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125478666 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102056832 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10322856 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146933769 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105064548 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12547706 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126821993 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104802294 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104749913 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113888575 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127465651 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112106295 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104399449 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.137046408 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115190346 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110270726 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129025486 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103977188 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111281889 seconds)
done (took 10.110214574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107093367 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147218092 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233557982 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.237045018 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130825296 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.144895171 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117037858 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126659124 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141024847 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12204017 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139651488 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15981327 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.241211819 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119424125 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118309458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141406879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114805731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112305901 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.23626992 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128024102 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15363057 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119975871 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154332964 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120757186 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107733532 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156128793 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111744866 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115794194 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130379987 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125951701 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127993441 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131956655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110618746 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125852317 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148561979 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117338315 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142813691 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115538086 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108159704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106911919 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139053716 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122194519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.13064748 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121239929 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115185178 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145953616 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115773941 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11914916 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108662421 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13788171 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109396733 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156267218 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120355738 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123366456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144274772 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120659897 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120137344 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144199552 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111271273 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119721369 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131209632 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107834383 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109321514 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152375662 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110587247 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12006457 seconds)
  done (took 9.785068688 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128065587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13696623 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142024415 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118172499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111653654 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125504158 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101809734 seconds)
  done (took 1.855477991 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103041037 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.242161521 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216699274 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242482651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.242066187 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.253694342 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126655701 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102042516 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165118902 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114121216 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244463001 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273844111 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114188822 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118335649 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.247913928 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127728812 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221087123 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129334603 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117426246 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.248107947 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119925655 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160171695 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117590582 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10318002 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.238440936 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104633348 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.29187734 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147554309 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112483299 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117021864 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118373293 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208965051 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243238124 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11783349 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137513367 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216345459 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241192263 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117153655 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.257248146 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133629842 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215633706 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143589489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12080384 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117714899 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145416676 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.207213361 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150167699 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119763833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117733268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.25222565 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14067564 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.216355376 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142153621 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117407039 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113992498 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147181077 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125320335 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118994252 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250918989 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12030189 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244781268 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.245757299 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244831762 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246158886 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12922607 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246631852 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20474126 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.143938066 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112995025 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118376506 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247999484 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116650239 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.142912657 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236841082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121858304 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.249376404 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.220993954 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142211729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117017185 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106241373 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.14318364 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103473982 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.239167495 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117314639 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115761998 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149103109 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117833699 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118277191 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137544656 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126120019 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.14196093 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116498823 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122477306 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14287606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121464468 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.251390558 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114307134 seconds)
  done (took 17.053807471 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106412554 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10480369 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.10966625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130506959 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105625792 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106810021 seconds)
  done (took 1.682048395 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142612479 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120055211 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15114883 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119913154 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166901252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251450481 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259067302 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112507743 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.164057944 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131161162 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254375783 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257296895 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255037181 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124019263 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259491658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121317173 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.262904661 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116815204 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153240786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117469687 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117419192 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147831159 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117116918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244231687 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120099071 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121150462 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.139407532 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12739518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126085097 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.159022596 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122270088 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119390182 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135681849 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113580924 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257735359 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110589133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141265171 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121936944 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12131843 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146257775 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230800788 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143324162 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125888774 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120509179 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141100485 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.110007355 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147255318 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114221019 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259942622 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123358214 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121040601 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146942778 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120066595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121159332 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138567271 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113698537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122381065 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258916166 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.14908921 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112269304 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11862542 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145288937 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113921051 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122612449 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146939147 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123066348 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110472289 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145887127 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116580468 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120248532 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147294639 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119288074 seconds)
  done (took 11.818303431 seconds)
done (took 43.179593161 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.74587781 seconds)
  done (took 2.768132317 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.920408175 seconds)
  done (took 1.934878381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.677268527 seconds)
  done (took 18.723198041 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.429333786 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.484343016 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.119762017 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149842728 seconds)
  done (took 3.200105055 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.824308734 seconds)
  done (took 1.860837332 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297786192 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266444427 seconds)
  done (took 1.592647152 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.715027867 seconds)
  done (took 1.74999663 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.525385874 seconds)
  done (took 2.547190114 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283810811 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241364492 seconds)
  done (took 1.563916263 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.646471663 seconds)
  done (took 1.68273249 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.318280628 seconds)
  done (took 20.360898758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260046756 seconds)
  done (took 1.298853786 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282266132 seconds)
  done (took 1.322206546 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.585772116 seconds)
  done (took 4.626030587 seconds)
done (took 66.260933811 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115501839 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117572912 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118126543 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.140651196 seconds)
  done (took 1.522846446 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123414577 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118697706 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122357598 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143495273 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125498501 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12042977 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.1436418 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121994564 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117682004 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146929229 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119699789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116810315 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147028753 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117889223 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115824924 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147290029 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122932812 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118706646 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145796962 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120639992 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119058367 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144563006 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122521796 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121371859 seconds)
  done (took 4.10499778 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11470914 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110223305 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111503495 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133401391 seconds)
  done (took 1.513013422 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126590399 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129863791 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154027617 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125712495 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130580711 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154638868 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118589173 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115373401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141554104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127137676 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134236204 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156797453 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130580571 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120925852 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15386356 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113846949 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119214042 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154594659 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125240228 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127036965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144242784 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125316564 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123244444 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153816976 seconds)
  done (took 4.245906969 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192452266 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130914344 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176329616 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163636871 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178128867 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116554347 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145607064 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150705268 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124977974 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120214519 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147601522 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165184064 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149126995 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122213237 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11893782 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150721959 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131090832 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124010393 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191367212 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124826907 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.152011649 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130947728 seconds)
  done (took 4.247927547 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121339243 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109080002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105687393 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136703487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122192564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111750873 seconds)
  done (took 1.756655228 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109146911 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104305442 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103997024 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129635479 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107881875 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102997175 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102385156 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129678572 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103771995 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103617716 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129396902 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103898058 seconds)
  done (took 2.380634577 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20481599 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147340664 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257680393 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.48777341 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161907809 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187866767 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.30335778 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165576922 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205255082 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138089558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215599134 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161969899 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182007991 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185974627 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16841995 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158360711 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19450134 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236170396 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143525235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243454982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15699245 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205087881 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219170958 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150595128 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168565919 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163849816 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118747153 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154224151 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168770904 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193719677 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204094459 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15169855 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169187995 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192535727 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260612191 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207238086 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272864517 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133945036 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199166528 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.216125459 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234402713 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167885246 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221716603 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152217751 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156565999 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185258964 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181472379 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.183388334 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161857315 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144612664 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212998664 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179816162 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.198294699 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136262369 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323314578 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160806203 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142939406 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246802474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215339464 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20236435 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206918352 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123074519 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203138612 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217936164 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240464377 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142984803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19279819 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126176101 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165384439 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.234219729 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211419134 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159896591 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237904346 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159683504 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171738738 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196902273 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155385611 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233842027 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198560376 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119077852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178065731 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135905271 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12602692 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.216611484 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120738818 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245402715 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131595016 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342668366 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207840327 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155767364 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19083977 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160712267 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189471441 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147846035 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130249524 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142856924 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188156399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158203288 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154051783 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154903916 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139815196 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.153773186 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152683732 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.14933114 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169597335 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160906146 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163612706 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198848401 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131134274 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206807443 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148986334 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190009218 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16879877 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220550672 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13095569 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160993447 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244495477 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169981182 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136861957 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202435868 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224043016 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151591764 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162104832 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165342185 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221694952 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142397717 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22830061 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137888694 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162817143 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141813285 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199579919 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18592504 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159252095 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127919619 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193562673 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222281828 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12725019 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139386789 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209506112 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132868992 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153607871 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136410573 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162711753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143012111 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148220664 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168016757 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15397803 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194245092 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164706629 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18822163 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135107684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200728738 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131386819 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196315328 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148691604 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.14634808 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175120104 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224847447 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128251085 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20894773 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162124318 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210693204 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199538642 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128988749 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212562995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127188869 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120811453 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189914094 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197382712 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163472115 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215327522 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206324352 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166966065 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190865123 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149405731 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196395994 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.210354124 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157064316 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.16940611 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173459628 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198797137 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12013036 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123310373 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156536527 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138715266 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128785581 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16613216 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20961206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165802858 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205736078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193822483 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137796992 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2176033 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125363567 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159729669 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203223957 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138019786 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215758932 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217994481 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177826454 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167833423 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162278877 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.148424391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125806851 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132923537 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18865304 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136331372 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163394242 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141706009 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219202526 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199695925 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149272753 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217054277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166062737 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226973206 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119843732 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189970456 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169210135 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195531079 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183424023 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158259091 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.160737968 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220535656 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141184015 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220418044 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195149816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179029679 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225553613 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163603417 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159042711 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14797615 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189748431 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137932624 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19064645 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145928404 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129554254 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181996747 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137474535 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167183551 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215669605 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144157856 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207127317 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156682983 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200507899 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124869161 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169797779 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172381767 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173356682 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105816109 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197156565 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195656025 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178552804 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155631803 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201416046 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130635048 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344090684 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187397853 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205994003 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135331525 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166938058 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170401209 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188957408 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190840819 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183913751 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168129481 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20814218 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200695284 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141613818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160118127 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149213178 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178706175 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141461913 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178704568 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162299689 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171942745 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188293427 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165458051 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168655525 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205525018 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146410937 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178068454 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138448123 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254803771 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167624948 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201703792 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191687784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165758579 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213433147 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123959479 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1252125 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1622816 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184912062 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15899019 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176898334 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194271422 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208574359 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173374421 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189204088 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140568434 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.156254996 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165451417 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177961248 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185543985 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164547461 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136489912 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219741211 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129369593 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159457289 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160177911 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316068056 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149535077 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200418433 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107715793 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309424892 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129330273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159151942 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161821346 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19966701 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132436953 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185888303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197505004 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138893361 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190684863 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134558662 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208337108 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212698137 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166152624 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203402821 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172317932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162344387 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190411714 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174688346 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174570314 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147186175 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186265167 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194970533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207230402 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132626362 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197529937 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167798014 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199276039 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174088339 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168435874 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18353535 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156844456 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165445689 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166949512 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125314399 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188360894 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.166951258 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156525422 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175915247 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199274014 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129772788 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155471516 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148166327 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193963632 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140960174 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129408705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21500248 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128847251 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210670505 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24134354 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131271302 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195641079 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146773483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129131644 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168813507 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14344373 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159693911 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174315533 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208726054 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132501556 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206818758 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165779671 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194080895 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157536374 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173310586 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26465663 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127425073 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221777504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179017108 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196860928 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179707978 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17427712 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198100192 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150049318 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193566025 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148177292 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250900132 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164451289 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194306552 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131358883 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173384199 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138502878 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160826318 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154269758 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19551788 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14285846 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136877951 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196433639 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144589476 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176581184 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141879425 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231041461 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151551814 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218407243 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217253674 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137077697 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204882548 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175507864 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15834779 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165508477 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200774205 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142520707 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18085568 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133912839 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136574071 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242994168 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151954309 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161165467 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203155932 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168744503 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202148472 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135896052 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207676689 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141419869 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203699297 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128039816 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151395788 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198441436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134122573 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.157722571 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172128802 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189721681 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164511912 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172517609 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176306499 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223699466 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123099942 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133185931 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315571275 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190167479 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195035766 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166351671 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140258967 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146015565 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188536825 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191575828 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172003088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129874477 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159084825 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145916041 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183339306 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144054981 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197611233 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182110099 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190969117 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185932792 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1627964 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252629332 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172276446 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171742091 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117773985 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15899494 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140611107 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162999289 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142744129 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208795337 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242066396 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162718527 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176175057 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136264605 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127610571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157364076 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164770394 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.674596539 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170015195 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175596282 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104348395 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139759951 seconds)
  done (took 86.210684476 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161002388 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153017364 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167526052 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221400012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194393784 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289939314 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229602521 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246510887 seconds)
  done (took 2.799334049 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12088723 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15902993 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140949907 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142628403 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111668181 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.483849727 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15931579 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121337287 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160412368 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153035243 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13599809 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572525179 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116094511 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145065584 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121847687 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135639665 seconds)
  done (took 4.106570326 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.75404952 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537429027 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.079475121 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277728962 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.263334465 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.203971678 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.770531993 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201491615 seconds)
  done (took 12.218779008 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168450821 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.164700274 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.451798934 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309465819 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184589535 seconds)
  done (took 2.41480226 seconds)
done (took 128.555152722 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12572367 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125583358 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123963389 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154709059 seconds)
  done (took 1.657079088 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196577232 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092544241 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094873517 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120778348 seconds)
  done (took 1.641547155 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.458755894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092721638 seconds)
  done (took 1.716410027 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.160270661 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.138350974 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166198439 seconds)
  done (took 1.620250452 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135978604 seconds)
  done (took 1.281164455 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127373879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126730361 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.271796644 seconds)
  done (took 1.675226647 seconds)
done (took 10.738196386 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12515586 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933672152 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434580892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135903245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713180077 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428625945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427522662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176930321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175114028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137891348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133641855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691878276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.440699547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.881477875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.396363602 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.906814407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699849472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112644282 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.14455686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114171362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408651058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136567576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112611247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11336288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.721621863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423450566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110754936 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.926388405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110819749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114617019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428410693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112709375 seconds)
  done (took 21.070818433 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114074632 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169144205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146938657 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112669844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114553952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139965634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123812463 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123155606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205118053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111016422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161187956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110900555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116206467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137644947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137474815 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111190536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113557877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143334428 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119464423 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112349971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161244667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110743342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112782848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142457361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111622016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132870458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138810879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123133675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110658066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143052479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117426455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111952226 seconds)
  done (took 5.293821931 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163378457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179888378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147720321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150280493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188865288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113926079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225520718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151155884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206624041 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113068778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132291823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137780509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153184354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112183679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164274661 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111716022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114773394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141337317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120961681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113638543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161799416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110876111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113214816 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141754967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111672581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135070249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139623691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124992012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11152326 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142974676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117752264 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111129146 seconds)
  done (took 5.621886205 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129003905 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127398044 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133308223 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163347518 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122664342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124718514 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154839313 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122310176 seconds)
  done (took 2.238592561 seconds)
done (took 35.375912888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.140510535 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131710464 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132455391 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154462729 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.258184508 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120058354 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129865537 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119709706 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.155749205 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132184896 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110934847 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.149224773 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132422216 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123422678 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.257329441 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126468596 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.264623595 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.258739397 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.119561922 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125231567 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150971643 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.232746287 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155999587 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11952777 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.249602201 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11617015 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.250981288 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122694932 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122379808 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112404727 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.258219708 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123863726 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.151765599 seconds)
  done (took 6.461447158 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.245694162 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.151565084 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121155002 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120446602 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121801313 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150166093 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246664118 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.151132068 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120075396 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119033992 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.149676366 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227508609 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157617529 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117010759 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12247172 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112189825 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279011039 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12128756 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144228187 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09591066 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117317851 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118678359 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.289832248 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.146091692 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120668697 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119211249 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122441059 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155228958 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122420665 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122114411 seconds)
  done (took 5.678725276 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.13202929 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134369602 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138192084 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219694417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149592417 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162728724 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139507615 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133998395 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170753557 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114218436 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129682552 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178966404 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130099295 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124661453 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14250199 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132054572 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13584423 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144263527 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123673478 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131121492 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163235213 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131353715 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137264802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150133198 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113402829 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121465935 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152047198 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125235897 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122366049 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127806964 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145138708 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118093579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116182163 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17859394 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116221553 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156057276 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141114244 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126864178 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127195574 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.176392053 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118208607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115939883 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171389463 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170614923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143445127 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129025905 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125949536 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128273574 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.142588035 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132740483 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155888189 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14499707 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134855138 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112185076 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143311101 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123949701 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114035312 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147679044 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130690152 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116708417 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.168059988 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122427021 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126324723 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144971857 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126595079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.112880696 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112933007 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149205426 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141731362 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121401681 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180998715 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115216676 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126383111 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15751158 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127221904 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125413853 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142323755 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12696 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125946532 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147594677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129511162 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117343553 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116635642 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160656533 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135167328 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127568107 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155997351 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127340006 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117150442 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145801432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133514046 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115790353 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148705013 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129213848 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114257267 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145927146 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128066146 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125514355 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110896854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172089132 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119592652 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112732911 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.169198262 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118875522 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118572201 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154772754 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157268462 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114299102 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154964748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127937847 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114460016 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151129414 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118144842 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113523165 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160665613 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132626711 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122237681 seconds)
  done (took 17.114491376 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.362231259 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345868912 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18787005 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430886288 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128107142 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277025172 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342167255 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.346502862 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11494241 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179710562 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178029832 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.312874145 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114561146 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175823476 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346278252 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.404420701 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176027133 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152048805 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180872582 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129715937 seconds)
  done (took 6.071835183 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141465196 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151012988 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166505741 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143742302 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125301199 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161237962 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114959381 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136291633 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155686628 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124790729 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.11789523 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160302648 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128369536 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131248464 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158315663 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148820461 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12231269 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148962938 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138349786 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119106557 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131953163 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141095177 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124831866 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166967182 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135229696 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12524365 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143192651 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120424531 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121647871 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123117193 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149754798 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132902026 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122111548 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134698903 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126580971 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13096414 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150938887 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118898429 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120230513 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146273 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131890724 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128155054 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122305986 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129469257 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135822648 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11223194 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128625645 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158093638 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108093913 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133857665 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157120748 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129455149 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122847186 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164972305 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122833777 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131429912 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154703402 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130273899 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120022874 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141766282 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11498634 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118906531 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123962761 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158166342 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128498534 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133974648 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159573504 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114823191 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118869655 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149584105 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119884519 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129256661 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163815873 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125532514 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122351593 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156267219 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.123860863 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096800439 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123546437 seconds)
  done (took 11.808167435 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146620042 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125724088 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132273804 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17903813 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130196515 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121032639 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154296925 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135302122 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129213359 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163293531 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130233461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127931911 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167436655 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126318787 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124324819 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160514476 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129997118 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152469039 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162858419 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142159488 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129811549 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.14987716 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128257022 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126203688 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172964523 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127567828 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14126978 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158588323 seconds)
  done (took 5.171642428 seconds)
done (took 53.467362296 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.333022237 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.595157806 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.295505316 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.299460986 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.362781189 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.329134242 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.292198121 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.302696034 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.175605012 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.260495556 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.29719729 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.29432849 seconds)
done (took 30.029148609 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.339490588 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.286328519 seconds)
    (2/2) benchmarking "String"...
    done (took 1.666287731 seconds)
  done (took 5.132286166 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.296317918 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.281956875 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.623475583 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.286923708 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.28514925 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.284725383 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.286289898 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.284212469 seconds)
  done (took 16.515371893 seconds)
done (took 27.464247445 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.314756367 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.480672787 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.533269559 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.26399684 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.307328537 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.283766951 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.283089071 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.31015669 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.288468038 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.272296498 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.757771572 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.54748219 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.296571932 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.68279409 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.278080195 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.286969314 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.29527889 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.536572773 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.285888729 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.318426805 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.258990756 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.258776623 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.291071442 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.288586629 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.291718242 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.283167853 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.277808302 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.280586728 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.497067679 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.315787364 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.320082114 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.2840445 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.274249679 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.285889218 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.289398603 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.288205784 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.484148159 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.297234027 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.272532422 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.303055228 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.488804058 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.304506879 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.294961601 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.284511669 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.278991972 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.310477401 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.258103701 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.470278029 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.304836949 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.288186787 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.292412394 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.685966211 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.288844902 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.292737156 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.299304751 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.518843563 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.303964562 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.345883928 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.317023485 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.294885684 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.296501322 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.283985275 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.293039988 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.295042128 seconds)
  done (took 149.040598323 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.285930005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.286384463 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.288894838 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.304305038 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.289755981 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.290366044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.287939688 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.287856437 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.288495904 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.319744711 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.288743422 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.284765402 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.287801683 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.307102111 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.301207018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.311627756 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.290484426 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.300606662 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.310197267 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.286343117 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.292133448 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.288798876 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.28452857 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.285804221 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.331834516 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.363727747 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.314962468 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.317596602 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.297108452 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.289842235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.328611271 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.292510521 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951367908 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.247401712 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.292860775 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.298747278 seconds)
  done (took 83.560053763 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.288694183 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.287649568 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.290069289 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.320662146 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.28816772 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.288995619 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.83787638 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835576019 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.265973208 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.833498451 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.562274434 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521358756 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.288913765 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380710564 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.29992976 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.284935466 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.290417658 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.305469501 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.318587231 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287021066 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290127676 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826859896 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.302832085 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.514817213 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.458345436 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.297709785 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322415861 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.681834191 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290244451 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319457244 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.619966059 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332997304 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.288113174 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615195061 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.622905888 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.401210866 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.29118682 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323798927 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.289019156 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.57407845 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.292651181 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.292671715 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.294960344 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905235295 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.291035822 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.83163264 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.293493048 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252485738 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.291551949 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.291222438 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.639532443 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.959365923 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292749657 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.289370177 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.294512941 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.293102706 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.297112154 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.322978921 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.321951766 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.380064671 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294072801 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.295399367 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322068889 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.292421543 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.717723602 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.28727026 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.293056191 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.353622901 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.503177255 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.52415618 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825255433 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292772007 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386641765 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407617687 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.289291606 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.292083652 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291265042 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.291700362 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.402486168 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.290063283 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.959369554 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.459627583 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301960396 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.54459579 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.391367156 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.290679422 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.292608299 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.588280186 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.292013112 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.291176762 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007107608 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.387252108 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.293237709 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.294027054 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.293813689 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.964622596 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824958188 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.518405029 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.293046972 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.056680672 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.290069429 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.146490068 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.81388143 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.906893817 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.293023715 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.405520213 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.463297044 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301553641 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.297817201 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.574812132 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.293880388 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.354068768 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.293059124 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.697487579 seconds)
  done (took 384.185619634 seconds)
done (took 617.965983749 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.269882713 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.271499958 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.272689564 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.271484174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.273778112 seconds)
  done (took 12.543907644 seconds)
done (took 13.730541922 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.558112103 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.556619106 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379744869 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55875597 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352497549 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.572148805 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53665749 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.343965319 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.467937648 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.40210721 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.468129782 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372710594 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354345689 seconds)
  done (took 20.109053603 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.661159914 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.305610371 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.4304759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.627694835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.365693641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.662136994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.698463261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.304605914 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.546653384 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.342270061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339809553 seconds)
  done (took 19.472131547 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.670481212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.30516227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.430561456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.648207499 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.369180326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.663460137 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.702433878 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.305089215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.535366614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343968811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.340677191 seconds)
  done (took 19.502322956 seconds)
done (took 60.271050112 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.354626171 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420451022 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.345373668 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.337070028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.333327094 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.334176574 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.337550118 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.334460129 seconds)
  done (took 11.984856315 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.327545842 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.328887423 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.330100776 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.330917221 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.329554407 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.329814497 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.331024078 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.329805069 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.328641861 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.329496789 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.329977157 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328906211 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.328944483 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.332344218 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.330781031 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.329800738 seconds)
  done (took 22.465942074 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.332066249 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.331264891 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.329959348 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.331579107 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.332594668 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.331017932 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.330988739 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.330928675 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.330070186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.331011856 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.337389622 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.331040071 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.331504656 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.331687919 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.330577582 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.338443666 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.330960382 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.332264529 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.334880085 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.332245952 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.332216897 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.331564999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.331744001 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.331971545 seconds)
  done (took 33.161759957 seconds)
done (took 68.800184857 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.300355932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.295065595 seconds)
  done (took 5.784177304 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.435428625 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.4343046 seconds)
  done (took 4.058702157 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.332819208 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.332031189 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.333299018 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.33445957 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.332371107 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.332635526 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.334657082 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.334408237 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.333543672 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.332168217 seconds)
  done (took 14.523549538 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.333441983 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.331718649 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.331020097 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.334971577 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.330820561 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.331560948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.332212357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.335579336 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332329341 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.335729984 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.334330085 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.339312353 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.335228663 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.332755793 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334182441 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.335735152 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.333651856 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.33489112 seconds)
  done (took 25.200984567 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.357208274 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.36623931 seconds)
  done (took 3.914868295 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.52133564 seconds)
    (2/7) benchmarking "second"...
    done (took 1.419154489 seconds)
    (3/7) benchmarking "month"...
    done (took 1.504784093 seconds)
    (4/7) benchmarking "year"...
    done (took 1.486582756 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.421744413 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.369346409 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.419999568 seconds)
  done (took 11.335110143 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.331212929 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.677861619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.853556587 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.531550206 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.321963359 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.342526518 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.279792563 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.345045764 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.346145554 seconds)
  done (took 15.222825752 seconds)
done (took 81.23127173 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.303971405 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.352541689 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.319544545 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.324701416 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.703595618 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.307725584 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.304314047 seconds)
done (took 16.810987487 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.287035314 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.29478602 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.298140986 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323207442 seconds)
  done (took 10.396427018 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.31775598 seconds)
    (2/2) benchmarking "read"...
    done (took 1.70920967 seconds)
  done (took 5.221187765 seconds)
done (took 16.811221385 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33827968 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.335936015 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.336109362 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.336658454 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.336377063 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.334893565 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.337414416 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.335427432 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.336151825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.335306955 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.337032454 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.33885594 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.337508492 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337719413 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335417374 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339201025 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.336953602 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337582523 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.340199686 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338095229 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338531038 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338310759 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.338290784 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.339456575 seconds)
  done (took 33.291186262 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.339235178 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.338257959 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.339787623 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.339403146 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.33741232 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.338937374 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.338480612 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.338812918 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.341347737 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.342595382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342037559 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.338866905 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.339985622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.339335889 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338035444 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.341525343 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.339050867 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339605197 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337523927 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.337630504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.339212898 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338619876 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.337972168 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.338905387 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.338061774 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339293775 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.339406359 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.343156836 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338871584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.345296772 seconds)
  done (took 41.382307416 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.349565123 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.348419097 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.341415134 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.341277617 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.342439776 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.339071191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.341152461 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.341437763 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.340419616 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.339825616 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.339598353 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.339869756 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.339290632 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.340518092 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.339901044 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.340759254 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.340581019 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.340478004 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.339085019 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343140004 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.34189648 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.342563744 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.340045755 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.34070394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.341010264 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.346757154 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.341231382 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.341471356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.342920563 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.342124652 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.343235058 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.340704988 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.341048187 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.34234088 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.340818549 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.34872556 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.352493567 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.347556976 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.342190162 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.344045706 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.342212023 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.34228815 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.345221973 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.34394255 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.344344068 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.343713471 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.345147661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.342896118 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.34363455 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.347824469 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.344612747 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.344935624 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.343194969 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.342809725 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.346788932 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.342124442 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.341146245 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.343630499 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.347173478 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.342812519 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.343279477 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.342871534 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.34464201 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.343761592 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.343811948 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.344117224 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.344849021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.345803541 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.342991172 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.343561426 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.343604659 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.344632582 seconds)
  done (took 97.900713913 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.344090614 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342617522 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.344688036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.345109039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345811433 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.344063724 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343262297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346316875 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346730126 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.344166392 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346536036 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348423986 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34335323 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.346780201 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346998525 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.343113464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.34655182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346387833 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.346300112 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346477788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345705414 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346733827 seconds)
  done (took 30.801008705 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347509833 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348923491 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.349570221 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350131326 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352425053 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.348104393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.34844431 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351151777 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345781262 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349001294 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350999523 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34662697 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352944463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346522557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345251935 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35459153 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34716817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.353399758 seconds)
  done (took 25.491211348 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.352253035 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.347224462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.349065269 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348226963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.348595167 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347133808 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348869923 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347232634 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.346802271 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.347431472 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.348702583 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347883345 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.34789857 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345827147 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3470757 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.348069122 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.346184386 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34779737 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347822932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350322412 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.346558804 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349247694 seconds)
  done (took 30.86099238 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347598113 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347156786 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349493676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.347030862 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348680444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348973567 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.347526455 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.345907884 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.35153339 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.350137961 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347139256 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351001199 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.356788318 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348758945 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.347565846 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349167376 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.348406037 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348899256 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347349268 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.34914356 seconds)
  done (took 28.182674417 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354010101 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3518196 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.350775542 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352268469 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350143688 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352594838 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350400285 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350228196 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350411879 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.352160355 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.351723009 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.352168177 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348829624 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351031161 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349921383 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351616012 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352073891 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351948666 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350768837 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351715745 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.352470451 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351451605 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352343758 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353002152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351727968 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351105542 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353466946 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353014584 seconds)
  done (took 39.052180659 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351440012 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.350746628 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.350866615 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.352971283 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.352106437 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.350941485 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.351060355 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.351064405 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351987079 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35187205 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.350781758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.353110267 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351083891 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.352945511 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352037085 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.353222571 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351844323 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.350401473 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351932044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352269936 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.353547333 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354938083 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.352961714 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353071365 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35425301 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.352689472 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353593707 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352520666 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355032229 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351951041 seconds)
  done (took 41.777267837 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.382874596 seconds)
    (2/2) benchmarking "in"...
    done (took 1.383813402 seconds)
  done (took 3.973789754 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.353041054 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353510806 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.354619536 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.352211548 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350866127 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353151961 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.35324506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356795581 seconds)
  done (took 12.036178624 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.346063561 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.351358857 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.352997612 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.352809949 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.3571612 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.344951128 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356866959 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.359149512 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.348215929 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.347961986 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.355440241 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.352454736 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.350567694 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348305745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.348776335 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35211014 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.357345651 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.359318527 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.358062292 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.354365593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357952852 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349929066 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35569181 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.357887829 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.352150508 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.364070738 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361554287 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.361666662 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349921872 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.360885696 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.352976939 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.35820449 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359093778 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.357607695 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.355898331 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.360900922 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364670605 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357208343 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.363677951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362461316 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.355080559 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.356764641 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.35455235 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.359455696 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355984165 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.361478649 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.356520756 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.35604395 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.350611205 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.359307633 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.363016205 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352405498 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.359061931 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359298832 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.360350083 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370781438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.367287418 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.356137886 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.359219563 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.367637602 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.376877744 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.3658695 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361552401 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.365326764 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.372506099 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.382031961 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.374281325 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.364420433 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.359152166 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.360447233 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.367902999 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379709668 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.376045375 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.365404148 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.361372629 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.356758076 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3527568 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359232972 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368117343 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.370006828 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.3676874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362491836 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370557596 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.371302593 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.356054635 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.365877183 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.361536059 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.363833069 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.354782895 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.370046777 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369410454 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.359896884 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.354088882 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.357634166 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.359998991 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.364368052 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.355434096 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359858611 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.362770014 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.359250643 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.36333098 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359822503 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.371011355 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368086193 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364054046 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.368975342 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.366919704 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358202115 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.374006639 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.368956974 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.363709729 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.358504947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.365312726 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.365945279 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361906147 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.367149691 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.372300137 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.366645437 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.368847883 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.360965664 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.375945992 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.386171105 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.367565108 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.361631392 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.36605444 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.374764347 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366707247 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.368340136 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.366181971 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.36073449 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.362124053 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.367929469 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.371058219 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.358756865 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367036199 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358588966 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.36660905 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.361852998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.364670535 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.368493298 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.36757286 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.362879874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.372405108 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.376880259 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.370722282 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.368973596 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.380632341 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.366315018 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.372844969 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.374974708 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.367693616 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364816294 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.360920478 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.368163508 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.357238864 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369234524 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.359448573 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.370138968 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.364153361 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.364532809 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.364257843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.3604267 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365308535 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.371834784 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.375058868 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.365554446 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.369603634 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.366777716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.365630224 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.36158355 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.373418366 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.368956695 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.374004543 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.374636118 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.365849247 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.367625869 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.373239991 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37540095 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365927539 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368322815 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.362592967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.374547419 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.371134416 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.37532622 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.375685065 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36844839 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.365743018 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.362409074 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.366492554 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370759927 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.364390682 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.375076607 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384131599 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382532933 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.365497665 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.368832517 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.360917264 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.370229203 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.376095382 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.377134411 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.367083971 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375006417 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362603163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373527458 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.367140193 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.37494335 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.364223202 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.369561031 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.37177912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.370106492 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.367957127 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.366531387 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368556644 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.369681089 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369580098 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373766315 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.363329163 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.37053832 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.361755081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.36643298 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.373100029 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.37201714 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.375921547 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.374971706 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374445103 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.380658741 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.370320625 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.366476631 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.372282676 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377030138 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.368737742 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.384371016 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373767014 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.368398803 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382935916 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.373934912 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.366810333 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.380433783 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.37816436 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.369548599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.369737032 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.377524335 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.374246544 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.373950207 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.369219368 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36414505 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.373695287 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.382829129 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.377925224 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.365982713 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.373040245 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.371906511 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375152734 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.377424811 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.379610145 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.377773528 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.384229866 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.378917948 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.373278125 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373243274 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377497376 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.372547724 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.37448582 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369883908 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.380246539 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.380816164 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.375428887 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.380212176 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.37736384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.374911782 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.366366491 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.37368921 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.365615557 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393287372 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.393106065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.384246279 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.379129218 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.375746385 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381945009 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.37668128 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.369938314 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.371607172 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371545502 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.369569482 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.369293469 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.376435439 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369681927 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.374822873 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383270246 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.37733716 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.376463795 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374089401 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.369548111 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.378346926 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.374680747 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.372301953 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.367596187 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.375548036 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.375543915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.386141283 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.378027261 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.37118554 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390489322 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382514983 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.373916613 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.37381688 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.37336815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.36975959 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.378693757 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.382005421 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.373558677 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.382601446 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.375432099 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.378350068 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.372834981 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390045689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.386139187 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.3763561 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.381994037 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.376204264 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.3705694 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.372638238 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.380280761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.387936622 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.392600134 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.372583134 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.380400189 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.378178398 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.380035338 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.375292417 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.382989136 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382532025 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.377414195 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.391303461 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.383432418 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.377598367 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388458198 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.384665746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.380046862 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.376736595 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.373560772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39049421 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.38850974 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.378514963 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.376537617 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.374742417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.378632856 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.377753553 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.377905388 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378656322 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.382369085 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.391134724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38631826 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37984949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.377595154 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.392854567 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388719264 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388382559 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.390808007 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.378777567 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.385443708 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.3786881 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.379034792 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.375808334 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.378857465 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.380846894 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.374315058 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.381649789 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.378782386 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.383782463 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.387496273 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.386317492 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.371943876 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.39294564 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.396739698 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.376992424 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.381541815 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.378370252 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.374469547 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.382352672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.381182761 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.373326803 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.379547497 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383524329 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383701796 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.374845223 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.381870348 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376922652 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383858171 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.382108298 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.379023408 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.382060596 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.380950887 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.376657185 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.381760488 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.392776763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.390543797 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.385232997 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.387830114 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.378836233 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.395711843 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.390114693 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.385135987 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387186806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.380268259 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.386300241 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.385252133 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.386961708 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.379091015 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.383771288 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.377697052 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.383234279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.38101591 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.396520396 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.387437397 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.385286774 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.375677243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.37937024 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383720095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.382544386 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382302316 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.38816228 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.38862826 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.376540201 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.377758932 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.382887657 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.384484368 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.386584355 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382492914 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.38286873 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383511548 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.384561333 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.380607547 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.38374412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.376877464 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377844696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.401338536 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393990535 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.387346115 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.382984946 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.386584426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.38420633 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.385020819 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.384894965 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.3802809 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.382658507 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.38598379 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.380390342 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.381744145 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.381256932 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386595461 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.397558586 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.389572515 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.381683732 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.399530555 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.404547533 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392281938 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.378725954 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.383724565 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.383038374 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.383910482 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.384880507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.382368666 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.401038917 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.396556294 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.388235264 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.398917419 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.388382978 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.380483021 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388391778 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.385681448 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.391003842 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.392424344 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.393212712 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.391964369 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385496718 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.386728089 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.381113688 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.381712577 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.387080089 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.386628914 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.387213485 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399201254 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.392418547 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.39345101 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.397771742 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386906533 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.386544337 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.387122343 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.382730234 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389569302 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.381971339 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.401977584 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.391379937 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.384709257 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.38977261 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387121086 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385016767 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.39375943 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.392147842 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.386082895 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.384897339 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.396070128 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.403111806 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397295634 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.387002635 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3858432 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.390228813 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.391364782 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.388492838 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.389013785 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.388350502 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.407033045 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.401799489 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387875791 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.390341747 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.402945794 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.400128746 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.38765146 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.389346368 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.39663689 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.391623474 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.392268318 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.39082875 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400395818 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399221227 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.386016406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.397053703 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.389705842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.390021874 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.40200566 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.402671317 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.391064255 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.394934859 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.41417704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.403443762 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402370092 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.423839303 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.405682315 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.398406041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.398596148 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384673917 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.39765811 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.399412313 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.397304294 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.395847614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.401097444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.392709645 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.386944666 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.406673013 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.41111031 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.407473814 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.395212338 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.388586984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.391614046 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.396677958 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.393819563 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.398458212 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.396148421 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.395195366 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.395724764 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.389571188 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.415286679 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.42285035 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.402585064 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.393849455 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.394813685 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.405012537 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.402805343 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396497558 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.40082639 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.393546554 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.396222732 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.400399939 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.402458092 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.399698523 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.389777918 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.391219093 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390556927 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.401799698 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.413253878 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.420822648 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.407804581 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.402232295 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.398768237 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.397965761 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391637163 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399712212 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397408777 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.394496953 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.391914782 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400343926 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.399377253 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.398708313 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.393723672 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.402541622 seconds)
  done (took 822.348687518 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400500232 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396262751 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395402935 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.398352192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396793545 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.397053075 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399061501 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.397884047 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.393616325 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.400274574 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.397614179 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398755806 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.400613933 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.40005653 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.397452078 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.398325513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398975387 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399360701 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396494625 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3959683 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.397279221 seconds)
  done (took 30.597926805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.403626117 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.40144714 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402904448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398361342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.398223545 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.397048325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.400304257 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.401234892 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400360619 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398523793 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.39857785 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397792625 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.401730695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.39922032 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.39711705 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.4030222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.400994149 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.399037056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.401684181 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400239723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.396903894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.402311844 seconds)
  done (took 32.047359794 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.40253415 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.39947978 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.394267246 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.403901222 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.398921539 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.403630168 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.40182505 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.398994384 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.40178566 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.392033233 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.3944679 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.395710796 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.400646688 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.405406582 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.406022023 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.407370099 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.398509825 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.403690721 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.401169311 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.398708803 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.413943701 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.414764475 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.39819051 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.392503195 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.404948562 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.404129883 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.405189655 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.402000422 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.395441488 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.403224112 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.404199375 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.394763957 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.415524348 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.403410168 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.39674717 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.405020987 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.401653729 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.39954571 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.401508809 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.413387764 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.419245143 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.401586683 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.415315244 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.414573529 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.404013108 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.40075152 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.411177706 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.40138065 seconds)
  done (took 68.593952487 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.401571667 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.404079876 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.405721705 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.402602454 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.402248079 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.405768638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.405102981 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.40328634 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.401898105 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.402839845 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.400864523 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.403812315 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.402762391 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.402707635 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.403234797 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.40235368 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.402853324 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.400736714 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.403264759 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.403354714 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.40400787 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.404211388 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.403013539 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.404924607 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.404173464 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.404853229 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.405754531 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.40491888 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.405686645 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.402411648 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.407535763 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402884124 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.404496061 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.404992981 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.404672969 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.405553457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.409389001 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.404879349 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.404467077 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.405354061 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.403072625 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.40637081 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.405797064 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.409563325 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.405824372 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.404336474 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.404057388 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.404222981 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.404394581 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.404043559 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.405197546 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.407192562 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.405272556 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.403750016 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.403702035 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.407003991 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.403050765 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.408793954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.40358966 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.40561848 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.405565051 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.406273801 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.404240372 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.40954384 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.408910798 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.407239496 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.408278595 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.407271204 seconds)
  done (took 96.77255425 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.404601661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.408841167 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406979966 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.405951273 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.409686874 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.407572988 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406407826 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.407244036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40677128 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.411996386 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.408475478 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.407723357 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.406836302 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.408636601 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.409282912 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.407612727 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.409811262 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.409726264 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.410025046 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.410127573 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.409267198 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.411165484 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.409743865 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408551325 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.409410652 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.408832785 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.40803429 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.407782792 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408415483 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.409083236 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.412397834 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.411964817 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408510747 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.408931471 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.410374741 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.4088749 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406901324 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408321547 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.40902862 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.408695128 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.410503878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.40967095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.409720049 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.410145592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.409392423 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.409391376 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.412394411 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.409018284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.410047954 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.410552138 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.409651046 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.409436703 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.408026957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.40948636 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.409237306 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.411110449 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.410330113 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.409960303 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.409839128 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.411132588 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.411601853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.410892963 seconds)
  done (took 88.62493408 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.411621199 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.410407846 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.409389071 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.414871263 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.41090337 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.415272431 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.415266634 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.4153693 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.409460728 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.412746621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.411937231 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.41153292 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413563485 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413080113 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.411737065 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420662432 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411624132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.41690546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413199263 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.414134228 seconds)
  done (took 29.519783208 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.409977833 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.415669828 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.415059485 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.414187796 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.416421041 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.41686118 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.409949059 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413762253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.4154001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.412974024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.417024259 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.415583434 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.412714424 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.415602431 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.416220736 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416821301 seconds)
  done (took 23.88935269 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.414029815 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.415117104 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.4137633 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.412837066 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.417202006 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.412786501 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.414562984 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.414621091 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.413859402 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.421642026 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.412146754 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.41433523 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.415161035 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.417358241 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.41149276 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.416860971 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.414188494 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.4141901 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.414298425 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.41475379 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.413519065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.415229339 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.413402221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.415227383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.416164025 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.418037377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.416537536 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.416949739 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.413243053 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.41400579 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.416668977 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.415175631 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.416836037 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.415722558 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.415199517 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.414965618 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.416954349 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.414886627 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.416666044 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.4191496 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.416608006 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.414647282 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.415328234 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.413290056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.417124413 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.41712965 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.417246495 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.416070857 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.415893041 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.415481885 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.415637561 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.41675118 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.414905694 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.416518051 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.418489321 seconds)
  done (took 79.108759991 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.414910863 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.416717517 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.419099524 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.414847935 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.417154305 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.416973136 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.419733194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.421438858 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.416285479 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.419457809 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.421648521 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.421412737 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420573175 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.419196254 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.414284386 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.41988014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.417400844 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.419286699 seconds)
  done (took 26.789700702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.421964064 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.418875683 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.418721054 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.421500458 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.42119567 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.417877581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.419930495 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.417010013 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418451676 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.418283778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420089245 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.420426927 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.424203106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.42035953 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.418601067 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.420769499 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.421399886 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.419031429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.421966159 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.420210629 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.419063766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.421260623 seconds)
  done (took 32.502994969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.409517021 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.40983382 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.408910239 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.43585354 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.423619651 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.409819503 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.409060398 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.409005782 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.444673307 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.465313501 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.459793246 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.427418179 seconds)
  done (took 18.375172569 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421459321 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.42397242 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425320356 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422638172 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422059956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420208673 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422667087 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421882559 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42291642 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423345246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419905282 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421963156 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422826534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423557563 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422331849 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422074483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422560508 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424199823 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420917423 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422285544 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424331614 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423723156 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423801099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423979544 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423472077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423171271 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426215233 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42362482 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421886121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424967449 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421752375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420317486 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425390129 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.421312305 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421219206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423324293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424367093 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422778623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425729697 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42299555 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.423458388 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424552452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424555874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.421061365 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424439589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425478897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426518414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423410337 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42477762 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425421696 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421889474 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427087551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424499861 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422308172 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424752477 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425228236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424931201 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426581411 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424597151 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424511175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427339887 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42496682 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424352636 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424892719 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423636833 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423072445 seconds)
  done (took 95.221739652 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426716484 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.426114802 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425537912 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430338174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425488534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423043322 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4245447 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42743131 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426798757 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426385786 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427887093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42514289 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43145312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429893913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425938661 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427848611 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427504922 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424848509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427081474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429535837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42431108 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.425132344 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425426236 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.420844438 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42770851 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426585671 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424555874 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423163169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427405608 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424884477 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427518192 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427619741 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42729037 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.430542599 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426139735 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431355063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428612884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4269911 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42543734 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431304008 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427182325 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426630649 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425624236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427266484 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428010504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430330491 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424942935 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427266484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429850751 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425974281 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426658376 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429545475 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438833668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424664617 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429130409 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427546757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425059779 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427587265 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428168763 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426755735 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427212427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427963221 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428075037 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428818567 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427574415 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426972382 seconds)
  done (took 95.464845847 seconds)
done (took 1925.80149394 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.645070927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.597094505 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.418380228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.417089702 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.413263516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.400727286 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.413202615 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.416644952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.424687385 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.424349353 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.416910279 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.675620412 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.439911039 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.414936006 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.416658012 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.570665376 seconds)
  done (took 28.774074344 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.45618343 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.435040448 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.552719379 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.42347948 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.456110376 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.659022911 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.492668446 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.427028605 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.607414114 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.446222665 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.397496497 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.449452267 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.426365601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.398834027 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.444734558 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.658445602 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.741420051 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.399284365 seconds)
  done (took 31.141893534 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.932507689 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.427875151 seconds)
  done (took 5.63095307 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.448806305 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.424524515 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.427394084 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.422366978 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.395442884 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.393295963 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.424450064 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.403883762 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.421566667 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.560491805 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.429680618 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.448537276 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.44102815 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.425703226 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.432020161 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.484245168 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.634259007 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.434461463 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.433519514 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.439981299 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.424049873 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.579069308 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.472635801 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.433784841 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.561036428 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.416020361 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.432160193 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.441497764 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.610632679 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.436295705 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.426224801 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.426791494 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.42876451 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.40065919 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.044149539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.402320854 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.470746664 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.438771439 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.432345272 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.636000989 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.427898688 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.441110773 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.401701362 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.031938838 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.591326732 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.592214555 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.41843659 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.445566227 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.428694668 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.502050156 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.430369114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.429242853 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.52198188 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.32691315 seconds)
  done (took 91.111031929 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.40254693 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.400856352 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.667338353 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.422058629 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399979914 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.404290239 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.403334531 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.75753453 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.414198132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.405003528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.80929649 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.122872049 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411207179 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.480435746 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.447209803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.462577609 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.403332156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.422150191 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.422290223 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.40077785 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.064507226 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421620795 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.40647229 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.481110762 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.472210188 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056783687 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.40401667 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403506479 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.405715699 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.402761692 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.094906552 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.406782455 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.463695488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.403480638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.778457862 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.898105129 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861836481 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.409229763 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.429439247 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.39893865 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.429599603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055986938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879758942 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.404702652 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.405608912 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052628899 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40684629 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.409382716 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.417247194 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.763300207 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.404691965 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.409334386 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.402951102 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.401920244 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.405818226 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.491713576 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.471689243 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058356722 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.410644398 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.404565902 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455143981 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.405653261 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.414613828 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.405879965 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.410732469 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878431468 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.642597778 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.414689675 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.881263113 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.085330265 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.408580379 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.162394744 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.413542952 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.419015504 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.442227255 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.415256368 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.405235401 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053502684 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.417468031 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.404659349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.861679967 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411203269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.802990869 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.42729023 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.404704886 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.084840328 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.41384285 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.46137543 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.405745382 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.403647209 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.4066962 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.408237528 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.780662471 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.459960097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.410806221 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.413175795 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.449733168 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406236994 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407857242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.419152254 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.162261276 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.412799421 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.408016341 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429743615 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40749316 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.426811747 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.411135173 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.41048537 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.781687951 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.409812589 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.412891612 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411399103 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.406735032 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.413667897 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.493077856 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.41792179 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.814331976 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.411869414 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424016839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.409826138 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410466862 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.428945818 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.406964811 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.415276202 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.409863573 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.812546344 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.429054282 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.407394055 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412030887 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410742107 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.407110569 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.408275871 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.477315167 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.410255732 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.308223204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427656129 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.42884811 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.411199287 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.411550589 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.412876037 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.417779524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412369897 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80516866 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.788908422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.646206756 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.40915196 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.412103592 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.328914103 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.451913752 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.675579345 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434528092 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.411733503 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.799232011 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635359776 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.412939034 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.40848302 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.413525281 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.777055029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.413617472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818834085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.121282951 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413897256 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.415814819 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.30725674 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.315862373 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.415229059 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.419916877 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.802371656 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.430716713 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.412470468 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.413488126 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.414235777 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.41367097 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.413576894 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.420510457 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.413329097 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.412329808 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.709183619 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.693083596 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.431106637 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.418068597 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060569225 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.449346806 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.410678132 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.419784388 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411496532 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.414581282 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.468674404 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.420916794 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.449394159 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.417687333 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.416021409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098030273 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.413418843 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.43181371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.69343392 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.25935875 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.417709822 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.415150278 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.412190195 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.485629771 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090798976 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.442102728 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.822005438 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.420008578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.482325372 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.414356602 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.462092421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092599485 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416857339 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.435014955 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.266348745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.414978749 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.856350169 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.414076329 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.415684005 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.187262361 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.416892609 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.418926667 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.412546176 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.417308514 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.806146508 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.418115042 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.463975551 seconds)
  done (took 521.429211228 seconds)
done (took 679.3555849 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.416238755 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.416372012 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.416560583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.416709695 seconds)
  done (took 10.954727274 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.454479023 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.442056633 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.449470006 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.443680723 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.452131378 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.44401177 seconds)
  done (took 9.97422717 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417100806 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.418421784 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.417722813 seconds)
  done (took 8.54302045 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.716396896 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.435404042 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.883194085 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.431818669 seconds)
  done (took 9.758444772 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.452531569 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.452159175 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.45137828 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.451812343 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.457411798 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.4533404 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.452933156 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.452759321 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.454139943 seconds)
  done (took 14.366744473 seconds)
done (took 54.883536099 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.397049094 seconds)
    (2/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.391721322 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.606743777 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.605858259 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.430112865 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.594200561 seconds)
    (7/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.424179639 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.553965976 seconds)
    (9/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.484110864 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.482527491 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.647081099 seconds)
    (12/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.762482226 seconds)
    (13/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.595443946 seconds)
    (14/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.501861655 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.396564465 seconds)
    (16/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.395631805 seconds)
    (17/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.67968741 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.397009215 seconds)
    (19/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397575907 seconds)
    (20/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.753495539 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.718286942 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.585065601 seconds)
    (23/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.401672657 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.716594198 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.392416662 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.418856266 seconds)
    (27/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.565908695 seconds)
    (28/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.648595188 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.645037892 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58195934 seconds)
    (31/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.398272993 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.617633709 seconds)
    (33/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.49724759 seconds)
    (34/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.654446979 seconds)
    (35/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.396646948 seconds)
    (36/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.560671437 seconds)
    (37/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.725568524 seconds)
    (38/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.60850259 seconds)
    (39/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.422849721 seconds)
    (40/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.920488632 seconds)
    (41/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.596325273 seconds)
    (42/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.681492808 seconds)
    (43/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.481997536 seconds)
    (44/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.484818007 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.595555203 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.603110284 seconds)
    (47/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.400520694 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.680783778 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.748952852 seconds)
    (50/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.440894125 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.400819126 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.418951879 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.638392005 seconds)
    (54/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.797905865 seconds)
    (55/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.888014041 seconds)
    (56/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.548229911 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.750564301 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.422904058 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.439371585 seconds)
    (60/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.492061944 seconds)
    (61/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.580370241 seconds)
    (62/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.654162027 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.400349374 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.617831778 seconds)
    (65/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.401129921 seconds)
    (66/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.586141086 seconds)
    (67/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.4005934 seconds)
    (68/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.485396293 seconds)
    (69/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.618523138 seconds)
    (70/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.402693876 seconds)
    (71/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.777462623 seconds)
    (72/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.613997073 seconds)
    (73/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.672516596 seconds)
    (74/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.668494157 seconds)
    (75/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.515681219 seconds)
    (76/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.893140671 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.890468054 seconds)
    (78/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.869091803 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.651610515 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.836397981 seconds)
    (81/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.431253723 seconds)
    (82/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.830248525 seconds)
    (83/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.487572128 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.5870727 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.733317764 seconds)
    (86/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.428422986 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.423662325 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.667136442 seconds)
    (89/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.558532478 seconds)
    (90/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.403174454 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.598679133 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.588065563 seconds)
    (93/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.656584541 seconds)
    (94/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.481459059 seconds)
    (95/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.403389495 seconds)
    (96/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.619527735 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.416560025 seconds)
    (98/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.806417981 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.610259656 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.489356433 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.609749606 seconds)
    (102/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.731425204 seconds)
    (103/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.405390657 seconds)
    (104/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.497996778 seconds)
    (105/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.434175603 seconds)
    (106/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.697788874 seconds)
    (107/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.804565371 seconds)
    (108/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.689338358 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.416894216 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.576565847 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.57959619 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.490209893 seconds)
    (113/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.405170587 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.598508442 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.579244051 seconds)
    (116/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.621250789 seconds)
    (117/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.405222899 seconds)
    (118/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.045444466 seconds)
    (119/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.853237273 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.404092797 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.476106144 seconds)
    (122/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.735753408 seconds)
    (123/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.563756187 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.765270709 seconds)
    (125/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.625424993 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.500212701 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.592514104 seconds)
    (128/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.570089534 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.695804613 seconds)
    (130/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.765194862 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.700336475 seconds)
    (132/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.957221236 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.770492462 seconds)
    (134/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.463049875 seconds)
    (135/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.566380474 seconds)
    (136/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.83126709 seconds)
    (137/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.487717397 seconds)
    (138/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.049858505 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.770912418 seconds)
    (140/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.58635983 seconds)
    (141/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.665942017 seconds)
    (142/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.610396824 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.600670937 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.640982278 seconds)
    (145/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.576324685 seconds)
    (146/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.657431158 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.638974132 seconds)
    (148/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.826383299 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.5764108 seconds)
    (150/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.597685152 seconds)
    (151/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.455372432 seconds)
    (152/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.506347769 seconds)
    (153/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.40602342 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.694656911 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.616419099 seconds)
    (156/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.714235867 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.622138542 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.723012612 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.409137852 seconds)
    (160/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.748348167 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.493804414 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.574689701 seconds)
    (163/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.52397557 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.632461991 seconds)
    (165/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.800980418 seconds)
    (166/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.626747647 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.500178619 seconds)
    (168/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.509835434 seconds)
    (169/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.574574881 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.623083424 seconds)
    (171/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.678813276 seconds)
    (172/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.566128625 seconds)
    (173/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.423381493 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.640106539 seconds)
    (175/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.723545082 seconds)
    (176/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.40612888 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.618652903 seconds)
    (178/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.594340943 seconds)
    (179/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.407256048 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.676895924 seconds)
    (181/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.410137001 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.640700818 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.711602642 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.829126525 seconds)
    (185/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.730779941 seconds)
    (186/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.505368036 seconds)
    (187/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.409304075 seconds)
    (188/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.460078618 seconds)
    (189/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.409432372 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.692120346 seconds)
    (191/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.563928136 seconds)
    (192/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.661533216 seconds)
  done (took 354.772984479 seconds)
done (took 356.064634485 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.489480262 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.615538121 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.462732377 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.461570637 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46274865 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.440442112 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.492484065 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.46461851 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.488021417 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.486821892 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.439574334 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.473414741 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.48706047 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.472033001 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.505800493 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.459483011 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.465346955 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.474630189 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.487692674 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.486834325 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.466504155 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46555592 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.501236365 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.462780427 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480387275 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480701841 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.47889805 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.441606087 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.464163006 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.48731588 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.448571567 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.476483078 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.491692344 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.4770453 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468056588 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.478077764 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464102732 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.617147613 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.495673368 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.478525237 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.4753777 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.491719163 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.480461377 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.479218621 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.477210474 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.503301153 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.482357917 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.488590833 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.450623295 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.437032531 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.495313196 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.486051264 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.477127294 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.438019318 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.437510734 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.491015234 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.478454837 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.495121412 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.471398004 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.466206631 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.507994837 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.495277297 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.491523818 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.485559721 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.472843509 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.491486522 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.47953612 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.493843386 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.472638944 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.472769756 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471080855 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.478270316 seconds)
done (took 115.859178534 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.648842775 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.441043445 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.680759683 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.475350741 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.685850065 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.648452642 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.479975771 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.474960119 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.47171648 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.335215323 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.475721738 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.470840112 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.44667426 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.471510239 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.643138349 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.476817269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.471365877 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.233111208 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.474118253 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.652436389 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.443269008 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.474432817 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.474183345 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.328599188 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.444835967 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.439503305 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.65739512 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.473446659 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.227932057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.437837032 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.444691535 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.226593968 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.656570085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.49545204 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.482495714 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.482508495 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.694779832 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.477744621 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.645380533 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.64752913 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.681348306 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.511952044 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.447557542 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.444390659 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.47802692 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.478169396 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.472540119 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.504662569 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.442825097 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.478395403 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236914764 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.486210642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.486510889 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.474526963 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.477597536 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.495721489 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.474669369 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.478487732 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.657110168 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.475961015 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.649469391 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.332672682 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.340925407 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.478900844 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.445019021 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.476033509 seconds)
  done (took 118.528485783 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.590025589 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.603062303 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.640604228 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.469245426 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.563949857 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.638741561 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.469693178 seconds)
  done (took 12.284610565 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.484225752 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.475412062 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.563956911 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.561659342 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.475429383 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.701744056 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.476681567 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.488699995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.475391319 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.562341482 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.476762373 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.477441649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.485064197 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.444943034 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.561371037 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.486907169 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.645570013 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.472173242 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478015954 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.683779411 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.474647928 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.489945055 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.564495807 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.489071969 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.478853421 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.481000202 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.327182109 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47523243 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.478324373 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47709824 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.479340984 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.594434739 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.47776257 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.447775377 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.477948976 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.643796044 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.48062271 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.478706754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.480222171 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.453030933 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.477293586 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.481890539 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.479494704 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.479349853 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.479957542 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.506170024 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.478680494 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.479365917 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.482315873 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.476959047 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.566880048 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.480185154 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.481135066 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.479226164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.569375268 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.489798319 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482016254 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.480190393 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.479626494 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.480481143 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.687900675 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.568097242 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.485203181 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.570538824 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486640375 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.484588228 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.482621917 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.486302693 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.625751571 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.480503282 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.566906029 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.481110831 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.717966929 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.505805173 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.483577695 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.477594672 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.47895092 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481171034 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.448747149 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.487124864 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.479684952 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.476943471 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.486017251 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479633059 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.481249187 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.692209882 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.646569581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.483696007 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.497537222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.489688528 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.480951453 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.56940062 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.482350654 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.480997688 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.569987497 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.650711937 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.571180875 seconds)
  done (took 152.857654877 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.494772275 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.494186795 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.48312673 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.512648152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.472070925 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.473515242 seconds)
  done (took 10.245382881 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.48084746 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.484594305 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.481858552 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.481612012 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.485746686 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.48521708 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.484120292 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.481050907 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.487596293 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.486395581 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.48449548 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.487716839 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.48288473 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.485945315 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.485811429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.486084578 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.484756756 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.484032013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.493798897 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486273779 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.454507657 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.484293429 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.48627755 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.481049371 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.487000686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.486397747 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.510031967 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.486614394 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.485600229 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.49643806 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.48924741 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.485237264 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.483158578 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.485451746 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.486615861 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.481713352 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.489084122 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.493501164 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.49095503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.493101672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.485474584 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.486553492 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.48686694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.488320896 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.480314641 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.485568661 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.487571708 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.510331586 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.484150045 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.48729388 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.484112051 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.484984159 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.486956128 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.491203385 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.482034762 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485072997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.490253824 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.487397175 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.487892699 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.483558419 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.494706624 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.487502705 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.484964394 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.491541417 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.486566692 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.488051588 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.48428393 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.494349037 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.487634217 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.489501144 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.490065741 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.488787296 seconds)
  done (took 109.368628513 seconds)
done (took 404.589965606 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.876643531 seconds)
  done (took 4.197291499 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.552288319 seconds)
  done (took 3.872807429 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.622244282 seconds)
  done (took 23.948814651 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.488140915 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.472047039 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.4672678 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.456070287 seconds)
  done (took 11.20281371 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.755406885 seconds)
  done (took 4.074545862 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.477046906 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.459261265 seconds)
  done (took 6.257505861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.726795775 seconds)
  done (took 4.043996447 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.815691087 seconds)
  done (took 4.140809317 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.488346459 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.478502818 seconds)
  done (took 6.295418433 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.433365444 seconds)
  done (took 3.753010421 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.735362228 seconds)
  done (took 22.055175592 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.48164826 seconds)
  done (took 3.804550216 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.502020403 seconds)
  done (took 3.823259718 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.191786121 seconds)
  done (took 6.512162824 seconds)
done (took 109.303743587 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.46187752 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.457423183 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.458243748 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.456134052 seconds)
  done (took 11.160686984 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.611060876 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.610227878 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.614888877 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.603339084 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.601389744 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.615109575 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.524664763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.524687672 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.588406807 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.587566757 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.616633861 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.597236282 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.618210947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.525827272 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.587769366 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.617115068 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.589576999 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.618179169 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.525034014 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.602732163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.493266218 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.604524919 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.589159138 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.494703411 seconds)
  done (took 39.282715561 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.070323188 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.610359879 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.699718798 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.576618228 seconds)
  done (took 8.277965795 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.661240162 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.664608118 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.674330094 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.719397348 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.765189833 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.67036737 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.529349996 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.525649805 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.511805377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.663462372 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.746433048 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.656419856 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.881360612 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.493915881 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.880177291 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493123882 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.493295342 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.660664461 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.710260851 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.742054489 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.493710199 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.660252746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.667401071 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.653831119 seconds)
  done (took 40.940458979 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.508092824 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.517766889 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.498812454 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.515914 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.494875151 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.501947978 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.496763589 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.51034765 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.495216745 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.493790935 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.497920999 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.516158793 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.492405285 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.495363341 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.507898176 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.495248173 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.502098346 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.507888119 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.514080387 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.499415184 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.4966846 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.510746234 seconds)
  done (took 34.392858129 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.46281933 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.461035304 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.899195631 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.805735841 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.462445609 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.462050726 seconds)
  done (took 14.878467437 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.571392773 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.758303972 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.483772482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.882266523 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.013525254 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.487515207 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.487698331 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.804258698 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.129982452 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.077741381 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.561376764 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.575747866 seconds)
  done (took 22.159946947 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630576137 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473835744 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48295513 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473771211 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467780784 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469643032 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471092867 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310921382 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.501480251 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.826186208 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47417175 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629934435 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.805374902 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47429977 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476345001 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.444989618 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785461615 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058967135 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471952614 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477867682 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531393622 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475489726 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50669502 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.731115807 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477502551 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473544017 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.819433742 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474687319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853226307 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800488805 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813404693 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480147301 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82698156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242297432 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649699519 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735664081 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46759766 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472872912 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.456155423 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.482848133 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474206462 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481243041 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803773441 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477099498 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47679052 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479671402 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326656413 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.50616751 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.474851655 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478560158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817308821 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638302538 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.501064765 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477539497 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537960938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471820404 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.500520701 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68815385 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192832832 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481367289 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482739599 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.475171878 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475457808 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473192715 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226577556 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.501969838 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.502725871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504038887 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480468501 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474712392 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524048275 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479910818 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.525582967 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479295377 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358273003 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472902386 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479937288 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116373598 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475709306 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.478844272 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78974086 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479616786 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47908739 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.479637041 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47846671 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312262404 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50018728 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.446753669 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602709395 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318933085 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741129999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530838943 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538818589 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.785411749 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.447493986 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480646666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.480993288 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503710633 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525109932 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326262089 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479859904 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.499489844 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813844903 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.776037442 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483080006 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.45724404 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070174636 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480946774 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.536601687 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487360578 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.742650305 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.218824964 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83288217 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483096209 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53723361 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484525302 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370280956 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477089091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50988572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492487627 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850213075 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.39006783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478057301 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631892924 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488885843 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482310774 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491212884 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478259003 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484518807 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.734191688 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48766362 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.814580541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.485698216 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482877118 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.485962775 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493714948 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.48590788 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789084632 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48251073 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835075466 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485282102 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485227067 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47881012 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.781874776 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.492113767 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.510907078 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911450262 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487542165 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486983436 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822139114 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546247466 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68157082 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544215434 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.484915645 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.818300987 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.509075282 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.509235428 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481619066 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502839014 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4843984 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.51187864 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498823768 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216887357 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486492032 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488074915 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.526642319 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.638448227 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514275384 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.746186719 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.499153139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487118997 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.503514658 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.490130135 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788929514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817602224 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.488104248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732748697 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.074503818 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223831536 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533681832 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.484633626 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.485809823 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.484028311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488888845 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485974857 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487189607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748396915 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.840251124 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480822806 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.244968233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488947512 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487598319 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.509252608 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818569386 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.517593124 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489526147 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.487217753 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495245101 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491386719 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.818989901 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795270893 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.525286631 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488307976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.092556882 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51487106 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486069143 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488279061 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546481924 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489237563 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445840983 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90853376 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483522241 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81791204 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486833138 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.543064799 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.48968315 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489499258 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489195519 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.508464728 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515524565 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.749480503 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490033614 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486340547 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209636575 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394447297 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167468293 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498623742 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.486232502 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488809436 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342366931 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488820191 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491224268 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834151815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338327381 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489078604 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077932187 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499944092 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.387712082 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830542837 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801402818 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494478942 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.496203533 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830817173 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.788330276 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546157301 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499599565 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492853666 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.452376451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144832733 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489598154 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741898393 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341351648 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502260169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491806535 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.526339278 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.486262813 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991405541 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493663615 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490858021 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503322664 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505236316 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467006873 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496852568 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492218459 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270217951 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507124335 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.088671472 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49127595 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.755346612 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827841027 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.814023418 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.500739374 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.495623361 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.828630861 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832934412 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49724326 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509011237 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174561235 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.440458385 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.523618053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495545628 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385996291 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491471157 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880586561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.500344282 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.494277589 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501534797 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493909526 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495787488 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.493041538 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506310754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493580434 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079425254 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.492134789 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495018885 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49362178 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496551203 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.83210784 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.535859902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236955342 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803845168 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489706408 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.57131029 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.519106236 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512319967 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.464411152 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493860148 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49770519 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522793297 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79448909 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495749424 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.457638433 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519147581 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785053323 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495829044 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513892723 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799645472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.497862542 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.496854453 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40375281 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554319373 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495986466 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498376156 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48946804 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594346809 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649621436 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762504366 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.840624426 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.838173765 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006338655 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495136288 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51734875 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.538834233 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656464694 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4957606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.499387178 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.497295781 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239410402 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404040416 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250159046 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846183094 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500968873 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501188315 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496828612 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817892415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497751286 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849814422 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498172498 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.482203428 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541813243 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515431397 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511145028 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797650456 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850754415 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498196803 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502792429 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498121025 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.502002175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855897597 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.795678905 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090389847 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144534232 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49721246 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505381865 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361251595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852710879 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501267584 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501515032 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503679134 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.511137904 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.504107192 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.519539321 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500407 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827453616 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827499782 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278352994 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.831456989 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.526831101 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.502005178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513858641 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826071458 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418681664 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.764722036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253298761 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358545455 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836072381 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651517557 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76842097 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.500294416 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825682861 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.513635219 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502880988 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502304169 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501429407 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.502188441 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.833609567 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254028882 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839916235 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.525523322 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.513070621 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.557686491 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.76695123 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.807686228 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347927904 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.801768368 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855767204 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514626755 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504587281 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258563118 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85348465 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504436493 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.520619277 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805326432 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506870742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568302576 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.46284999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.501714079 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155295586 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.796648652 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549070032 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51354645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362341049 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259094191 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.513333085 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098416426 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50131333 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513754228 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858631953 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.532157197 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.515961701 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868669053 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.528199781 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.512578869 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771437345 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.248645725 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.410175484 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.51798661 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520898293 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.502104912 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504911554 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534587953 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50044667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50550269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.015346574 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504745052 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506663034 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541919192 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.505387173 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522990109 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.506678957 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507572227 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.530272739 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.475162728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.47703252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50192521 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734129389 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161721683 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508515713 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.206846695 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.929192881 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840255594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517314527 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.473526347 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.530025781 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50656763 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508420939 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501857115 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520535119 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152042728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.51293911 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.844540496 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5324154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.801601936 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803347479 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516961968 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771290539 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521165017 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55956138 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.474277979 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507413478 seconds)
  done (took 1054.485340027 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.547972826 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.51517473 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.525241164 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.563510696 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.558720212 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.628405818 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.585323734 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598721667 seconds)
  done (took 21.87863352 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.500806492 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.524655685 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.515363092 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.527032314 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.505107388 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.10825825 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.499853438 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.523068122 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.551967327 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.509020037 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.502474512 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.255787695 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.523320039 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.514686749 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.502363394 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.529125806 seconds)
  done (took 34.956092881 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.467224638 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.59730347 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.512744533 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.537423719 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.526123189 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.513650165 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.740565333 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.49686947 seconds)
  done (took 27.749227469 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.535612175 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.537029534 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.534850557 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.536015858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.53879163 seconds)
  done (took 9.039925399 seconds)
done (took 1320.522024727 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.53307093 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.533133787 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.533581401 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.533358467 seconds)
  done (took 7.489984027 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.480223986 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.478004571 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.479408031 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.513547218 seconds)
  done (took 10.309366366 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.329140668 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.141235697 seconds)
  done (took 5.830212767 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.142786593 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.130637073 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.123221326 seconds)
  done (took 7.755144981 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.892394976 seconds)
  done (took 3.25182078 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.502493089 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.503636112 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.50220709 seconds)
  done (took 8.868082038 seconds)
done (took 44.862781713 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.505306576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.264826484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.662220035 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.501664283 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.663570416 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.663991629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.75253557 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.512746558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.502543864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.4998526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.499077851 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.665466677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.747302643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.272719038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.746531525 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.276592435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.672834653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502601274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.498216917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.521415538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.752514129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.517096133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.503727255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.498018219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.682104198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.654056078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.511246298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.267465786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504505496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.502053858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.650576445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.511242945 seconds)
  done (took 86.847292454 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.515592101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.499369578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.496537094 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.517243568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499649851 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505165217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.519111753 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.498118161 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.517435981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.515171936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514532609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.501126924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.500879057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.499304905 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.500707178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.501933731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.506392957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.511481453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.500184137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.506331915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.500894004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.507043529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.500102911 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.500011629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523960415 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.503072353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515128006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.500317463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.522361189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.505566595 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.50763243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.523101437 seconds)
  done (took 81.597293206 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.506744818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.526429723 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.501954124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.521867271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.502169725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.528832751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.522041874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.506283236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.505578747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.506996595 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503621864 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.510979993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.501694245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.501756404 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.518331695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503475407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.519717976 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.516439626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.50678749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.519194026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.503849127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.503131928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.501311096 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.502468016 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.524207233 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.50302521 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.520645886 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503296544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.502072226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.506427807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.509611104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.526905691 seconds)
  done (took 81.702445613 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.834349884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.542898995 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.550004927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.518186915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.550312439 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.539677078 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.517664711 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.835809778 seconds)
  done (took 16.252258546 seconds)
done (took 267.760337686 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.535638016 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.11771895 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.572534119 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.517395753 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.556360694 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.571460309 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.818811107 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.576671936 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.803808571 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.521077436 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.572961268 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.523242656 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.453145613 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.738240038 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.439989611 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.517052762 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.511741542 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.527993748 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.190019764 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.844018712 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.572498151 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.50907563 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.449684629 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.525063976 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.485399505 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.611826965 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.614883359 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.765242912 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.719344548 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.614187181 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.120735954 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.53650789 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.521172909 seconds)
  done (took 70.321176668 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.533661299 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.543563675 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.545125745 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.543474139 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.544465816 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.544060316 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.532919514 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.542543923 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.547033879 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.544123733 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.542872666 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.545051085 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.54735047 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.545368794 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.545558482 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.519602178 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.535253331 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.54462666 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.535467953 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.521461283 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.545321092 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.546771834 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.54570927 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.546312768 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.546816183 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.545042704 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.546429123 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.549015137 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.544100895 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.546411873 seconds)
  done (took 47.632702945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.545566863 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.223024102 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.392126261 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.55025908 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.533250982 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.540723998 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.900438736 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.546654571 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.5407453 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.538331026 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.097770254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.553689684 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.583294775 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.403797019 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.543236748 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.546660089 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.546691448 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.537373014 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.234394611 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.558562231 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.904083334 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.549472248 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.902004997 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.557087532 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.540082646 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.539638316 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.557291468 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.454594191 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.563777419 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.097104527 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.399819558 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.892814722 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.386065714 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.450824718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.399328713 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.55348428 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.556163881 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106760993 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.544275009 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.538148322 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.900209377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.540575237 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.406485839 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.307451598 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.564239419 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.547164552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.475327205 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.10361164 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.817912948 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.553996706 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.44002488 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.54538318 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.550001226 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.544237016 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.818452123 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.542596024 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.539204182 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.526301843 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.550855664 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.891679452 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.552325474 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.540948538 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.232931856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.542172158 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.227786997 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.543380411 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.557835252 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.541331269 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.411067078 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.546187194 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.328898878 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.557989811 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.551919137 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.105899919 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.232114433 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.525352002 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.543209929 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.233185798 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.41850252 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.91321124 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.55014894 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.422456375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.918994098 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.549872299 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.55488362 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.554200922 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.552836083 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.678278223 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.89021055 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.245275953 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.319457035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.534530334 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.901616679 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.558086541 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.542211548 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.510861123 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.551025378 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.553556286 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.408076614 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.327181969 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.559320847 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.560072548 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.31677911 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.561093698 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.901070241 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.556228275 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.452060698 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.545670856 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.681473811 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.554008649 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.558924357 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.55304002 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.898297472 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.546772324 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.554271881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.314548379 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.130412883 seconds)
  done (took 217.422202647 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.525198351 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.519203385 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.524462503 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.516999333 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.523035646 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.546206958 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.521728845 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.524972903 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.544363078 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.522343448 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.524858783 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.549537619 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.5455904 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.523219118 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.523148649 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.51744534 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.520774953 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.526283405 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.518340706 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.52323602 seconds)
  done (took 47.916804017 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.557006725 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.237039919 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.184681934 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.559720968 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.557975983 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.548165028 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.618195512 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.558431628 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.556411259 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.932838386 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.752744885 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.560541952 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.55847004 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.558743888 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.188610018 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.531844308 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.930025948 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.239306689 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.559897457 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.2384218 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.534020143 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.555183729 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.546903764 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.238831558 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.943628656 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.900229631 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.623743006 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.237540751 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.558227551 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.558247107 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.237978866 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.558138364 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.549183873 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.216865287 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.560148676 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.585074262 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.558524237 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.622929913 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.620082834 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.934074717 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.245759884 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.908262845 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.581980642 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.788561939 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.557704231 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.533071978 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.249513014 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.559578142 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.53405702 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.564494689 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.572852036 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.202885367 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.551324858 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.202393265 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.561790924 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.56336326 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.241568778 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.204211513 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.192788343 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.755737653 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.551691524 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.89906838 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.561843164 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.254251117 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.562208435 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.56081538 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.560425596 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.758715407 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.242396956 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.899807441 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.933693453 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.935857905 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.563025089 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.639187637 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.561611571 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.937123848 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.635041509 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.064898197 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.934736463 seconds)
  done (took 142.576258548 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.907788274 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.692119368 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.07247863 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.276969439 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.209816066 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.753585076 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.693870987 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.867410374 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.549565835 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.719034523 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.389593467 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.674483117 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.440441344 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.643220272 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.726075432 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.748960465 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.095468216 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.544434876 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.335944536 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.342696373 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.552385817 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.706737847 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.15309356 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.817241354 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.530898168 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.224915543 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.550604235 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.238474669 seconds)
  done (took 59.838706516 seconds)
done (took 587.073335528 seconds)
SAVING RESULT...
DONE!
