cset: moving following pidspec: 2480
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.265190641 seconds)
loading group "string"... done (took 0.591483987 seconds)
loading group "linalg"... done (took 8.205395624 seconds)
loading group "parallel"... done (took 0.173591324 seconds)
loading group "find"... done (took 1.242919297 seconds)
loading group "tuple"... done (took 1.919987207 seconds)
loading group "dates"... done (took 1.309718023 seconds)
loading group "micro"... done (took 0.20139934 seconds)
loading group "io"... done (took 1.005385466 seconds)
loading group "scalar"... done (took 40.810245377 seconds)
loading group "sparse"... done (took 12.196522342 seconds)
loading group "broadcast"... done (took 1.030225378 seconds)
loading group "union"... done (took 14.700530169 seconds)
loading group "simd"... done (took 5.192774012 seconds)
loading group "random"... done (took 9.372192176 seconds)
loading group "problem"... done (took 1.818279299 seconds)
loading group "array"... done (took 21.586696532 seconds)
loading group "misc"... done (took 1.817576658 seconds)
loading group "sort"... done (took 3.380307219 seconds)
loading group "collection"... done (took 18.830440388 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548748654 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129244189 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141463257 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123910674 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15497386 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120474659 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129234842 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086656223 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.865246122 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152082081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118621131 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.445914809 seconds)
done (took 5.447630271 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174491535 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088871499 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082534692 seconds)
  done (took 1.258650084 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067953402 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128493445 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069273052 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069403125 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069931811 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072005165 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069521646 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069192841 seconds)
  done (took 1.635624314 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073570002 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07126162 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068411353 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070416565 seconds)
  done (took 1.371473271 seconds)
done (took 5.609102195 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.814045856 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215332834 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190949766 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.423573839 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141383623 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187502022 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652999929 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319893509 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.205355545 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098500379 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117841814 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358018909 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128115776 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65046535 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081736273 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.101116265 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14534644 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435617272 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072662631 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086846621 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095489965 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13356148 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086070755 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07770056 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151296138 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072314876 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150549453 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087692438 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069754956 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22421484 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177674317 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669770192 seconds)
  done (took 10.547889366 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102139238 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100663821 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071276622 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128297041 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101695186 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073320208 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078591366 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070312618 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093670794 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133600399 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095430521 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.112004446 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069271068 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07320313 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086082088 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201655894 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081629433 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083942753 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071158514 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083650396 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11660617 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081971616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083207794 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083012423 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133267016 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173325137 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100960603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10067767 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070834111 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085096725 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117446818 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132415534 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069078072 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068966185 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129352942 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098019768 seconds)
  done (took 4.682212889 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.123659756 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15642554 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09320417 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144528928 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067316617 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116132047 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068069759 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086308152 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243407932 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.420388421 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635453244 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.153169384 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120472206 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0668182 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107635033 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073945206 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071775675 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073868759 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.552609112 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102583879 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116478836 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091043017 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072981682 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072029519 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067237483 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074118937 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065818282 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071299508 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091072865 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078306588 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.335244328 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133054538 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070940358 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.974782595 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.174701164 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071249161 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109335021 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164464131 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097925237 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147245457 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070492951 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066896392 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.304333722 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068193753 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074679738 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069523549 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088785349 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112538022 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126630416 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067731168 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069529524 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173543853 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068105066 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087146987 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.261886323 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153313764 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066829031 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.310000246 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097853097 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075065476 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068170668 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.230846102 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127413345 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071569672 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070799321 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072560568 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071205829 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371583068 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068735329 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.24974534 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06903698 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080217758 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073723852 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074785797 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096575146 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08215894 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082595512 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095839023 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070221374 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077211542 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069473411 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068548044 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069973123 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096053998 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39911217 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068526604 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074810546 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066409717 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067113978 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096691157 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104233038 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070014229 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068828219 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105159136 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071674434 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068804608 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070496145 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123321594 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074009897 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.217608099 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071086764 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108817698 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09874297 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070958922 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103538144 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083997688 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074064735 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.4753581 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06651945 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067228432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.074790638 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068280925 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070680942 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06957398 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082053159 seconds)
  done (took 22.960253879 seconds)
done (took 40.402813894 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.247479843 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086096405 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086545076 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087267033 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086356865 seconds)
  done (took 1.774365265 seconds)
done (took 2.939856424 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128334423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102432692 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067743332 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10079343 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066641094 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10707337 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10731624 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085958697 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103539704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066970471 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101128912 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067232577 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066884502 seconds)
  done (took 2.351650135 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083124757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084518082 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071184707 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084073649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064460314 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084811923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083499792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090629151 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083260159 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074694723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065276023 seconds)
  done (took 2.026039055 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082537483 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086196048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071468811 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083717076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064614996 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084050197 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083809889 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088213522 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084083172 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076286602 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064652867 seconds)
  done (took 2.022685227 seconds)
done (took 7.553167117 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077188028 seconds)
  done (took 1.219695101 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533432739 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.557378337 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078864427 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.103162878 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198000987 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.111375194 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236721873 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085970725 seconds)
  done (took 8.220779221 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098487068 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084002234 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072685225 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071880726 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071190862 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072383807 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071331737 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072110864 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071581986 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071808549 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071555742 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07241073 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073167779 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071557537 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071673856 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072407906 seconds)
  done (took 2.418124172 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099086771 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097909997 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075888269 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077449596 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075079863 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074728094 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076910023 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076550738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074086294 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075785871 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078167131 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076044927 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07624995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067341525 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076737158 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078847233 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073639902 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076794646 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077987363 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078722047 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078528 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066866116 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076059787 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077377459 seconds)
  done (took 3.119249169 seconds)
done (took 16.131033812 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116652992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080898496 seconds)
  done (took 1.343718742 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079291382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082839169 seconds)
  done (took 1.321145119 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077505995 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06416613 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086542332 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076797552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06558609 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065502612 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085587607 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066603928 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06554268 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06549766 seconds)
  done (took 1.876979745 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065416019 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073764949 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071234015 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081153464 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07267251 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066397128 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071508762 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067630348 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076432398 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066410787 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071204985 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086797357 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071346749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087985256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071760084 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07048256 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072773093 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069377628 seconds)
  done (took 2.475807493 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063013641 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066239094 seconds)
  done (took 1.294069763 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067049229 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065774518 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068233484 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068555884 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06541426 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065017027 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065751391 seconds)
  done (took 1.624458127 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40783833 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124890391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.338095781 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073456532 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082199591 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263462178 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066607025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071746037 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072008146 seconds)
  done (took 2.703976997 seconds)
done (took 13.806673544 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080726936 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088009523 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100544573 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421070127 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096341136 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070299049 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116302461 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183253965 seconds)
done (took 2.329924776 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21139175 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.941273364 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.497252296 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214847536 seconds)
  done (took 2.819803762 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344550079 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083393196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079855749 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069441104 seconds)
  done (took 1.753327481 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067345064 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072135281 seconds)
  done (took 1.309803369 seconds)
done (took 7.269788618 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065285675 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066288083 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.067411442 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066239938 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.067637383 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066898382 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091655886 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066133348 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066534259 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066143225 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.066936244 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066674527 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067102628 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067049822 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066556052 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066890405 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066846988 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066602011 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067101236 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.072143849 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067592672 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06632385 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067476049 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067133172 seconds)
  done (took 2.838754457 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082104192 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069678826 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070927857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070681608 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071015977 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071110869 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070710026 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06945307 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071356978 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069256758 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071338929 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071914378 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068908625 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071879505 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068824395 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071220958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070878385 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070066212 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06845709 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071482781 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070845304 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069269753 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071176121 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070472495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071236611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071126215 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06874905 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06911227 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070559864 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071288289 seconds)
  done (took 3.306953772 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068335274 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063439081 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064173708 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072308975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062920347 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063263216 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062771569 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063172614 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06353828 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063009462 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063760367 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062986689 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062667695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064082784 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063968188 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067797119 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081370761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063362107 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06312195 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063986152 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067340784 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062973243 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062903936 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065872867 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063053225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062877751 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063704218 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063071356 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063596627 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062843586 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066821568 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067307822 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063090671 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067930427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067817144 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06298598 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067570987 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06255436 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063787106 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06317212 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062854921 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062881367 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062831513 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072140286 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063983396 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064293224 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063067037 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064168037 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064324716 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065374183 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063105668 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062843624 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064806691 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064174662 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068176621 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062737943 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064083824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063219915 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06347767 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062931557 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062490082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062823563 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066470695 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063533316 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080690244 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07191303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06360099 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064763852 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063474981 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066229274 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06462378 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079261941 seconds)
  done (took 5.873190605 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086014974 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088939592 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068443524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06821431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064513574 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063984357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072272512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064233019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068936666 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083196566 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064032587 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068332203 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068708951 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068378855 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064252052 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068775218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072986138 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063907887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064048008 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068523773 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064391523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072726797 seconds)
  done (took 2.73197371 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145988778 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068478499 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109267681 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074824424 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072708049 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075308027 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06987676 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069672371 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069844156 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070396028 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071047437 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070277742 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072453179 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070806777 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070816528 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070900396 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069964076 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070633307 seconds)
  done (took 2.581735696 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078605495 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068680873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08889344 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0687909 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069339526 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069457798 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073339621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074321098 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069187841 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069845889 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074169047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069089489 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068823219 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06942414 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069143852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069280885 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06881816 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069130981 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073968016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0734285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073295944 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075056085 seconds)
  done (took 2.771194433 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0785143 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077735093 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085247299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07110908 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064083346 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06364014 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070177556 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069291114 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070730801 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068704258 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068961246 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064324111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071712567 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069639751 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071381002 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068991572 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068183869 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069150773 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068185446 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064168015 seconds)
  done (took 2.594631751 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084170614 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067557657 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067077892 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073743923 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066608405 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066675234 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07396778 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067140428 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067326248 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088059653 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067402562 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067170301 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073152435 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070746981 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067317465 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075988491 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07360251 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07352328 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067315053 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06705494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088072166 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067416619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073394059 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066953349 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067070388 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067133636 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067979521 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071687212 seconds)
  done (took 3.187090626 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065202402 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066328499 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066654613 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066738921 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06720115 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066635959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0670684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066907387 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066663386 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067465089 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06632227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066212838 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066190468 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066638375 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066477689 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066674605 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066933829 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066968804 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066939051 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066410058 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066193603 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066320743 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066421516 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066477689 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066539356 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066531569 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066581271 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066239323 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066479357 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066320521 seconds)
  done (took 3.193011835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075204793 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073880073 seconds)
  done (took 1.34455028 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063457037 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079655558 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063094917 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074499757 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072601717 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06692408 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073580446 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072784318 seconds)
  done (took 1.757227997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085407072 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078021491 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066550138 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078595462 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07708594 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086779361 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126170823 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066227924 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076261039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067019042 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08461916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067906234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076551674 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071106405 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076139239 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075975206 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063458628 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071318705 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067661647 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063843382 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066365675 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079094846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075732922 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064075288 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071478469 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094188938 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082483659 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065256065 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072876748 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078549787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075917095 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063104104 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065459012 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065835079 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06439111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076996388 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085102897 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073152688 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079268124 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066449747 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074380906 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063477627 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074654223 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07698586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082224253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06637154 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065760574 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063395703 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067108637 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072293208 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063714702 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070706789 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063842625 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077831281 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073638842 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082023582 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064968097 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072081591 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072710496 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073067378 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077315187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072257934 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07589197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06587315 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082100624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076204872 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078255988 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06392523 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063022428 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064263195 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0809822 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095263917 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075713362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065667991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066626277 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063184412 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072749326 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066525608 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074809301 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07744153 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065293806 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070049922 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078327326 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070214013 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071887455 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071735478 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064104079 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069309539 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066781992 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085524944 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06425662 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063526108 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066697079 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084233969 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072339674 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064581043 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066371452 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077840621 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062623501 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065227512 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065913874 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071286458 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079415899 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069773412 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069932853 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079467386 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074972353 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070571272 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072348905 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062485003 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066136551 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06711705 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077160506 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062336278 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072860509 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06974455 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065415252 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07805533 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063501885 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065094224 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078140869 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076156822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063135164 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061994204 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071622463 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064168116 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067183677 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077846543 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063470262 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062373564 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062049971 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07266954 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064761353 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071936061 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06774619 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071579651 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06203459 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062677048 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.198364899 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079400627 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068778508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07295769 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076912182 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072396989 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065424252 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078608301 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072886876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068691969 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075790088 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069895443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06393408 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068060405 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07313351 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06436342 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07357681 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068516656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073035265 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065991802 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064716063 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072127987 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06648688 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068505342 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071504809 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06424414 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080981123 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072462163 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064676351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063616352 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073515633 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067942007 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065248736 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068707372 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072821646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065894122 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064380704 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065425959 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072199486 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07362795 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069251811 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066635547 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075226638 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083804467 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065759445 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072336122 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065219133 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066576282 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066407757 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080957651 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076281309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070127169 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072557131 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062952053 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075248436 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0780632 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068076043 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064068314 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06850511 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06936724 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077493547 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069511669 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066434187 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064132864 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071782495 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068127865 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072353711 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065356123 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068050295 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07103583 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064710999 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072225348 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06643397 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08086485 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073247822 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064853157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068081664 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064473217 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076948889 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064040165 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067097089 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067855675 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066474772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065152363 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07245833 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063171191 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078250541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078567496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071436192 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068200254 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065240865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078506257 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071521353 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073609291 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072663458 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075475293 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081176774 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068039816 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073251609 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081285295 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065140595 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065665571 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075059702 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06441434 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064111446 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064787537 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063966118 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07294789 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072279161 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075567123 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062500844 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072010331 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064138993 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067649687 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064288708 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07407127 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072893952 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069735279 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078199757 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066052794 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066110273 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073726034 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065236018 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066079696 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066238167 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073064606 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065596316 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071125257 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067544883 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070814852 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066885241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062580137 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070239068 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064623621 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069769469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073127435 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063899043 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070270301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071684927 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06499331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071028104 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06805093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06746895 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071526397 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.203692611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072038355 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073327349 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064948596 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078200068 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06585751 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078962994 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071172881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062762141 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071758762 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073033714 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070338324 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06583085 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066127076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071054246 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065586852 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072519652 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077926935 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067731403 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081542775 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076921355 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071736186 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072598959 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071170641 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071632172 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068380556 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069966026 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066874712 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070841134 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065514033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074376559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072763812 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070772747 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072434517 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06591199 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070893737 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066725035 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063433601 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068058554 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068191337 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065287135 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078820542 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066815029 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06904243 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064612168 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066495856 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064671431 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063062018 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072844324 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073728528 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066152828 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076625501 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068300536 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072480371 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08227115 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063606283 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064326169 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06419956 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067369451 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078463806 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066315437 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080211483 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071293322 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068528377 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063096633 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066578365 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064756888 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063640876 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063860596 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074312247 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068441352 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064901889 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065793468 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073053056 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066514603 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079007676 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065125631 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070286062 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065563685 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063224566 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068026227 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068473826 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07291598 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06627655 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067262331 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063047927 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066030458 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06995938 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071678816 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065062505 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071725997 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07825923 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065943485 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072760474 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067999064 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063804145 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072901757 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065087127 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065446291 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068093191 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073430622 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073713524 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066034324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080427191 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068028843 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071714654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065467026 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063758828 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065147598 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065784148 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065290255 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067972008 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066653167 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079513143 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063803652 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072030537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070761162 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069647878 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076350133 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066727533 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071915287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071018857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068031179 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072025209 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079600236 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069434518 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073190767 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066357165 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071709413 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075576714 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06849879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076892687 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071259404 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066042989 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070789322 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06632658 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065029827 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064736028 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064262098 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075236184 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065572981 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067507719 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067414727 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062880524 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069340557 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067495534 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.213590971 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074297413 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074714731 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065345572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064916109 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067275147 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067749348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072152644 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073380954 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07626278 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073230182 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069445617 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06537458 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080337458 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075813026 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074064127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067362651 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073779412 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066593239 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072853514 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071334329 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071634313 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067136442 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074058773 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071661052 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069053804 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076699647 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074200445 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066880371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071524067 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07208912 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071434994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064711463 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06700285 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072703666 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075517653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072472988 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065755772 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082141444 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067051362 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071026717 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069084087 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065086184 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074148993 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064685609 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071911851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066637711 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06690245 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063888716 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068927464 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06713848 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07272585 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068441993 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064334085 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08211055 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081013189 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072570647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065733628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064977365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063956698 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064018251 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069246628 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067253676 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072042016 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081286876 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068529754 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068463086 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064184455 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065728036 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073002962 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073692452 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064122149 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063970565 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068491366 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071836472 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078019668 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065360391 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065615066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074379649 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073307708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064399544 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068183525 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063509636 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074739452 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083916179 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066450577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071739924 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076317737 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078887729 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06646459 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064641625 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065985207 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072162436 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071415996 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067201966 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066831752 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085865442 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073764184 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068253633 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064567301 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072710327 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068466338 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080140636 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066478365 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068813928 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075184932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072778314 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07340122 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076579012 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077763247 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072901051 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072236047 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064629745 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07075745 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064915877 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068441497 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066677819 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066031487 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070295131 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072752241 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068842905 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082912165 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079918843 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068196476 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063477075 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068388473 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068082718 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064224253 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066773118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064794108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063993445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064115989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064672326 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072087662 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074401352 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069942341 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065215143 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064847447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062245165 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074348234 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07185163 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070783596 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062206883 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064675511 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065114736 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072804893 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.200772207 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068543366 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073905804 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072801244 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073134515 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064797528 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077978703 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06578921 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072418903 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068745547 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066292041 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066942323 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07358854 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070627493 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067010878 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073299618 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073370898 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067837057 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063717428 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064045298 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075964074 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064796296 seconds)
  done (took 43.643938144 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10103939 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066029441 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064720411 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065277757 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074177396 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065620576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06463163 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065416139 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065696737 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06747535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064212171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065025295 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07223559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0800455 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074913463 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069089947 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064402953 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066014604 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064242323 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065889934 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072753414 seconds)
  done (took 2.728872891 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070470378 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078540048 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077476374 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082333891 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073464579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069701573 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07783801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069436875 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077754129 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075032881 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078218603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069356662 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074872449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075694445 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075491217 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069953248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079039586 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074103694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070289707 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077967415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070099919 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078419742 seconds)
  done (took 2.903780773 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064747476 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065162056 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072349397 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06320978 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065534461 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063882419 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068709387 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064258441 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06932847 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068274018 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068317173 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068399051 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07279039 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063886637 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069748025 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06408757 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.116045632 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070044531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066060166 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067186567 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064714693 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073710951 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064446032 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065121169 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068259529 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068452316 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06704778 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082201693 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065513944 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067462984 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06502524 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063138193 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072367676 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07066343 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067201928 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067062927 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064687458 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064880938 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063473274 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066144897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07100869 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06384716 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065462123 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071603612 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063729013 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063458698 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071485373 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064992033 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06363672 seconds)
  done (took 4.604636652 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075181067 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113937796 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070247867 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093030683 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078479174 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071300464 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070560327 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094896175 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065588946 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066520579 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08059842 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080938108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067737799 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06956008 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071928795 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067294973 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068409774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066748123 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070880082 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06688123 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070766716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071922167 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078451276 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079258224 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068410799 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066905529 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067231028 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069131424 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078938736 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071464909 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069034151 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069699249 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079634181 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070389553 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067244576 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066871242 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079826294 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067517769 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067251897 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065262618 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066795486 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068899577 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072681828 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080156663 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067691571 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072628548 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067200912 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06485042 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079224179 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06712676 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072067538 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080148906 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068368314 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068048646 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069109948 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078936876 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067638558 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066689152 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067909414 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078709241 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065732808 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068058036 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080000281 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066594031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07106867 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080320636 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072620694 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068044961 seconds)
  done (took 6.328453652 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072833163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096446682 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081487648 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081366663 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075050058 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075772417 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07557709 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075611348 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075496232 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079462098 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07576078 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117956031 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071346043 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077371593 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076091564 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075504517 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07553676 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075312292 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075595252 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075260582 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075324903 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081500726 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075631994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081646218 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078906181 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071194325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075478022 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075237188 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082312633 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075515158 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078774506 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075846955 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075765895 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082520111 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078855286 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075124 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06493146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075230683 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075336357 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075322552 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071476113 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082238318 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07520849 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071392328 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075583159 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075148406 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082202979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07822096 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076840747 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07930309 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075357904 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081463127 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075457125 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07531608 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081689075 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084734974 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081241648 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081614629 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075115477 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081525977 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081877715 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084060743 seconds)
  done (took 6.14963858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077994012 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071036963 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083552822 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06391345 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063595966 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07431173 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066612327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063794954 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073047635 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072451762 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074734391 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074525468 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076908146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074901125 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074364111 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077558816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075040906 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074839868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072436009 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074648297 seconds)
  done (took 2.766094149 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076653956 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083533301 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07024 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074377121 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069736705 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074433434 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069394806 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070057512 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070223073 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069496312 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076017456 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075949367 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070485436 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074772661 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076216459 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074263419 seconds)
  done (took 2.469316905 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.069223914 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071947917 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079877952 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065627215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069231625 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064472862 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064943428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063488064 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064449178 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078583427 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065168924 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076689057 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065309674 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064344379 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065127008 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07109621 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064582649 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065333436 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065264513 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078933142 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072626773 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066438298 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068976253 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064904615 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070730755 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072919058 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066774372 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069153565 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065459004 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065430514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071054889 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07250918 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064613121 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06596079 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064190261 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065958197 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065116007 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066054244 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070956785 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065314375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082093968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070857104 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065265916 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066480955 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064485819 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065423908 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064899522 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071113131 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06529258 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071631175 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06499574 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067515671 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066320857 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072656078 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068376676 seconds)
  done (took 5.050967021 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07897324 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069489863 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063770153 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06359909 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068648026 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069989787 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069242014 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06946622 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070721936 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064300114 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070508307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069584249 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071160218 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069551233 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070425683 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069369438 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063794403 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070407163 seconds)
  done (took 2.55071177 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073534337 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069194832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073633878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069551561 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068587015 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068131716 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064349259 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06406989 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064161413 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069340659 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069035159 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068384126 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063843199 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068477915 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068966084 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069590839 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068649317 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064105514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068959698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063884037 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068595546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064140222 seconds)
  done (took 2.790693854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096296023 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08590763 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144462412 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081791731 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090333509 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074196054 seconds)
  done (took 1.874468594 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093223569 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10016481 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068750344 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068882374 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075207732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072115966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072411275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072466571 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076818456 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077649367 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072540729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077583501 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077232964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079228408 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074941553 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07852864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072936607 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072459049 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069845243 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082624876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072742958 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077570824 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072839708 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072618014 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072899054 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079516154 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077338976 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077637405 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072857084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07726158 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07507056 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072898326 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078186744 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078112907 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069323787 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077405854 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072625195 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082975699 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075558618 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079154058 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069289894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075190139 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077448417 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076950049 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077986717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072917856 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076357047 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072596028 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073108422 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084011333 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075598637 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079379467 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074904156 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077477304 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077241474 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084109554 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07806307 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079586154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075049348 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077853219 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079467409 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075186997 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079047616 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077814955 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075705495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079815813 seconds)
  done (took 6.356731025 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104738631 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069697966 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073374078 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078173823 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079184845 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0728628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073434395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073073474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073024685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070234868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108809719 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073728927 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079599367 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080229442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073770892 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073469547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073690283 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080297533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070269299 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084610916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073375807 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079969671 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079851395 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079734029 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078430855 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075696897 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073514391 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073007487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073137179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072839507 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076777013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073427001 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079446806 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069921484 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079798703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073091257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072797574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077238912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073297243 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075866951 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080339861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083590798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073275619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072771713 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077898308 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073309349 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073158934 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069674438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072766786 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069814084 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077709932 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077564082 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077885481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079237007 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073203063 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072992479 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07291228 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072974295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073478607 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075201198 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078951259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074864424 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084248127 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073126532 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072819005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079547556 seconds)
  done (took 6.366752763 seconds)
done (took 129.939184923 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210521326 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18466833 seconds)
  done (took 1.683812932 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074980816 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.108027765 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085921154 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136321838 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072168304 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108665638 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105462251 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085302488 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074181324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074177756 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074550054 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076377854 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140267468 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0718387 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07401364 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076714193 seconds)
  done (took 2.746001104 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105022001 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174755903 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112771763 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072217465 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107815425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079950359 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071556267 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087137626 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.079566968 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.074006451 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080541041 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081199323 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073512644 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07871162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078585057 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080158603 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.074004329 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080824327 seconds)
  done (took 2.908885095 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104835333 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098338253 seconds)
  done (took 1.5183552 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16058825 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105628098 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148108955 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.354976434 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158452988 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14522704 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146251941 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140303192 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116309909 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136405797 seconds)
  done (took 2.922609153 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104074798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187188026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304386172 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125431742 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078836733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110838752 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126802554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.085011438 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087371223 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086752991 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086717193 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081396105 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.106386858 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080012559 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078423255 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081323412 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109754046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077636147 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078937232 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081909058 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.110494555 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072684392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079597686 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077666142 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08390641 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084340984 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073988728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072650504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.081517289 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078610927 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082434158 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107951262 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08360617 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109720212 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076360662 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109894617 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08165444 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.079375509 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078487957 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079114757 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082574799 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082945378 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080968234 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080551434 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072776521 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081230681 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073315464 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071691904 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083071702 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073667404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083214261 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082078519 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108924138 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073707292 seconds)
  done (took 6.327036412 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109053002 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108230426 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073297355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116558836 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10738665 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072996171 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109616289 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102751175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111460338 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073920923 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071563116 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073598782 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082774218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085425691 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117233582 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108565797 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075402172 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073263929 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111397939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111388488 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072330118 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105534044 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10180759 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111950141 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071703311 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07303411 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071821494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073563737 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079364927 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080482454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072422551 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081874329 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090300423 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080622667 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07092693 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071649393 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071666161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081190684 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081882976 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081784098 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080068448 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071190114 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071085928 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072501458 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071941341 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070085681 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079370225 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081425813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080388054 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071109481 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072493099 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071230672 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072146016 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080854835 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078593834 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082608075 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082099976 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071112764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071512127 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074092254 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08244016 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080935171 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080780443 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072386853 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081788126 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071875585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083708527 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085568757 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071531664 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075183388 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071610272 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071168658 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072464672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07889992 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079029606 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073051808 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071213426 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071557899 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081338287 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0791461 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071005701 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078304811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070394729 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071202374 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072447789 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072580513 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079133054 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080767706 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073501189 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071237398 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071205177 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071196069 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070095984 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079195115 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080499038 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080172048 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079853155 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072074504 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080708169 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079945849 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072271896 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080049145 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071231338 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072548399 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072522047 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07960536 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078503169 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080288194 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071202606 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070628645 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078799636 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081948535 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070825635 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078028558 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079726795 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077981646 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069457024 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081101528 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070382467 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079193978 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068052885 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213856862 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073215539 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081421028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073448733 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071475174 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072179238 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081644871 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07336949 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071662796 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072765475 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072092356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079772923 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084393119 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073831589 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080428992 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080787118 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073359971 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080823071 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07186682 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080888162 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072310596 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07325454 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071167993 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083725865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072040239 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072592863 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072056118 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081807498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07022623 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082467694 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080250864 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071287265 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085147555 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079849484 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079310539 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082173878 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07315893 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071349714 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071435041 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07129628 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078735325 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08098766 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073271406 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071592006 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079655821 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082672122 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071170236 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079817486 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080414568 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080198534 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072474097 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071726267 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082559663 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082290936 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080131057 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080135906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080761711 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072559864 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079927935 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080100238 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071804409 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085498802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072709294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084655342 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081062003 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078899375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081314671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081747489 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082849766 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083354479 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085131366 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071344516 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072194664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080704419 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071694272 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071953911 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079511751 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073059184 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072834787 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085434304 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069918206 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080633003 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07087345 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081283434 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070967394 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072717014 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084772318 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072568195 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072886322 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08060183 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071720269 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08016909 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082501701 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079229615 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074798864 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072780467 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081007082 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080845994 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071699912 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071564315 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07303158 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07942908 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078956724 seconds)
  done (took 19.05602815 seconds)
done (took 38.490524069 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216780942 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162412131 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.194256281 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121132893 seconds)
  done (took 2.109975049 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108371346 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10235824 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091316873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068113066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097382304 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068399814 seconds)
  done (took 1.883576428 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298031546 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205837179 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186970352 seconds)
  done (took 2.034014513 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213986035 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194670603 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476098517 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291389834 seconds)
  done (took 2.617851475 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145425386 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085337405 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066916277 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085190276 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127145255 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15254478 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096144743 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121311309 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079135768 seconds)
  done (took 2.356156994 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151642988 seconds)
done (took 12.5211003 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103235335 seconds)
    (2/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079175019 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074838742 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.426771939 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.134247681 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073091001 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07127463 seconds)
    (8/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.247013064 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077791638 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.120662578 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.24069696 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078460442 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070249867 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.201969032 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.13344459 seconds)
    (16/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.237470079 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.218226609 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079163554 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.212640073 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.230120972 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11223309 seconds)
    (22/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.171398641 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181172353 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077534632 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.2353294 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.237249438 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076971756 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175067969 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181584491 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23604481 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158404249 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094629268 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068760021 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.238684516 seconds)
    (35/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.092333844 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087302917 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.223130234 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.144542177 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107642608 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077425185 seconds)
    (41/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.171164625 seconds)
    (42/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.218352914 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.129654601 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076157575 seconds)
    (45/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.131439867 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067037572 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07844991 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105937716 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092994373 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.203701042 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.148608037 seconds)
    (52/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068737083 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075995055 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102616821 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06805504 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.068752588 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079406433 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181885811 seconds)
    (59/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184867364 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07647185 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078324266 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198202193 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076271339 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067352078 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076674447 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.200355965 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103051662 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073198102 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134941699 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066897151 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131032345 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092143512 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074528523 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102451542 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184055641 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07923095 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.180208676 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.0783545 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078494373 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090535059 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199721308 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124662955 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074413401 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070392252 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077727392 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089398198 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.245263858 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07191391 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.204026494 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070158488 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.226092415 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.145907075 seconds)
    (93/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.131821808 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176022582 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126469097 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200594674 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098446125 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06992836 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136209412 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074661371 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072750428 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08015478 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081987613 seconds)
    (104/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.081026409 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069348302 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06905372 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070681721 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075874451 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080208849 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077437175 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.08274752 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069361205 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.147050525 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077328918 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073531753 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077561999 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0688969 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069565222 seconds)
    (119/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140475374 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068381173 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068527179 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.081439251 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123278871 seconds)
    (124/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075511924 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068148176 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117840708 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069510933 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071437977 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.20671645 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078445747 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077601115 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.187194459 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069303477 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071134364 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077343738 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071348891 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077004544 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091791 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083521168 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08100533 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067701831 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183318923 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075976276 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067736625 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069206886 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.143236281 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142888062 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076235004 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068289275 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175439674 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095651327 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075602276 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124142505 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069186103 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069355273 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082906054 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077027361 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074656027 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06735963 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068524447 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067139666 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067480581 seconds)
    (163/309) benchmarking ("sort", Float64, false)...
    done (took 0.134768114 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068754991 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074460295 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067609089 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068499081 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067655058 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145894889 seconds)
    (170/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069349236 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173861735 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067326219 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146137128 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.094179618 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068032975 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136031264 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076683263 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11610717 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130229054 seconds)
    (180/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095076653 seconds)
    (181/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081279255 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.129015717 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068244048 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068346691 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169940734 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090656742 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133345387 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091928598 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06758697 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094918407 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135610936 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077309708 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069103165 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085033725 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068162997 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074220524 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069559079 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068161218 seconds)
    (199/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073651199 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092139072 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074991438 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088243202 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068909526 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068168037 seconds)
    (205/309) benchmarking ("sort", Float32, false)...
    done (took 0.134283563 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.0744963 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066810146 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075571471 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071729606 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078400158 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075863635 seconds)
    (212/309) benchmarking ("sort", Int8, false)...
    done (took 0.146096994 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.333983108 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144324534 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095316932 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069951639 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069548506 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076028462 seconds)
    (219/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.07063645 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077455404 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.070543232 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.070570049 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069226819 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072890587 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135763106 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.184244172 seconds)
    (227/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086375511 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.082581645 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189133806 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094652616 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081118997 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073855871 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092339016 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07797081 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.122792034 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139024369 seconds)
    (237/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067318392 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077102207 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071905685 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070095998 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128636634 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068633323 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092363973 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.0750175 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094533416 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077634531 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081823012 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068943655 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068391009 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11653827 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06892462 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069450542 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072350783 seconds)
    (254/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095382533 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068891787 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076534876 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077828807 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068279342 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070298306 seconds)
    (260/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130361151 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07831414 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.070052525 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069445527 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089983198 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075823703 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068623048 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.0693098 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147460973 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069974422 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082402492 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072621792 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.070121915 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070659327 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186121817 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09741778 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177881877 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071830096 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09535387 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068958046 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068525167 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067541153 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08324121 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07183729 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067896045 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077712198 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138469795 seconds)
    (287/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070266565 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070809721 seconds)
    (289/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19819835 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090431375 seconds)
    (291/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.072082689 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068882609 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069540896 seconds)
    (294/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080413328 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.0688141 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075511225 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068976078 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070402608 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07267562 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069026636 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125982263 seconds)
    (302/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070905577 seconds)
    (303/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07934542 seconds)
    (304/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06835808 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140737197 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068009222 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069237038 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06784483 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067979406 seconds)
  done (took 33.90255276 seconds)
done (took 35.260684863 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086389552 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102975857 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076327745 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096165658 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083832131 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099906512 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076931241 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081870895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084568372 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083573086 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082301838 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075774953 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078368264 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078949938 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076808432 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10189528 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083378839 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077739814 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07718097 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068947774 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077762673 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069455807 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06866109 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075606832 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081704641 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077158794 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07939184 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078691617 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069339187 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069629441 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074174194 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077962414 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068705601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081708668 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078385969 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077358637 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07933779 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081696362 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069469089 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069429908 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079720907 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069674382 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077162849 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076024032 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074098417 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075786847 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077328386 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081947796 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101552697 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074350966 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07981191 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080475563 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081102108 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074996705 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074401154 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077909904 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075772292 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10232187 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078077476 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074204812 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078732678 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078922253 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075177943 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077395127 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077081813 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080230585 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081580487 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075575196 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079877786 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076542635 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068688092 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077221902 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074046936 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06881683 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080198746 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08188054 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068185343 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07362968 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077317918 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077689003 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071703836 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074192143 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068547271 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073807758 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073642731 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075489197 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073822798 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076503914 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06870463 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077600381 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076805274 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076780908 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068743935 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081661044 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068646856 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07519057 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069481617 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069800058 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068603921 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07402887 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068732272 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074391899 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078101843 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068519943 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073865517 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081852267 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068086862 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07534254 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067909255 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067938509 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080184658 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078428449 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068883823 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073399405 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068083214 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074086057 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068366279 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068567464 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068193826 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067923522 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072902303 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068013615 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072895606 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073255933 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080525828 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068115793 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072626993 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073056103 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067686639 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074595714 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067943366 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067749423 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067720491 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081716732 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072911103 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068182985 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073736302 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073425949 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076237552 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067227472 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076413 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073802623 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072316517 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074181748 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066750026 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079210787 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072566507 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072258619 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066777098 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066995038 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066017288 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067010608 seconds)
done (took 12.971082013 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071606612 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121656268 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09783495 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09710789 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086199268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070369651 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077975571 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09564733 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071433098 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101171526 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092259721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.09214982 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113819157 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068715778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069259595 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070892391 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071078781 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.0827923 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098305474 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092567303 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110577478 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069394501 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089884498 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091619275 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087266825 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094862142 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070923935 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070716547 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072364652 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091557759 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095658654 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072761913 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070542514 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094511622 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088378548 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083935221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070685659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078377285 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071063005 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069622689 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071443474 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.092519239 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078552192 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081385527 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070720868 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077593861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071294186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087107157 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089062116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079579167 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086172775 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.095306331 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074129242 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086938415 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068991076 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086778486 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080072254 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070449231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070353421 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074932689 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069864585 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072155575 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082237513 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079781863 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075443364 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085439694 seconds)
  done (took 6.854218349 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085312152 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098048868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086538092 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08741899 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069782276 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070282151 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06963327 seconds)
  done (took 2.015159515 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070611848 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091319827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094112162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094622278 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084230196 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094748868 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077482641 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070020536 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099679511 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069425596 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090887122 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102133854 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074374699 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082378256 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095819822 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070430065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095228816 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070303934 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07068983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094799772 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075112306 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098065484 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082294633 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070232673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083164598 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070727245 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103697374 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07806409 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071797168 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071178705 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071459386 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.097724882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082606419 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084847465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07169778 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085254352 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083867789 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073232028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081163675 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07989297 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083953779 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071549336 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069798254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071839133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073702195 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08210665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068958394 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071412861 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071357394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089742198 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069055028 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082732195 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074191796 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077188293 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075841837 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075453057 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078428686 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072039132 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090124147 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071550328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087702961 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087040903 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083345707 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087280174 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070484115 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082591364 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083415039 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070644975 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072632247 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071276293 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08688618 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073519131 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071668458 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082164172 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069829027 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094967823 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094461087 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069643832 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08398683 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070502004 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071904758 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.08208109 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094545908 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076114366 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071420646 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074407524 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071877075 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073264453 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068363944 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073526496 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071170774 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075200396 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070683043 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073407049 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072478253 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086207729 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068898921 seconds)
  done (took 9.135703097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07077749 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070725377 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072644528 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07169584 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071299868 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070743037 seconds)
  done (took 1.90800539 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091607675 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070756486 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08378663 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071469335 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107644288 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087011289 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087826107 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080846163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084964561 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083321073 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087407548 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090381138 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091975059 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073405724 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087002801 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072024378 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087198924 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076785017 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082350677 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07365951 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084822145 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074186809 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074361075 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.092059008 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075468721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07235145 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081259235 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08252725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082108804 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081361707 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073959367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075258973 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079956046 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081674614 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087141314 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079092604 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07111371 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077852083 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074444238 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074845903 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.090103251 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074200302 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07388696 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080347977 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081157712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078808105 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077422659 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080196109 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086745019 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077363785 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078188012 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071737944 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074695773 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077308822 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07976789 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080553606 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077350528 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087001488 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073161712 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078714099 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070854069 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074829402 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080859127 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074826611 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078518254 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077458192 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078965923 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073692121 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073741361 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070779608 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077740036 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071026773 seconds)
  done (took 7.180728238 seconds)
done (took 28.565748733 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516012115 seconds)
  done (took 1.94443411 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622719197 seconds)
  done (took 2.080750872 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.520123088 seconds)
  done (took 7.974817089 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403772065 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475464022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748631231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138731622 seconds)
  done (took 3.255340611 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709244855 seconds)
  done (took 2.180089045 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240092664 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233935517 seconds)
  done (took 1.95490879 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349032898 seconds)
  done (took 1.810115754 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076623859 seconds)
  done (took 2.537251463 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239753215 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165481082 seconds)
  done (took 1.872836642 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452228079 seconds)
  done (took 1.914460945 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.203348389 seconds)
  done (took 5.668264079 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221872411 seconds)
  done (took 1.72386776 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236054632 seconds)
  done (took 1.700195514 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.745009255 seconds)
  done (took 3.21168238 seconds)
done (took 41.300060106 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084127576 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088767661 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089274075 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085331883 seconds)
  done (took 1.792274545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075081096 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073194194 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077151806 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073609933 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077438085 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073396884 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074737062 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076301961 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073303784 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074201286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073491203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073352597 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076538958 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07476217 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072078013 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076056535 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07752489 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073904502 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076548016 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073195184 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071527671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07675122 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076914627 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072914271 seconds)
  done (took 3.259721061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07911648 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076283658 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078771963 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075219557 seconds)
  done (took 1.781780335 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077377094 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091355295 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089632482 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080378143 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091984424 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087569006 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070104393 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069598589 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071136298 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080472554 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069230461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096861898 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090071466 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07980815 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082009053 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066275548 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068697812 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08842696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080683629 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080954247 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070945624 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080228692 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068833968 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090838722 seconds)
  done (took 3.39233104 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086613578 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068102947 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.090022661 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094539774 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096247964 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069045187 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088451713 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09714741 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131725799 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069278658 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074491932 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068815068 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108434222 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069353048 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089747471 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112723433 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116083562 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072439406 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105254271 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069511175 seconds)
  done (took 3.253770915 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085813111 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072402097 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073187785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068618371 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078701384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075912351 seconds)
  done (took 1.934622366 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069016084 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070588796 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070423057 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069554252 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075193922 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070567334 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069368467 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071132912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071134633 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070471247 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06987436 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069411588 seconds)
  done (took 2.321452623 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195108706 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073706104 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073447803 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069778799 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075560283 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069520252 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08564679 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07273686 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098389412 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069551607 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069560366 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072456085 seconds)
  done (took 2.503343776 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190320382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076423041 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227033711 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148844957 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106145256 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113011183 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115219497 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110881496 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143990684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100854768 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157517168 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163840293 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106805208 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133281676 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090556215 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123929307 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148239453 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159601008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103244313 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159045386 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138658498 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125845048 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146062335 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099824006 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104582817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116527805 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074519564 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080536019 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161554546 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125615976 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145714576 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108050836 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093340136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168763763 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159438884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134952754 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146026657 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084530818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.127807659 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133623466 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198426432 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090664384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16097343 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104781938 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079843911 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125991693 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111755805 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116880642 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102087999 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088763145 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282843097 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176259264 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135515917 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087459333 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120330676 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109237342 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113356827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117474244 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171250145 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154229164 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124511807 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072063979 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110476429 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146351921 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129224557 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10759623 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121524971 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089746685 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128166844 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156402495 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121730733 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136458278 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115255385 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087552031 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117815853 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134057368 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123550775 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165920541 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12128392 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073565223 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118331868 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098522787 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081029912 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146142281 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07624408 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169739504 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099507053 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124432698 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129157569 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10807049 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107655062 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152965561 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137456738 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104437249 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087128811 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10257988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117684968 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140707945 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088018102 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107266267 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112498613 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080085025 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128878356 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075126866 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117506607 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095345919 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116001343 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120990601 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.224551149 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122076511 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103830423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10278267 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125633023 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152213252 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088074305 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081924617 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16101065 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119402801 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10386264 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139351649 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153621342 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121487912 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098093597 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141511642 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166976349 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090943955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157016871 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102124847 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085111246 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106407322 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121500328 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115124432 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122293597 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081513929 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118022264 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157100495 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075624287 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096334044 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12994272 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082012272 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081269189 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105090477 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103406226 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097031099 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101372807 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10491204 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13381233 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120427716 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105108989 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130594854 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097509491 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159502722 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088115028 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102776315 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104072846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073419213 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129423295 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150700728 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079658516 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152144226 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120079313 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113971182 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116210236 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084196063 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131704346 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079130129 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072629405 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13478904 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110906659 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105689545 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.293007337 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114257019 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127889656 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119352328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128872754 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132599104 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126764511 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106544269 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08970841 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112231087 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126520174 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073662219 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091557012 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083086973 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103000013 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09467333 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084640522 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134757205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1185258 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109753004 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113462505 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096482761 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145614549 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079747525 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121988755 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12098089 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095718456 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150129055 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147579072 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128965679 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10091454 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132178546 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07427831 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075423086 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089605403 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121199894 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084225486 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084276565 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112820421 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145219448 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122693183 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132068501 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121785109 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114672835 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152830421 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073327027 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119395142 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139418974 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11882013 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104833024 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091348428 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097489968 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138567355 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104192966 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172783198 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111856598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119753763 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149749745 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100714794 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079523834 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250412558 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129248879 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101506446 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138426824 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098433617 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087585994 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107600386 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078956133 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101329297 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122160879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116141195 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131775485 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110626387 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13151628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078484863 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110928346 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120790101 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11937608 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0851727 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114338074 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159872803 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09661017 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115088627 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145606806 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080365035 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138476969 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166725505 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138276646 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085599789 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104387528 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119581882 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124623121 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115525764 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134175478 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103746538 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133718168 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110071666 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085238166 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086595297 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095799592 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102552442 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.116632734 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104279912 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113011212 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096147473 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126064438 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102284286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109674495 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116310599 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100206162 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095927814 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096228349 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1681793 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116195916 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160891635 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099259482 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136343496 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151675546 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075266056 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078472168 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079718914 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129976368 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083345884 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122919656 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110114829 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1115319 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117131423 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129158629 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093992531 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071253697 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105693783 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12571941 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117877362 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094959492 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10102853 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147691964 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115941777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078075783 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108198633 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110686872 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097784356 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153801987 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081475354 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105046311 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076166247 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078654115 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117196313 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132274128 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08057401 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.098246628 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107940961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100648043 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112751791 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091636083 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104536265 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119073401 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128884971 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11347489 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088704327 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1061452 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113086199 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133486543 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096270737 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092322638 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153213015 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135627169 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.140924278 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080242566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103565503 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10609952 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10059324 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123290033 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078774189 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140386836 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076400447 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119496419 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093297259 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08252472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113775541 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.105985123 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.339703633 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143160481 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119023358 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086316126 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084063364 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113910189 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119330553 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104470855 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078340754 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141849374 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076233216 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134421769 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166299864 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084138733 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107183632 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097853775 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084597873 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105662201 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104043657 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08876746 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102060409 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167118762 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090390222 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144788072 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131456127 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110768022 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134215702 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103343467 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644912668 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081485274 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148454227 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115892151 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171395683 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099844229 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117666924 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110472208 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119642216 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138415427 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102148966 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181790089 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126616158 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116674671 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080117314 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101451966 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103985179 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089867333 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105923907 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112314767 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112539875 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095344149 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116294286 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119941004 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08387843 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096971798 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150530507 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114115012 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143468867 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133543451 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08432892 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114844634 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286936562 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08170824 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117374556 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145888627 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105834817 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100380611 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083671542 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100961521 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167212658 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074404989 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152807718 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118613262 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112737943 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112720918 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110176997 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126640189 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103746568 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120294841 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094224092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109708877 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113844134 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084368774 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.118087747 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105312433 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110240813 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098354069 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0989661 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.101026978 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147360156 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073959675 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0979553 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114059882 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139155901 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164299407 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105941874 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084449677 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11706142 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117482664 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112734066 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118640146 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082193686 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08120634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082192922 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.100741041 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.124897306 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112502193 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117464345 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108210721 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153360891 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084010757 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22781803 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096345297 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104510855 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090401425 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081134316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096746888 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096164172 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103352097 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110398652 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167429145 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094899575 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093819334 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092632456 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074875312 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083153581 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274489356 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110226484 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115837567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103517024 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084013353 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103400046 seconds)
  done (took 58.007082544 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12004364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083007502 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100447262 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14647997 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121958659 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200750084 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150205797 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190017279 seconds)
  done (took 2.736623947 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06989653 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095621438 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108230788 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087066526 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068455067 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07157373 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230492142 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084947805 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070884911 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095572809 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082296562 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070974071 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43004604 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070260324 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071549548 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081217518 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072001611 seconds)
  done (took 3.452965945 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392186494 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621556901 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.349707606 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080180078 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.895783071 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094962283 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.153135455 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142236182 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082874937 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539319428 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.372372741 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136029 seconds)
  done (took 18.463990271 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083524541 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079726779 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094707453 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094444335 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08246549 seconds)
  done (took 2.040844712 seconds)
done (took 106.43097309 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082475561 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442651555 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073510942 seconds)
  done (took 2.149008486 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092402133 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093342719 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092717904 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090791603 seconds)
  done (took 1.989635847 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075291572 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081282985 seconds)
  done (took 1.76769954 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234853751 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.181366853 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102818072 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083820224 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082039699 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08468698 seconds)
  done (took 1.865042334 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07372377 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075176667 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075937619 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077523815 seconds)
  done (took 1.913445992 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069107891 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069568236 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072089893 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074647954 seconds)
  done (took 1.898041483 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084883385 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086801765 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082753141 seconds)
  done (took 1.866563852 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102372802 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.098436469 seconds)
  done (took 1.813888551 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082869123 seconds)
  done (took 1.695930527 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091130324 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105570242 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137178315 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119655249 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143885459 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119506276 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088711794 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089956191 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082876007 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090038193 seconds)
  done (took 2.681189872 seconds)
done (took 21.848639599 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079705936 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380371687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364090051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097658055 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673787721 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36105881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.000815453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098366645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149077835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073057478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091595519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651732916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98957614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.336092003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97813729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327377741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655790317 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072545783 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072135608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072895606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.983426772 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07246791 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072797163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072925486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653177052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378405553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074266127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327945357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07336618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078301278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363527191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075523448 seconds)
  done (took 16.343964048 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07194309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127658128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077668096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090777902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075316367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075006588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075701987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073219345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128238313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073542144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091927439 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072858953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07694464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074840088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094646241 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072711895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0760187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07396218 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073784651 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075151499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094904876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075956483 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074833766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073991302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074200413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087787157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075825868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073694385 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073791209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078917435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08017387 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.076453285 seconds)
  done (took 4.220123951 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118756883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.133273834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077913184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113580888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118137234 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075231703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153200967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099059669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.135262251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073712445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092904457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072387771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108576407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074759331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096228864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07388741 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077067542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074107808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073513453 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074387365 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094845409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073206201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074495156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074721987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075519115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089313637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075905412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074185477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074184642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078515256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080582629 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075527177 seconds)
  done (took 4.486574014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072361578 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076172761 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08494636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086587365 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072014852 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073415903 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075066739 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07170948 seconds)
  done (took 2.247162141 seconds)
done (took 28.920688716 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080501579 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071264252 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07502089 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091343829 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077810446 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082732088 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06908869 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078300407 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075271807 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075920777 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07677647 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070658002 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073883927 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069136569 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075848073 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069689119 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085201695 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074522076 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085337602 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085422342 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073112001 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076944274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078916226 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085327584 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08503796 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085263558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080271017 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076287882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07189395 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07443923 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075177734 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084299965 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085855092 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08640823 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07161291 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071040085 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075125099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073833823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08669394 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080638907 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073094835 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080435063 seconds)
  done (took 4.879092953 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084887748 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093639041 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087929573 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083522162 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095316354 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.086476259 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091648795 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082424718 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.082046824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090902132 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07831692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.085415282 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082848713 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076628336 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.081293269 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0788634 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083575153 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077783523 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.08165342 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.082360353 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091990532 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076570278 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092497203 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.083575051 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.079327856 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.085039196 seconds)
  done (took 3.832605532 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07440074 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088839471 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096685306 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148897155 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116491084 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084235364 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085891163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09684209 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101024478 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071860598 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076594953 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097146658 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09726122 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078227653 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071985038 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088751363 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087991793 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074273428 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079357977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101474247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093794325 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090464197 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098822612 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089058985 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071895108 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077535594 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077315845 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08938271 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074700292 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.084081874 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075344989 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076815212 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074066527 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083688904 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074971996 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071610741 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098043805 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084297513 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085376159 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072439994 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081669696 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072435731 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097904761 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132767982 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07102445 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076078333 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075486345 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083277297 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070816852 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099610359 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084279215 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071106418 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072063966 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07118782 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070830196 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074259789 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07287253 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074529218 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081473074 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078523882 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093876225 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076500177 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089606553 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071212612 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082176036 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070729879 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073029533 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070083043 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100832383 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072707819 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117261379 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072707796 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070150568 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083237658 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081592972 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077848315 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071332022 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089495053 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083113999 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07530054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079616802 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075268672 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075692583 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102239667 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072070018 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070876758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069843473 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075135884 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075468492 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071822512 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084170121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070476362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074923275 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090108137 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071028408 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072782423 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075276325 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074031211 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070714486 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083180056 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075265849 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073216616 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081948582 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071890397 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075359798 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084790902 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078685243 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070005054 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073885313 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074957845 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072411389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072889294 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075006105 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073257558 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078309816 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078585464 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07760446 seconds)
  done (took 11.15866348 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166046011 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.163042484 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074356032 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15404957 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080712098 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.085587362 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157497464 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099945416 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072572996 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073631528 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072747357 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114264355 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109893815 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123538031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085741375 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07334116 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095510859 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119827321 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159884652 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153862648 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096413306 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080810136 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074632929 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07412818 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073741643 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082195872 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091831624 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081390733 seconds)
  done (took 4.562582815 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078489957 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106221199 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075831034 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094751531 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091890313 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072581725 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074038338 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074139377 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088565296 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083714732 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073637566 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078060318 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076420251 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075190018 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073311416 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079178698 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080282961 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07152298 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075972819 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077830204 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082873894 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097429731 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076452044 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071779438 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075207325 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072325074 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.083664534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084778875 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072799903 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109466376 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069892882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077077989 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087399035 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072703464 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0719598 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072223984 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072752162 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072568718 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073317015 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070813055 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070909694 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.075935156 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070689755 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080738918 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.0856824 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07419925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074292741 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075338123 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075361081 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070395285 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07549503 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075640751 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075164611 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080008305 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076329718 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074804352 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073294519 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100731504 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077841991 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072071091 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071429007 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070656035 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074574048 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082000459 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087874891 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07448717 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070787425 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072080283 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085038673 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086147804 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071651699 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077000775 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069674141 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073599802 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074852969 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074382777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072985612 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070793467 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072118038 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07213241 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07300469 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072044634 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075078212 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075426132 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070354837 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070841376 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072615639 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073901189 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081251683 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071273628 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075839636 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072789311 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07103167 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07582025 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077781641 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075667855 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.087794683 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083274405 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072256018 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.07054898 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086025007 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075073243 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072000701 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078390949 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077636405 seconds)
  done (took 9.756000262 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092048929 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072569755 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089341312 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097149754 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08268117 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078423247 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082178516 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072046792 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089227509 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07774487 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080691282 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070521003 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083735813 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082301426 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073399161 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083114989 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075747053 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089978698 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08650892 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070192747 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080801586 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085192052 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084612975 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087889923 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086670404 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087694262 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084458686 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08244465 seconds)
  done (took 3.984440469 seconds)
done (took 39.803063157 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.724044107 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.870779884 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.694362607 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.879252598 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.94656154 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.706839002 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.788120526 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.691360225 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.898685809 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.734018013 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.957553242 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.17754991 seconds)
done (took 64.840534703 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.758865765 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.838838882 seconds)
    (2/2) benchmarking "String"...
    done (took 1.944206946 seconds)
  done (took 5.507698344 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.922269493 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.423632318 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.923466949 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.689980585 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.698197898 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.942888279 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.471713113 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.139264157 seconds)
  done (took 29.920281565 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.872512813 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.932459794 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.445056985 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.425230429 seconds)
  done (took 15.349595688 seconds)
done (took 62.17695876 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.712686353 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.722036638 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.725457653 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.691611924 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.780092042 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.709893862 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.975937465 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.703773876 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.689894942 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.697815837 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.696110497 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.114507961 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.701321851 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.11607131 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.695958977 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.694164778 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.770023206 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.251879168 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.846081911 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.713780731 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.711924873 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.721285372 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.700015628 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.703478151 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.697494864 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.699389223 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.11057752 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.695309057 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.30638862 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.695694296 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.723698195 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.161680323 seconds)
  done (took 201.566902534 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.692478194 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.775994734 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.824962256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.726793351 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.234039308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.871593712 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.788968911 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.26846739 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.699924039 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.711922153 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.918709911 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.698240426 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.941683953 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.679169463 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.728771415 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.789408251 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.983522573 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.958932447 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.73649353 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.839179857 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.719500069 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.872147355 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.807324613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906173816 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.734983892 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.712649373 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.715835544 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.700873522 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.884509935 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.946187686 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.709361226 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.74014231 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822208296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.567194721 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.701695007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.709887047 seconds)
  done (took 167.752689968 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.048096957 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.693526512 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.692770145 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.693608976 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.705399306 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.694409037 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.86744164 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.822278536 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.358315885 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.425039216 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.754760755 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.695254482 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.473833234 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.693486079 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.693095578 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.759625029 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.707132941 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.697260828 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.709973031 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.72277322 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.697895218 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.694897824 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820217722 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.707815905 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.694119671 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701633281 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.695371074 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.699210266 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.079511659 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.694728683 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.130448173 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.700381117 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.700318285 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.950892864 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.695772689 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.695683866 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.533280223 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.340986879 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776733201 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.697903864 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.699482494 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.694517005 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.913242648 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.69475334 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.696164213 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.695497852 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.695943103 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.810434604 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.696125739 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.817338706 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.703425899 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.19244703 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.699776479 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.696262533 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.089840862 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.308525654 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.693453917 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.697181854 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.695836744 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.695829756 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.701904971 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.961520262 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.777841706 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.698860775 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.697895468 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.703648229 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.697269924 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.8696408 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698011686 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.809491291 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.713003953 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.834999503 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820442549 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.702820164 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.698467801 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761663129 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789030968 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.698367504 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.6988194 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.697996963 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.6973645 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.780506867 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.700486226 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.78500319 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70932634 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.6980701 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754310456 seconds)
    (87/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.700093589 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.769819844 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.700236784 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539402565 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.700661678 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.700011022 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958089676 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765323505 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.700981148 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.702326519 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.787144313 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.822281417 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.433170361 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.704297879 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.009779932 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.82835452 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699331393 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821430968 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.699207806 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777898448 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703819321 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.69797372 seconds)
    (109/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.695274128 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732198916 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.698182082 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.709404217 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.703214613 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.068627351 seconds)
  done (took 392.096152339 seconds)
done (took 765.158629884 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.325053094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.293086624 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.398311686 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.311288101 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.283310488 seconds)
  done (took 13.249789681 seconds)
done (took 14.88780628 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.781544218 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.78179489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.716069554 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.777428833 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713805655 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.777154663 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.760026571 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.719581988 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.747185106 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.721599163 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.747621754 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721018304 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.705457225 seconds)
  done (took 24.307981579 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.930404133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.928686963 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763294319 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.929933127 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.739557354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.928397368 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.853738732 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.844183821 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84107036 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.710442759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707926979 seconds)
  done (took 21.817278283 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.935795291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.943359781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.768968873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.932050933 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744064786 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.929886264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.85965287 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.847301536 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848374947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.70969358 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.707791333 seconds)
  done (took 21.865888511 seconds)
done (took 69.628025856 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.704627324 seconds)
  done (took 3.343627527 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.719251538 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872135445 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.701859749 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.702240779 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.702907081 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.703079081 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.702065617 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.702731263 seconds)
  done (took 15.447114751 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.701046108 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.701513665 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.702403358 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.702573965 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.700798821 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.702130771 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.70268062 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.701832834 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.700713729 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.703346983 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.701617663 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.702202471 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.702409852 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.702543623 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.702849401 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.70236896 seconds)
  done (took 28.873906643 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.70566819 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.700700336 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.702331431 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.701614872 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.703095421 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.702291698 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.705480859 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.701537362 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.702042475 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.704105421 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.703445934 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.70256174 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.703507077 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.704866916 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.702800037 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.704504034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.704200008 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.702165163 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.706572388 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.7039696 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.703274964 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.70385053 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.703036156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.702992047 seconds)
  done (took 42.522789148 seconds)
done (took 91.827302796 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.432610518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.424301975 seconds)
  done (took 9.499843838 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.706205467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.704143654 seconds)
  done (took 5.05593358 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.70375721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.713903862 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.714832652 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.714123183 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.712657296 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.712275177 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.713133404 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.714953247 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.713742023 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.713861044 seconds)
  done (took 18.769012201 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.71350684 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.713355139 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.713404753 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.713925452 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.714194797 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.714454035 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.713475023 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.7136995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.71436937 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.714502186 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.712640781 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.715383077 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.714563255 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.715227256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.714927898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.713758719 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.714238899 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.713658701 seconds)
  done (took 32.504629303 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.713556599 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.713849411 seconds)
  done (took 5.078814465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.713940847 seconds)
    (2/7) benchmarking "second"...
    done (took 1.714803449 seconds)
    (3/7) benchmarking "month"...
    done (took 1.714881019 seconds)
    (4/7) benchmarking "year"...
    done (took 1.713583388 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.712241021 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.714381436 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.712559771 seconds)
  done (took 13.646717581 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.716475634 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.867554331 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.930080496 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.340047749 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.717589297 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.718461854 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.620261477 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.717231529 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.719658859 seconds)
  done (took 19.000458822 seconds)
done (took 105.198267047 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.582197328 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.7167482 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.978698449 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.771572248 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.739206434 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.053832279 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.746372558 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.998128092 seconds)
done (took 42.239326306 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.728483304 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.444833784 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.493911006 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.735798502 seconds)
  done (took 15.32184583 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.707550835 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.028003708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.731731785 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.513087419 seconds)
  done (took 21.629877156 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.068603519 seconds)
    (2/2) benchmarking "read"...
    done (took 2.049746953 seconds)
  done (took 5.770845476 seconds)
done (took 51.098254782 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712455558 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.710315852 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.710225631 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.709685322 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.709201996 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.710287306 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.71130607 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.711214704 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.709821595 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.709968754 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.711822069 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709375119 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709551723 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711301893 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71075473 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.71011664 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711320517 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.71049413 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.711693137 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.710387392 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713402174 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711801948 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.711601825 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.711908062 seconds)
  done (took 42.70697711 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.711941219 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.713249013 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.711767254 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.711699902 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.712604627 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.712351169 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.711353487 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.711948941 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.712039775 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.710622763 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712032852 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.709845861 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.712396996 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.711207481 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710478667 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.717116512 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.709538292 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711130726 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711762186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.711992838 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.71051913 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712483728 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.712520967 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713587051 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.714175698 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.713092816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.714696751 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.713391644 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712352439 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.712070713 seconds)
  done (took 53.015459017 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.718163005 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.721744859 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.711498445 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.712952154 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.71271552 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.71662806 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.713639293 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.715796373 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.715501177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.712557723 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.715288212 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.713395427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.711213551 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.717048746 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.714334377 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.713924844 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.711566902 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.712817629 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.71511728 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.71400057 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.714843709 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.714370152 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.713911413 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.715045823 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.713121336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.711886191 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.712404437 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.715798996 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.715021066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.71362411 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.712910425 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.713831904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.715047994 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.713662313 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.71559318 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.713422028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.71810109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.723029091 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.713020788 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.713568949 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.713411729 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.7132812 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.714774406 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.715495441 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.712173868 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.715124879 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.713845132 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.717450637 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.715422812 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.715943865 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.713673782 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.712496815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.714815896 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.713105701 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.719264871 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.715194339 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.715596633 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.715710226 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.716780125 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.715086453 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.717105586 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.716751671 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.712780295 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.717061174 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.717679828 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.715283352 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.71637128 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.717269227 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.717132562 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.716493623 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.715007519 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.715104544 seconds)
  done (took 125.126881261 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.71744756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.717848572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.718349784 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.717257368 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718136388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.718781865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.717853348 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718106185 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716683773 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.717304038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718016994 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.717221011 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71690598 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.718662841 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716216743 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.718533424 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.719092847 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.716906877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.718921021 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.718356797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.71859648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.717607991 seconds)
  done (took 39.447555599 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717822687 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.720863821 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.719467268 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.718977343 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.718346473 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71719593 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.718511399 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721184456 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71588046 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718822788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71920761 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723221767 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720396464 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719552948 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719019124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.717977884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719136482 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.720942099 seconds)
  done (took 32.603627567 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.719275539 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.719614795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.717820866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.719529044 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.71994459 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.720079539 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719880182 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.719376858 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.718042576 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.722285177 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.721412118 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719174853 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.719424509 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720677511 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718967994 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.720717571 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.718813464 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717883031 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720698811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720805254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.721143414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.719853783 seconds)
  done (took 39.492776056 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719750887 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.72199995 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.721750433 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.720516005 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.721574931 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.720313159 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.722096445 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.720506972 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.721234116 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.721269589 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.721659994 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.72038401 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.721618691 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721473404 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.720521981 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722183722 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.722053761 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.720231918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721955455 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722023973 seconds)
  done (took 36.082035915 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721694368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.721841991 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.720432245 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723275936 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722153269 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.72045622 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.723056932 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722091151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72105845 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.722615708 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.722300584 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.722983246 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721449623 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.721829933 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721732351 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723464663 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721478188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722131269 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723195767 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723468686 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.723232617 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722731995 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722606052 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.723897027 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.723685473 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724013991 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.72058834 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722705539 seconds)
  done (took 49.885642417 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72247671 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72157948 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.722541872 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.724607114 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.723618763 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.723994576 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.726151952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.7241358 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.72263096 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.721661624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.723319859 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.723930967 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.723139171 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.723241925 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.723119061 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.723784195 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723760716 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.72329161 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722343255 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723510053 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.723482995 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.724019227 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.722493098 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721366679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725396715 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.722121365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724857349 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.723612891 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722606899 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.724364811 seconds)
  done (took 53.360547016 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.744794988 seconds)
    (2/2) benchmarking "in"...
    done (took 1.74961439 seconds)
  done (took 5.155826144 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.722920663 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725351856 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.723557856 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.72335198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.72496696 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.723051884 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724453157 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726853249 seconds)
  done (took 15.453604975 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.727119819 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.724097787 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.724808082 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.724450485 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.722824643 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.725875615 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.731082034 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.724318449 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.726726961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.72618472 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.732574603 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.734159511 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.729065826 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728086445 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.727346799 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72798426 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.7244956 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.724338541 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.725448262 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.723308679 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724250783 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729652164 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729299039 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.723436938 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.727933511 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.737127479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.734220026 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.726785945 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.726504764 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.731765455 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.725932222 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.726528311 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.726245364 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.728988369 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.727961465 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.727444713 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.735297628 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.728497256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.732894058 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.728345089 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727880853 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.728712778 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.73030923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.731421208 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73110836 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.726773621 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.728127506 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.728578391 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.729416051 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.73329342 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.737754789 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.727861166 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.729565138 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734474828 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.732608937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.737152207 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.727453824 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.732384728 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.736829891 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.739860062 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.741976262 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.738633273 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72950872 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.728698885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738857273 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.754318345 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736904835 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.728712726 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.733314466 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.729118643 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.740643092 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74376912 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.740195235 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.729489951 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729070455 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.73019175 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730485125 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728811461 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739537549 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.733829303 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.729666312 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.730698894 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.739477717 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755418731 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.729902096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.731359781 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.727847899 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.729280035 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.730818227 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74094178 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.731696785 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.729658727 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.730351908 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.730638755 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.732268162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.729999081 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.729808696 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.731930337 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.729491387 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.727925772 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731019073 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732839971 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.742579598 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731612115 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728687279 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.738359413 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.730433521 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.730706293 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.738890617 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.730732408 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.731637849 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.732114964 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.740933297 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.730360282 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735713954 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.739653907 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.731481373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.735030925 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.729882532 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.73319367 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742931853 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.759456131 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.732203439 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.732771371 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.73713297 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.742781145 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735689529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.737096259 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.73437381 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.733609088 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.73119932 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.733410714 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.732183458 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.733391265 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.731785841 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73720325 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.731259989 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.732607406 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.73171123 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.735868135 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.735472081 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.734145822 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.738071468 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.736598882 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.733675128 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.736601102 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.742930165 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.734409461 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.735066853 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.735939956 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.732242756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.733019017 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.733839707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.734646782 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.73339358 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.730504871 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.732077896 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.731941871 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729977361 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.733197572 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733111456 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.735401253 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.737995518 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.730854441 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.739302588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.734495235 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.73515145 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.732290048 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.73504929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.733816668 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.733976411 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.734564324 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.74094254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.744852342 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.733227178 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.734466992 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.740370593 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734525101 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.733928625 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734858587 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.739134377 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.745835678 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.734956916 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.742278109 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.734556783 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.734694823 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.734854701 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.736040305 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.733162144 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.73483165 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.737952108 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.745142427 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749731155 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745029636 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.737312204 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.739792144 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.737110658 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.739250373 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.739207778 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.735161391 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.73631592 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736156546 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736406481 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.735865509 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.738780339 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.735033714 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.735164938 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.735134891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.767582564 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.789690987 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735584726 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.73560019 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.737844229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.735847499 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738236305 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.73455969 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.738553987 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.737182805 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.737605056 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.738941 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.73681955 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.7384031 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.745099065 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.73720233 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739496786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739003659 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.739163898 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.736645431 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.736240137 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739555303 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.737280586 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746672196 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.739416113 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.739065263 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.745466175 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.73628544 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.735363825 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.741583224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.737476376 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.738092674 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.74124486 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.746877677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.735229079 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.736489731 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.738961415 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.736555706 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.737912517 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.743963553 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.737235208 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.738027263 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.735213719 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.741162361 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.738841417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.740808426 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.741322318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.738633386 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.739976582 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739698029 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.738479769 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740595392 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.73966267 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.738576091 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.738563086 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741822823 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.746566734 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.744790861 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.738881958 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.742291857 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.737965084 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.74263984 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.739763849 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.738969575 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.739228753 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753906644 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.750476121 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746011011 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.741085327 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.738472415 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745305227 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.741638184 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.746163752 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.739640238 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.741473649 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741080184 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.742016674 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.738633551 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.740099432 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.739978422 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743275594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.741760004 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.745941754 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.740090635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.740459315 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739414331 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.739364608 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.739833341 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.739297201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.739477876 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.742832478 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743032087 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.741767913 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.741733985 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748463633 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.743306574 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.74285406 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.74093823 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.743791849 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.736017423 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.742436125 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.741459135 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.746291452 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.749905291 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.745004351 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.749258264 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.741362623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752665393 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.740833767 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.744503826 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.751190006 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.740695309 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.741079386 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.742408082 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.741105618 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.750701001 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.741899095 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.742196617 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.744301809 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742992168 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.743351979 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.743531896 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.741572292 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743254754 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.739984942 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.752486107 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.744341137 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.746015852 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745156803 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.742354336 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.742134012 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.741227084 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.740974752 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.746592664 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.742763151 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.743699433 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.743692341 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.74406406 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.741946943 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.740714026 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.742634131 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.743780996 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.742053713 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752719309 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.745296172 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749286033 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.744424095 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.751318705 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744656426 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752212038 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.74280349 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.74583207 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.743610098 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.743229359 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.746420403 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.743223846 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.742931961 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.744316313 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.746693027 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.746894695 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.741864811 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.744623068 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.743510378 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.742230264 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.742893507 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755347795 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767149033 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.746155076 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.748426275 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.744930442 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.746365906 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.751260983 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.741499213 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.74381255 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.747003527 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755474375 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.753537443 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.746134099 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.742070157 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.745945277 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743941365 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.745176943 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.744266766 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.746107832 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.743339045 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.747175571 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.744280968 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749350801 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.745976169 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.746286884 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745883245 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.747116532 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.758029808 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.746097773 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.744140494 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745772253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.744524286 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.746826895 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.746690639 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.746399212 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747423422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746584732 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.74648189 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.752907588 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.753344296 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.753027109 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.747916654 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.745452963 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.745041585 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.746643708 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.748075874 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.745143851 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.745413021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.746762731 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.745573013 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.749673734 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.743404191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.744039088 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.746159657 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745732488 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.747210486 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.753666906 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74669831 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.744836044 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.745946085 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745637006 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.74582131 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.748386821 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.756522038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750687584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.757243752 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.755611375 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.752352363 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.748969985 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.75014236 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.75719319 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.743584004 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.748432781 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.747429517 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.749426424 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.748825143 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.751123728 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745836408 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.757827471 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.748332134 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.747252902 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756011386 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.749659164 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.746373798 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.748772539 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.752738007 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.747573548 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.748678092 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.748964615 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.746396016 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754643406 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.750822431 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749488147 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74853398 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.747135783 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.750195134 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749258794 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746294911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.750080012 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.747780481 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.750313928 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748287069 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.745896496 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.749301099 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.747238452 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.745801397 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.751640891 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.753959259 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.74394102 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755596813 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.749506764 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.748266724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747164863 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748190145 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.749461655 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.74778982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.750564011 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.747325521 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.748975386 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.752640483 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.749721354 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.750449418 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.753630395 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.74842589 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755271227 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.757622148 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.757953986 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.746395596 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.747534826 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.749300278 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.753561299 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749793153 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.749706225 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74948825 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.750330281 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.747031556 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.750332979 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.749192518 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.754956036 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768901097 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.750910126 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749592197 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.750273378 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.753201268 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.748453711 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.749344015 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.747143802 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.75287457 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.753199294 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.758452185 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.749683554 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756606211 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754884372 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.751596128 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.756282116 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.750833697 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.759270737 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.753873435 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751553175 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.750087668 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.7570988 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.768206381 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74858838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761087627 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783891954 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.753273981 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.75280343 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.747074973 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75076804 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.752439618 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.755220949 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.754435099 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.751019199 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.753188641 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.751977153 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.752111426 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.756888762 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.750538971 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.750323247 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.748664372 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.752508648 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.753139844 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.751389197 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.752523451 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.751393879 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.750453321 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.75073981 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.752285625 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.750986665 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.765578642 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.764707957 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.752048929 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.751997672 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.75269386 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.755767568 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.757139441 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763618825 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.760758406 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.750231464 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.753752453 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.754671795 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.754147967 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.75062589 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.753399028 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.751671849 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.755440922 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.751987364 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.768348923 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.761731152 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.759736309 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.753270412 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750987024 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.754887633 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755330242 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75352894 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749954039 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.755148265 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.75075912 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757624597 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.752070391 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.752534899 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.755700507 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.759248225 seconds)
  done (took 1040.210172223 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.751990369 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75186185 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.752739868 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.753171241 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752624556 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752974513 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754020734 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753830899 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.752273246 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.751997357 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.752091563 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752108999 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.751662385 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.752031464 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.754371351 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.751801618 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750850948 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753328067 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755250326 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752997906 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.752773055 seconds)
  done (took 38.494175027 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.754170531 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.752844007 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.753601131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.757102699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752657503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.75551873 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.75463707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756135735 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.753978089 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754028937 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.751885826 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752633831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.750975063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.753866431 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751376586 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751645251 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752662885 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754105217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.753728627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.754436644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.755593525 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.753695178 seconds)
  done (took 40.272214909 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.752835081 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.752986523 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.758084904 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.753989729 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.752362607 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.755721597 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.754064821 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.755743396 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.754547356 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.756723209 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.753605325 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.757677026 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.763710738 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.761186996 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.757742481 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.755290067 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.902262355 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.753153933 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.755472041 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.753919543 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.754255395 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.763427292 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.755762314 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.757513809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.755512568 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.756101549 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.754884691 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.756953879 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.757018429 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.754972305 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.758261668 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.75110817 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.75577414 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.756985511 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.756093652 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.754530573 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.756212827 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.750324611 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.750509392 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.753635225 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.760414241 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.777246896 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.751166777 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.760644356 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.752415285 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.754366514 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.756535781 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.758845828 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.752482836 seconds)
  done (took 87.88593196 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750656941 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.758360644 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.758573615 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.758388937 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.758131375 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.757626497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.758062274 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.749966615 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.749733431 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.745133525 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.745373007 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.745972499 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.745818899 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.747212236 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.746516929 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.744749456 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744642143 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744629534 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.748204756 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.743955996 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.7454648 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.744661695 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.745036266 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.745785179 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.744709256 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744324421 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.743467804 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.744195997 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.744389024 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.746610545 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.744019507 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.742468122 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.742853454 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.743443048 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.742694096 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.749178636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.74371493 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.743836481 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.743760061 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.742282892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.743902523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.74609216 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.737124953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.73919769 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.737588945 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.73838698 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.737357554 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.74290084 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.738504089 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.738532992 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.737796175 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.738271 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738016705 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.736756094 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.738632165 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.738390083 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.73783058 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.737795234 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.738483339 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.738311374 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.740439939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.738000275 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.738863338 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.739893833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.739615226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.740196128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.738558588 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.73941885 seconds)
  done (took 120.274759376 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.739878487 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.739075603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73994276 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.739761932 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.739897679 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.739184488 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.739940656 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.739876162 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.738863334 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.740948396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740210296 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.740608913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.740390581 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741414721 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741066579 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.739321296 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.73921828 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740859125 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.739660419 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740829789 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.740043017 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.741374556 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.740306192 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.740902448 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.741383707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.739978022 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.741291671 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.74186304 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741314108 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.741795336 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.742639613 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.740819124 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.739327875 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.740745852 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.740311064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.743634854 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.740342764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740388139 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.741424592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74253699 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.742321114 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744245214 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.741569701 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.741796656 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743110243 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.742008298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742030058 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.743447142 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.741398563 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.740839963 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.740416411 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.741777084 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745267774 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.741370117 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.742248881 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.742282423 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.741966904 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743158043 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.747272232 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.742124963 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.74272384 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.741742403 seconds)
  done (took 109.635616093 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.740962027 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74545016 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.740990205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.74049229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.740937865 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741980611 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.740433721 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.744351951 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.740957301 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.742514071 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741501335 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.741807531 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747160458 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.740430455 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741755302 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743391355 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741143192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.741877208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.747989984 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742102651 seconds)
  done (took 36.524995994 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.74149296 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.742991264 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.741908325 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.74595271 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.740163367 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.741780724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.744247222 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742084899 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740442721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743424859 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.741689557 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.74317592 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742037429 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.742334781 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.745145541 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.741272817 seconds)
  done (took 29.558081847 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.740858119 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.740950526 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.743535484 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.744251856 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.740834015 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.740966399 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.739122419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.740577759 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.740391536 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.747473438 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.739557224 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.739042741 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.738775097 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.739266156 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.739429215 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.742145493 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.738483853 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.738482771 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.740174636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.743080047 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.74240192 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.739185158 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.739529285 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.73957106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.739951194 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.741117403 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.742410758 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.741070159 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.739763514 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.739636495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.738161235 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.739855778 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.740874146 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.74234432 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.741028176 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.740404957 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.739379989 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.740256291 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.7449742 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.740450617 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.740216963 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.739672295 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.740811048 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.742446204 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.738528316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.741745994 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.740109758 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.73955587 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.739107528 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.741670592 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.742649502 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.741152731 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.73914109 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.739799565 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.740973709 seconds)
  done (took 97.416148653 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.739126235 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74067338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.739643083 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.73966281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.740242849 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.742094492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.738935704 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.74091573 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740375721 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.742148833 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.741551896 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.742771078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.740818259 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.741867086 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.740848794 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.741469323 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.744936675 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.740867029 seconds)
  done (took 33.013737557 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.740551996 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.74209292 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.741439261 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.745649306 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.73987525 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740012031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.740966829 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.739479371 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741602484 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.743566032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741022993 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.739646503 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738856588 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.740622919 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.742697248 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736289624 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.743779537 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737499456 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.737756894 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.738611257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.741797763 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738031502 seconds)
  done (took 39.968960944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.73616893 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.738758988 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.751219057 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.764297879 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.76223968 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.773739472 seconds)
  done (took 12.197474623 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736151242 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.736522818 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.738987294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73622598 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73513657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73629405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735687128 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737526797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73947483 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.734340684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.734866404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.735014409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73313097 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.737773218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.734032796 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.734036853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732394023 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.733189825 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731616252 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733404592 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.732098339 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73200922 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731466669 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732605724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732748808 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.733336675 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731490531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.732428006 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731842619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731259535 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731839647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733481235 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733960996 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731723937 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730966886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731038478 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736132314 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731658693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730835128 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732264117 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.732305803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731040929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735684339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731870312 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730972868 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733473966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732819694 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730831853 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737859786 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.735604389 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73146589 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732003878 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73096948 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734067689 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.733431353 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731277829 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731081917 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731923876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.732117225 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7322321 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729971349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730972232 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730227763 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731422043 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73091659 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.733519417 seconds)
  done (took 116.062851594 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731620646 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.731833203 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731133596 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.731718443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731291887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731568462 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730821391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729944019 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731921114 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731494076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731972559 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730565573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730685924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730286815 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730848756 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732338316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733579688 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737937824 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729996549 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.730266699 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731263519 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.733854438 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730262826 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729872127 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72958596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731737513 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730340879 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73539828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729987001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731431199 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728738956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.73024065 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730624954 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.735080918 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732351211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729740366 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729983008 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730792455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73027314 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.734535045 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729406341 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729147028 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730704339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730518185 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731348429 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728563877 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729418742 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728630454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729580997 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728657259 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.731950407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731609072 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732380541 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729199198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729015037 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729465937 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731366914 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728862937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729616631 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729575199 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730611893 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730319473 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.73316799 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730250721 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73158511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729768301 seconds)
  done (took 115.913221308 seconds)
done (took 2411.410317393 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.738586138 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.812999989 seconds)
  done (took 15.215362753 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.900016404 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.852417659 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.737255656 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.757845648 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.73703815 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.736498509 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.739369058 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.738095 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.737157376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.737135895 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.737388522 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.923621368 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.792660814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.737627416 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.738084274 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.833354271 seconds)
  done (took 50.294816093 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.739826574 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.743699461 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.749514603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.742295885 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.739264335 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.758499954 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.77124592 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.743748305 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.801212756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.75087329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.866991713 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.755334616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.74056663 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.800864525 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.757354724 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.755895993 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.828155539 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.816167133 seconds)
  done (took 33.533836354 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.817900575 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.752581449 seconds)
  done (took 10.249704633 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.743811412 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.740933058 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.76706528 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.737853733 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.752519329 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.759387189 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.758485478 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.755685546 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.737072805 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.746055916 seconds)
  done (took 69.172708504 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.741214876 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.742307781 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.738045874 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.735430771 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.733234166 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.740295329 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.735441483 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.738074508 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.422967309 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.773014064 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.744083773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.74030239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.735364891 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.737105541 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.735083824 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.757807282 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.844977251 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.731451382 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.732593463 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.739941637 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.737095192 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.785894124 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.746795738 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.735330265 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.766116692 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.415122475 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.745345847 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.74229346 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.868653047 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.733250169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.735535218 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.923005458 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.736881132 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.198525121 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.997752933 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.742248745 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.743821109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.743328461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.732923895 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.849992638 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.737264417 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.74190776 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.660209789 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.974485742 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.831567816 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.777268315 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.070705338 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.742161246 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.736364594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.764603786 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.736992931 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.737365581 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.74858481 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.255155275 seconds)
  done (took 125.465204077 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.736495431 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.078801968 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.899597713 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.734421602 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016580672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940821027 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.738336815 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781380912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.73854468 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961539227 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.992995566 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838729745 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.738615617 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.733078079 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.735283326 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.733802443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.88772407 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.805059671 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.73634961 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.734040188 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764306684 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976685174 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.858734361 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.73936502 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.761150031 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943222589 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.860609652 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.83889078 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.531576569 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.734270154 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798260559 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.742087742 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.734100198 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.734220581 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889978837 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.854980704 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.817757514 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.745615461 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735656697 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.736496972 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.394250866 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932996532 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831832498 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.869707447 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.987417737 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.939476331 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.512143231 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.734807399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.471152838 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.897397516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.963283976 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.965513627 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.861545112 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.739292807 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.075656903 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.736084686 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.737798534 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983146894 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989310254 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.832014193 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.742163838 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.73830795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.735816318 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971992029 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.7396624 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.831415765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.74437404 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.737964063 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.83089985 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.836606963 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.985788448 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947885541 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.76679905 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.076435814 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.245724878 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983504677 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.806092113 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989801525 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.740796217 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.73500546 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814303245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.585421313 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991419183 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.984829904 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.981311757 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.773297239 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.448742269 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.737562984 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.963624551 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963397755 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.99933891 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.980492082 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.975589954 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.054880085 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.736525756 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.73968251 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.032012187 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.863615061 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 7.171344808 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.081815957 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966590574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.261876106 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.76724858 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042825458 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.870779969 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.746354956 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.364306565 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.737397444 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964065398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.779013599 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.73909941 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.74044385 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.955105306 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.72421535 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.740199316 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.389424395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.796910678 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.740074754 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968373751 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.745020469 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006215358 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.741813327 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97200154 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.82318451 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.769670874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.911852024 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.986973881 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.742533195 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98123944 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.980720547 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.852301502 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.958212213 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.441434994 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.742432436 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023846919 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.742661175 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.738172895 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.905351242 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.742187216 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.907270996 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.744961204 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.033618079 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760617169 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968762286 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.746189597 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991759804 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.771196703 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.795361577 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.743148786 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.864665967 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.746275597 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.563971724 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.89597507 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.740826912 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.741431338 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.290940388 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.746014753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.888434145 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.967047659 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.764438393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.811735337 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.40182558 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.74090785 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822344107 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.766397985 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.121698358 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.744502001 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.993871402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.746695673 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.740920859 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.742454995 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.974363487 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.923001074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.74530394 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.74677682 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.645044285 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.741305516 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.74257899 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.921122192 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.129798128 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.743185924 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946667078 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.744179366 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.869343456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.749993522 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.823452247 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.074209537 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.741025175 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.742704246 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.742144815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.743685634 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.742664295 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.948969409 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.766775503 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.232080952 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.877935389 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011505928 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.050352271 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.981104325 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.785177216 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.74554198 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.995739806 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.74840346 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.805603712 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.743854805 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.762685481 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.968959091 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748429062 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033985248 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011693982 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.597084985 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.790748124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.745412836 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.744677535 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.743527766 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.889305853 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.829642871 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.74609521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.74271298 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.857181025 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.863877728 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.951941835 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.745616394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.880246994 seconds)
  done (took 875.553712368 seconds)
done (took 1181.150246688 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.743403282 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.744178255 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.75096651 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.748183033 seconds)
  done (took 28.66658721 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.751464646 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.746970052 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.745252391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.746866319 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.745986409 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.745272912 seconds)
  done (took 12.162862918 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.748200917 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.744554444 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.748779384 seconds)
  done (took 20.922252086 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.81571398 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.151741822 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.875203638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.178321065 seconds)
  done (took 9.702489318 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.746062942 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.745749826 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.746478018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.746798233 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.749607166 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.748954215 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.747724877 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.747516942 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.749700378 seconds)
  done (took 17.411243422 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.891094063 seconds)
done (took 94.436600048 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.899331171 seconds)
    (2/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.876695162 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.81225989 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.745356333 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.13766952 seconds)
    (6/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.809507454 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.847284186 seconds)
    (8/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.153980829 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.826609584 seconds)
    (10/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.758566099 seconds)
    (11/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.070462187 seconds)
    (12/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.461990711 seconds)
    (13/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.170457577 seconds)
    (14/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.021332888 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.361441317 seconds)
    (16/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.919876638 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.010767488 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.769904458 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.511478985 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.909836569 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.887196062 seconds)
    (22/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.833111441 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.751420107 seconds)
    (24/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.915782302 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.752275219 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.540171795 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.857880271 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.858955016 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.963304677 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.75215123 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.871705975 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.502764996 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.862563393 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.063384229 seconds)
    (35/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.762461415 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.838967506 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.221688711 seconds)
    (38/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.952702892 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.398789072 seconds)
    (40/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.490407842 seconds)
    (41/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.944378874 seconds)
    (42/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.477951142 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.934999848 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.924077577 seconds)
    (45/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.868635959 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.858281888 seconds)
    (47/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.769649856 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.75212121 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.481511817 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.7855643 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 1.971108273 seconds)
    (52/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.220079618 seconds)
    (53/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.888527075 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.068981433 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.067078111 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.431660583 seconds)
    (57/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.753774182 seconds)
    (58/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.033745391 seconds)
    (59/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.756767165 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.007194414 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.761274131 seconds)
    (62/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.081562532 seconds)
    (63/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.888810637 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.902900635 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.771559528 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.06158625 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.106440799 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.773770454 seconds)
    (69/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.751775335 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.841392227 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.044170993 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.680180271 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.896554723 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.1509361 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.756479153 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.75670671 seconds)
    (77/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.937558269 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.774764796 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.117950936 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.82144983 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.160573428 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.753927032 seconds)
    (83/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.053394214 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.257968079 seconds)
    (85/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.875696974 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.073762003 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.151491862 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.054370408 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.948587113 seconds)
    (90/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.888152216 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.214824866 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.947493135 seconds)
    (93/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.836226641 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.016534447 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.657028395 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.253268045 seconds)
    (97/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.606435604 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.026223747 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.760118362 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.603960843 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.83551279 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.235627406 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.886642936 seconds)
    (104/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.907789414 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.960042107 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.505119326 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.841618922 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.084057075 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.762504331 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.77875784 seconds)
    (111/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.030190894 seconds)
    (112/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.28955171 seconds)
    (113/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.8641892 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.039849789 seconds)
    (115/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.855899053 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.780419602 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.077175929 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.983722648 seconds)
    (119/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.890050349 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.078894742 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.946716114 seconds)
    (122/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.924504458 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.765424907 seconds)
    (124/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.968564499 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.761285053 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.948888693 seconds)
    (127/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.14932336 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.839162662 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.068725306 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.794371648 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.780932948 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.30677083 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.938082914 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.760291347 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.486940034 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.789552255 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.868014938 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.900048921 seconds)
    (139/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.315337176 seconds)
    (140/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.4423622 seconds)
    (141/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.773365112 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.973246312 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.007353045 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.941883108 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.08588459 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.036166759 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.893936359 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.779972778 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.006145951 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.645019606 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.428787939 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.101787084 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.432533252 seconds)
    (154/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.289625925 seconds)
    (155/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.760383527 seconds)
    (156/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.669117727 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.793941079 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.848223839 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.777874632 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.759702196 seconds)
    (161/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.908583143 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.14779265 seconds)
    (163/309) benchmarking ("sort", Float64, false)...
    done (took 5.537530264 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.067811038 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.78113577 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.092733623 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.523768966 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.09452463 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.762640105 seconds)
    (170/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.855925731 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.9211576 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.892279135 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.75874752 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.295462215 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.068691928 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.890958786 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.78619398 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.8922582 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.857433652 seconds)
    (180/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.650196966 seconds)
    (181/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.253495676 seconds)
    (182/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.872841295 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.876234666 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.102939851 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.908881933 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.776666639 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.862205313 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.803568586 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.054956351 seconds)
    (190/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.80060401 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.786205289 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.841730075 seconds)
    (193/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.029567115 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.764644309 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.039178471 seconds)
    (196/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.765253479 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.760951918 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.564847557 seconds)
    (199/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.777927342 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.45537901 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.831099636 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.907045824 seconds)
    (203/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.956233827 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.159319292 seconds)
    (205/309) benchmarking ("sort", Float32, false)...
    done (took 5.486316687 seconds)
    (206/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.995905207 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.843088524 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.783057734 seconds)
    (209/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.84927037 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.524415842 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.961348435 seconds)
    (212/309) benchmarking ("sort", Int8, false)...
    done (took 4.65868609 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.951238361 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.767798092 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.140354426 seconds)
    (216/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.863334423 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.117403683 seconds)
    (218/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.776105108 seconds)
    (219/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.964753188 seconds)
    (220/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.786148849 seconds)
    (221/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.15797589 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.108670286 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.937235171 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.074586163 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.806579253 seconds)
    (226/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.761327432 seconds)
    (227/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.616757282 seconds)
    (228/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.038559245 seconds)
    (229/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.082667833 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.541470166 seconds)
    (231/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.771054383 seconds)
    (232/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.932290501 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.55745278 seconds)
    (234/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.767250415 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.716582053 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.765348446 seconds)
    (237/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.90264907 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.914975452 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.975636414 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.765886778 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.897198857 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.155806884 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.709352083 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.778271272 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.37874341 seconds)
    (246/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.84025906 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.152112668 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.404058767 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.462246069 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.895660253 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.845175726 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.767117051 seconds)
    (253/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.155704752 seconds)
    (254/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.792171059 seconds)
    (255/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.68968348 seconds)
    (256/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.793006564 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.78672368 seconds)
    (258/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.887972826 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.877684178 seconds)
    (260/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.057000952 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.099466225 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.763228314 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.774161052 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.821380626 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.791788348 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.161253515 seconds)
    (267/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.138685154 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.76475362 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.001998151 seconds)
    (270/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.229967564 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.873519477 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.11646146 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.847216293 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.099634155 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.76318688 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.932451516 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.829474788 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.76365933 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.961122069 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.765695836 seconds)
    (281/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.97307845 seconds)
    (282/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794967102 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.825805007 seconds)
    (284/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.850385964 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.563869439 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.765571829 seconds)
    (287/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.980601281 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.766896795 seconds)
    (289/309) benchmarking ("sort", BigInt, false)...
    done (took 6.772384227 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.665933372 seconds)
    (291/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.93045481 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.177742936 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.56774507 seconds)
    (294/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.898504302 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.85228364 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.802785937 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.763386988 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.85494913 seconds)
    (299/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.562184116 seconds)
    (300/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.891752285 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.894935443 seconds)
    (302/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.857313433 seconds)
    (303/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.240324151 seconds)
    (304/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.87410623 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.76191099 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.975928076 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.841079213 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.032620767 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.974697591 seconds)
  done (took 979.263860022 seconds)
done (took 981.028349125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.789722476 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.784976898 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.764174456 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.787710788 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.879178716 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.813665149 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.779359561 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.771202455 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.817733707 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.815598512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.764972648 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.813411238 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.769191972 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.767144314 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.766315739 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.782698559 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.069749475 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.796139504 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.786037754 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.778204122 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.786255433 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.766035754 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.817050344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.814214773 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.77194009 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.773688397 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.770210717 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.7868344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.880344517 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.771961976 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.772341418 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.77830762 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.068616175 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.788902949 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.76587452 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.788493796 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.780920654 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.779905489 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.770484054 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.801530451 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.202127989 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.775304941 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.768752104 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.769877141 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.767494946 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.774397444 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.767619864 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.777862512 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.78444948 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.784740311 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.199998818 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.790573416 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.777758799 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.768370402 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.782303277 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.769923388 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.773094479 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.784205056 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.790678001 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785078267 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.053032094 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.799321733 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.773866382 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.786590231 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.777484747 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.232610155 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.772792107 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.775930367 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.20446107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.781224706 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.230979073 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.783635901 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.771788822 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.785384801 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.802418758 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.069999797 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.791353651 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.768404328 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.779927529 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.769028583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.781659411 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.784754012 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.775402565 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.771326757 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.785222313 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.819039274 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.783816097 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.769648962 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.782747169 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.788481852 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.77974393 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.783242708 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.774517539 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.768441071 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.784291176 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.774768227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.775400296 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.774396352 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.775491636 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.783890583 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.202566043 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.794323536 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.769026544 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.769515092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.771558453 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.785404382 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.201331645 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.777478568 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.793885726 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.820934866 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.774638792 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.055413726 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.798854942 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788512468 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.783330888 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.77331023 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.77100081 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.055698899 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.22430174 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.795624005 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.771497185 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.771355891 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.788387603 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.774595813 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.76852224 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.074400185 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.798129122 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.788171511 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.893309032 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.785813685 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.805021832 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.771483984 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.776417745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.825156747 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.789531538 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.808007421 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.776461413 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.789252094 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.791733722 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.772276236 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.785700896 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.787185097 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.772334217 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.781229829 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.770076714 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.826330222 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788856333 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.789202857 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.795602403 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.897311075 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.771120171 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.058390649 seconds)
done (took 278.807459102 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.844794945 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.767732979 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.861049465 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.768977382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.855739825 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.845648665 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.769753038 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.771848773 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.769961657 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.266325336 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.769847375 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.775518266 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.768600465 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.77168068 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.841258368 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.770105679 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.770828009 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.240850537 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.770934921 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.853432543 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.768885441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.770062746 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.770675558 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.257713234 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.772482506 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.770742981 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.850683061 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.770884484 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.206939633 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.769288298 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.770944556 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.206133847 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.853261257 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.798043585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.777889585 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.777072856 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.859654665 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.782764038 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.841794251 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.838752493 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.863155788 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.80579198 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.774007882 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.769526805 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.775094374 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.773453979 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.770296179 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.805224658 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.768906905 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.776521948 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.209974825 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.775646834 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.77830716 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.771273322 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.770565417 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.799681633 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.771459425 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.773075514 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.85349888 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.771138243 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.844253679 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.259510225 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.29683227 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.771699692 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.770371693 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.772924576 seconds)
  done (took 178.647424102 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.839937425 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.847355508 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.837506377 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.778464201 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.821836694 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.838090592 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.777708801 seconds)
  done (took 14.446973958 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.780915154 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.77295577 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823507566 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822409964 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.773605555 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.932677412 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.774547453 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.785346024 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.777712106 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.799797806 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.77234313 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.772538888 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.779406499 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.77446734 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.822963675 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.785044615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.889762145 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.777797403 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.775611958 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.921044702 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.778385449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.780117726 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.800083184 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.784527726 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.773984256 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.781005251 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.351721949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.773762049 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.772839194 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.774413736 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.775660403 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.815775049 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.773708607 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.773404118 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.77492866 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889081413 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.774674457 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.775536798 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.775158578 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.773236625 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.775330688 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.773597969 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.774672824 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.774758397 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.773914617 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.797287083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.775339024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.774567324 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.773655284 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.773744621 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.800904606 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.776486439 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.775671167 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.780356083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.817387609 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.781630667 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.77585505 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.776831593 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.776186433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.774620791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.921714108 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.827188783 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.774729812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.827847157 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.776365146 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.775271657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.776428942 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.776009096 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863438069 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.775151646 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.824203541 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.773720927 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.945448036 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.79949461 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.776215696 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.779245165 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.7794604 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.777322094 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.775270601 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.783990233 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.775717615 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.776535496 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.783713337 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.780809075 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.77802644 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88926402 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916029747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.779415191 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.777983621 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.784654484 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.776833418 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.819892698 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.777080779 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.777301128 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.833572422 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891289394 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.805555348 seconds)
  done (took 196.531016757 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.782471361 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.78345971 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.778219787 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.792678293 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.778628105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.776693241 seconds)
  done (took 12.402442006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.780212965 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.780568477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.77738014 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.777419945 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.777234958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.777198612 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.778813195 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778444127 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.782086533 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.775718438 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.777376933 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.777685067 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.778288584 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.776121898 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.777533345 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.777932225 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.777627384 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.777598263 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.777001952 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777762516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.031470752 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.778043434 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781040464 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.779466229 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.781346137 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.776765883 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.791367707 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.776811776 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.779380053 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.784728636 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.782082232 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.779467218 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.781424354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.784334412 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.783024968 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.783578779 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.782592628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.77853987 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.779651679 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.780221758 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.779654638 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.781213755 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.779265513 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.779080264 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.780559885 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.788522581 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.78320209 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.79091297 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.779373977 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.779867149 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.779998483 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.778569267 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.779502009 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.780790786 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.783356225 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787108834 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.784453799 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.778318412 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.779042848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.781957999 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.783132153 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.779318515 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781302645 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.783300295 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.783465424 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.780037555 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.781876592 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.783255289 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780238106 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.780721351 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.781494884 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.781965415 seconds)
  done (took 131.162394801 seconds)
done (took 534.908394058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.112047731 seconds)
  done (took 8.824821549 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.834796677 seconds)
  done (took 8.55213329 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.220124009 seconds)
  done (took 9.936635193 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.782432155 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.793868559 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.785856373 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.784817747 seconds)
  done (took 28.871631171 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.008311707 seconds)
  done (took 8.724239553 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.792806055 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.779861204 seconds)
  done (took 15.360262009 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.941856071 seconds)
  done (took 8.65638211 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.258090191 seconds)
  done (took 8.996437185 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.800430206 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.80960439 seconds)
  done (took 15.352559276 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.783680345 seconds)
  done (took 8.499335751 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.919226434 seconds)
  done (took 9.638278569 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.80261509 seconds)
  done (took 8.554885738 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.809293945 seconds)
  done (took 8.525087365 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.957841096 seconds)
  done (took 9.673968122 seconds)
done (took 159.881812857 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.786704817 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.781618671 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.779230226 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.780440866 seconds)
  done (took 28.841645104 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.81405158 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.813890521 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.815365622 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.826561645 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.816544806 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.81533691 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.806201925 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.807116023 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.825924551 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.81810741 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.818220016 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.817974577 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.813190501 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.807018218 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.817852951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.817691032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.826842986 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.816611983 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.807847716 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.817435361 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.783445544 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.825528462 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.817795737 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.782146358 seconds)
  done (took 45.245217715 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.972859005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.853233337 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.937748761 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.836382527 seconds)
  done (took 9.314992152 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.83436188 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.836715563 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.845944533 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.887091191 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.90977804 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845003256 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.808110916 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.803694957 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.790051211 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.83646014 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.91123709 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.830841294 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.922197048 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.786686823 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.972343859 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.783824201 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.785046639 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.833739088 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.887662994 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.900090437 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.785018345 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.836141832 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.837543132 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.832725071 seconds)
  done (took 46.019435272 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.784475204 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.79238407 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.791940043 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.785452107 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.784386303 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.785930124 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.790870489 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.786151206 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.806925874 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.786668426 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.78440596 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.785770583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.792270552 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.78539626 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.785135131 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.800158219 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.799644127 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.78573884 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.788865512 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.791852168 seconds)
  done (took 37.511656422 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.783509752 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.629546847 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.129877338 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.035768905 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.785856218 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.787434005 seconds)
  done (took 30.869321177 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.798797917 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.790331934 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.786630106 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.841698721 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.924982452 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.793664285 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.785499386 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.795863897 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.826564069 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.852182297 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.805230439 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.81205649 seconds)
  done (took 23.533897374 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.786978785 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.788559401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.787889327 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.797969 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.796395055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.796822106 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.794202208 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.783961795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.79894592 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.805573766 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.791343278 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.795841793 seconds)
  done (took 43.247168359 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864448248 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.658766088 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225291354 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245175328 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.308538829 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988721118 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.785358852 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.871200038 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.786329846 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057170986 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.101952334 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977826509 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.028386846 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.54491029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.81703099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.272686047 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075743887 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999140933 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812094511 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472465469 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823450336 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.227765004 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.573659297 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822463555 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989172413 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.908158776 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.04333079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.736164314 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83490968 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790687921 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791587367 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.786963292 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057875315 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908226617 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857011566 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792516228 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197918286 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.492208351 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.793334242 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.474348945 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.180222975 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900718661 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790685747 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787751497 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712519029 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.229814907 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907996801 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.790171492 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.487674033 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.788401031 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792239628 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864034466 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.788681208 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.594394512 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.469018862 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.053152767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.786581366 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791677802 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341113996 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84782377 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264968061 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.752229733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.8700334 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526854029 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168803136 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.94109986 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.790375291 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79024712 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714886519 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.465619357 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825384008 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925037765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.806595918 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427875236 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078836445 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.165042035 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830255022 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062334315 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.513293434 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.752428516 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005874379 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737258658 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715898944 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.639219677 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.717248551 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999256224 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823517526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.38845267 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824300729 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871066189 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.796895617 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804677175 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790861597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003916494 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.683031518 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789687205 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.045162099 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.026237564 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805593413 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.874823712 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715627929 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.792677934 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035002093 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.994147439 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.956770292 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.296112832 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876190633 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.672727867 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.836114206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.631671136 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.830544226 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.058957755 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851630274 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849608305 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834600858 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.747224171 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035045927 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.706527559 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.921864988 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.105322361 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014856766 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.125055515 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.036596741 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852425168 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.793940478 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.791328167 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.534654491 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326399748 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.006370642 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.804778785 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.20554309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.831113204 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.791545506 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725888257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.471482953 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.109473877 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.854616902 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008201482 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.687904644 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099306273 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719563346 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930521211 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.784306205 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.005194539 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.436929561 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.874852722 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041732724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.95289549 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.988861895 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833352718 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804074514 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882995065 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808026127 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.149280562 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071937419 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.794870534 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.794723815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.561305945 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.768077301 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79550443 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.795024561 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342984536 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063107999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.818893819 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796980341 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666883087 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.805107368 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854987812 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79568173 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796907328 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.331750757 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293542654 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.797857481 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.472114396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008985149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795283289 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.473848106 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893706083 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.805516903 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061239982 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856427198 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.71823266 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.493172676 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.494593139 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795278526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.722040108 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.794933801 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797106647 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799578796 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.980293133 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065525049 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844761287 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.533891441 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.825999537 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801067821 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.795701564 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794145522 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.302701882 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851640041 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273333153 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.832627021 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924669696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.806435994 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.723132527 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.795355436 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797027246 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796042611 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.737214471 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84345243 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.540840618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920043918 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042666414 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.200774971 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803958889 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.525816145 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.834222976 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.809204967 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.054652614 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394957229 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.87142561 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806916577 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.800895573 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.528774264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449378026 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348154501 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092185185 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111148775 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147227491 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.215971933 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.04655092 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88051874 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022650661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317706736 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850373061 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885407587 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73170613 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811493565 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.441395125 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152103715 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805908721 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011797424 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08211878 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.12308521 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914848505 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000327049 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827106801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.658885626 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747960661 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.331870201 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812706793 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.164237548 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985408803 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88013584 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.058018012 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.861867219 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.796956803 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131539839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838603411 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.498910443 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150322473 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.236173874 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.143476842 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001917675 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804871836 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237507183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149912373 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.022414607 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.847787442 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724666381 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802040328 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.801751671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.810914589 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.789725964 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.653923601 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.040072851 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804279055 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027114935 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.964971761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086946915 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.71037047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.80113 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797162348 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043842948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.522177032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881079177 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.155907513 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.311249042 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804051748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.724629429 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729060875 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.499286261 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.806881264 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.76407351 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006163184 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.906431685 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.477154495 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.225789323 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033758301 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042855306 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.809240174 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066658564 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077256263 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.286988146 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817480764 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.896860055 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.055694813 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.473912624 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.014569141 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026027639 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329525469 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017983823 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243068088 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.772577893 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.800823303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006965214 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.014024331 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.11725871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960942349 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.510297575 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.856856405 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103358579 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862429001 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.120153229 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966257875 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.883654747 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809636692 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877829731 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805538909 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.806764557 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805817298 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809877866 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.120096377 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909187713 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.811390736 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876262581 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872696057 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.307136807 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.805693967 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072065543 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151029941 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130692259 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861577837 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.803204238 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804902304 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728611569 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930713365 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244094271 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073826156 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.921785135 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.936465329 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823819583 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.059847301 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.099306061 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035484711 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074360702 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.685142012 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489021477 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.849118854 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.019796937 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809866985 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.006711206 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018065114 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103989859 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364295977 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.982471687 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920028366 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.076399216 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162982714 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804878143 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386631098 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.875124105 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142465049 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.837308082 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.126908808 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044868447 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8058221 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924525907 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806464138 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.006394784 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.253996936 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.542748046 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.070975564 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656160219 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8088327 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077941387 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130370602 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108312503 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880279428 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811501888 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.494884419 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936346662 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.661699274 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.020367972 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.808067766 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008764139 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.517782299 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810075855 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076926813 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112302367 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.805383703 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.688623499 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813461352 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.811874198 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021911643 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019872963 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053389749 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81077771 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.814717507 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.614454264 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084997748 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871801428 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734722545 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.808347128 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852293208 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.034980695 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827040775 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.322795359 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.508518735 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081034578 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.713797833 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824607817 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297114606 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104449387 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132910138 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.347437989 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017869753 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360925043 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.71240431 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108886729 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.81220569 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.25802805 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112464841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.813781696 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364758881 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841859752 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.076092394 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135462903 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.891817133 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497028505 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.760845789 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026326331 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165507598 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73912418 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.810530619 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.857890337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812045717 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.816252432 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821277315 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.765936137 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266165531 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.569188735 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366977202 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.81096394 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.819146372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.083461565 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356915009 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839691822 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828203902 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.819504897 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.510703294 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.095464675 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.053130648 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358799907 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.83734646 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.812802637 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810619796 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.728451077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.992737304 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.995816367 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088563066 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.205839394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.840420622 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813213435 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.016850856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013559779 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.100003049 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921092587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98638217 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846423623 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.750458409 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.519422764 seconds)
  done (took 1623.394695199 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901876027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.836610833 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.877471485 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.885975955 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922093434 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860980445 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.918351441 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.889149151 seconds)
  done (took 56.83806324 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.813298478 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.975597001 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.819391091 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.812212698 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.816630134 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.811840285 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.967753141 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.820003464 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.816210844 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.8161293 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.812810164 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.812347747 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.081394391 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.828394566 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.816294109 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.81737326 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.814136804 seconds)
  done (took 73.244128425 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.813696844 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.015145266 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.852937795 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.813326041 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.993649853 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.819838789 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.757128645 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.867776813 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.816834608 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.214487377 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.10688112 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.826557824 seconds)
  done (took 89.645636269 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.81982101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.81543253 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.81619955 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.817066022 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.815796801 seconds)
  done (took 10.836783645 seconds)
done (took 2120.295234295 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.045473068 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.002737234 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043193 seconds)
  done (took 5.795058463 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.9514505 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.003405462 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.115678758 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.120756988 seconds)
  done (took 9.938360393 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.09257294 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.17717096 seconds)
  done (took 6.01505375 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.164892426 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.829555116 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.223862019 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.816304704 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.817993869 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.819310909 seconds)
  done (took 22.20401123 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.81521613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.813944688 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.812819402 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.815664321 seconds)
  done (took 9.004024544 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.812634072 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.494441696 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.815303619 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.825942488 seconds)
  done (took 20.694836786 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.961657293 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.931010199 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.961030227 seconds)
  done (took 7.600129185 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.956391061 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.661224591 seconds)
  done (took 6.363559699 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.976982392 seconds)
  done (took 3.72280172 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.843242555 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.083255112 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.325989557 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.336093968 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.411900658 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.64428718 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.116420399 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.040841994 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.2231353 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.236930705 seconds)
  done (took 24.007611274 seconds)
done (took 130.357757114 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.160379457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.828267274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.011082635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.169618615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.041227076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.013037376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024295971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.160245405 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.843050762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.831270272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.17168177 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.036994421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971349323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.831498805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.976743548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.831943592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.036126377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.174338964 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.854891236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.088199481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.034141958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.820907615 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.012147792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.833146326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.039986807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966049456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.366348459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.83754004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.00581557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.376284723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96593088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.236353286 seconds)
  done (took 166.298613083 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.816201327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.816832134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.816015673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.831254857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.386230657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.817051902 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.814032568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.825938907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.255953739 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.254969342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.815887167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.376722697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.819552176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.816540022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.817479198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.815879511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.438529359 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.816769953 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.815267777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.816261874 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.817526789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.205833696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.817439135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.214127151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.429990322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.817762479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.817234329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.817129439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.819451096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.82006494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.816703674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.817656425 seconds)
  done (took 207.945772987 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.786675158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.819299988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.817434978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.817483136 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.818144869 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.817873799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.816145811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.817645555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.583585883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.569850257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81634775 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.819355246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.817568536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817780035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.820142848 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.81725247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.819722113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.818739801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.820882141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.816437375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.819875787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.485956646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.819408285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.497322592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.82039538 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.820713301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.818039138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823648402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.825385603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.826499217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.820337019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.81943085 seconds)
  done (took 218.798018235 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.058243062 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.817861645 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.820228959 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.817756702 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.817762517 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.820690338 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.794616033 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06772028 seconds)
  done (took 18.765967722 seconds)
done (took 613.566083044 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.147665923 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.986316535 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.987102477 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.846142239 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.073040344 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.880281123 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.840055684 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.908148762 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.654163422 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.906763929 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.464863757 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.856181637 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.563605138 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.861381095 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.961334934 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.898063571 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.388930223 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485966472 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.010586695 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.882678291 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.014530533 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.727255415 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.917666713 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.688397813 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.583525913 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.778549672 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.845541494 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.388437611 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.847117595 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.994678688 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.490094259 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.088885316 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.847533137 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.840007524 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.897753275 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.874572736 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.036254876 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.847662175 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.964234888 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.531486785 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89162412 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.563963487 seconds)
  done (took 100.016929566 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.831350911 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.826376313 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.827569698 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.826155138 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.835837712 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.82650634 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.826240015 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.826488183 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.827145024 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.827325232 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.825852289 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.836941934 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.827967214 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.837442457 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.828348822 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.828056202 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.83050086 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.836009186 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.826940434 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.826895052 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.82901715 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.825781282 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.823676869 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.829133828 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.827493674 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.827326346 seconds)
  done (took 49.314105014 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.820943283 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.976907495 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.058374613 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.838403732 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.824777883 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.828311545 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.83885176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.829970862 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.826823392 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.825506439 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.933081677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.828426331 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.842303969 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.061747967 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.834301288 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.82324665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.825299173 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.825956618 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.984719472 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836250034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.840715012 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.830521409 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.841002599 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.838436883 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.82660365 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.82393605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.830910104 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.282714342 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.833075746 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.931074394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.867429472 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.843670217 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.227530767 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.068789537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.87328416 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.82983563 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.82542806 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939217981 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.834238331 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.825183755 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.84144868 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.829530612 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.058911673 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.344167714 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.83639079 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.825899534 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.29570101 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.948616863 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.865449776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.836249175 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065616644 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.839759883 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.827916727 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.826625387 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.861700223 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.831826086 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.825624753 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.187535445 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.836685368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.841173972 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.832131024 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.827214168 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.991989449 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.834516724 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.979898021 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.833465916 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.831820378 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.828220521 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.064435984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.837666207 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.358409714 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.835731791 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.82570838 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.934686126 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.984231803 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.31622075 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.835548971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.994306815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.248330125 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.846519459 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.832994895 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.275405839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.851122651 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.833239865 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.82850942 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.826401474 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.82491774 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.86825286 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.841205317 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.277567766 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.358683623 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.197571803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.851186522 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.840695234 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.828006657 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.183884361 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.833136426 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.827822962 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.057097292 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.364143836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.83941045 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.834922185 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.339359635 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.839421604 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.844819942 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.833017103 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.06963267 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.838810921 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.870317569 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.827820175 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.834660554 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.83260817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.844769677 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.831786354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.82773572 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.333231014 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.95374559 seconds)
  done (took 227.100638375 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.830087884 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.826427651 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.825246664 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.826080286 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.822874566 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.825135032 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.82467272 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.823966426 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.825061906 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.824314596 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.824582729 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.828512972 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.827071157 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.832350009 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.860016291 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.827049268 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.430342217 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.823758221 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.826113816 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.82520861 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.46729124 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.829318116 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.826149465 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.826533203 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.824180983 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.828589353 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.832065309 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.862976258 seconds)
  done (took 166.21839782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.827301224 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.934459316 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.84033808 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.853207121 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.832164157 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.828440551 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.922169332 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.843415176 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.834035758 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.826253588 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.826498296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.884869686 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.835249838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.923064714 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.856987854 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.929729815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.927368804 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.832804203 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.827472406 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.828750284 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.855025251 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.835163165 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.88466729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.943950108 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.840618165 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.935797778 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.842143377 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.828076736 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.826677083 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.934876897 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.840556086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.885052098 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.851699722 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.843887384 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.94327275 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.936490996 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.929948997 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.929256316 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.833380349 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.828228046 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.828876603 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.831282618 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.936340337 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.84186891 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.830959594 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.93824135 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.841166805 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.829942555 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.830304667 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.829957463 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.840579129 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.848637024 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.892633096 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.949914761 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.857677993 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.850446633 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.92471733 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.953156654 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.832439713 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.925771446 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.835964685 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939002104 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.845078291 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.830484042 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.831184197 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.83249812 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.857424301 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.930999203 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.931244952 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.837198865 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.925158033 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.86231462 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.835823444 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.830703182 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.830505175 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.939128435 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.939674361 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.862808199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.862716439 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.855877733 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.839569587 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.830082667 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.831896545 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.847755248 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.834902002 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.939540382 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.940355055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.835969501 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.832287058 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.831524359 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.830913979 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.853399941 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.947483942 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.861259167 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.931362944 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.893516093 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.899086685 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.840222096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.842485204 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.837135837 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.89362074 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.84215494 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.842283173 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.129194926 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.889269402 seconds)
  done (took 198.253860609 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.223723774 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.878085136 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.885489255 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.150932837 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.168716157 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.722743505 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.871295321 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.876643191 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.900262474 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.058262242 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.948798313 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.893367317 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.862302691 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.852967528 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.87517157 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.898243124 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.884355706 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.208463224 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.079477516 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.039454608 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.861020533 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.143393053 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.181387878 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.447514115 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.922971224 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.275212944 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.428353202 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.002348697 seconds)
  done (took 60.309976368 seconds)
done (took 802.965530915 seconds)
SAVING RESULT...
DONE!
