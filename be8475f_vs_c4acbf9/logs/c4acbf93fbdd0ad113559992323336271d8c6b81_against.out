cset: moving following pidspec: 27378
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.240229242 seconds)
loading group "string"... done (took 0.578874496 seconds)
loading group "linalg"... done (took 8.138034674 seconds)
loading group "parallel"... done (took 0.170898976 seconds)
loading group "find"... done (took 1.217936306 seconds)
loading group "tuple"... done (took 1.972201719 seconds)
loading group "dates"... done (took 1.317525303 seconds)
loading group "micro"... done (took 0.19943158 seconds)
loading group "io"... done (took 0.937691726 seconds)
loading group "scalar"... done (took 39.567351227 seconds)
loading group "sparse"... done (took 11.94501481 seconds)
loading group "broadcast"... done (took 0.978902171 seconds)
loading group "union"... done (took 13.644451618 seconds)
loading group "simd"... done (took 4.948322382 seconds)
loading group "random"... done (took 9.121181652 seconds)
loading group "problem"... done (took 1.822817671 seconds)
loading group "array"... done (took 21.468034328 seconds)
loading group "misc"... done (took 1.727894864 seconds)
loading group "sort"... done (took 3.354329064 seconds)
loading group "collection"... done (took 18.168845844 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540307663 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126080693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137379987 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121173488 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150649485 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117550423 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125170008 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084861657 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.856652886 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151314217 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115286498 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.437779799 seconds)
done (took 5.375764098 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175108637 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088094895 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079684819 seconds)
  done (took 1.245075164 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066292431 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128113615 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067856037 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067720873 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068360354 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07036024 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067307772 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067104553 seconds)
  done (took 1.614772533 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073607834 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070056719 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067171398 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068583515 seconds)
  done (took 1.358952928 seconds)
done (took 5.548841719 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802065593 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211002721 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192000833 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.415170547 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136690911 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181034089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64734411 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314357172 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207095252 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0951958 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114107992 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349089777 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124657669 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649694199 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081776494 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09673355 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142991742 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444829169 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072780843 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086289738 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092985424 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131105235 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08586456 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077038425 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.154531007 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071030527 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144512169 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084344859 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069582649 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218978625 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175362963 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657544409 seconds)
  done (took 10.444167474 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102654272 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100035206 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069277787 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125705725 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098401442 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071381026 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076333009 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068977388 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090889718 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129356042 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091706878 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109302968 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06671172 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070046041 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083668186 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197780655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081156738 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082065859 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069132938 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08216211 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.1085541 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079164649 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080792012 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080608388 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130362623 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17421411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096901221 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099003006 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067287011 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08236901 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115554265 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130401538 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067661017 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06686453 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125883949 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095527294 seconds)
  done (took 4.588221931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107353094 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15366952 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090527809 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14105273 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066116034 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112349916 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066586611 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083594264 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238675714 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.387888926 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628324472 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119958705 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122986679 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117541567 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104704217 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071003546 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069621141 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070661777 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.525106127 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099108094 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113132459 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088349369 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070796892 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069197225 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065658889 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072553089 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064555819 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069102483 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088639488 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07660377 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064409217 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334217667 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129218005 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06935339 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.958016427 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168022032 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069216362 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106678181 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166555491 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095442601 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142815983 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068688702 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.200269352 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163784591 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065872518 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072675336 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067649751 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086147327 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109871217 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121563962 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066043725 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067316055 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169990642 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06591044 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085676182 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.237480849 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153639 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066814976 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302770124 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09523965 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072588071 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066512724 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193210522 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122562412 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069212876 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068675919 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069716361 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069596532 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380712117 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066490174 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.978465 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071266817 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077001139 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071233904 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071735487 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079661656 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079767967 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093601204 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068079699 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074818716 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0672115 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066694617 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067359665 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064946822 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094020374 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.39436714 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067718912 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073250341 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065426249 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094860048 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101836447 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067485092 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066752142 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102633519 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071268497 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067041421 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06873418 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119321133 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071397959 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113510835 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.172515371 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.068046627 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099520553 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070952755 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101864313 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08030303 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072243634 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.472020708 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066678614 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073297248 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067363881 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065403035 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067562307 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068884269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079743083 seconds)
  done (took 22.257133274 seconds)
done (took 39.475160964 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242654191 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083911502 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083533133 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084018543 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083937689 seconds)
  done (took 1.747902655 seconds)
done (took 2.899150161 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127504141 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100019701 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065183695 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097964848 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065031315 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104183625 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10382462 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083718581 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100602379 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065213162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097861912 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065253431 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065027852 seconds)
  done (took 2.311509908 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082994022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082857152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069587145 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082558138 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062781867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08195527 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081316405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088350455 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081265696 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072576647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063219182 seconds)
  done (took 1.995296875 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082635177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083546561 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07055477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082106369 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063126636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081912367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081581403 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085483593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081879144 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0740948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063504793 seconds)
  done (took 1.990465093 seconds)
done (took 7.43781029 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077118433 seconds)
  done (took 1.207739185 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.535276874 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.597130792 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078886163 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1008025 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192904609 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108945186 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235639552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083195713 seconds)
  done (took 8.233980985 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106689947 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071357108 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069999059 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07070099 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070430068 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070981784 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070534011 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069226146 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069820837 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070812843 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.0709702 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070526541 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069361554 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069434089 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070051334 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069336533 seconds)
  done (took 2.376111137 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098100604 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096161332 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073821439 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075080061 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073649782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072616765 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074551102 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074185789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071824905 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073921645 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075887179 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073976087 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073928506 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064669548 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074954427 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076773742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071587148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074689426 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075710965 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0760778 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076157181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0650369 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074304566 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075412583 seconds)
  done (took 3.050431133 seconds)
done (took 16.010240835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116909253 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079444937 seconds)
  done (took 1.329931243 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079224447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080489119 seconds)
  done (took 1.305343263 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078230203 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063592335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084219216 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074186039 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063897056 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063455439 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083026119 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064215813 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063399706 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063712686 seconds)
  done (took 1.847036301 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065805349 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074017908 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069507855 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079207523 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070571852 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06508912 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068859318 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065529121 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073903962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063899481 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06889805 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084040182 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068758412 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085015749 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069349379 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068481209 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070369694 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067425364 seconds)
  done (took 2.426027116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064053338 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065042478 seconds)
  done (took 1.282966442 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066938917 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06404627 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067024354 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067461257 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063663337 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063076888 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063745227 seconds)
  done (took 1.606124308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400103622 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122191784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329638945 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070763433 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079552239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257008223 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065018587 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069741718 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069870386 seconds)
  done (took 2.657083409 seconds)
done (took 13.606213753 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08141842 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086766772 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098706953 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412991195 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093772845 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0682439 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114297806 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179282716 seconds)
done (took 2.296269286 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226952095 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.929702178 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.48390807 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208737459 seconds)
  done (took 2.776486298 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344637708 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081602916 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076925192 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067593762 seconds)
  done (took 1.731031794 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067312582 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071587125 seconds)
  done (took 1.299321517 seconds)
done (took 7.196901142 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065821148 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06498879 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065822299 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064881865 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.06559593 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065090598 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065033719 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06551678 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090370938 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064536528 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065332481 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065085304 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065673874 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065589964 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06495652 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065337444 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065455224 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066015939 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064722646 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065297162 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065091172 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065418192 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065261585 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064934338 seconds)
  done (took 2.787904959 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081694296 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067807512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069227673 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068615283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070053898 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069076312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068798705 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067747774 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068797514 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066930759 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069422759 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069728927 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066917559 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069550401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066829691 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069261192 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069101255 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067489744 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066922466 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069209154 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068554849 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066942557 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069215712 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068354673 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069312369 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069232682 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066862274 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06731424 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068506358 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069059767 seconds)
  done (took 3.234427304 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068393715 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061912943 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062101527 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071096201 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061758664 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061947394 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061145379 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062129351 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062376378 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061611081 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062702785 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061155748 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061498146 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062353651 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062087345 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065914423 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078869641 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061444108 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061804567 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062051292 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06585184 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061424217 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061700403 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064054676 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061493894 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060975147 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062000661 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061558305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061976094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061837252 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065264923 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06570903 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061277417 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066483562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065695409 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061347002 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066458094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060955579 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061927543 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061186967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061012145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061450324 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061802925 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071147699 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06166196 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063361799 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061352871 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06259096 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062177334 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063459886 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061264 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061063634 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063653704 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062908858 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066391563 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061099432 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062425098 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060975165 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061913807 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061438401 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06168567 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060889958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064994448 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06196164 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078763579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07027633 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061614274 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063048969 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062069776 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064480659 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062813999 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076819429 seconds)
  done (took 5.745940743 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085048657 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08870605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066716124 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06634679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062569439 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062337749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070173641 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062106633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066867789 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081329078 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062371206 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066998457 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066784066 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066257287 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062527201 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067210492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070455793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062329074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06197521 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066369491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06242434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070039075 seconds)
  done (took 2.682075244 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147257228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068355951 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105834079 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072513777 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07112426 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072696002 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068214556 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06792755 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068139663 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068625113 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068824315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068387522 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070742049 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068974331 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068816822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068483748 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069000402 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068640327 seconds)
  done (took 2.538882994 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078674859 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068496929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087677049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067165764 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067306099 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067302346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071570828 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072408175 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067431013 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067550066 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072036575 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067064719 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067317199 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067496491 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067525774 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067928321 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06748343 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067831067 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072857783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071323495 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071774593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07208448 seconds)
  done (took 2.725979923 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078887473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076317772 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083342885 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069407045 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062088529 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062182087 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068045926 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066836952 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067875097 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066379528 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066911718 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062739316 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069390499 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067188509 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069329158 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066808815 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066357399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067303274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066588872 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062357979 seconds)
  done (took 2.545046601 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084401061 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065549954 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065503294 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071334712 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065291589 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065005523 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071579893 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065653656 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065248746 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085960706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065316757 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06601801 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071738164 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069410517 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065129587 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071641893 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074149214 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071508104 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065518505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065433706 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086199043 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065235914 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071576277 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065576298 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065365671 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065623492 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065430738 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06917014 seconds)
  done (took 3.124740931 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065583044 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06471617 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065408564 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065284688 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064805274 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065261227 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065358893 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065587946 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065254391 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06615984 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065228233 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065084226 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065039244 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064910717 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065365936 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06543677 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064978607 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065689897 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065557973 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065273253 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065039816 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064884225 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064926591 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065789651 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065782789 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064810794 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064819132 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064853421 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065263475 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065075335 seconds)
  done (took 3.141575543 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075711475 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073402529 seconds)
  done (took 1.334363732 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064260729 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080174344 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061547007 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073013515 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07039373 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06531134 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071528109 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070848027 seconds)
  done (took 1.736942283 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085567259 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076282156 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065139321 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076058042 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075796869 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085402404 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123051793 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064499059 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074776816 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065225933 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08252256 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066641408 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074348899 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069112374 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074791818 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073605042 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062130916 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068769565 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065673808 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062314375 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064607281 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077840079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073916122 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062375528 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069615854 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091602801 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080079574 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063841067 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070942152 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077066448 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074184641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061124357 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064253926 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064796322 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062567115 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074667072 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082777336 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071039422 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076801384 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06457502 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071895154 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061910443 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072283612 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074814529 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079937633 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063870534 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063786734 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061991501 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064654114 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069748121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06193852 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068488004 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061284889 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075960251 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071312148 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078883208 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062803349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069616369 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070316345 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07072115 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074995379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070306713 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073696384 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063136839 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079130453 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073549125 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07575573 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062326971 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061264627 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062632487 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07823482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092534871 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073545885 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064750989 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06455409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062400844 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071045513 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064441619 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073041553 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075447844 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064067575 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067974432 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075502181 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068051195 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069972958 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069717729 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062611078 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066998815 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065121307 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08313271 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06235017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062125408 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065441585 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081503999 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070457947 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.062919768 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064696524 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075091453 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060868973 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063915528 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063950974 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069163015 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076682451 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067560632 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068045675 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076880555 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07286015 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069492466 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070217084 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061069747 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064552953 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066457161 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075593408 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061272604 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071019864 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068116956 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063925467 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076135355 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062301515 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063391797 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075835031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074257817 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06143797 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060180123 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06981448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062594534 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065362205 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07600851 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061770327 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060992422 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061117086 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070424626 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063001789 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07016257 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066175552 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06987455 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060272167 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060737869 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.195438684 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078096028 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067549072 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071837862 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07544946 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07161644 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063936712 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076867056 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071813432 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067265906 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074215334 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069335276 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062402844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066905578 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071033015 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06290936 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071827915 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067230269 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070615295 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064704063 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063537024 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070130533 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064801744 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067246846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069646181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063283632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079853684 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070896387 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062352071 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062557391 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071545473 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065965218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063513004 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067069723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070933361 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065013107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063036987 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063993613 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070505769 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071692781 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067604018 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064726861 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073593086 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081532757 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064430525 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071367424 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063569199 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064678226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065135251 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078331039 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074462196 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067778929 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070687652 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061353536 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073301943 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076439127 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066525164 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062573997 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06672674 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068014028 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075306651 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067367487 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064307076 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062617395 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07026418 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066622492 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070775083 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063478613 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066645741 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06923267 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062430713 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069420432 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064382834 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078473061 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071564361 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061962697 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066277003 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062653858 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075743091 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062366765 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065332717 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067398533 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064717749 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063524669 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070748032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062507838 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076665304 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076337869 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069193437 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066443451 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06365692 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076148029 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069574168 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072447849 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070977557 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073432436 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078987369 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066655601 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071083548 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078777764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063906246 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061146229 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076526129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062759115 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062962977 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063126078 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063248192 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071431594 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070912119 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074032034 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061569315 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070824049 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062363653 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06704459 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062658999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072523419 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071337765 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068481365 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075751207 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064538106 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063727157 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071043472 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063120263 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064153888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064673456 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070588361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063947502 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069130274 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065388172 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068797763 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064971452 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060788157 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068658432 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062605732 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068290295 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071571232 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061689314 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068463758 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069125157 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062855941 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068448212 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065876198 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065189315 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069016044 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.201771848 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070659245 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071740011 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063081911 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076555462 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063612886 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076981343 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07024348 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061692801 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069910951 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070326752 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069031935 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065346302 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064899435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071094992 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063908316 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071242168 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077231115 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066140809 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079536739 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074540361 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070661228 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071813199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069983509 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070289794 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066697051 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06890354 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065439395 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069710293 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064254819 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073027491 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071345722 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069151454 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070883733 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065496016 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070069637 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064720526 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061995035 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066745868 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067857802 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064486086 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077221003 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065226224 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067699139 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063364647 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065087673 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064024995 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061843277 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070778959 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071728841 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064860255 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074615312 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06659605 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070729087 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080074433 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061959983 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063048391 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062639211 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066622405 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076996917 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064580583 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077474318 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068989938 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066862674 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061903204 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064534577 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063214291 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061754923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062479992 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072435167 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066493178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063104986 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064144313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070939479 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064938528 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076701496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063306736 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06825404 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064092927 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061509392 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066570463 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066594532 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071168148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064614141 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065401071 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061677168 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063831694 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068436899 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070112788 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063580171 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069486659 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075821629 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063432873 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070498982 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066288248 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061737282 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070737146 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064129957 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063522998 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06628929 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07140162 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07130084 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064783397 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07772204 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066348447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06992194 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064045925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061926504 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063603347 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063724373 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063409249 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067104532 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064871188 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077505614 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062401608 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070411056 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069808542 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067878542 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073745153 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064452229 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070222053 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068997819 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06581334 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070467538 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077565131 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067697794 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071148683 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064857845 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069409438 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072616384 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065251923 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074382546 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068908635 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063329378 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068543545 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064438296 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062806684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06247655 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061930687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072640032 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062787835 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064769771 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065394139 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060285602 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066409731 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06486927 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.212024117 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072573526 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071996787 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063056979 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063054743 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066348724 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066440117 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070330042 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071221418 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07361129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071050304 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068438715 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063896811 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07813507 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073950921 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072339969 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06671259 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072208824 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065174964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07165864 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068639314 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069552476 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065418113 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072860277 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070601319 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067270406 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074563486 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073003226 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065559955 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070188788 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070994932 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069127972 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063243864 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064773278 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07115759 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073499342 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071489883 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064272991 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080085361 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065467047 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069252267 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067611415 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063973764 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073526386 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062493586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070526593 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065122948 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064924578 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062488229 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066894963 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065880986 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071205228 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066898121 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062417513 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079937195 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078809885 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070536971 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063728696 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063793121 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062900948 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06269566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066901802 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06560795 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070396679 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079496132 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066811657 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066573671 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062163737 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064217131 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071091875 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072063112 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062762839 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062758517 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066933129 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070153272 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075659211 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064083435 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063904375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071569187 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070819609 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062477916 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066700183 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061475595 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071649957 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080876874 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064661503 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070082303 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074061896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077523134 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064900582 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062488253 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064330976 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070030873 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069864967 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064901596 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065127248 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083025492 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071148982 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066372038 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063006991 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071100584 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066696401 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077964318 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064819622 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066830178 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073494242 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070490355 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0708669 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074142182 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075072709 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070146004 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070261104 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06303466 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069660635 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063144577 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066667665 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064645228 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064823614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068472045 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070714735 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066854336 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081614794 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078139307 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066543513 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062046717 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06669828 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066758142 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062551754 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064806582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062566847 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062368753 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061926875 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062697327 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069291216 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072025622 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067653605 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063082302 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062602603 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060585377 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072440702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069121547 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068826957 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06013216 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.062518317 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063364393 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070624436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.200082534 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06745234 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071304581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070960588 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070733042 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063230828 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076591442 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064262542 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070842776 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06697421 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064561234 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065311258 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072735758 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068900533 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065446117 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071293684 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072609657 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066212205 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06348221 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062290813 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074208243 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062742327 seconds)
  done (took 42.560882553 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101355926 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064573242 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062772642 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063080495 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072612717 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064480131 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062912287 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063733913 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064080647 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065615477 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078520081 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062839849 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0699586 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077775594 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072504321 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06691916 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062971516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063890974 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062770911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06370505 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070451662 seconds)
  done (took 2.698433028 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070389194 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078665223 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074954786 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07933682 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071029188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067367488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07493476 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067352733 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075335372 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072659578 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075533084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067582812 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072473369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072720121 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07337244 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067851671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076085784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072211274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0679285 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075089391 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067921512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075681187 seconds)
  done (took 2.86455577 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064206164 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063528007 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070002164 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062144578 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063547388 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062357167 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066464021 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062721491 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066259145 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066440597 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065934743 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066401483 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070427907 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061871426 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067073914 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061974121 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106907826 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066466807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06342261 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064337135 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062193513 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070870181 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062376165 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062848629 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066790269 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06634636 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064541424 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061826735 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063735062 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066031175 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063233465 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06140884 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069902203 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069153892 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065762819 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065454496 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063194876 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06386283 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061858947 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06200036 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072099111 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06238154 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063781111 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07064077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061846617 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061680268 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07023068 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063343484 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061729689 seconds)
  done (took 4.493327593 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07561007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110700373 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068392013 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090871267 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076109604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07017855 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068041672 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092228655 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063722254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064741555 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077897786 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078071629 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06569874 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067443203 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070130575 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065735927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067017103 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064883354 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069009474 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064995876 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069016982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069887769 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076575879 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077848285 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066847979 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0651777 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065422972 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06701741 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076576607 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069546793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068056025 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067905197 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077008792 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071313289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065098614 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065235106 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077948916 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066223803 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06526098 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063741245 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064899738 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066944373 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069833392 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077897481 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065788343 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070768129 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065444399 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063016737 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076922064 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065049268 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069639846 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077892885 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06647944 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065948476 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066906587 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076593079 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065670192 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063935217 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065780029 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076559479 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063729246 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066429976 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077580223 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06531494 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069032985 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077717124 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070763731 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066503527 seconds)
  done (took 6.184386043 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072806175 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095298676 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079282971 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079478325 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07331296 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073642961 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074131114 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073689696 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074218343 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077770785 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074166076 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11480546 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069428144 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075330516 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073361464 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073876055 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073360808 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073933115 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073685633 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073205058 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073726681 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079290458 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073234155 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079659583 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076485075 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069118256 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073285823 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073851853 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079580319 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07318519 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07686692 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073234163 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073433338 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079872997 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076442587 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073178474 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063960559 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072977535 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073764628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073305028 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069338962 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08028697 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073500228 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069787788 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073392416 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07314246 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079300346 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07680885 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075195104 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077041885 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073174609 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079567048 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073232473 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073308376 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079392646 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082389186 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078992268 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079436764 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073234185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079567303 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079532235 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081948182 seconds)
  done (took 6.015079077 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078718888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071181483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081811812 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06212801 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062418714 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072731684 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062697741 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064758017 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070539545 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070712411 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072385277 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07289599 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074878216 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072458434 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073209702 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074890472 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072236388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07211584 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070666486 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072371147 seconds)
  done (took 2.722308859 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076463278 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081720948 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068697181 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072061249 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0676084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072398798 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06708994 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068178298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068806544 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067898272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073833698 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074196471 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068193767 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072675662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073931859 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072298442 seconds)
  done (took 2.431694912 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.069954186 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071292217 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077347129 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063529476 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067209762 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062759419 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063237176 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062003109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063386038 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076670614 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063383438 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074648736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063477187 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062263983 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063058422 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069301091 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063244858 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063913405 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063673449 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076964091 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070444718 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064820554 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067744652 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064467078 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068933014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071108178 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065015448 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067267866 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063663103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064121871 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069345299 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070966348 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063543558 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064549145 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062621314 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064002356 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063408777 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064093451 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069252838 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063667587 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079824594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068795789 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063404944 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064425889 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062542566 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063880004 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062787549 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069283521 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063794116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068984428 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063874077 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066243271 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063882237 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071254402 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0660028 seconds)
  done (took 4.949594672 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079039068 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068058566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062160687 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062219351 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067118495 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068340727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06727008 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067634231 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068431099 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062334414 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068542415 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067341259 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068476232 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06870379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068631519 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068161611 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061947848 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06769662 seconds)
  done (took 2.510850557 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073991096 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067457067 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071724869 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067400121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067106383 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066380391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062255934 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062851835 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062974837 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067028568 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06701992 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06696576 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062199367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066794266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066907388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067209583 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06672123 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062782368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067483711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062331735 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066821293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063212722 seconds)
  done (took 2.744159105 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095815207 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084114128 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.141120641 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079472792 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087326847 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072591984 seconds)
  done (took 1.850222375 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093007271 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098116531 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066801089 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067329531 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073368971 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070699843 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071125746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071082306 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075455937 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07537556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071029238 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075304911 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075048893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077247573 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073103309 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07562642 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0707388 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071596252 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067465611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08021578 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070987667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075448628 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071281358 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070636968 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070897461 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077417018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075142068 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075931227 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071215275 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075418752 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073167062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070766376 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075523433 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075624523 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067267248 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07496334 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071190032 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079841707 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073253364 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077424354 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067532257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073077494 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07511053 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074610805 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075537003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070825439 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075140715 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071016088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071537587 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081666351 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073082869 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077568644 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072796809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07532454 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075124536 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081579627 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075244555 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07649352 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07273302 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075201095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076650018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072589099 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076748861 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075467521 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073841496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077031274 seconds)
  done (took 6.209595541 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104746752 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068283965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071967834 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075445446 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076894901 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070845831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071334491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070960514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070862162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068444355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105944892 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071172707 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077795886 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077487986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071182607 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070953143 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071180984 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077092149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068030175 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081640429 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071169489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077248467 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077159617 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077724318 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075904935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073107561 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070785828 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070818468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070850474 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071518029 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075059625 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071284406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077348084 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068051032 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077190618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070762518 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071174682 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074476127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070763818 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073418237 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077485468 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079822346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070963344 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070726835 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075272188 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070645961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070661878 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067631629 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070350743 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067871831 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075256213 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07556196 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075648755 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077151632 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070614598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070793844 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070388973 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070694894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071440393 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072845183 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076628109 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072639375 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081847758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071014783 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071063747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076864809 seconds)
  done (took 6.202272307 seconds)
done (took 127.2008854 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208749519 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184446294 seconds)
  done (took 1.673377041 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074816139 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104933108 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082829758 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134575807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071587003 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10534383 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104855838 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08383854 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071694945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071702167 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071290854 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074325615 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137455759 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071863606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071553016 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074175076 seconds)
  done (took 2.703343698 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104485858 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168818506 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10955241 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069046758 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104240715 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077299183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069863631 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083290767 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076243242 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071055271 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076926895 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075546261 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.074217152 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075835311 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075984718 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077097376 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070819811 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076887155 seconds)
  done (took 2.840355494 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103862539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094177116 seconds)
  done (took 1.505011795 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159905893 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106153154 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148183063 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352648482 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156559664 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.142522827 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141694404 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138895399 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113455559 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1349075 seconds)
  done (took 2.895235608 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104019633 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182347738 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297944139 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120730174 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076457774 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.107720795 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122775452 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082372899 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084123826 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083731235 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083771198 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079081401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103451123 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077047239 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076367515 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078261654 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106212034 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075370838 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075987858 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078833482 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106878678 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070446042 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076995694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075118936 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081254082 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080753077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071594412 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070048853 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078514459 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075890847 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07961638 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.104127976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080873884 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105884595 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074683108 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106513708 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078310813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076309642 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075889666 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076725942 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080340762 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080997715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078800456 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077938789 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071392107 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078172882 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070872929 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069996804 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080002894 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071116574 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080362237 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079212465 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106174931 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071599087 seconds)
  done (took 6.167973644 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109467618 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108329935 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071411851 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113581854 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10471696 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070967007 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105925962 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099289712 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107784099 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071206325 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070108877 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070985139 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079549433 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081063458 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116063686 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108388445 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073362399 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070577092 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108164599 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107945376 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07020925 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102674198 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098454733 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107719475 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069394085 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070857767 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06947389 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070974231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076921419 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078030189 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069661703 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079129273 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083486853 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077163849 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068703885 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06944659 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069664737 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078822283 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079120405 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078102358 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076683486 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069048102 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068943696 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070367865 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070494152 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06884134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077423234 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078926973 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077478002 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069805409 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071153031 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069482095 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07025738 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078312202 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07606493 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07926577 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078801639 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069244254 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069283888 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07220039 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079093717 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078153211 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077879703 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070213613 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078522821 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069069118 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079559599 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082686456 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069875318 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073034212 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06932557 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069883614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070843 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076572177 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076461661 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070256837 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068957139 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068662661 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078264006 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076648539 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068946085 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07577148 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068062911 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068894434 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070352713 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070605006 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076015977 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077987697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070384966 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069729158 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069840117 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06922984 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068755973 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075925505 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078156684 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07798597 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077060463 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07044598 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07790619 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077045184 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070774523 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077679429 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068776983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070250979 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070271438 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077146352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076461616 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078173876 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069014973 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06884995 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076165619 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079017369 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068627524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07463838 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076857072 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075628116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066923349 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077626961 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067844059 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076313976 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067754948 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211958077 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070967022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079154022 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070546974 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069875585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070685423 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07845582 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071131009 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069726528 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070183897 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070727491 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077565851 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081208825 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071768684 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078041382 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077651525 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071583884 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078151799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069960594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078631072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070276528 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070520979 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068923366 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080787501 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07028028 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069589589 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070396434 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078717228 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069882631 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079619854 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077141122 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069286435 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080732116 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079405312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077347043 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078745047 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071042228 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070019893 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069280054 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069587537 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076803261 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078236709 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070927478 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069805906 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07670976 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07893375 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0687102 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077366358 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077164551 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077679182 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070376663 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069984214 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079841462 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07993354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077171531 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077667372 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077963937 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06982511 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076943039 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077769416 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070028398 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084014185 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070148902 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081259174 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077641103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075994667 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078505745 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079457635 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079064337 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079341599 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082474301 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069388323 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069656353 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078412432 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069480018 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069420888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077064429 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070617469 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071274025 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081757062 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070013285 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078922115 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06862635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078294627 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068341771 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070320632 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082887242 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069269509 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071532046 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077748386 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070159674 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076949168 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0790858 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076790305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069499572 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072935318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077946003 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078130579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069030458 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069073305 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070563865 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076980257 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075901654 seconds)
  done (took 18.504771658 seconds)
done (took 37.605768575 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209595001 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156017405 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187553382 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11605909 seconds)
  done (took 2.075765408 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108335086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098328731 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087265887 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065885641 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093653193 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066458791 seconds)
  done (took 1.861665451 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297209134 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203208784 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181300131 seconds)
  done (took 2.021229891 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209377875 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189560276 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461808459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284474306 seconds)
  done (took 2.580716577 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141354755 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082220748 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064539382 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082520933 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123127123 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148884014 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093477407 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117074916 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075663509 seconds)
  done (took 2.323091733 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147587202 seconds)
done (took 12.369722664 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.099232674 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.214483431 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.433577088 seconds)
    (4/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.176120991 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100695689 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072581211 seconds)
    (7/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.135763464 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068874369 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.166475932 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127322596 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.266570556 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.144950849 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075172633 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076485753 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067154404 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075501086 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 0.15864727 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07475007 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.195885368 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.173836903 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084857464 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074983492 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208052101 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074923876 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125714357 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103909905 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18204757 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.228414458 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084951031 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136373163 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147543417 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085227611 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087809077 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100961342 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.200800479 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088636638 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.165656951 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0811881 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230359155 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074954158 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134224142 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065292184 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086029005 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090796046 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065351023 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073829777 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.156462446 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.179170074 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127787827 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.224568951 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078388791 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.180623411 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084271809 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.066751051 seconds)
    (55/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.126117256 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066016577 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083558723 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066079695 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.202337581 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072945037 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065391242 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074258461 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142180285 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065580608 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077258404 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066389526 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078118869 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064818187 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105010682 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178624633 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091559463 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19291654 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173317885 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066439165 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216491468 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215346513 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076606819 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17665366 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175429187 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092970142 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106423562 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065319162 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167420564 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181552122 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069886246 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.200863249 seconds)
    (87/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07083782 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089038997 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091447492 seconds)
    (90/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.215752657 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068540116 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175635839 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17364443 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135570449 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139794892 seconds)
    (96/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091002572 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075673332 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067761631 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074770651 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067551768 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073360934 seconds)
    (102/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.139008118 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094030216 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066445407 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075605836 seconds)
    (106/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067106716 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122495281 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075688275 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126797202 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077061103 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088069684 seconds)
    (112/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079633314 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074893964 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172212178 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075623016 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073157225 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080735608 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16633991 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077123035 seconds)
    (120/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094026552 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08885745 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074656254 seconds)
    (123/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.138299807 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07821608 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06677265 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0768183 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144694752 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067259933 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067119352 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076153444 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213922825 seconds)
    (132/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065921951 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066536395 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09037221 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074984622 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173501323 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066346656 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070934594 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076956425 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168890166 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083896645 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.116819038 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108596645 seconds)
    (144/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066577545 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065897632 seconds)
    (146/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074208794 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067096967 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068989245 seconds)
    (149/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.194156906 seconds)
    (150/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079026145 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074810125 seconds)
    (152/309) benchmarking ("sort", Float64, false)...
    done (took 0.131609349 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090366839 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137689107 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082123423 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065004673 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19596425 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065699156 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077848944 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.078420197 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074016377 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073662346 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075291056 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072742521 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065823377 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066805478 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06733361 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141258203 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066676696 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067279494 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066665839 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066821281 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192675315 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091330347 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078202037 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087398549 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135314448 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124471131 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07765341 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066396852 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067651868 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17107701 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072410541 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19769757 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065658745 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090567356 seconds)
    (187/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078744637 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130335849 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15859495 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090099169 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.163200044 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067029567 seconds)
    (193/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066298191 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112636544 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191948964 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068729529 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089647908 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120799111 seconds)
    (199/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066175215 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.176425905 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087179197 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072712274 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065575288 seconds)
    (204/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071335354 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072057308 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091266173 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071792272 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 0.293676902 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.069858443 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.06827879 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068826449 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076941786 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081649222 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068042249 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077745541 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088927434 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075492637 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080346208 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182774327 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137290933 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067446082 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16862841 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068195205 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068203235 seconds)
    (225/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084298227 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068409162 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074759066 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069196892 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170010167 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066675767 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065909797 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074856239 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066111671 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066277052 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080098355 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06779495 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066587833 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067964739 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178610224 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123780025 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172254453 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06812429 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066786679 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078253124 seconds)
    (245/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067147016 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065577565 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067802011 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070723902 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065927901 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080381588 seconds)
    (251/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.126604075 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067015101 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124162178 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066874755 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119622228 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066117279 seconds)
    (257/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068152842 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074533659 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067686374 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066645293 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066684136 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066701249 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066100724 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076145404 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068074157 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072948975 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066558927 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066657161 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088823988 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069385178 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066684169 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076159234 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076417731 seconds)
    (274/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069615253 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072570938 seconds)
    (276/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065498179 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067818603 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118331898 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06968831 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075568057 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066207464 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066366657 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070521925 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067107235 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065875209 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087143727 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066231559 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066036876 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074675351 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066303413 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068563401 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066720642 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086500113 seconds)
    (294/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076787929 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079431345 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066009595 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072951653 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065255072 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073665245 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066666019 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066227036 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087240211 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068602252 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117430967 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073555717 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065837712 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06563346 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065685279 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070076112 seconds)
  done (took 32.89877379 seconds)
done (took 34.253592923 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086603884 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09850804 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073699185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092869931 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080721317 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09639237 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073977686 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078869448 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081014745 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080039571 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078825095 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072182995 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075381492 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075040173 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072949818 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096936567 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079814912 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074299274 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074143692 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066088517 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074339535 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066203176 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065835342 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072498916 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077493474 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07339258 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075320433 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075239009 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066597416 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066698064 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071147858 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074975321 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06624681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078361483 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075243929 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074607609 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076239262 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078146015 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065798636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066638779 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076587375 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066471052 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074263661 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072370812 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071003789 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073007135 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07442926 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078530013 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096854649 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070562377 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076493708 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076617632 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077456337 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071526613 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071592908 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074637247 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072062742 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096683954 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075104388 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070312098 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075719298 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075910284 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072473123 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074497275 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073982878 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076622271 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078361599 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072329919 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076221723 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072981527 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065706782 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074341432 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070531752 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066010699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077290411 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078703102 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065295186 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070134614 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07432331 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074771431 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068454662 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070642813 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065503454 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070669006 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070606779 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07224788 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071567611 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073101832 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066294279 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074819401 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073637258 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073820922 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065682001 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078936213 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066116571 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072447791 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066276653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065977583 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065546315 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070880316 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065546145 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070647047 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074793875 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065342431 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07054061 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079098022 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065916672 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073253208 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065375158 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066298129 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077386552 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076520232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066399375 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070818937 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065839223 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071263643 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065577201 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066057166 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065480205 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065824412 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070404624 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065825682 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070046946 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071217066 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078245219 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066039559 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071172339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070074635 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065777141 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072641596 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06615615 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06591026 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065464095 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07936168 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07006859 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.0659339 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071056414 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070265084 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073208151 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065307792 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073726956 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071096714 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069991023 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071420818 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064425443 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076363306 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069972778 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069889167 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064308765 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064843641 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06405459 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064478434 seconds)
done (took 12.508265211 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070313808 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117755973 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093152447 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093063516 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082717592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067488897 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074006484 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09238776 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068737406 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096403288 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088536089 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088152969 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109349642 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066367185 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066612614 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068082376 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068279277 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078561538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093519349 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089163215 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10545975 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066457542 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086023262 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086798983 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083106603 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087912744 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068392856 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067927485 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070870591 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08950399 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092037528 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069763875 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068048021 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089915842 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084665322 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079628053 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067540252 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075417553 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06767136 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067014872 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068851759 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08790164 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075076419 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074865654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068642877 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074616088 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068310112 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083242187 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087011897 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075139234 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08190734 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090818508 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070936674 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083084487 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066759661 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08282134 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076105007 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067536319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068397361 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072672878 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067216754 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070029425 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078717424 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075910926 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071219121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081546645 seconds)
  done (took 6.609977929 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085446625 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09460661 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083992694 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083813555 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066287776 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067467512 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067377816 seconds)
  done (took 1.987017897 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06965746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087631556 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090944607 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090965826 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081115398 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091542469 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07518705 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067276689 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09576812 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066524 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086817371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096976107 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070634662 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078834132 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09167618 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067438545 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091408413 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067388227 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067681094 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09138165 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071762121 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094165781 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07862779 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067574222 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079552799 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067377485 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100005852 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074891908 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069229979 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068758846 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068957055 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094151793 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07961862 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081830129 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068511961 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08261103 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080809209 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070909973 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078325209 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077050546 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080208505 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068372454 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066201699 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068704923 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069961 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078681748 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066342546 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068795657 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068425141 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086548987 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066087453 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079342284 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070829679 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073032544 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073282905 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072357789 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075364554 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068918302 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086885588 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068400253 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084167614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083155159 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080229003 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083491777 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067038281 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079558874 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080256688 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068475695 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069709909 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068768827 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08362676 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070720967 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069456961 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079145813 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067363835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091506474 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091016654 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067033012 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080316931 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06811191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068699278 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078590355 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090702268 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072430393 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068314814 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071353742 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069348305 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070315265 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066228393 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071628865 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068767737 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072487142 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068235924 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071112367 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070254667 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083645699 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066566853 seconds)
  done (took 8.824697522 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069758331 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068236923 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070248459 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068233057 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068368692 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068433113 seconds)
  done (took 1.874576732 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091678282 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068458685 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081545797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068533669 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103447326 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083782567 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083697218 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077403666 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081605195 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079858852 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083991191 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086937729 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088221703 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070976047 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083334961 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069242788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083304485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072534091 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.0796544 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070718645 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081224365 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070454518 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071174587 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088215255 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072028954 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069204802 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077412555 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07950223 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079940797 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077691412 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070440745 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07187469 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075623426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07723189 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083418423 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076461407 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068224935 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07437668 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071455573 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071494956 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086355542 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070241387 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070646796 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074520235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080123313 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075757823 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07430546 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076273379 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083065937 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074403025 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074732512 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06898784 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071948339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074781919 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075953906 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077597569 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074465032 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083326865 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070236728 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075942483 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068408494 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071785495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07718 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071831851 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075518614 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074552973 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076141571 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070659762 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070296702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068172931 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074379135 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068214238 seconds)
  done (took 6.9283572 seconds)
done (took 27.679669552 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.514286116 seconds)
  done (took 1.930734302 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613495493 seconds)
  done (took 2.058393645 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.562693998 seconds)
  done (took 8.003394509 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.414589663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482956952 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743032135 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134994886 seconds)
  done (took 3.263300902 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708582394 seconds)
  done (took 2.165815329 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238244656 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228912167 seconds)
  done (took 1.937605696 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349355926 seconds)
  done (took 1.796648777 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.078846346 seconds)
  done (took 2.529968268 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.239323941 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161143246 seconds)
  done (took 1.854828923 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446406299 seconds)
  done (took 1.899165423 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.216534574 seconds)
  done (took 5.672031237 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221302749 seconds)
  done (took 1.707348914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237235009 seconds)
  done (took 1.689084609 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.748953031 seconds)
  done (took 3.194935391 seconds)
done (took 41.159539565 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08330887 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086295119 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086318069 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082641325 seconds)
  done (took 1.768597967 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075352164 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071203869 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07559284 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071116386 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075041162 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071328975 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073027853 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073973071 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071018825 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071482558 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071170018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071566644 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073846931 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072771846 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069957836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074037175 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07510871 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071195022 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074287493 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071491426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069198812 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073955537 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074680298 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070319245 seconds)
  done (took 3.192439504 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078786052 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073651084 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076235004 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072612136 seconds)
  done (took 1.762223753 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077759284 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090131158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087149852 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07810335 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089521615 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084431852 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067648851 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067438872 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068913271 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077207806 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066973491 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093736541 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086916507 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077887774 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079461299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063981152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066231598 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086276934 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078144818 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078685067 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069480831 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077637883 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066806839 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087335864 seconds)
  done (took 3.325541055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08681131 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067177585 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08614367 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092033394 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093507218 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067290774 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084672038 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093987337 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129338171 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066686147 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072593727 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066773844 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104823631 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066983924 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085721329 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109420971 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112972203 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070363273 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099253055 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07000093 seconds)
  done (took 3.191874338 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084185619 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070465316 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071117003 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066703566 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076840338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073612081 seconds)
  done (took 1.910514788 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069082692 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068234141 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067989302 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06810614 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073293304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067870246 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067139878 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069263849 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06865666 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068349168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067950779 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066893378 seconds)
  done (took 2.286138748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193619972 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070764934 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071200149 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066479978 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072460166 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067221146 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08272843 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070095696 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094547956 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067801313 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067798504 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069897217 seconds)
  done (took 2.458942346 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192063999 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073826047 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221560181 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144182067 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101869626 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10958299 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111223087 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107960063 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132271362 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097059017 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152764805 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159010271 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103372471 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129295648 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088007526 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119863952 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142968741 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155051248 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099124753 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154513048 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134320703 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12154556 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141698082 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096312744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100573201 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111846974 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07209582 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076985747 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157385651 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122154702 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134687542 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104686365 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089154293 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164137152 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156049301 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130820244 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141371877 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081437691 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.122022677 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128610585 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193808462 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087249596 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150946199 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101374655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076974978 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123941615 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108193945 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113259886 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097974315 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085284558 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275208912 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172514262 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127654843 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084298056 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116564854 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10540873 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109877657 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114359007 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169017796 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151024642 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120710775 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069870411 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107308222 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14405629 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125576793 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104771368 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.11795913 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089990011 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123858785 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151565809 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117812768 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132141329 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111545826 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084479875 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114213327 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12976874 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11936015 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160769959 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117336281 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070902627 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115409214 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094655072 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077807398 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1422146 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073718267 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164169665 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095095584 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120237391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124384207 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104320403 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104766462 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148725707 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133628653 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100413895 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083899043 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098766749 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114196094 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136180846 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084059742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103165919 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109293217 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076883361 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125274805 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072407749 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113934247 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092040266 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112241688 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117384463 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075672863 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264507966 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10051558 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099952931 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123376843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15016774 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085387311 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079566276 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157319419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116428824 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101546434 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135372981 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150310291 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118486227 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094424387 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1373674 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163696659 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087537763 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153243837 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09906252 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081396348 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102542992 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117433614 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106292065 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117944695 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079238692 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114695341 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153269409 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072566416 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092877417 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126769897 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078815382 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077932564 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10077464 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099675378 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09352077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097275862 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100081107 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129169595 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116980601 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101364523 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117486167 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096457935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154303821 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084922709 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099565808 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100207637 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070665186 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12550378 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146705626 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076496661 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149414251 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116142921 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110619352 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112897478 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080541908 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128308815 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076093031 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070816394 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13049677 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107075865 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102483599 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.29128156 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110203841 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118969975 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115371181 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125593005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123703128 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123802108 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103004017 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086123941 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111099496 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123555955 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070879387 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089772687 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079984623 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100205673 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091483349 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08133905 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132474072 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116079098 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106569015 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110636119 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093333613 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140821664 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076318397 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11785445 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116450438 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09212322 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145171969 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143800256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125340134 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097071876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128442419 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071854771 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073030717 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086007242 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116912435 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081786977 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081104923 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108237822 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141518069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118774641 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128344238 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117714387 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111504851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148603996 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071327779 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116145779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13523567 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115136358 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100901495 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087903032 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094305202 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134608489 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099171152 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170453005 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108455989 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116585115 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145562965 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097100566 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076106424 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098434641 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273573638 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098611586 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136326472 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095656763 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084453277 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104085874 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076765553 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098768414 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121184317 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113247045 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12921695 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.10731518 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123785542 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075951663 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108398967 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117131031 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116343298 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081830885 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111476678 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157154913 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093650028 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110762074 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141466438 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076880714 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133924951 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161929908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134713153 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082238206 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10089562 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116040489 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11946039 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111967296 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130502214 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100058343 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129435615 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106925547 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082228997 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08380159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092451654 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099240065 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108357136 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100262864 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109761128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092631246 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122704735 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098704502 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106328188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112757693 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097019802 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092862109 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092915276 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163676134 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112586943 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157693346 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09625118 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133132295 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148387882 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072193987 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07558146 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077236683 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127601138 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080070228 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273680363 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108864506 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112514203 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118407128 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131285121 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094333653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070394929 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106182538 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12695074 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118458003 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093665216 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100779231 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150415991 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114709973 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076387671 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108290624 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111423389 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100453951 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163635249 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079610265 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10500806 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074716821 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077684102 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119234035 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142584641 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080782052 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101127909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114445818 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105996251 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119857639 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094091254 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106669429 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124792501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137861905 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119700668 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087638449 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105789983 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121835636 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143628827 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099744307 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096961517 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162775252 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144608965 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148881003 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085119858 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109288973 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109001921 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104906848 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127374756 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08154089 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150388723 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079034352 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126093409 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096278029 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087130987 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119793262 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107513216 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083978963 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133003891 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262372528 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081026889 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078982121 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108035973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113997946 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099313479 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073369529 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130437872 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07270913 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128016701 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160292742 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078185771 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101148418 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092750842 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080228551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099144578 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098222054 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083226119 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097267136 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160148971 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084695347 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138623722 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125878135 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105822844 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129562476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100368623 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640420681 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078275727 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143017189 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110427619 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164755645 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09498964 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112760731 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105940513 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11463955 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133075994 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097729838 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174672916 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122035625 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11233643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076381491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097279175 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098702646 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085968325 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102119242 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108450905 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10794212 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091923392 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112435353 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115189435 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079965384 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09321627 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145474394 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110320925 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13357533 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129070462 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081464196 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111289887 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125134429 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076509737 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.262568055 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143630339 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101852812 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097142166 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081054482 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097438199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162870996 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071750061 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148920012 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115493046 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109221574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109149023 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106367194 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124026472 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099930898 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11689401 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090158848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105805024 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108680673 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081318928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.11344285 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102252082 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105424538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09474778 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094231299 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096161934 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142155226 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070375425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094736391 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109934138 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134997442 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15960771 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102368459 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080972348 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113730281 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113300852 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109467524 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115626957 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079205527 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079227893 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079232615 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.097474949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120437996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108704957 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113407397 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104828036 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150248998 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082012449 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222199624 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092921193 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100907737 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086570372 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077589448 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093234915 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092510647 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099654905 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106688662 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162161747 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091626321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086445397 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088320432 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072462787 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080532251 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116755747 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103188516 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263195888 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100433669 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080716292 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099779364 seconds)
  done (took 56.554698062 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104231701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077295771 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09712593 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143899406 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121802521 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198788274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149595507 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188655462 seconds)
  done (took 2.644203085 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068794075 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093945337 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104301835 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08350201 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067865205 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068319096 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223701812 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081140566 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066679471 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091086283 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077035297 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068865564 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411796154 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066685291 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067864424 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07671523 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067636056 seconds)
  done (took 3.338955462 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383450534 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.59348814 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.343209649 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075586135 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.924950828 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088876514 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.206035804 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136746047 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081895386 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.530903417 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373664708 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130728748 seconds)
  done (took 18.435235444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081993101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076359513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089929457 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090355979 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077688721 seconds)
  done (took 1.979380601 seconds)
done (took 104.318511383 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081056413 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.429880259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069517473 seconds)
  done (took 2.090297436 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091108189 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088898823 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089009365 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086233331 seconds)
  done (took 1.931883882 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074929529 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07699615 seconds)
  done (took 1.720430955 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225838331 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173557644 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096471792 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082528715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080590317 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080511305 seconds)
  done (took 1.813190545 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072740356 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073029521 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072960965 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074357009 seconds)
  done (took 1.858144702 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068516724 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067216593 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069195335 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071873323 seconds)
  done (took 1.842358523 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084206599 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083824083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079692226 seconds)
  done (took 1.812619783 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101077091 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09425893 seconds)
  done (took 1.760478278 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080830931 seconds)
  done (took 1.64776534 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090929771 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100424261 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13194429 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11442601 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137982813 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113925558 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084176485 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086112154 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07886283 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08606274 seconds)
  done (took 2.590687888 seconds)
done (took 21.209857696 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07878807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375130653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360108841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091481364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669169119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357198844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987167339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092664522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142412178 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069709774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086709226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648552767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980005591 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332383762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964659573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325350074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652338288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069247457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068218521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069116284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9723328 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068333489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069840793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068764534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649213485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373203696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330523631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069642335 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358783393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070522408 seconds)
  done (took 16.143287705 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071100456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122195474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073348048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08547923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071346517 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070540291 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072026875 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069776929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122480869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069744815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086896417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068390512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073503944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070758272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089799307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069718166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071558952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069722384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069365641 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070293737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088875456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069234524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073133001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070287433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070323857 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082725891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071370765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069461276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069833083 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074203162 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075211788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071108759 seconds)
  done (took 4.037741882 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117717131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125778783 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074905746 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107538777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112276174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071297283 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146495989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093942977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129003358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069586305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087662159 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06882368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104274832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070796244 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091264335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069753355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072834609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070286797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069741779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070629869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089174429 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069303591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070636292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070769486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070469497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084377166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07123347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069911455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07005931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073790208 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076324852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071063429 seconds)
  done (took 4.296642204 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071666368 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073426732 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080951845 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082244059 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067876397 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070749028 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071262994 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068087679 seconds)
  done (took 2.174088319 seconds)
done (took 28.227322783 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078826289 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068547352 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072319397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087388776 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074869085 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079681654 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065450232 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074735337 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07214985 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071985325 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073982531 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067925684 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070835951 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065962572 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072777046 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066485998 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081342002 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070872194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080523792 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080986348 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069704923 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072813637 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07552696 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08105717 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081031794 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081157586 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076523672 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072953429 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068495874 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071264647 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070606283 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079310716 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081340477 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082713686 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067325104 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067368684 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071820745 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06997805 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082141755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076318874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069134552 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076789458 seconds)
  done (took 4.68107357 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085048318 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090265969 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08284072 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080592111 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090019414 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082428153 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08702784 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077776357 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077974955 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085920253 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073945728 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081305453 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079318278 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072724735 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078285592 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075254966 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080055468 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074316886 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077229265 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078078311 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087516189 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073363838 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087994376 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080110011 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074758707 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080534708 seconds)
  done (took 3.69022158 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074054884 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085629141 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092145221 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142690552 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11103453 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08026468 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082031715 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092079842 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097240498 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069060803 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073040657 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093022525 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093399028 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074262028 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068757124 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084327795 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083648726 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070412157 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075329926 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097074092 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089348503 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085650992 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094214618 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085366648 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067991602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071022722 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073735313 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087525826 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071571436 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080311627 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071767078 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072390321 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069694329 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079044438 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071135298 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068280737 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09341993 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079853216 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081068748 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068969135 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078194651 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069396643 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093522495 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127696514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067570042 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071953878 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071709117 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079641447 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067688438 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095073828 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079899547 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067817126 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069183437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067052292 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067598672 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070776536 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070100867 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07045437 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078230745 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075412967 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089626921 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073506528 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085018096 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067477865 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078030498 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067311249 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069447429 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06701259 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096514921 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069337232 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111406044 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069079473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067217348 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078784568 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078357648 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074009511 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067873262 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08545579 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079429041 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072098039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076368519 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071679041 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072505671 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09823157 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06895037 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068264943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066925921 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071448062 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071426114 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068664644 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07983807 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068112167 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071568152 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085544307 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067914655 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069291298 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071877438 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07084592 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067578856 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079018704 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072037771 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069681769 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078270689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068868262 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071654215 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081306165 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074734863 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067036979 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070804528 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071565571 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06979652 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069610157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07182817 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070126724 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074791829 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074985244 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073927053 seconds)
  done (took 10.681902521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163556186 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156562794 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070855543 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147291468 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076563775 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08146467 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151097391 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09548141 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069731339 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070291056 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068747069 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109231448 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10482657 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115603734 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081457325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069716472 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090976469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114455482 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152958834 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146786125 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091531821 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076561559 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070905343 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070084917 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07045959 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077869147 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085651735 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076904773 seconds)
  done (took 4.382976606 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078629069 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103703436 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073607231 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090911727 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087841724 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068952742 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070612881 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070446402 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085381555 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077619643 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069018567 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074088718 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072714723 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071791085 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069712206 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075545963 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076020257 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068521375 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072734135 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074788549 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079482177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094196464 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07256229 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068626423 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071506798 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068828774 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076678628 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083712257 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069026426 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104907575 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066483688 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073790893 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082839916 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069543818 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068571891 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068945633 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069240091 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068886475 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070309551 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067915166 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06839047 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072889984 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06764752 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076456081 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081758786 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070915883 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071082682 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072190916 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071866538 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066735579 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071639255 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071366063 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071220915 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076418416 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073125485 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071896865 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069421382 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09507431 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075271237 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068069918 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067827481 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067537016 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071029257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078204175 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084366691 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07129987 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067639685 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068990256 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081528219 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081225324 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068261763 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073197701 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06640183 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071118053 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07135501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071456638 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069968944 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06749425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06860996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069465906 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069410159 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06827141 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06858849 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071814515 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067077426 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070341045 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068994578 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070495399 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07774781 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068198184 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072513494 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069649975 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067897793 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071879885 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074008052 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072890231 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084131949 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079584659 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069079316 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067236033 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08191546 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071709264 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068490609 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075231089 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074130846 seconds)
  done (took 9.346767657 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092691919 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069948103 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085677442 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092467326 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07896312 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074575878 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07882338 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068529609 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085228881 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073773138 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076963567 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067434435 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080101301 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078056456 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069605117 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07957769 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072533476 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086682821 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083439664 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067356654 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0774839 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081063051 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080503163 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083335447 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082582945 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083725793 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080875912 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07900662 seconds)
  done (took 3.845286661 seconds)
done (took 38.207729508 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.67578374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.824889052 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.651620628 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.831099899 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.796947075 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.762229012 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.741440337 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.646007513 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.863227078 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.69945383 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.975583256 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.11231901 seconds)
done (took 64.310083808 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.689590516 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.810126773 seconds)
    (2/2) benchmarking "String"...
    done (took 1.910192169 seconds)
  done (took 5.311715871 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.915361313 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33504051 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.886678998 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.651293694 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.659414381 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.906965016 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.43768298 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.099857808 seconds)
  done (took 29.571389777 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.795567535 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.891679224 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.331633545 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.364402246 seconds)
  done (took 15.017799695 seconds)
done (took 61.191013999 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.662752016 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.667039253 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.689106596 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.651989109 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.746792517 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.660673469 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.03006223 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.697851524 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.653520507 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.662442912 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.654030539 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.093342417 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.665735758 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.098147087 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.654557595 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.663872513 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.662856219 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.212632979 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.808118955 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.673109968 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.655741938 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.835935198 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.660418232 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.658167832 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.705983513 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.655977648 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.067458457 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.667455733 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.262391333 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.661577369 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.685510117 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.150096674 seconds)
  done (took 200.567977304 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.653711211 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.675419783 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.737417461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.665944056 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.425768553 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.828419134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.751856975 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.438589036 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.655630436 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.675407384 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.920114979 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.654883697 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.947232874 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.602654744 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.694497226 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.655373444 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.86645319 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.969698494 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.695007845 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.799685149 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.672753065 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.707655287 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.653067536 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.91727704 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.696885375 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.661468151 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.679642235 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.687183082 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.843966642 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.840029759 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.665833292 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.684427666 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850497534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.527355722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.660576583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.677248867 seconds)
  done (took 166.335583754 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.860046065 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.65606651 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.653996853 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.654276753 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.661694737 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.656739545 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.773420655 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778423812 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.323862148 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.107349982 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715197916 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.65631389 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.654052831 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.447656266 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.655816189 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721691892 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.66780024 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.656048731 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.670244355 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.6808108 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.655704049 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.656380527 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.774838364 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.669394125 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.655053877 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667860927 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.656258721 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.660999502 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.044709643 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.655898206 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.656359332 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.863318375 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.660896759 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.663593667 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.898155816 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.657062946 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.656855445 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488383264 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.656600616 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.737880122 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.659715021 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.662470843 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.658000189 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.875513182 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.657766911 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.658416733 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.658572326 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.65841149 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.774975124 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.658560773 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.776202965 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.661341078 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142554274 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.656637346 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.660491962 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.821520117 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.254367942 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.659275055 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.658591149 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.657873065 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.659834692 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.665491429 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.850982695 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.897983158 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.660766263 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.658688422 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671225112 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.66010617 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.679602049 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.656980078 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.285354544 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.672243384 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.782257874 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784502364 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.657246188 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724785848 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748939624 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.659012488 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.658335931 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.65998314 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.657273912 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.739489659 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.657880607 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.660059296 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.780203374 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671612466 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.658701966 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.719936547 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.728401506 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.659190329 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480527081 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.659724812 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.658948573 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.915907005 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725692856 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.659802002 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.661894063 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.752523078 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781699243 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.373022688 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.662007538 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.978778616 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.74394614 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.660401104 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790631568 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.663672168 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740615187 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670603924 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.662571274 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.698216497 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.663673152 seconds)
    (111/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.659372814 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.6620107 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.672855324 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.033115571 seconds)
  done (took 387.573578325 seconds)
done (took 757.991602404 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.296769879 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.265888618 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.366375409 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.284364059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.254018813 seconds)
  done (took 13.064557475 seconds)
done (took 14.661852019 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.742282023 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.742290707 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.679001946 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.745253415 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.676404879 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.741375031 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.726520718 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.682228147 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.709775305 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.68420192 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.711869191 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.683711438 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.669241718 seconds)
  done (took 23.792064491 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.893767336 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.895560089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.724199929 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895534449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.702031444 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.892618999 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.819377271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807038318 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.804745922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.671646592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.669911707 seconds)
  done (took 21.376607298 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.902395959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.89864622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.73182806 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.891768542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.705274552 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.900852423 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825937894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808885512 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.820290122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.672099583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670118524 seconds)
  done (took 21.42705873 seconds)
done (took 68.196214994 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.667562044 seconds)
  done (took 3.26545696 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.683482767 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.833932957 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.664253263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.666954361 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.665819391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.671982758 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.6650955 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.667341381 seconds)
  done (took 15.118937583 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.66417658 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.665906715 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.664812963 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.667766548 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.668444674 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.665637019 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.667522143 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.666175938 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.66834192 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.665715017 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.666013373 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.66784131 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.667363661 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.666919389 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.66748107 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.666658183 seconds)
  done (took 28.267043338 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.669291569 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.668743689 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.667640074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.66805271 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.667290598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.670410562 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.668965265 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.667345343 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.668855346 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.666925429 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.668114508 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.667149163 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.668242639 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.66579035 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.666906741 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.66878493 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.6680873 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.669189693 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.674729808 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.668151973 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.667264121 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.668115999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.669188675 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.666481947 seconds)
  done (took 41.642360202 seconds)
done (took 89.892248199 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.412296992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.516611401 seconds)
  done (took 9.527029619 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.668551447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.668341978 seconds)
  done (took 4.942794138 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.669381098 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.669620695 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.669160962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.670696325 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.668178494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.668281446 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.669160472 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.671934675 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.670055832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.671650827 seconds)
  done (took 18.300214495 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.670553341 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.670726503 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.669107383 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.668188391 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.669741615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.670079848 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.671010655 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.669408893 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.668367599 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.669646202 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.671268794 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.67062218 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.671925397 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.671192272 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.668446957 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.670039962 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.671585942 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.669072996 seconds)
  done (took 31.666847842 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.670076599 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.66957119 seconds)
  done (took 4.940878803 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.67083753 seconds)
    (2/7) benchmarking "second"...
    done (took 1.67042314 seconds)
    (3/7) benchmarking "month"...
    done (took 1.669472199 seconds)
    (4/7) benchmarking "year"...
    done (took 1.668966672 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.669695429 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.669152783 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.670070412 seconds)
  done (took 13.289828659 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.671856549 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.820878753 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.877840691 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.308887094 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.669230964 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.671734758 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.581362375 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.673619085 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.67505346 seconds)
  done (took 18.55494669 seconds)
done (took 102.824924573 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.534566856 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.669501438 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.903639366 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.730535376 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.690969477 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.01080632 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.683504421 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.94013249 seconds)
done (took 41.767695183 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.682968784 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.381893976 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.391293239 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.69794454 seconds)
  done (took 15.076499078 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.665860975 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.96561714 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.689603288 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.489853949 seconds)
  done (took 21.42021966 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.029510612 seconds)
    (2/2) benchmarking "read"...
    done (took 2.015417092 seconds)
  done (took 5.653640153 seconds)
done (took 50.442119399 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.671323591 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.672888909 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.671273168 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.6742071 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.672452896 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.670888017 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.672407225 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.67268427 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.672853054 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.674719541 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.673710939 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.671075924 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673401579 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672756344 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.670490436 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.673245897 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.671102053 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.672180618 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.672269743 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67047314 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.673441764 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.674278526 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.673040842 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.672498561 seconds)
  done (took 41.745659114 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.673338447 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.671681523 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.674536762 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.67342011 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.673824069 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.67375713 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.67441624 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674470331 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.674546722 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.673280577 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.673556515 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.676724791 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.674177413 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.674690783 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676548719 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.674360026 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.674406403 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675046883 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.672554604 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67460789 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.675382441 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674950839 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.674736792 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674883871 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.675631787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.672790659 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.671945759 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.674098021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.676375553 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.673557922 seconds)
  done (took 51.836560379 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.67930152 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.682092456 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.67556006 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.673717546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.673602396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.675644332 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.675658891 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.675153615 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.67628148 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.676216815 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.674867458 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.67595131 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.675587957 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.675892381 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.676481734 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.674652688 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.678149663 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.674489255 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.67669955 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.677464058 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.676357488 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.676662124 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.676748673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.675399573 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.676555605 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.675186109 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.673681176 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.677309652 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.675791081 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.676955611 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.676292094 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.675031628 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.675217268 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.677016888 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.675559064 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.675628361 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.680007579 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.684789721 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.676895035 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.676150585 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.678835955 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.677008249 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.676245273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.677953245 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.676200108 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.677186948 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.677613599 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.67665476 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.677872643 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.677356881 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.675459342 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.67759354 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.677233944 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.677524145 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.677737193 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.676700409 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.677540328 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.676948142 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.678494265 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.675824192 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.678921904 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.678235988 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.678559283 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.677942831 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.67769677 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.677914271 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.67902189 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.676733368 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.678416556 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.678255937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.67706056 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.678321258 seconds)
  done (took 122.348116135 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.676734061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.679121133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.677587953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.678886071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.678110026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.677095275 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.678147013 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680507183 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.680769167 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.679185824 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680010037 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.680484739 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680488561 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.680008192 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678920784 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.679765195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.678504881 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.678634322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.677935586 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.679971133 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.678019115 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.679340276 seconds)
  done (took 38.550481938 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677811652 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.679310517 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.678404718 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.682051157 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.679411285 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.67784083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.681098588 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.679206635 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679670788 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.681002193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679444157 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.680116826 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.680649761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680199987 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.679717653 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.679492007 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.680668457 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.682428909 seconds)
  done (took 31.852027242 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.681397208 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.679547384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.678160214 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.679317232 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.679759419 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.681132985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.681498043 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.678251767 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.680913677 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.679951764 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.68027353 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68107744 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.682606948 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679668905 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682111049 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.681740048 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.681413599 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682241225 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.683769259 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.681660036 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.680612035 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.680915091 seconds)
  done (took 38.592002263 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680774583 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.681534561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.683415316 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.683574254 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.681654054 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.68118713 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.682426087 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.680575291 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.681035792 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.68120821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.681793719 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681210541 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.68174515 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.683061683 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.681065559 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.681930829 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.681515998 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.681307522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682388648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.680819881 seconds)
  done (took 35.249829952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.682093596 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.681265642 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.679921076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.6820856 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.681947723 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.682444292 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683197269 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.681438612 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.679420097 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.681865604 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.6837362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.682273364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.681294074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.681718437 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.681812256 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.682539928 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.682764159 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.682723074 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.680402394 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.682633955 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.683241908 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.681851963 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.680911147 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.681252968 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.681827703 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.681391967 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682194336 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.683299761 seconds)
  done (took 48.710754252 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.682820096 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.682912721 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.68365229 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.684194334 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.683005772 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.683818777 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.683573177 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.684213683 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.683881565 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.683520136 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.684706931 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.68399071 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.683012243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.683116607 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.684270896 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.684304263 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683768699 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.683263845 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684727443 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684441971 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.683583552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685568994 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.684109339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.684150633 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.683752786 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.68547902 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.685094787 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.684442675 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.683783922 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.685361697 seconds)
  done (took 52.139005653 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.706189797 seconds)
    (2/2) benchmarking "in"...
    done (took 1.705188241 seconds)
  done (took 5.028720931 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.683724083 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.682838022 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.684241467 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.685353237 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.684998118 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.683239089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.685625361 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684551015 seconds)
  done (took 15.09457107 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.684943763 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.685095959 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.685433553 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.686352789 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.683882269 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.685744015 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.69360847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.685553209 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.686500923 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.685186631 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.691552556 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.692531424 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.688302903 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.684917919 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.684784478 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.688186371 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.684921016 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.687025262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.685344608 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.686129109 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.685578072 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.688142246 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688758297 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.686520735 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.686900923 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.697643643 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.689661836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.685538125 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.686450147 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.691958922 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.685878857 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.686192734 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.689090989 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.687133683 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.68587651 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.685445984 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.695724152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.686909322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.694819009 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.688435732 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.687119698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.686289827 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.688558324 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.688205394 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.686738541 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.686640018 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.686180207 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.686043025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.685176573 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.689114494 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.695622221 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.686619479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.686742946 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690034587 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.687013714 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.69375587 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.688333 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.689636757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.698334465 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.699262414 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.700700711 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.697746976 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.689703982 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.688592769 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.696948932 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.712876712 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.699125843 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.689080737 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.687620919 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.686813439 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.696198577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701098065 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.697695241 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.688508764 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.68850812 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.688198641 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.689831935 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.688110781 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.696473441 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.693556482 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.68862097 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.688794958 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.698990432 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.711753633 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.689499312 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.689812636 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.690061577 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.68740432 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.690946184 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697521434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.689883799 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.690353089 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.68848112 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.689671806 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.689742517 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.688828921 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.689183994 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690220187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.689539649 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.689439836 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.689757014 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.69277842 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.69843105 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.690148533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.690184034 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.698127042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.690003514 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.689651679 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.698173411 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.689928769 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.689923949 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.691211062 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.697205905 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.690019167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.693028107 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.697268402 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.691772115 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.692101946 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.69099634 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.689552616 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.699030003 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.71751505 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.691522715 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.692009708 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.695620599 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.704113769 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.692852584 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.693238172 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.691485663 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.691883518 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.689473531 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.693936005 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.690973394 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.692785964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.69027625 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.692019248 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.690365335 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.692246637 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.690029169 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.693981269 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.69251854 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.691462287 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.692619566 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.694992185 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.692847313 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.696571512 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.697841372 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.692281676 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.692381112 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.692156552 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.693893389 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.691985894 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.693532247 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.690960928 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.690896594 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.693483304 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.694419237 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.692422544 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.691050389 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.691747688 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.693581478 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.692159932 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.696705564 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.69316571 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.695788122 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.691823145 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.692822832 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.693487287 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.694945689 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.690843626 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.691619075 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.691510268 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.696073932 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.70088485 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.693484009 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.693315576 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.695660947 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.693060215 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.692355548 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.69347058 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.696075328 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.70419301 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.693048531 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.701523468 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.695852213 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.695342345 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.694806092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.695385608 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.694761039 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.694243367 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.696234552 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.7021657 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.707964414 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.70394743 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.693926884 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.698180825 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.694503848 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.699011457 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.697904022 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.693368497 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.692806051 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.693125401 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.694529777 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.696401756 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.698206377 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.695403272 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.694601733 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.694775693 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.693889966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.697210298 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.696896903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.695566315 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.69647572 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.69624486 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.695066362 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.695558599 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.69600318 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.695382887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.694890941 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.693655796 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.695569549 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.696383485 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.701583046 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.696423675 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.69773923 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.696376132 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.694338241 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.694148453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.696363234 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.697950401 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.694414318 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703661183 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.695688783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.696864527 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702488512 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.695455395 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.696201333 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.700339982 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.696062087 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.696001555 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.698736404 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.705071111 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.696228694 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.695994602 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.697325062 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.698214112 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.697240006 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.702759161 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.696514373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.695839541 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.696935322 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.696276123 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.696604645 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.698593682 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.698256607 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.697968967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.699674556 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.69686723 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.697208463 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.697103781 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.697873517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.699497975 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.698591739 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.700021148 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.707301876 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.703014613 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.698245004 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.701189145 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.699387029 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.700726057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.698093691 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.698328618 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.698576956 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.710798527 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.706665636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.704873717 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.699896834 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.697645529 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705506277 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.698988584 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.701503528 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697784503 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.698533347 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.697879364 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.69879146 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.698867845 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.698953142 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.698538929 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.700794976 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.698897936 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.70257196 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.699462953 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.699581995 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.700844229 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.698588651 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.697659345 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.696995301 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.698426905 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.702050347 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.701672236 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.696863716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.698429614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.706949961 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.699177602 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.700339849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.700485022 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.697629622 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.697846639 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.698787305 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.699604369 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.704803223 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.708349881 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.702524531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.707395903 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.702712518 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.709651065 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.701644229 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.703185511 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.708321003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.700527592 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.696675868 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.699190009 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.700965855 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708989235 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.701889986 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.700117287 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.702949494 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.700428876 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.699696559 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.699126892 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.702536508 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.70075116 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.701406112 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712404539 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.702328577 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.705014219 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.703368169 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.698825088 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.701339116 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.699925247 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.699168553 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.703924728 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.701491255 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.703488339 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.700531577 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.701059844 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.700877256 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.701252336 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.701118287 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.699491265 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.701477182 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.708983083 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.702860698 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.707742275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.701694079 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.709696637 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.703790837 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710298248 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.703563099 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.702882423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.70248201 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.700727419 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.704070376 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.701672625 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.703282892 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.703515513 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.701952472 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.705767768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.702571391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.702407412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.70405453 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.702990221 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.702498986 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711822031 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726636283 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.704677671 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707206735 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.701703742 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.704532362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.707099168 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.70198818 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.703330326 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.705804338 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.715943334 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.710300709 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.702438729 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.703538931 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703181716 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.703951497 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.704800963 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.704053801 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.70477751 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.703439757 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.70366798 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.707010099 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.709971964 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.706766788 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.704995994 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.708234765 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.702907274 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.718075954 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.705889404 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.703362846 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.706717364 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.704702929 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.704037136 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.705010377 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.705672881 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.705694939 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704038387 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.705753732 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.711585153 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.712098092 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.707057384 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.70274466 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.704926691 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.704979897 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.706185147 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.704982523 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.703488512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.706075882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.706993313 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.706911509 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.705299272 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.705740343 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.705356096 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.704947497 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703907223 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.708990085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.713607445 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.70566996 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.70492215 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.705105701 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.705385539 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.706714434 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.706812399 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.715329985 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.70832488 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.717468447 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.712588474 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.70910789 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.706443995 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711009254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.714860346 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.704000564 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.707230725 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.706720188 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.707398799 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.706612569 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.709746618 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.707642656 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.713636696 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.706412238 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.70279061 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717885739 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.71061563 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.705614909 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.707771817 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.711274545 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.707835826 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.706315236 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.705705052 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.705906512 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716390741 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.709623874 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708900499 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.708667101 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.704670632 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.705490545 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712334437 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707335183 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.708226631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.707399433 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.706742253 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.709553495 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.706165519 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.707981961 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.706500115 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.706833591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.709458039 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.713136218 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.707911039 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.711507064 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.708619676 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.709606552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70895622 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707247327 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.70738632 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.705719934 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.706842811 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711533384 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.709451076 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.71099196 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.707261168 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.707330217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.713099799 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.710779551 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.71162476 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.720336648 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.71631273 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.708371582 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.709192972 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.708653301 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.712009477 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.709067043 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.708470864 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.710424981 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.712143629 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.710374468 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.709396057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.709679429 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.709259981 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.727587403 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.711591948 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.708627257 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.709835978 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.71439321 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.707909258 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.708864642 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.710372033 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.709892899 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.712077109 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.718415983 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.711620153 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.71627269 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.709411535 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.711020591 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.713753827 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.711238839 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.716933535 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.71369151 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711350219 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.711102806 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.714865002 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.730182472 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711193593 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.719310325 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.741871146 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.712537305 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.711068442 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.709868851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.710797786 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.71168394 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.712919933 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.712366747 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.709433633 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.71172448 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.712042376 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.712544389 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717677886 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.714882366 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.712619076 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.711145442 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.708225906 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.71292638 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.711698947 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.710948501 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.712022382 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.713163694 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.713597917 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.71180399 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.710987934 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.724834724 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.72474003 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.713474071 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.7143191 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.714057065 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.718712774 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.715371433 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725121442 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.72205535 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.711667108 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.711577264 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.714346208 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712809868 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.712854249 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.712505986 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.712455698 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713374042 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.712925526 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.726109425 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723142931 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.718424393 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.712144289 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715304057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.713300445 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.712935834 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712985288 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712644878 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.715451722 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.712065044 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718733944 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.714274021 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.713603398 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.715734695 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.719358212 seconds)
  done (took 1015.605770787 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.712644955 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713070164 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.711757019 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.712960652 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71395657 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.711971099 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71344733 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.713569023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.714612768 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.712311094 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.715045969 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713763884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.71521288 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.714051832 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712280422 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.713207237 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712003738 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.713911491 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715102049 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713591663 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714123539 seconds)
  done (took 37.629407308 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.71546869 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.712509591 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713292739 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.713694701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715722517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.714821123 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.714613196 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71315509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.714901418 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71376207 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.716468582 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717260496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.715501738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.714364552 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713129588 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714982961 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.715492574 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715317536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.716729506 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.716820759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713614906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.715564745 seconds)
  done (took 39.373196886 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.71828607 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.717355178 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.71609604 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.714690985 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.715933799 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.718221689 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.717841274 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.718134667 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.717202042 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.715001849 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.714309065 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.716884108 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.723743613 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.72528778 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.718228702 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.717925284 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.861757713 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.71902236 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.716982488 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.71825936 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.716328718 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.724225692 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.718399571 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.717552029 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.715251556 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.718573762 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.717860084 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.716908483 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.719287671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.716355606 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.725828031 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.718778207 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.717682331 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.719437552 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.717534147 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.718233856 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.723813823 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.716970234 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.715773077 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.71878911 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.725770757 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.744865354 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.719065563 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.725589556 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.718456461 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.719301199 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.721210177 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.728021285 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.717883209 seconds)
  done (took 86.043268589 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.716924097 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.720052905 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.719479494 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.718368308 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.720434377 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.718023189 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.720500196 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.721178036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.719463073 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.719767882 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.719881286 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.719093984 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.719926222 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.720265465 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.720845051 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.721470725 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.720542492 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.721808863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.720994085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.722009167 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.721669552 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.71867187 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.720227906 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.719209473 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.719994726 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.720674301 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.724870845 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.719656991 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.721717852 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.719598856 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.720232727 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.717457202 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.722909199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.718116009 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.719721243 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.717720183 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.719994537 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.717161367 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.720280968 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.721188581 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.722224476 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.72137603 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.72351264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.718748821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.722546021 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.721382878 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.721847576 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.719645168 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.721886198 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.720101847 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.720499018 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.721567239 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.721063921 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.720876035 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.721695315 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.722897019 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.712131262 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.712023849 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.712060337 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.712488456 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.711984638 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.71385288 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.710371199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.710302777 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.711170414 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.710946099 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.711690698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.712962001 seconds)
  done (took 118.538177521 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.70972209 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.711939518 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711525293 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710905495 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712786625 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.711860847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.710866327 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.712002596 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71115884 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.714874099 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.712931228 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.713962403 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.712220119 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.71307496 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.713690363 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.712745272 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.714689078 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712521355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715212004 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.714611886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.714423123 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.711720505 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.710262775 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.713349919 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.712022181 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.711465255 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.71161293 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.711053656 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711357073 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.712859903 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.712130206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.713610414 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.711716859 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.711773798 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.713396183 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.713034803 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.7129344 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713008404 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.712131005 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.712013808 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.711662484 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712102631 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.713736147 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.712558017 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.71345562 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.715335986 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.714351611 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.713892105 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.714068271 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712835698 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.71361477 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713192497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715066201 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.71481992 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.714950035 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.713924087 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713600068 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.709688796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715664902 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.713295304 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.71545891 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.715407375 seconds)
  done (took 107.844405417 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713763981 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714914207 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.715613751 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.716620847 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.713985126 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.714890127 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712757772 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.712061371 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.712575253 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.711325138 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711017397 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714985263 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714627504 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713820724 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713156566 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714068602 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711841398 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711433368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714018029 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.713220629 seconds)
  done (took 35.913844922 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.713035008 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.714654199 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.711053171 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713797086 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.710947539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.714677818 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.713169102 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71393045 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716422411 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718668308 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715623049 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.718592408 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714059817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.71467367 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.707610567 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.70833988 seconds)
  done (took 29.061363967 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.708878604 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.709402154 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.70925667 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.710048607 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.709708237 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.710669243 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.710561614 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.708545558 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.707668226 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.708394405 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.709084104 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.708332591 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.708958494 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.712076072 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.710946597 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.707802314 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.708997925 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.706312046 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.708291761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.706967256 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.706847555 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.704482163 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.70501392 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.704841096 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.707702397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.708751627 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.706853351 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.708571493 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.703515459 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.707017682 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.707633629 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.708228014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.707123169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.706270661 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.707159923 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.708571634 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.706955155 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.707666372 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.707128009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.708362844 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.707045905 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.706034411 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.705752395 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.707800764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.704501483 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.704894668 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.706513373 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.709691876 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.705934915 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.706399063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.707172638 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.707456507 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.709047738 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.709478646 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.710377199 seconds)
  done (took 95.567648832 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709858658 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.711479295 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.708998152 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.710144764 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.709605867 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.710791965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.710086751 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.707876974 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706614584 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.708099495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.710112085 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711049654 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708481894 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.707911335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.708433824 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708987357 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.710605764 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.710571463 seconds)
  done (took 32.404464189 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.707139197 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.710459373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.709729952 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706733336 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.703656017 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.707353213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708496469 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.70317629 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709291342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.708133552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701244542 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.699901496 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699797204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.699652067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.699825419 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.702260107 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.699399106 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.702465746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.698843802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.701242651 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.699628255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.699468645 seconds)
  done (took 39.112663568 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.69596104 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.698613208 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.712193186 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.718537708 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.720377337 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.735467033 seconds)
  done (took 11.907405479 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699172959 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700084152 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699105907 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698652574 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699250555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698835975 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700611604 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699074938 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696702842 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698896619 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69889002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694794005 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696376907 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695019352 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695737959 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695884446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693602049 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694735407 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69534486 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695637374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694705068 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696047619 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695359164 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697076237 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69569489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696526401 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696146105 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6944016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695916597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694234785 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694676214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695981053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696424927 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697551506 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695575949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696908026 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697430746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694741944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698629866 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696031093 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.698296574 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696042658 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696422794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698014297 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697484759 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693710286 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694700837 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698167621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696075026 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695205319 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697515444 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694305193 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695176707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69376833 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696052438 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693683516 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697300778 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695144764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695185441 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693882744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694550055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695018198 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695365808 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693495363 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694599593 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695888859 seconds)
  done (took 113.576830816 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694443236 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.694954265 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696897287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694525576 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693941762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694053529 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694019102 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693587373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696001452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695081021 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696237732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69715188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693837184 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696520812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696050187 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693366011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694956065 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69414257 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69654548 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690587441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696939944 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695009252 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694553825 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696317433 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694961701 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692484483 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693708768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693267359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693113277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693665897 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694964994 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.690222941 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693429636 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.693247522 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696751021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691341414 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696240213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695431354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69520595 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695870851 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691827462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694326243 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693641982 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.691247488 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693585128 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693632134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692932712 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692674848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694305919 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692756055 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694927762 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693122961 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69531355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.690645846 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695141401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692844686 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693271101 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694767903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694176305 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693394114 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698099713 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695494911 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693900248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694033253 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692564014 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693824293 seconds)
  done (took 113.443996224 seconds)
done (took 2358.78073591 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.717456053 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.77679818 seconds)
  done (took 15.112223807 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.858513211 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.814796034 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.696675336 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.727171838 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.69150924 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.71951815 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.715885363 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.694112906 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.699499702 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.701337509 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.699414554 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.882838598 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.700670016 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.694970416 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.696002799 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.792359338 seconds)
  done (took 49.415268003 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.69695283 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.703204934 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.709996945 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.69944449 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.70142893 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.712816065 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.727984264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.7028593 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.732113413 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.71150417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.764058096 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.710014859 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.698659859 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.748140952 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.710617372 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.714852995 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.790849326 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.770691449 seconds)
  done (took 32.629557929 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775355817 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.711928745 seconds)
  done (took 10.121219301 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.703926008 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.70910166 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.708498421 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.692330344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.705072772 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.721467221 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.728133637 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.731117369 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.714794372 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.716888807 seconds)
  done (took 68.756657189 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.698519482 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.699847429 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.69636198 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.692782404 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.694053278 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.690465934 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.696641442 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.69525667 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.361957279 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.730723623 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.701763018 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.700315812 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.693217961 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.69508521 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.69647568 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.71494544 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.804060192 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.692910753 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.695519867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.698840413 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.694686414 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.750647867 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.707776706 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.695204628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.72628009 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.367087886 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.705480135 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.7015606 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.825895626 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.691407028 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.694771207 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.882255611 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.698824453 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.157179236 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.96036095 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.699210021 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.701624552 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.701763812 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.697295004 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.809924095 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.696998423 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.700176155 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.683627523 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.935650255 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.789489147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.737368641 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.034831221 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.697098685 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.698826627 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.724245671 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.696852038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.695538212 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.712621807 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.216618029 seconds)
  done (took 123.264796698 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.693858752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.036747851 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.859654022 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.695068374 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971896778 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896345854 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.690906167 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.736113704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.69313399 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.919363107 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.946600911 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794028282 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.692882588 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.692880753 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.690130007 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.687990219 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.848988902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.76114293 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.694689695 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.687078599 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723452298 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935702424 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.814780075 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.691373502 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.718927961 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.904285429 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.813026623 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.791148785 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.489432472 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.692830181 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754003381 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696141236 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.695178715 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.687422034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.842869722 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.793249443 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76910528 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.690075204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.684551025 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.686576875 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.342574956 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883245402 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.782831342 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.817277493 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.936041407 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888672342 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.466329072 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.687101157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.424108845 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.85137448 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.915369152 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.917799224 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.806113763 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.690287652 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.025497599 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.685485711 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.68437373 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.933053496 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935827011 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.781241032 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695250604 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.689408475 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.685321391 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.931785087 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.693327503 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.781662049 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697730076 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.688502022 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.785030571 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783497323 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.934376202 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.89888393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.721398249 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.028701364 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.191842725 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937298052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.754062913 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.936026579 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.693617733 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.691468347 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.7740752 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.536169241 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.944478486 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.934708796 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941608424 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726422497 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.406609606 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.691990625 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.919547297 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916340407 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.951216227 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.935680165 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.929251651 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.000474163 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.691832592 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.692801134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.990557907 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.814081732 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.691686714 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.037693785 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.334390799 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.228030972 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.723411075 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996047217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.824221976 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.694727795 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.324681387 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.696251676 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.922049108 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.733363572 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.696532665 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.695376614 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.911681202 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.681992846 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.694758627 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.356675551 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.755889957 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.697580904 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927075535 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.699382179 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96089291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.699888049 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926729817 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.770091559 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723960376 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.869867521 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.939069018 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.693752962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.936662115 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.936878222 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.809727857 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.912096984 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.410507073 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.697595787 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.97934305 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.697866781 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.69618283 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.863739495 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.701280805 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.864939803 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.695474603 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.989051225 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71599265 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926597736 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69846035 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.947930596 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.730524137 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.742625954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.699412769 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.82182285 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.697731594 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.514279919 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.854326108 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.698003927 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.697043596 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.249537682 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.697823962 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.843108674 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.920777472 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716131523 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.764176247 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.356461632 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.698667995 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774138488 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.71799513 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.085417963 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.696545396 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.947124883 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.697387585 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.695699927 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.697373466 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.930715309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.877360704 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.696878037 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.69889627 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.602378283 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.697152921 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.696543653 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.874326035 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.067240107 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.697306554 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898352143 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.697835782 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.820674166 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.697171883 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.769873326 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.023936229 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.693830684 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.692816486 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.693249872 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.694192134 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.694414802 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90045099 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.716477758 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.183966609 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.828548185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962351715 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.001205776 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935791962 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.734216842 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.696375169 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.944509707 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.696758223 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.752832929 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.696408951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.713461277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91666667 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.69740492 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981926338 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964263611 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.540150389 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.740694017 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.698221301 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.695804155 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.693004231 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.836555053 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.778917631 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.695361479 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.694810049 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.81296529 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.814223346 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.902483804 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.696658311 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.719637917 seconds)
  done (took 864.934965482 seconds)
done (took 1165.859590557 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.699262651 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.695692581 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.698089295 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.69768553 seconds)
  done (took 28.417122805 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.698710267 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.702880073 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.697519015 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.696511993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.697821714 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.695790922 seconds)
  done (took 11.815982385 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.715167458 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.689674674 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.693595101 seconds)
  done (took 20.7260533 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.771811123 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.099824594 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.827233309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.117258675 seconds)
  done (took 9.443410281 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.702718676 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.698747585 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.698708436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.697854998 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.696989875 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.698219251 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.700060005 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.698356951 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.696989588 seconds)
  done (took 16.917610998 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.817789752 seconds)
done (took 92.765212135 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.713324944 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.945236211 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.225489588 seconds)
    (4/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.829290349 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.781730051 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.764543638 seconds)
    (7/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.845320154 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.83402935 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.772495644 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.007856938 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.483406098 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.915467479 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.724345824 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.717813414 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.775288064 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.781824547 seconds)
    (17/309) benchmarking ("sort", Int8, false)...
    done (took 4.559173405 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.862122121 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.024237229 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.892147016 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.876798323 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.726717953 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.699119539 seconds)
    (24/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.723656568 seconds)
    (25/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.793473378 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.03030727 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.697595395 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.702227102 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.848720811 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.741663576 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.703262936 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.786827963 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.042489987 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.035121502 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.881457481 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.04848722 seconds)
    (37/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.798225564 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.705700795 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.766882714 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.885679322 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.728541451 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.807757745 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.642357752 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.414109422 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.825125798 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.72545958 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.916384845 seconds)
    (48/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.899284247 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.81319977 seconds)
    (50/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.957227824 seconds)
    (51/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.873345479 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.012780262 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.006440683 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.376768345 seconds)
    (55/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.790387241 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.090983202 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.9536194 seconds)
    (58/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.797776781 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.020600879 seconds)
    (60/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.90979177 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.85539241 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.723722789 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.702952138 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.839072154 seconds)
    (65/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.838131596 seconds)
    (66/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.012466954 seconds)
    (67/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.971299215 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.790239208 seconds)
    (69/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.248537493 seconds)
    (70/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.869195321 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.371507846 seconds)
    (72/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.038541534 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.706469018 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.89322437 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.161375308 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.167063091 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.720883801 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.919287034 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.915423452 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.704201359 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.767290341 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.819718922 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.809398464 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.910015488 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.761714893 seconds)
    (86/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.082824856 seconds)
    (87/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.840786683 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.70574368 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.70121661 seconds)
    (90/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.798650522 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.700505836 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.940164709 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.612946495 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.703090732 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.697099128 seconds)
    (96/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.715246665 seconds)
    (97/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.718303153 seconds)
    (98/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.698151332 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.949817211 seconds)
    (100/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.013453351 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.786709374 seconds)
    (102/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.951380886 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.428961343 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.14875947 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.862269038 seconds)
    (106/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.787149704 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.837102409 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.712436536 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.808710344 seconds)
    (110/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.223629769 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.920784374 seconds)
    (112/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.212422878 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.909927281 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.708340737 seconds)
    (115/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.735243204 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.105627472 seconds)
    (117/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.859695143 seconds)
    (118/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.854473519 seconds)
    (119/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.399416713 seconds)
    (120/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.130054812 seconds)
    (121/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.625578102 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.47780947 seconds)
    (123/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.007478734 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.047990809 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.142300934 seconds)
    (126/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.723998757 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.810512987 seconds)
    (128/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.729564137 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.862679415 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.756522111 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.722898332 seconds)
    (132/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.570075846 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.979758298 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.684261105 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.986403011 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.753260821 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.11173773 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.785553301 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.855909474 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.985635983 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.974041665 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.673051527 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.857730907 seconds)
    (144/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.855694612 seconds)
    (145/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.815862159 seconds)
    (146/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.74744732 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.440118543 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.132980697 seconds)
    (149/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.118363521 seconds)
    (150/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.999706204 seconds)
    (151/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.749105859 seconds)
    (152/309) benchmarking ("sort", Float64, false)...
    done (took 5.507672017 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.497352737 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.730864979 seconds)
    (155/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.562789697 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.753694112 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.502747383 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.117709657 seconds)
    (159/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.794294583 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.02489952 seconds)
    (161/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.752220867 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.853751274 seconds)
    (163/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.736534632 seconds)
    (164/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.728306111 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.950536274 seconds)
    (166/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.830434058 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.726271044 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.7388869 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.944222888 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.008042387 seconds)
    (171/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.252459539 seconds)
    (172/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.739257487 seconds)
    (173/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.030703962 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.366608118 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.249345817 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.632680769 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.87192645 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.021744905 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.390043025 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.869769469 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.727018408 seconds)
    (182/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.531283984 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.742018145 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 6.727916336 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.133058856 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.724897164 seconds)
    (187/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.686903187 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.864402359 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.726879586 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.324469961 seconds)
    (191/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.731896659 seconds)
    (192/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 8.168960486 seconds)
    (193/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.888417322 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.874986628 seconds)
    (195/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.138249595 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.789263679 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.510658793 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.732723469 seconds)
    (199/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.148537153 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.73467458 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.87481563 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.797989112 seconds)
    (203/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.843003056 seconds)
    (204/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.810828161 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.991442649 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.756883632 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965825049 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 5.432573412 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.853202241 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.618781751 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.920780582 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.756376032 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.565073919 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.15060425 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.446702224 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.759819726 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.939487443 seconds)
    (218/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.405051932 seconds)
    (219/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.735069385 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.724994633 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.91045503 seconds)
    (222/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.846420298 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.731715425 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.195488844 seconds)
    (225/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 9.241530463 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.82987466 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.759217921 seconds)
    (228/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.198072542 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.074861315 seconds)
    (230/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.091402493 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.868297515 seconds)
    (232/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.506706562 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.546157057 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.020073194 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.669848658 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.955286389 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.185012746 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.494796074 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.834815835 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.834791108 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.836493507 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.536030699 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.048670161 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.7621547 seconds)
    (245/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.809231899 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.832552228 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.958909941 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.815902436 seconds)
    (249/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.885160297 seconds)
    (250/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.671389077 seconds)
    (251/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.017623132 seconds)
    (252/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.4392821 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.99046403 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.109872441 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.508084889 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111369645 seconds)
    (257/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.653602819 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.977302547 seconds)
    (259/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.138510963 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.065949121 seconds)
    (261/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.817832216 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.502869588 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.971855269 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.068345749 seconds)
    (265/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.815800272 seconds)
    (266/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.823184874 seconds)
    (267/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.015383895 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.055418728 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.643198944 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.071968039 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.918688742 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.729248471 seconds)
    (273/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.277567973 seconds)
    (274/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.895401342 seconds)
    (275/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.74920882 seconds)
    (276/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.809440135 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.731120702 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.823814694 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.876035929 seconds)
    (280/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.755229436 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.047086872 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.155574218 seconds)
    (283/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.822395762 seconds)
    (284/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.946618885 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.04969249 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.661786634 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.150174999 seconds)
    (288/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.736366587 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.591757272 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.372491905 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.814618965 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.04336012 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.656167422 seconds)
    (294/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.231232172 seconds)
    (295/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.162309212 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.136462264 seconds)
    (297/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.753576058 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.832863412 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.766321229 seconds)
    (300/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.731016165 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.110960049 seconds)
    (302/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.746414798 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.833550319 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.663947095 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.876707253 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.733532071 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.025471923 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.838345846 seconds)
    (309/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.76455631 seconds)
  done (took 967.941633381 seconds)
done (took 969.650180603 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.761106412 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756418123 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73472273 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.760921003 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.848853152 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.783807294 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.754849361 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.740416411 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.787018577 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.788369008 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.737502644 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.781197071 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.738598059 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.738351698 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.736801635 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.754000541 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.054637642 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.772647265 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.755230552 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.74980396 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.755485424 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.734859147 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.785990959 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.781764932 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.743130156 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.743421991 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.742572297 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.757113284 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.852143175 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.741367491 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.741623817 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.751767676 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.054225204 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.770498022 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.739509097 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.757330498 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.748462511 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.750480599 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.743213002 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.773967217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.200267108 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.745595423 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.742984946 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.74066877 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.738921661 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.746166229 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.741426649 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.750356392 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759376409 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759430062 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.198630064 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.761917584 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.745574775 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.740854383 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.75150612 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.738792042 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.742313829 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.757393997 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.76205018 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.759571144 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.040871118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.782245036 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.746523435 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.758900708 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.752460783 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.234659746 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.747515231 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.750037909 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.201629146 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.75806169 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.231688893 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.758856206 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.747855979 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.758458301 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.776780752 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.055587376 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.773618972 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.74119972 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.751283183 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.743188639 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.754448961 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.756970722 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.744276191 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.740345979 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758927882 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.789952555 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.757306146 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.742464102 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.756178342 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.760496064 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.754595861 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.759420446 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.748838668 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.743700701 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.757459813 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.748650339 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.749092794 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.747150194 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.750542497 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.759911 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.199235181 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.770757971 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.741205997 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.741608618 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.745129629 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.756680022 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.202458775 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.754175585 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.768434835 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.794856894 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.744496538 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.042960938 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.781711521 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.761500414 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.758556216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.748038095 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.743810324 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.045028263 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.235231037 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.766691474 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.744715028 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.741477268 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763084874 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.745415141 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.740992068 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.058395475 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.779914478 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760091768 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.86692305 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.759884358 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.7758577 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.746426339 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.74953441 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.789919624 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764984987 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.779726598 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.747399326 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761040986 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.760961905 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.740982639 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.758894998 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.758725732 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.747482086 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.752775549 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.742071352 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.793587214 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763716785 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.761584612 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.765131269 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.867565292 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.743167171 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.04661912 seconds)
done (took 274.93590171 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.829794564 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.746281486 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.836065135 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.746272733 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.83779814 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.814442119 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.747742499 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.748044777 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.746049061 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.233067408 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.747244816 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.750973164 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.741752904 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.747930069 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.822689419 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.745596216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.747584079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182119836 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.748699974 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.823529943 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.74918135 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.747861962 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.748964472 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234176668 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.744971792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.744938054 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.826273429 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.748892785 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185390274 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.744815367 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.742140358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.185570731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.829517194 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.778083519 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.752586702 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.755748773 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.835841281 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.754576961 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.81339988 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.818980726 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.844393902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.781689115 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.745089856 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.745881741 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.750678313 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.749239812 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.746337355 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.781846944 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.747883601 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.756452947 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.188525542 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.753422302 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.755133686 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.748720511 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.747865323 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.77586733 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.750053594 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.750324691 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.827504035 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.749437491 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.815069989 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.240523328 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245688198 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.75049154 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.74799969 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.750892407 seconds)
  done (took 177.00669602 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.814220587 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.824334776 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.813848156 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.749260404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.797454255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.816428054 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750547683 seconds)
  done (took 14.243285927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.754946958 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.752191287 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.796147831 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.797640086 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.751963369 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.903036719 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.75143473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.763599401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.751238635 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.77443147 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.750981451 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.749442438 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.759579388 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.749604574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.797588901 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.761959342 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.864655469 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.750406932 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.750568297 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.899459643 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755869318 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.757966274 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.773972796 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.761065352 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.750947468 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.757235464 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.31501949 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.750903259 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.750057589 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.750733069 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.752328718 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.790863318 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.753695389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.749836734 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.751801627 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.864033046 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.753124148 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.753535833 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.752407662 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.75090636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.752753181 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.752322799 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.752393569 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.755343751 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.753217342 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.772933992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.752378053 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.753672081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.751982282 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.751234241 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.777497353 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.752691039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.752033596 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.757337673 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.790845876 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.754417947 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.753624215 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.752467965 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.753885515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.751610412 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901187143 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.801658792 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.752465688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.800858118 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.752194571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.75388949 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.75390878 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.75506566 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838208654 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.752201472 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.800879844 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.752874945 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.910121717 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.772853979 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.75528641 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.756587803 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.755616526 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.752658877 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.751367845 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.759078956 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.752085931 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.753556119 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.760314225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758066867 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755178795 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.863744603 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89145327 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.755675437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.753077017 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.761654018 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.753887549 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.796209687 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.752660419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.753469326 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.808155781 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.86802612 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.77918936 seconds)
  done (took 194.196772223 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.757228552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.758016459 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.755824182 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.768891853 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.755590471 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.751696217 seconds)
  done (took 12.227474257 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.753920743 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.759273027 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.753890144 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.754186267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.756754815 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.756258128 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.755107459 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756949803 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.758535834 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.755424127 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.756435478 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.758218031 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.756057108 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.757448467 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.753715064 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.755529555 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.757253748 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.755790274 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.754928636 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.75284977 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.007190625 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.752772411 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.754733196 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.758728815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.761114801 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.756441245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.767832016 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.755547901 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.755633758 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.759029558 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.760424835 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.756112751 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.762431496 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.761929274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.760839422 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.76206172 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761690568 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.76142962 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.754093634 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.758418678 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.758359343 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.756521608 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.754969355 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.762079325 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.758096122 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.767609018 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.764803753 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.766484365 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.75925736 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.758478989 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.761062223 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.757512008 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.754304069 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.761178289 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.76458792 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764124029 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.765661521 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.760404684 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.759276768 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.764480005 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.760778449 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.757395176 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.761749598 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.760147393 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.764011357 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.760934298 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.763384609 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.761905251 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758738137 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.757631106 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.76053763 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.757028456 seconds)
  done (took 129.576674547 seconds)
done (took 528.947699571 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.081557983 seconds)
  done (took 8.76530194 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.908660005 seconds)
  done (took 8.598738416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.569944882 seconds)
  done (took 10.255233899 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.764338225 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.774477224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.775069651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.761933677 seconds)
  done (took 28.778141574 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.000445597 seconds)
  done (took 8.688269469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.774064216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.755844945 seconds)
  done (took 15.291162398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.835669741 seconds)
  done (took 8.523914049 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.802870247 seconds)
  done (took 8.504609531 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.782298006 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.770292764 seconds)
  done (took 15.265171025 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.760990518 seconds)
  done (took 8.448012298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.990219057 seconds)
  done (took 9.68328399 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.776876564 seconds)
  done (took 8.506616342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.830227108 seconds)
  done (took 8.519111773 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.928986832 seconds)
  done (took 8.61592358 seconds)
done (took 158.130199408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.76712931 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.760170649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.757199523 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.758880175 seconds)
  done (took 28.726928446 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.790355311 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.791342624 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.792001487 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.804006545 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.796636479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.792461891 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.786457886 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.784371991 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.801663215 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.796452407 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.795622818 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.795937089 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.792110097 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.784565377 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.794068429 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.793261516 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.802654305 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.795205329 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.785870236 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.795364772 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.759225169 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.804072766 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.793638978 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.759987485 seconds)
  done (took 44.675348497 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.949310757 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.830108863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.913792887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.809354064 seconds)
  done (took 9.186734404 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.808891035 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.811694971 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.828356275 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.862176532 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.88740034 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.821131581 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.783264341 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.781549917 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.765701922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.81221153 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.886631011 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.810186914 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.897575693 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.760355074 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.947193517 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.761998584 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.760874581 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.811604805 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.863381937 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.877784356 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.760941626 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.813147387 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.822637321 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.809973626 seconds)
  done (took 45.433382808 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.762870155 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.771733962 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.769561415 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.761838507 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.765340643 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.763399662 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.769293475 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.764149132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.783589521 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.763524585 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.761287131 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.762901583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.770452654 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.763216192 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.761732707 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.776183194 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.776375502 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.763950352 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768187652 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.770259509 seconds)
  done (took 37.038884044 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.759956088 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605747079 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.104743774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.013356781 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.757449907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.761460419 seconds)
  done (took 30.692394665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.773803546 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.767494534 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.758725977 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.815502679 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902052738 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.769995356 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.764228133 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.773544474 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.80938194 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.82944751 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.782416694 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.788846366 seconds)
  done (took 23.226714882 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.778033799 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.760452389 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.762600385 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.774463298 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.768669556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.767676899 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.76993192 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.760142541 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.771131262 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.778947265 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.768962372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.773256013 seconds)
  done (took 42.93038394 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84157154 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638489543 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218597571 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231443681 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285338506 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965858074 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.760871199 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848626611 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.764229646 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032808411 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.13170468 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96054599 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.002560604 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.57752518 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.80469779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.248762411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056982806 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982847852 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793814296 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531220103 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795290845 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351021848 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.529507075 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800795559 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966444894 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.886389944 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.027857629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.712588438 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811836962 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766674058 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769028033 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765338624 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036362021 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884868116 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833637602 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76897616 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.175260753 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.469743963 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.764724421 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.536392886 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.260532417 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879871508 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765816403 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764255338 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.689129895 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357247223 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897425725 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.766873488 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.463273647 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.764926385 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770854944 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837826163 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.76422984 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.570815475 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.445601411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.030458724 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.762628369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763738267 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319347439 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866274004 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382514768 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.742209583 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.848512309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486869853 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149478784 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.922272289 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.766796702 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766477368 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691688589 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.483022646 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808353576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901827636 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.782584848 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406576743 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063940949 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.200524888 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808146374 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044594955 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.627394298 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.742578828 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985108267 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.723590868 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.692667482 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.591764292 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694558745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984826943 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804227843 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.368718031 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803737906 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.848819863 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.772452049 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779549718 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769288981 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980995352 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.659923331 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76856506 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.095008607 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014566578 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784420736 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853587558 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695105976 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.767189402 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00988232 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.967885716 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.088223963 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.286279821 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857623859 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768286412 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.819934637 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.768561681 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817913588 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.04122644 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829670774 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874459845 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811276761 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.714560361 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023485822 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796232788 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.908334669 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.148852378 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998167455 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.109410268 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.018582164 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83019431 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768584031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.768750897 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.543802132 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.307429326 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.984052722 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.780751032 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329958281 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817243747 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.767865139 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706045933 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.451123196 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.148132042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.840179273 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.986314796 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.768029583 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08410169 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697127972 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90756772 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.75451284 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.982953198 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.423680482 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.853694539 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018673987 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.082362656 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.134618582 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820758429 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783040959 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861753261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786477843 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.263579302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060068945 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.769254477 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.770986681 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.553584991 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.75388877 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776200542 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.771880216 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.29588971 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045889628 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.794630965 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777807208 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.646818722 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.782957449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831883978 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772720757 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.775653853 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.310620486 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271928038 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.774255426 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455267129 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99148433 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774411829 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.491317989 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872280025 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.784113251 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040279957 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838024656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.697713055 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.472731893 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.474238613 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770854311 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697641742 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.770131279 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773109705 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776943463 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.955529552 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047156357 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822287674 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.539113792 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.80359487 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776110093 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.772914264 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769312568 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.283087609 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878834046 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392216881 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819146659 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902059521 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.779213585 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698348919 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.771585233 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772708708 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773764463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.725088137 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820377446 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.537923818 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899474374 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023648511 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.17818105 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781122422 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.552368742 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.814050386 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.789311117 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.091689198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482484735 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.94040621 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77640348 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.776339285 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.533729788 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426942535 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325248421 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081587858 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092886803 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126366423 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.338787691 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.031454652 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873109508 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995159074 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.292701272 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829700401 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864420269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709852345 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78655809 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42694208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128459268 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780305278 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992910272 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065635182 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.160288698 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89546871 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977919239 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803732646 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.770855531 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737641871 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.30830342 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792866069 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.251959703 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968956333 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85755341 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.093214837 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844901267 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.775699828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122805359 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820365778 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.483634442 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12928257 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367127225 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.198926483 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992762801 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.781443446 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.214109189 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127201645 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.160186479 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.831838542 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702432915 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781816944 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.780547823 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.786490833 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.766702661 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.700803742 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.019304189 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780249007 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003146172 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.094818558 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076049798 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.682190154 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.778883208 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776162957 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027237369 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.644523074 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866391307 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.267938505 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.324426261 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784055794 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704454583 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705153666 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.478263138 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784714199 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741941054 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989322221 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.901072128 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.459904703 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391015902 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022150031 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021083343 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.785289799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.05192382 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051514847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.270759289 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79828982 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.873201309 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096415122 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.457530089 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.992440089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.002652696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307491778 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994742653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232772682 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.74738687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.778799857 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986719151 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.99523388 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.151786805 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943036364 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.488493512 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.779267463 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207274596 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838968423 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.15031311 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951679873 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.860674816 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780971147 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85499427 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783760025 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.786482397 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.785316895 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790670716 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.151866126 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890184121 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.790543636 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855391057 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891657686 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.324065248 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.779485403 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045620559 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137859338 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103816323 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839054906 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.776085729 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780751373 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703681586 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906231706 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220661987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049440201 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.899631815 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.909260833 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798321031 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.083975566 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.20829609 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01996989 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05070962 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.658286 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.600088516 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.829753308 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.992085066 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780065704 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.982527814 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995772697 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081228472 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350745803 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.101380154 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900700178 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043903142 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133920733 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775077807 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355116597 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.786577181 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234840291 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.812051035 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.149116672 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019476345 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77592207 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895735582 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.776478946 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.978113959 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.22540459 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576865442 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04131643 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624221516 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.781822353 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050433967 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.10226693 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086310825 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85105952 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781612495 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.466320687 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911903172 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.663369169 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.988931163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775445354 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976821838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.48373018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.777761436 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043796611 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075910884 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.774218792 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.708931071 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775813805 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.77187064 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982674007 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984636585 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015399657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771053845 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.776370296 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.576169255 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041573023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828932288 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695533985 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.771177165 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814385942 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995426781 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787067768 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.283756333 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.469848951 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049419831 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.674649029 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785438606 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361348746 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07722229 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096027207 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.324402666 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985036701 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322345457 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.769218175 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074681173 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.770835059 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36285123 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081271044 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.77689155 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449400879 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813249671 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042186675 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096925868 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.909891798 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542935738 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.722062464 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984039905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.128899043 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701958975 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774244167 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816283981 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.769492534 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.75308936 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779146626 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.683119773 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358577286 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.546100574 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327267347 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.772982716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.790199467 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.116034515 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.482005896 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809073223 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787234424 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77102139 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.464219281 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.052271545 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.014936827 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460593904 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.80216666 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.775159104 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770703122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.693236632 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950864684 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.958371683 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057180687 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.292249728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.811218542 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773899053 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.978350024 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974968011 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.143944121 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891414296 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.073071345 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824928288 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.708700158 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.477510353 seconds)
  done (took 1618.842369662 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.768325504 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.824475552 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.78759172 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.840863074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.858084536 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912969662 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.846279362 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798193007 seconds)
  done (took 56.339063301 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.772684088 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.929862475 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.775282373 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.771747169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.774053932 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.771414682 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.929028844 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.780623754 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.77347574 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.776417205 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.769578696 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.768800495 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.038886747 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.792432859 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.782299101 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.772014466 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.775608815 seconds)
  done (took 72.489840076 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.776235908 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.974278068 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.809527017 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.774271181 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.956360637 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.776724624 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.696365882 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.833867651 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.778573166 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.179354946 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.069029177 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.799301105 seconds)
  done (took 89.1258437 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.775678855 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.772101638 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.771664334 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.772899793 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.775295466 seconds)
  done (took 10.574936704 seconds)
done (took 2111.045351049 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.003018879 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.970969109 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.032028286 seconds)
  done (took 5.704627931 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.918238463 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.966748053 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.080894897 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.101898712 seconds)
  done (took 9.778928786 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.06089679 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.169860065 seconds)
  done (took 5.936171785 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.139268358 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.783622933 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.159679527 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.778231617 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.78208203 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.781703655 seconds)
  done (took 22.053076201 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.780098147 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.781374949 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.77949586 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.775589502 seconds)
  done (took 8.822790119 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.772972259 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.478350388 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.776965788 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.785948927 seconds)
  done (took 20.522493986 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.924556014 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.8940797 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.922218378 seconds)
  done (took 7.447702439 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.996088488 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.881585953 seconds)
  done (took 6.585494564 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.937738611 seconds)
  done (took 3.643538753 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.80746167 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.04947605 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.271953774 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.300260488 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.38436584 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.631654469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.090905819 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.014301856 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.191184064 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.209305974 seconds)
  done (took 23.659025273 seconds)
done (took 128.944407657 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.122552582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.793273272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.975963926 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.135911028 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.003288806 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.977256031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.994614078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.125294742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.806619348 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.793251433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.136017292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.001215947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948984335 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.795740306 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.951948901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.792818241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.999351698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.13239937 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.814906355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.032904329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.003210297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.781339666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.976719028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.795129364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.000251447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.92669561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.326550181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.795641725 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.961665252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.339710042 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929108289 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.178760922 seconds)
  done (took 165.056657902 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.780021863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.778783835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.779894615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.777679743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.331543443 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.78083247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.78110837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.778494997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.177900776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.162298216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.778717697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.318015624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.781248384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.779521682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.781515133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.779547354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.325011089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.779200322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.780639295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.779477276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.782698462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.163699078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.783281114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.159011614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.316148189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.778624364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.780221595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.780717405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.781804169 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.779781495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.781813184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.781511466 seconds)
  done (took 206.392132052 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.780289122 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.78133496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.77788161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.782613805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.782541654 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.782864384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.779414161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.78054969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.42130425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.4085299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.780638443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.780151788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.790554651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.780252919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.791594129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.781909651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.791413596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.791077872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.787035351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.790097223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.78360529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.532977936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.780751285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.556711632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.784241045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.781047026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.783441177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.782911628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.785479853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.785952107 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.783093866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.782939656 seconds)
  done (took 217.57816197 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.030360129 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.781694985 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.78677108 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.704656057 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.785254255 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.786598377 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.769649053 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.030785102 seconds)
  done (took 18.393437705 seconds)
done (took 609.142871948 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.20399344 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.04427486 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.95523905 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.806889053 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.031877343 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.848805858 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.803444064 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.865661412 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.619566771 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.873412558 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.442078368 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.824949043 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.536863819 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.830853191 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.923124911 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.861323464 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.392504238 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.493942766 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.979112241 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.860898252 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.97976186 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.714887005 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.881190701 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.65800989 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.559719759 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.769468327 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.799931757 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.395293737 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.81609924 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.960251885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.54940043 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.046958354 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.817364799 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.803591551 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.855796297 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.835848833 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.986870575 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.813334832 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.929515732 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.51737641 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.8556843 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.532942808 seconds)
  done (took 98.989942262 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.79498749 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.789723876 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.790444756 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.788395643 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.797777303 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.790249635 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.790034429 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.790553786 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.791310335 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.790766082 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.791609919 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.800467351 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.790088111 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.799110159 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.791323986 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.791109447 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.790990843 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.799804924 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.79144906 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.791542137 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.791148211 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.79052908 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.788771623 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.792864327 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.793466096 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.791682291 seconds)
  done (took 48.328458061 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.787953889 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.958810678 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.029593142 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.805507478 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.788189114 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.791187713 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.80612095 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.794968876 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.790743554 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.790584137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.876663685 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.795519543 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.805640068 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.027575787 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.803870023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.788721545 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.789633496 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.789991464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.965737474 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.801963707 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.806557993 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.793707968 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.807299199 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.801973143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.789999105 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.788097793 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.791532643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.281342153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.799489087 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.877713091 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.833017145 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.811415893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.229857652 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.039412117 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.8423891 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.796496298 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.789068676 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.881459668 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.7917372 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.790326356 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.806202081 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.796100269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.029573312 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.318940222 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.801823558 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.790885681 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.292053892 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.893477191 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.832063794 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.800325875 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030276753 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.805521548 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.793083641 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.788533258 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.823756284 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.79700293 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.788968215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.148117305 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.801685536 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.807208179 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.798252713 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.790799149 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970179155 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.797846686 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.959704505 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.799845508 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.797314076 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.789078805 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.031662875 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805843988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.333283169 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.803930268 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.790753418 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.878530814 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.966045339 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.316184736 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.804948034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971745925 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.242175304 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.814826931 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.800153336 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.271425514 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.817561162 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.799703771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.793625366 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.793106223 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.792549149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.836472331 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.807051528 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.239917696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.334195546 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.168647849 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.815843264 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.807637903 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.792954792 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.152016126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.801930644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.793543171 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.021059785 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.337719234 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.804926273 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.800356982 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.310567458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.806524729 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.809877709 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.799970497 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.040616798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.809629846 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.837988293 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.792705541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.800157902 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.79494542 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.810615638 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.800197856 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.792716213 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.307002367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.899558586 seconds)
  done (took 223.258204823 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.792291416 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.790777364 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.791844176 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.78962911 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.788200415 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.793085639 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.791466318 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.790095729 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.792427215 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.789979142 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.79023165 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.792438404 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.793485874 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.798051475 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.83587239 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.794178327 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.392993783 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.794851312 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.794256154 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.794186016 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.43570272 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.798232831 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.792349683 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.791323396 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.789539652 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.792432507 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.795066778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.823047926 seconds)
  done (took 165.233646494 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.796627199 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.906358176 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.814579241 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.821618218 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.804101727 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.792685914 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.888011323 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.808940725 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.799922886 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.79499679 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.795617422 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.854994754 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.807790278 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.890314272 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.8217065 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.904309007 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.895310925 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.801585101 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.796035571 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.796107228 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.823012988 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.804810913 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.853345357 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916742487 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.816699793 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.903680294 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.814197096 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.797585485 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.79462377 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.904849636 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.817265502 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.857012363 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.825100693 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.817033452 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.909512112 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.910185353 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.897562115 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.896228587 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.800834337 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.798177514 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.795011806 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.794298574 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.903997721 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.816037007 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.797405987 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.909068956 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.817145437 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.799243782 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.798535244 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.797386094 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.810209153 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.812306862 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.858334892 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.924889944 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.832806415 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.82307191 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.89015541 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.920531552 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.798085942 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.892549485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.801541332 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.910443576 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.817792543 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.79777269 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.800199419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.798565701 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.826047141 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.902386038 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.895418253 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.802282418 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.891014862 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.830288184 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.807084007 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.800335834 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.797366642 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.908057969 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.908008282 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.829566307 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.832293622 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.825617413 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.806633909 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.79373199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.800041342 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.813832329 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.804467784 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.909511304 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.911917017 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.804779671 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.800736269 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.797591758 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.800263273 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.821410264 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.917469779 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.83085514 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.90203151 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.862634342 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.871120125 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.812935747 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.81315292 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.802995339 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.858743686 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.815084881 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.809999165 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.088617633 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.855499458 seconds)
  done (took 194.958151712 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.180139391 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.844025017 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.85092397 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.11046764 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.144560283 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.686336681 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.842350429 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.844494969 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.869426582 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.023836686 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.917043822 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.863312134 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.834301037 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.81661807 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.842560134 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.865657694 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.854993433 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.176965662 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.052280179 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.997833009 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.833094372 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.107496628 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.152715369 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.437530503 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.893157643 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.266322961 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.41484282 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.982756721 seconds)
  done (took 59.437924536 seconds)
done (took 791.919813858 seconds)
SAVING RESULT...
DONE!
