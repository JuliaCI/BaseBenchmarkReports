cset: moving following pidspec: 9216
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.483599701 seconds)
loading group "string"... done (took 0.510980209 seconds)
loading group "linalg"... done (took 9.344606159 seconds)
loading group "parallel"... done (took 0.172067355 seconds)
loading group "find"... done (took 3.510792753 seconds)
loading group "tuple"... done (took 2.108923995 seconds)
loading group "dates"... done (took 1.402266762 seconds)
loading group "micro"... done (took 0.189640698 seconds)
loading group "io"... done (took 0.519219236 seconds)
loading group "scalar"... done (took 57.205256983 seconds)
loading group "sparse"... done (took 13.789553331 seconds)
loading group "broadcast"... done (took 1.350362787 seconds)
loading group "union"... done (took 10.365854583 seconds)
loading group "simd"... done (took 3.582047152 seconds)
loading group "random"... done (took 13.553446078 seconds)
loading group "problem"... done (took 2.171630421 seconds)
loading group "array"... done (took 24.572289255 seconds)
loading group "misc"... done (took 1.153940569 seconds)
loading group "sort"... done (took 3.797568636 seconds)
loading group "collection"... done (took 21.972872454 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.710744221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128089958 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200265997 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.203404905 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276729795 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166761032 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157520165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.148198216 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.700798723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209280656 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137389189 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.359195891 seconds)
done (took 6.156507741 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.374314456 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061146159 seconds)
    (2/2) benchmarking "String"...
    done (took 0.194833651 seconds)
  done (took 0.94475351 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076682911 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.162292566 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108137381 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094670305 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093571796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108253647 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093212267 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108736738 seconds)
  done (took 1.459388716 seconds)
done (took 3.546158016 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.550600046 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.892533022 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507837345 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.188813932 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.305421466 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30484393 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266706645 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.228219738 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090176488 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086234702 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.198447685 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.44727531 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.398164924 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.962242905 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069169105 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093603598 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.160637162 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.787000998 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078724766 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110312271 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.523192199 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.220121131 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115177731 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107699029 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185501807 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126850287 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139842321 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103623063 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670010116 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132821044 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210586924 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082409344 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.136956233 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163770113 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216869079 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110410507 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67279728 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201090152 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09853552 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101806673 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681702388 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118828199 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.210938217 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105969773 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067307574 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.161698055 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113433209 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078054834 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092403606 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099219321 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.157496227 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448456067 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104974223 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.197367324 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091520701 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.710263061 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.095492655 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274209863 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12591985 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095528716 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090184269 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08815401 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153602966 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094035799 seconds)
  done (took 20.228500739 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.191417228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.209770949 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097061042 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143452217 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14101058 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080444704 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087506796 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093791589 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.114176533 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196703977 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.126442429 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.212544193 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075485502 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.1050656 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167456338 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249451702 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110138312 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122367442 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089574734 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093852926 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142624265 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097054167 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094220202 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110954471 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169912922 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203151879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111101859 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128760955 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092004139 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10044608 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144059278 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.149408714 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092467234 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087846158 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174987295 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120712053 seconds)
  done (took 5.434077466 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.234602836 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102449716 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246025148 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188993568 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.126067589 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179168907 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192590257 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105343346 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305510125 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.324570452 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175985356 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114747957 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111883859 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078745604 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079387684 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081153486 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093837546 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.810511173 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169771703 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139461663 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.186217937 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113062495 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0799739 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380346397 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099003642 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084382153 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0927699 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079099208 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224869991 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095491752 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.470727499 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083960619 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112482717 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112825429 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19135512 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134238067 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120749654 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109122858 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084058712 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206724742 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098103409 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076661849 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.094392071 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115698633 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128666789 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104090356 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104792282 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.133364502 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085501419 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107349233 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.063605169 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195297979 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.169039603 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101445611 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.276363007 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104462099 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096849074 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.106904238 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.807235787 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134512292 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081584553 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093651004 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092972055 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077298042 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.474309218 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102201014 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.254543181 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08412463 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159272803 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093809512 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114723411 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.196685522 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084165777 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084135856 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123732884 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085704862 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077187521 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102401477 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078931455 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087184917 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12864348 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084538414 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094247071 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144819775 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097988642 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119702491 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107983368 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103194225 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084112903 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124905325 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082676289 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080766514 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102708191 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186613057 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.113779979 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112190669 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112585829 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142712985 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087556331 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.263785886 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096296322 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125132097 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098611829 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114428296 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11113473 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080057038 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083412662 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094644548 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080852092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146389557 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101443168 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080956278 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087033203 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108583703 seconds)
  done (took 27.185435709 seconds)
done (took 53.535754237 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.427248691 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080279258 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100945336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081756259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081986023 seconds)
  done (took 1.533063088 seconds)
done (took 2.267448668 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.298544994 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.1971477 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087649542 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187029298 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08677144 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193870701 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163000264 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.117937573 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204696137 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083928292 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191231868 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084085139 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085577418 seconds)
  done (took 2.744885851 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102101852 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105068643 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102176876 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118635873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085059557 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100540593 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117513352 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108203454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100311978 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112196415 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085377899 seconds)
  done (took 1.881512686 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100451409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103203657 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092486606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115536164 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085320232 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097751686 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114696672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106538702 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098452002 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11213243 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086130565 seconds)
  done (took 1.857648207 seconds)
done (took 7.220998554 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.206788912 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.966908302 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.155656085 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247074611 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332461521 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297782049 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607615213 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202263433 seconds)
  done (took 15.888017328 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.220922147 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092364397 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090705029 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094816096 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114185714 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096352546 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.097471313 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115988204 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099513088 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092927222 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.116858382 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096159672 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093939212 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092947164 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114809905 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092875496 seconds)
  done (took 2.530120918 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.136799809 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116414389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115761759 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099443879 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093768126 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116143128 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10131897 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097551835 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11296174 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094077824 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101412325 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11454175 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097549055 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093419858 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114591083 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116428309 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094213292 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115288126 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116531878 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098670076 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116274961 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096838898 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.096776385 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.114189748 seconds)
  done (took 3.398089609 seconds)
done (took 22.559196772 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140383304 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084950884 seconds)
  done (took 0.972019397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.169648492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185050967 seconds)
  done (took 1.108463915 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112872938 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090234924 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137192317 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103539959 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09093889 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106869062 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116677332 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107912402 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092851609 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091194429 seconds)
  done (took 1.809293114 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094985342 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094621541 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123070331 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.160878315 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116640578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092989604 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097095474 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114185924 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096765072 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091259652 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112087592 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109076585 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094280463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125884287 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094907068 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095043582 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115406144 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094386367 seconds)
  done (took 2.679207391 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090838237 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092915254 seconds)
  done (took 0.939200491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093330133 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091704038 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093827495 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111705997 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092496751 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091266314 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110288012 seconds)
  done (took 1.439749409 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.527098473 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243571817 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.384254054 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074949459 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125226839 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.325493505 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104386172 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074604396 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093955057 seconds)
  done (took 2.745352066 seconds)
done (took 12.447509661 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091759727 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.209082437 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611561001 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130729805 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.092706023 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148635097 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351195284 seconds)
done (took 2.400419674 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348932362 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.184625476 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084160475 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091374179 seconds)
  done (took 1.467068709 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082241319 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0992898 seconds)
  done (took 0.946516113 seconds)
done (took 3.177147236 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089842022 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088391784 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087584475 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.104738268 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089273897 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090119839 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088891039 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.105069517 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.088478777 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.088363279 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104843804 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088694665 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087273747 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.127584892 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088518035 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087503334 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088316737 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107052649 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089262417 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087579683 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.106164173 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088670172 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.204629177 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091351356 seconds)
  done (took 3.163896775 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110301425 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091548619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109481418 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093200504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094060464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109080573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093787047 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090213013 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109572027 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092068737 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092791022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092954594 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109116802 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094168627 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091727452 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111989226 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093612273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090903647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109327749 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093999355 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092929485 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108059334 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094269127 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092708765 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109511882 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09435334 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09196812 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108202392 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09485366 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092795487 seconds)
  done (took 3.721540656 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096999764 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087680324 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091396799 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11535863 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086460131 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090127287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102410021 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089983629 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08960411 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088996422 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108038843 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088829119 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088784993 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108349798 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091317632 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091734888 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098279506 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106458624 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089520628 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090732542 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110194471 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088856883 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090306949 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106571092 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090427831 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087448687 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093926691 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109414206 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093996066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091724002 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111242168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094963818 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090172977 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099099942 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109478216 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089569074 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095571635 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103630311 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091296828 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085813495 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086516403 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106276084 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089028524 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095370547 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107975598 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090063546 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088993609 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089962938 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10744857 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09142642 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086621092 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105622785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091722759 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091350686 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108621224 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087936733 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089231267 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08575087 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107441805 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090046546 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08777232 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.104464954 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095262445 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089922997 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104407637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113623597 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089596392 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090414885 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107588383 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095844684 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0916944 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117073213 seconds)
  done (took 7.690950669 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114739989 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098807703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107903202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09125594 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090410618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089751862 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111665841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090062852 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091250945 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11382313 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090317856 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090653997 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107701109 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09194148 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090260774 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090099182 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113973919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090128705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089732298 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107758533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09225468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09414033 seconds)
  done (took 2.919521665 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237745001 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097341066 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138038692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120689837 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107996193 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119723505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09486952 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096759665 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111292245 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101752403 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099639136 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111514512 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108913363 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09909149 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117123757 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100020238 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110411998 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101237722 seconds)
  done (took 2.849168916 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103168025 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091325749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.151879764 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091416935 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092909987 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109306873 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097108635 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111254743 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111914126 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092256726 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098748756 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109888482 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092000078 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092191463 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108854225 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093578787 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092799981 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092103775 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116274373 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096639261 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097777754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116061833 seconds)
  done (took 3.036268463 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10573854 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091938714 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126585945 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096524556 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090897492 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090655072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115236231 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091901272 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097450739 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109753522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091637202 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092055391 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124040177 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093135539 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098120502 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109817712 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09210596 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092089682 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108498765 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092419724 seconds)
  done (took 2.786418722 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.18691556 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125679592 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108970968 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114994719 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126056398 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107325238 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132990899 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108137805 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107510474 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136287976 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1081742 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107544485 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133216481 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113246535 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124944252 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116059313 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1152892 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136120129 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108498129 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124056581 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120501966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108933371 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13285851 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106976098 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107798962 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12519236 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107665536 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129426405 seconds)
  done (took 4.160260433 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091480783 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090162077 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089495788 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10779674 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091774028 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089580235 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090067487 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10785716 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090677327 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090833312 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107098292 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092133981 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090417285 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09008132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107370775 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091197863 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090506369 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106907096 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091784098 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091383786 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090053382 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107539509 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090407449 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090365489 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090809385 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108364115 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090129933 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09024524 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108473908 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091017944 seconds)
  done (took 3.632854681 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104585614 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099941643 seconds)
  done (took 0.985656001 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098251685 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105143111 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091489016 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109901978 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096934039 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092119069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117584234 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098156759 seconds)
  done (took 1.592298503 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.187169764 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.209233511 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.115732553 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103111026 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.20827221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.188057358 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131212722 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097421208 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110585453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084119873 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203026002 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083515732 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108729758 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089707535 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091434682 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115263121 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09548941 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101638935 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098055885 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111555467 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096708211 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096394333 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112331137 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10246993 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086581539 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112638094 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095007496 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101454399 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106097306 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093017773 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089591559 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.110291698 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095506432 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096785107 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109713577 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.189036618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11775308 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088276614 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092063659 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115849562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12419168 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092409766 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113536144 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09052583 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09585128 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114661427 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096853972 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093190272 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.102117463 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088169305 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092904912 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104648693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092901816 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093016483 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10923733 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100019764 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09494469 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105132964 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088972502 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088166936 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090901735 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106194536 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094524823 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094140498 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111092244 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09290408 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092176611 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110241061 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095490065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093223891 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108790335 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107130813 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093508604 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115414947 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098345306 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093369436 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106818649 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099233629 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091856545 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111424211 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097329778 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121423397 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111308401 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087945115 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088656415 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098448319 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113270771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095038215 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085684234 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118565409 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095668596 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093799564 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103403205 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091377982 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088738202 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112679869 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086317475 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092998324 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091153767 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115677408 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09765512 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091163947 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111854771 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09834369 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098773556 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110043818 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.145167625 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108789287 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088773902 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094068166 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116646262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088379462 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091704991 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09190379 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108464992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088541054 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096880733 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111026077 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094699999 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096960519 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111349947 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094523862 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094952201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109339637 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090251461 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096953779 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118074537 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095815347 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094398901 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093571334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.1129526 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092753514 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097390462 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108562824 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0986234 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089663764 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.110699647 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095295888 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098559278 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111416721 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089853766 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091429493 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112438171 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092828988 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096350948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094478744 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108071526 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086068525 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093221119 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108027687 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094114394 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101425022 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107488454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096809592 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089555271 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120147047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090947151 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098189208 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115214051 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098837371 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098258691 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084934059 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109069324 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095653109 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094947518 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108915044 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095094093 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093682216 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119873895 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0875243 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097846694 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10350336 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092441365 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097871449 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095470583 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115569686 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089374522 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131682635 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125766131 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098830023 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092837404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11237651 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097168738 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092650646 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.116997457 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099681996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099358736 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111440292 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093125176 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09928721 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110442763 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097458155 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091116863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097000915 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105447885 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094385141 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085761233 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.116869484 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09435691 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097739649 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11889969 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095014522 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092579327 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119982712 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090109604 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096224518 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085958097 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116750299 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102343017 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099205072 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119188051 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094795294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090238029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113399247 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102817856 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095298781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112545492 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094642174 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086128021 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105974568 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100973741 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.094970404 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088659614 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.112217998 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094233417 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093805099 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110855107 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086736356 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097204338 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116006839 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088815279 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093085352 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110613612 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092706773 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100052398 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10524212 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090975764 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09496098 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117962622 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09429671 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093228949 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096523845 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119600766 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097072335 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095385988 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111346373 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101546725 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092791465 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.11372725 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090137226 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096974573 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088032422 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.116187865 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094791856 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090914845 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109346769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097110563 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099369278 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118575251 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092355718 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099008279 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120225374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100320014 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091812982 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118669053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091093846 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0881582 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.099831847 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107410404 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095319654 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089666092 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120825 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093595274 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092040006 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117129526 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096380316 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09105593 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117801138 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103802842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087784888 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106669446 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092779406 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092548572 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109342031 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091380721 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096034732 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114426411 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099892819 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096626073 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090398164 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114341317 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099405217 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090894824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.121070497 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101035652 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101158092 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109494232 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099069758 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09048077 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116258956 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087963069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093109455 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112700312 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103045849 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09039398 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091829732 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111337328 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087879607 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090663365 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120191834 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093698977 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098518023 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113091452 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091935828 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090773376 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109689073 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101331601 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092216618 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119743789 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096387023 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087596303 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087835439 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.118949229 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093741641 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100085636 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109826442 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097990251 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10124239 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116781562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096331962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101987855 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103265638 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120468724 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099021086 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087935664 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112895939 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098358864 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09555888 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118166222 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096252593 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088000793 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116446195 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101358898 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095465803 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111757459 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0876438 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095046812 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10090334 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117821342 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098449438 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095840558 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11469853 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089921797 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097848259 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119480138 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09610324 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100521999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115005769 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099203827 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091226493 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100513759 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.115762615 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088962588 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08756471 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112019244 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100793358 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087379559 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119255273 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101652814 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090800871 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093676009 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.11891347 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091031106 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096361046 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119823461 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092049508 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103789661 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.115869842 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092809393 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099210911 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118871111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089107535 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093428235 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113033408 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102006734 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09246662 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100128284 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114446667 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099345633 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097369437 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119390051 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099645934 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098972774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107865058 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101622987 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096551571 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116201571 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093140865 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092378562 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08931763 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113314272 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100418964 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091455123 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121637041 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101722606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093181263 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112558498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09968881 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09288648 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121638047 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091768206 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0958289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108691142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096636243 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092539101 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101141412 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112159631 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089534436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098903712 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120061366 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098647962 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097603262 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120815722 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089000987 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08829523 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117837837 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092921471 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103226509 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117123382 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093752735 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092297052 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096854737 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116929462 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102339734 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088433439 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111492596 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094733356 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096541568 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112991954 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090088012 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098665193 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113824647 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096280774 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092923254 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089818249 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114378205 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101075157 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09356171 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110179171 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091226949 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100908028 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113834602 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090771862 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0884543 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120431475 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096609535 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101444231 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.11089785 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094773124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091652145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.116242762 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101345861 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092182605 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094184707 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113185145 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09869472 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099291123 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.1089826 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091491698 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104238127 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120012899 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096058393 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097692608 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113841808 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10132985 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101155845 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117007962 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089839479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088652157 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09279011 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10827488 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097385811 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099367053 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114480461 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093021032 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099904301 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118005769 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097572976 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097052507 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088123603 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123096236 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092460594 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098251364 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10888088 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088691389 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097233598 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119837826 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094181737 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095286033 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116479305 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098446798 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088990151 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091778805 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119148867 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09921205 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100271736 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114751468 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093027549 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097839408 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12561383 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098105162 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093791571 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123036925 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102031626 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094639939 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113871894 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10186559 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101318625 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117797266 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10330008 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094420073 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093373542 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122709677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101748967 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103960941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114537738 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089442642 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100162737 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113242276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089185685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097995649 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122545907 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102072473 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09446887 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.112403754 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103848947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099932168 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114982847 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093353786 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092949168 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098974581 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113229649 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097974526 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092267042 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122923948 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101775131 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100944991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124623088 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090015447 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100268363 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117722307 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104001084 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09598306 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108506854 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090714648 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097745732 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102936905 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.121396023 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098989004 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099629866 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120252048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096651774 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095388436 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112330442 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103230527 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100239816 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096244141 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118407673 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094386136 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095203879 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.116930773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101475208 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102834307 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117024838 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105694113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102296395 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113616497 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093838038 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095456366 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097938039 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116234023 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100693716 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092469411 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110615822 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101124135 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103050756 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115872951 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102917807 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102346975 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113880053 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099254009 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104049642 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119907956 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099133114 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097138651 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098315954 seconds)
  done (took 61.876293159 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144909031 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105728379 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11780034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098761869 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115212378 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11998951 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09766062 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098907003 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120132539 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107413162 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097692346 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117427173 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113397222 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119384648 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135240769 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108655814 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118190906 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100425287 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098835563 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098662143 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132463488 seconds)
  done (took 3.203841581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114815353 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1103788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129285202 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111267059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104256047 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129475117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109090861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129243952 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112027749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105702287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131708769 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109595077 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.125682779 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106183627 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106397859 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127565014 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111929971 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105231573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130123014 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110140755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105333569 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12839341 seconds)
  done (took 3.388135413 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.12735696 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101293586 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096072402 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118936173 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100847961 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097994012 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119965987 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098501137 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107784486 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093295401 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109435134 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093259983 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096274302 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117958619 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092706343 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097820615 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126187219 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102377931 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102828735 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097746358 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109510146 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098436969 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098969341 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109130747 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103169927 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102847744 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097862709 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121852665 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08956369 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101808513 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120068139 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094966178 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08893136 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.108565095 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090101794 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101929286 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100933327 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119402863 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09903297 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089502914 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118725622 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103199247 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089701919 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098242179 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118825051 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092909172 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101210074 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118089348 seconds)
  done (took 5.826410238 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127979472 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155387149 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102412641 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125912794 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134856494 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10756743 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101594968 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128978727 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100228549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123592941 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113511334 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112260129 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125994878 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106302307 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101245891 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125957951 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105187467 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101360914 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126913974 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101573056 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106896685 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125210213 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112340259 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131309238 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105529101 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102505277 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101225615 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126772731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111419234 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128040042 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105698641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107348075 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133689887 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105479771 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102259731 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124271591 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113428419 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102483248 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124300836 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100842619 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103797814 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126754817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10596247 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112229983 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124310684 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104884623 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.347557829 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.124977237 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112435719 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103413861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.13012612 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113717971 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125881521 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103542378 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106012636 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133086984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103220018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101025223 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12434523 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112709917 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10102647 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125635113 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111683099 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101763639 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129752855 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112484443 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124390686 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105555525 seconds)
  done (took 9.006327304 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131992112 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107041774 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134357212 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112946163 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105472924 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127322979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105331542 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104661718 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127931315 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111452084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126878713 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217039701 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124574773 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110164191 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105289533 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128216127 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106389169 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105335063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128472197 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106063255 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126113627 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113090024 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106256718 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134404146 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117341326 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102494841 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127346362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106833785 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133871566 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105827981 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116425652 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127993733 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106815257 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113180126 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137208544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106657742 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121373587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10668951 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105911845 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126537604 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103036807 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113002175 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129169311 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102527553 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107020513 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127364771 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114946059 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116671979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132430106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111436739 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126748425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114939933 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10683793 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.129801421 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114369467 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140416244 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114632482 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11396145 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127538348 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115482997 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135094767 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121950361 seconds)
  done (took 8.243457434 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100169726 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099203701 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098637019 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119339391 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100372698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099332724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098445555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12087831 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099637598 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099812915 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120927758 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100472651 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098354093 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09857316 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119492913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099032279 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099650363 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118885275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099481043 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09882424 seconds)
  done (took 2.946801142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108539418 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116621579 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121510482 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107441881 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101246844 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127496937 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102628169 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101816117 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100851917 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122583606 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110167308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109656088 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.122890668 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107913138 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130251757 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107944513 seconds)
  done (took 2.657104762 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119577984 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116600156 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.201668947 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103680441 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123918286 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109000492 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102675241 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126295625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101409019 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106720655 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126820568 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106250852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103162139 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101738279 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123656589 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104555591 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100926275 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127387365 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101957521 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207606705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105348058 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104501598 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12651045 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106268621 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102862368 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.12989737 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107408034 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101925576 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.127100818 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105092294 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103883985 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130200308 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101845237 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106327362 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102848958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124362665 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101560505 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103369275 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12686193 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101994315 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104553941 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125073945 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103603122 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105271137 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121860716 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102974821 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102051081 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107358416 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124118497 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104445966 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101881144 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12960015 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106779219 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109813685 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130775657 seconds)
  done (took 7.176112476 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113531607 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103682696 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134483803 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100860174 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10328096 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104110311 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125750095 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103655476 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103830589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122964984 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10587309 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104879522 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124383626 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103470842 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103625438 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124733528 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101289429 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104461109 seconds)
  done (took 2.849513039 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107157674 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101497776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105932352 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123884538 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101869965 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102849063 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123174563 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101528628 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101936304 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101618668 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123769212 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103157977 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102085863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124583237 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102384194 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102281307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123536607 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102104554 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102892739 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10079296 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124179565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101825274 seconds)
  done (took 3.251505676 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113635627 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.231003814 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109342644 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.240654128 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.123068217 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098404926 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.108502439 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.124283443 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115939463 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098405892 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121619061 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09836322 seconds)
  done (took 2.449856389 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129758923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140447391 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125506785 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10457588 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111879251 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128907751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107261287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108852496 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138565485 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119704497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128964675 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116588914 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114134779 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13628738 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112367624 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133103526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108035403 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107476781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125508329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123232694 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109014302 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136458239 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107680632 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107169267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128771154 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115540136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137194425 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119345441 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108523173 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137596965 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112101726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107053274 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137743639 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119072317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126251169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114738561 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109007447 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144043163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112217289 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137506188 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104415364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112896977 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137534329 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113219388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136542426 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108451987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113188074 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128854871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108204282 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12941609 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134697379 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116710438 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133150236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115869416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115824891 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149715597 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118994954 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137465708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113459028 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139869539 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116803027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112410974 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137088246 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119627139 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134082689 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117482024 seconds)
  done (took 8.926028019 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14215033 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104483265 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128866107 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120342161 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114903829 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12975841 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108416176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129231306 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109541961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104746593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172539207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109499212 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116615867 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137436006 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109321118 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130534885 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107774469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116482773 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126230612 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129069724 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129121196 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11697952 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115948711 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13752479 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121994694 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133459863 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109180576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108243096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129730477 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109213004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113511772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130221744 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117082174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105884245 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137025516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108392996 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107758253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134385255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109690419 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133382189 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116616655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123685064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129879178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109455628 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141074921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109264726 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108705994 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12557323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109065956 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104958482 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142853252 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119855319 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140487044 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116246822 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109447016 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13362282 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108326183 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10885238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130295027 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113326513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115481417 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130560193 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129223509 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130669703 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109203957 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11532688 seconds)
  done (took 8.86583576 seconds)
done (took 167.969444056 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.178223183 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21483301 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199719921 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156189195 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093929292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15382116 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127155077 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201393675 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093857208 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09318508 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117375859 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096902873 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161223701 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116348218 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09442609 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096239299 seconds)
  done (took 3.063771694 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194583193 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.348478346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134383809 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.097450522 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100322822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099300112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121085703 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101881993 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099232209 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129404508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100600508 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096286923 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128472205 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096385813 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099396306 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120473819 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107718218 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099579878 seconds)
  done (took 3.155404532 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118793467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156201012 seconds)
  done (took 1.157220237 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129343197 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21448352 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293377952 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169178561 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119664589 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140380214 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149804526 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.1324669 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190021987 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132772111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111621737 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097588702 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147099205 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104744277 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114753632 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120179023 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127360236 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134766468 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114377305 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101327984 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146046905 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10356045 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105222043 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136370706 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180671374 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13382219 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104261026 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102583571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123294179 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113572782 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10664287 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138294134 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111302588 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178362723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103068086 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174506548 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106519364 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123089239 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113241093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099544145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124676454 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102934707 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113057498 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118845108 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103348055 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106217963 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125257162 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102993483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129255799 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107895027 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107723951 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128434333 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152090978 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12844442 seconds)
  done (took 7.884094219 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.885346493 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147185241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098562371 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.021427787 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142679628 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112409095 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847658362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147842934 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259138157 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893134695 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116215299 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105538474 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.259303661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258198723 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.292003714 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36045153 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.712518944 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133585841 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129409162 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164505598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105747729 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137401515 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115316863 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519356851 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100069395 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100691232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12596943 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107612614 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177111052 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099738659 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103684412 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194554712 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291903902 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209828958 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101261528 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120144733 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099598362 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184144094 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.278297425 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220638799 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169884498 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117360097 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098794698 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104669329 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136556723 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09726603 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17762795 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16820664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187969775 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125581572 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108737806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106317165 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124855287 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153970159 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120846599 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36027946 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362157397 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099466769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128301708 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111828775 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271120761 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124005952 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237254027 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122428504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216131669 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099875333 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.88179708 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186091357 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120330625 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105193368 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104042724 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126503751 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103326729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187330709 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.4802538 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106674048 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126887273 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099841321 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233242933 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099528923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121411762 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159738119 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124077548 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10567055 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107810929 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128323287 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185139697 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247603602 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128147469 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106252352 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105220143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13233427 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100973245 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.240603047 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228035828 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175280346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211349121 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125972807 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.176948976 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16250348 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127478126 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.16502493 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12776267 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110851428 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124323956 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226125406 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133494416 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122425515 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105717061 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105823399 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158706202 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103524809 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10577965 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185779659 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557029567 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186276136 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09767055 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104363439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127627784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158008345 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129072323 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269273448 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107676927 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184910575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105742472 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118848263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107119118 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178273607 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108523698 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106633653 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126250755 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109351372 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.2793675 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222531301 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109319019 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250669383 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198889072 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105166432 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.190393441 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105563217 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187935505 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131941784 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10469719 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101098496 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869624136 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133756733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105480792 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10538763 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206039206 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099492533 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102323186 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122036052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098413226 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.867179625 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103158021 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121224975 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103655282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105426189 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128814894 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105429236 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104282765 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178448416 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24388718 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130286763 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106462322 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098935745 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180462633 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102700023 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123843205 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100734818 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100500617 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129363898 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105222248 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104064161 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188700366 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177877498 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228011459 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638720936 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10087585 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122861838 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242147538 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099598984 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325118124 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129302974 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236240877 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18344579 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097964538 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360380769 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185858491 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183782296 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127471078 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16722108 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120851332 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105953826 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179697016 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100167761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107209 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174533657 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131006286 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108845029 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280400845 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100966039 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255785231 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097998383 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188140862 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123885266 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106566475 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326353934 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10077864 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134397492 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.154561516 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129791639 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101352508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.676693779 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100618424 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132976513 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106762832 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230952091 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18456952 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106634285 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13100608 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109533692 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179043645 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236992614 seconds)
  done (took 47.623065827 seconds)
done (took 63.762656177 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.224256413 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167099352 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350764637 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146610559 seconds)
  done (took 1.886988707 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.262614022 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163909739 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.245017536 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098979225 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250694571 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097702651 seconds)
  done (took 2.030728382 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170193201 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163934609 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141353762 seconds)
  done (took 1.384781833 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207219851 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206071135 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345862054 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233088553 seconds)
  done (took 1.984435944 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.275061071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116759452 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124532293 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226371759 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.248218285 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205928014 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12327491 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173605543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12902335 seconds)
  done (took 2.573226796 seconds)
done (took 10.769592907 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.374045365 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.306118923 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.163899032 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.250261718 seconds)
    (5/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.311991745 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102479969 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.15678953 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.251305258 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106888625 seconds)
    (10/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131333988 seconds)
    (11/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.283142482 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.381870872 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112406254 seconds)
    (14/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.232260403 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.168087707 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.35489671 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.256995222 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.329322352 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11036085 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.27244708 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111019741 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106015671 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108526727 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129749689 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.333309833 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.16494824 seconds)
    (27/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.241691472 seconds)
    (28/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110421795 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.270074196 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125913605 seconds)
    (31/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132997671 seconds)
    (32/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112520113 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111628039 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.244286255 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.411172838 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077379956 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13718479 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.131031924 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10612309 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.079878565 seconds)
    (41/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.170933786 seconds)
    (42/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117560188 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.101424512 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.218155682 seconds)
    (45/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119321971 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085279471 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.147070372 seconds)
    (48/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.165812863 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102746245 seconds)
    (50/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.276986553 seconds)
    (51/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10541589 seconds)
    (52/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.210795869 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.322163785 seconds)
    (54/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133896544 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.123642628 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086673188 seconds)
    (57/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.146489037 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.341445691 seconds)
    (59/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128842488 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.144476396 seconds)
    (61/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.07989334 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086498904 seconds)
    (63/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108532652 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.155080867 seconds)
    (65/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.322289153 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079298733 seconds)
    (67/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.139700974 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080987387 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129421822 seconds)
    (70/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.176399918 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126032472 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11088832 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085558806 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.122506872 seconds)
    (75/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.164506132 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12445643 seconds)
    (77/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.143675191 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.212213585 seconds)
    (79/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110112655 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099952455 seconds)
    (81/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.157678646 seconds)
    (82/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081588062 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156051826 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.196683704 seconds)
    (85/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079982545 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.177224365 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.143717875 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086134627 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123245504 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119001339 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.13115045 seconds)
    (92/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103939759 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105558158 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.147479989 seconds)
    (95/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.13664548 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110760197 seconds)
    (97/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.102700996 seconds)
    (98/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07868648 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103495602 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103566085 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124834041 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112299319 seconds)
    (103/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.142150393 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125794275 seconds)
    (105/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.177047273 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093067488 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086283161 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.109121307 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12957195 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085624368 seconds)
    (111/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.08389632 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.215585647 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082084783 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.175625656 seconds)
    (115/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.164153384 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079608024 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.103073583 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081128968 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.228384441 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082109984 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.214944465 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111520373 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112954858 seconds)
    (124/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.137720342 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.146549562 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092015651 seconds)
    (127/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159830026 seconds)
    (128/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081851944 seconds)
    (129/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101621788 seconds)
    (130/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110637707 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103140739 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.133059951 seconds)
    (133/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079207297 seconds)
    (134/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.079668397 seconds)
    (135/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.079060049 seconds)
    (136/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.108928807 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125119429 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123243777 seconds)
    (139/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.107914914 seconds)
    (140/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085466256 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111830011 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081719887 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.219528454 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081257135 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10369807 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109009502 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086319945 seconds)
    (148/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085633522 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081858835 seconds)
    (150/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082295442 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.110846386 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080806334 seconds)
    (153/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081947929 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086039232 seconds)
    (155/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138036269 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127147806 seconds)
    (157/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080061023 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100827739 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081065871 seconds)
    (160/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104038248 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104785355 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110959334 seconds)
    (163/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134462035 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124530287 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107573383 seconds)
    (166/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.08013466 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12664929 seconds)
    (168/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100748419 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.079295431 seconds)
    (170/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154838697 seconds)
    (171/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085110642 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103342064 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110077369 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.124048863 seconds)
    (175/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.08248171 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086351462 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08316379 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085848429 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.127726838 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10504206 seconds)
    (181/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086798039 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.145394893 seconds)
    (183/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085705254 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103723515 seconds)
    (185/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079577615 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124404252 seconds)
    (187/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082500393 seconds)
    (188/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079863769 seconds)
    (189/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083380858 seconds)
    (190/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084874214 seconds)
    (191/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101941237 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111885705 seconds)
  done (took 27.466449817 seconds)
done (took 28.382939862 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226733853 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130075142 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111338639 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110727884 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.233036763 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118411868 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152764225 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112837137 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120051588 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137221149 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103059225 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123519786 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134876115 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.246591637 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114386415 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102835211 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.125837137 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122607551 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126518366 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.151575424 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.21031624 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128365554 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121002652 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10221341 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23489409 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104249457 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136384012 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113076389 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123623504 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136958015 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.113395091 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102249271 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151423259 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.127764029 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101617752 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.134511143 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103047823 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086493769 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.11186666 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137186933 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126289307 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112594618 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136429285 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105420245 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112228726 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133995458 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102601617 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114140737 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12325863 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112959843 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10463633 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126094928 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135611507 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101033153 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100366341 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.128414543 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122201838 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10194066 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148154886 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102252361 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10319115 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124906905 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114231997 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101308194 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110613402 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126097557 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112473854 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113160769 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.133562037 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105338174 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101834542 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.133784771 seconds)
done (took 10.070974816 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108449203 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146114049 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248259698 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251702312 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153896548 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119734939 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11553053 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151128682 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115103511 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119751981 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.164497487 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134747799 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254436183 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118370268 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145333857 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114228547 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112611242 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136327984 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.252847998 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129466893 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125438961 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144341695 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127904796 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144204063 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107672753 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12951036 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137029883 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115762865 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.1066742 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14873089 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128937524 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105995837 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133807518 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124985717 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123095298 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140843558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119878406 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11423635 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132401405 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107846967 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113731688 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146562759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107693285 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118416455 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139296339 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121926993 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114057024 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.144318189 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108334629 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114254906 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.131810722 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132287274 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119439207 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147094279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119368694 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117812282 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.144508634 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118962901 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109131825 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.142751925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107463472 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106130002 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133227787 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127821133 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109525768 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.14392064 seconds)
  done (took 9.798485525 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126490963 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136638126 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142353369 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118242658 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111976651 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124563461 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101534914 seconds)
  done (took 1.825981172 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10315666 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.269837147 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259048103 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.260389312 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.25104997 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.273015934 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125732178 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.10227527 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164962466 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113818793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268461991 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325029613 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139438642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119227444 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264179651 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102080364 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.263108668 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128371503 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118908275 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263178445 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120175895 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.159118413 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117170229 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10287558 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263716039 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.129824234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.309734572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121093146 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112595249 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143974864 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119916987 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207957742 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263157322 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117660527 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111064756 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.2599593 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.251567168 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11674398 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.33985644 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107704432 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248377886 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116955362 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146565145 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1189389 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117272372 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.245684214 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.149434858 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119516292 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116434777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.272829913 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.14030345 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.237962128 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142342663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117732548 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114048936 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146628801 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124401586 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117545367 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.272351544 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148562393 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261561215 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.262683351 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254007234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260828222 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128290355 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.267086759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.239279833 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118411259 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111865502 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145705534 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.263006393 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118010632 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114771797 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.249834401 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148318652 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.263521142 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.26390109 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116947063 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116664139 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106193368 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.145071043 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104274301 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.2526565 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118919909 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143588642 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122219076 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11608475 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.14455994 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108611249 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125945851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142192989 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116191735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145822818 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119223349 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120091101 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.26436512 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140663679 seconds)
  done (took 17.816422777 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106599762 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106022225 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109424015 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130006421 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105183504 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105105537 seconds)
  done (took 1.65016936 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141728269 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118555397 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152411267 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119267702 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166114425 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251960352 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260427303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138987407 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138363697 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130483027 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254227001 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256513811 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256325246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121401899 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.25998211 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120105252 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260470274 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144526391 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128360814 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115282937 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144634383 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122859152 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115130679 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244470473 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118856695 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.149257787 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112831173 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.152645991 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127503375 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112480291 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.147938348 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120330716 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111427049 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138989119 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.262033064 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112500209 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114867191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.147646169 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122038739 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119208894 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259785353 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116200258 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.153658294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121257083 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111830001 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139686813 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121382033 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136641033 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.235024642 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.149380476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122244304 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118602248 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145486332 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12248101 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110907636 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139466515 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121776669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260623443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121650016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139716527 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120742472 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11871133 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141121376 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124328004 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119805728 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149544806 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112408823 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119494636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.162376763 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119823003 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121021723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.145171083 seconds)
  done (took 11.830086532 seconds)
done (took 43.871669087 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.672157491 seconds)
  done (took 2.662010088 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.108783327 seconds)
  done (took 2.102763671 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.770025053 seconds)
  done (took 18.798324781 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.41534077 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.348976294 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.047287208 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150290271 seconds)
  done (took 2.959203294 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.062605526 seconds)
  done (took 2.073064107 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.338755166 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.252815457 seconds)
  done (took 1.59054079 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720190825 seconds)
  done (took 1.732993882 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.765991614 seconds)
  done (took 2.76632273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.271837237 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244038524 seconds)
  done (took 1.528400573 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.695364493 seconds)
  done (took 1.706307301 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.531053337 seconds)
  done (took 19.547799667 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254318805 seconds)
  done (took 1.271210166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289719387 seconds)
  done (took 1.306671842 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.533715607 seconds)
  done (took 4.548478532 seconds)
done (took 65.594638496 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119302002 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122615475 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121160159 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14560096 seconds)
  done (took 1.512326298 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124011145 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119213572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146886766 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119350114 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124492126 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118154777 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142910229 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122064782 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117355076 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147803738 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119063281 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117039744 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146446843 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118712432 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116349819 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147379807 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122599135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118649634 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146242378 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11975076 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119592864 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14437089 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123261253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121621497 seconds)
  done (took 4.079997252 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115174388 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109733663 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111051873 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133586695 seconds)
  done (took 1.490911604 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125922576 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131035982 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152689639 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125384046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130580901 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15490986 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117598189 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115803483 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142840219 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125592139 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13435602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155971546 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131385227 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119911378 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153864473 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113831302 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119409458 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155193225 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125262018 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127947697 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144899874 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124741632 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122977395 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.15277596 seconds)
  done (took 4.222795841 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.1963871 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131892675 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174965573 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163628609 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178978839 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116477198 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14606298 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149988639 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125625503 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119356762 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146454848 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165485884 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150816698 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120167287 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11878898 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150354968 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131523979 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124147493 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191646713 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123678277 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151613862 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130545885 seconds)
  done (took 4.228904794 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.121963558 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109835001 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.131036196 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107474569 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12222405 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111359498 seconds)
  done (took 1.731398518 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108989848 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103732477 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103699444 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128272464 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108113503 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103877284 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102313401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130908244 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103669232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103602676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128924856 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102849085 seconds)
  done (took 2.355986789 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204703553 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14553779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249308005 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394248406 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190694666 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160128493 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309219506 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186045087 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178026792 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164722509 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183061734 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190488088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153610377 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213752368 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140206378 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.186146997 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174053923 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23834331 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16923547 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214649179 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182428203 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200193478 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191894436 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175955392 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139387886 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188911494 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120639001 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128129021 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194666628 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164939295 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202473804 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179020297 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141869531 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213597381 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262906259 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178731217 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27165573 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159360285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172993914 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215676712 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256251108 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142108244 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218206976 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179307383 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130297216 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217479468 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149797368 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210528658 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135377496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143788976 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210979481 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206594848 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169172852 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164295499 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323176593 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134543492 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167946949 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179167921 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214864411 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225879351 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178841204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121840561 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200160269 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216571859 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244062553 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142009649 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191083065 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125070727 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191014198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20486995 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211094111 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187769867 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241675943 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131382023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197999997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166385408 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182229762 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205943924 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200072141 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119530888 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179528447 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13448588 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125774457 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.217595395 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122438179 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243702904 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13054384 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209013864 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206627913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154305406 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190131957 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161592971 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191439963 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147680552 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102027272 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17276899 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157524717 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185595071 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127992096 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179702065 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14015443 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125033336 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178502737 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121840535 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198658012 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135089621 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188026088 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169784688 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158137457 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180476692 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175201986 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161049807 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194645607 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220868432 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132116701 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1311133 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245009556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197236604 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137596387 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197967947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194375982 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.178615851 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134767003 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193901761 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192952043 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169693858 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225346567 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139063044 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134325964 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.168562964 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198606331 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16076075 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.186690717 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12831585 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164420016 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21365912 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152661319 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13953465 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209095119 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13441994 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123919123 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164334239 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136754431 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142401062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.178643491 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138016271 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18181678 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166247911 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193449075 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157504373 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161555344 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198920373 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132159779 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167433974 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175785266 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119683907 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.201285647 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22636307 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129589394 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180146931 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189278981 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209079439 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172570003 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1562971 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181630701 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156683815 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120180052 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188559941 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168593338 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190984573 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189246516 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207083193 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191540245 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163164545 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176879149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196105601 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183100099 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185335942 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139566511 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19867001 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171001433 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150354149 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123129008 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128104722 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165116372 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130132014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135855424 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209737729 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192568 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201695992 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167235668 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13693225 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21899447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123622426 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187459025 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202229066 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139504623 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21648932 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190036517 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207688176 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138885398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190567463 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120709504 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151841833 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135215393 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160892623 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165332669 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135109172 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170080649 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190733977 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19710161 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148910461 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218304822 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192591891 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227079547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12102911 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161105779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193587319 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167916987 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211891151 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134115128 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187528092 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190785502 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169729128 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191053378 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196183178 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20614632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192326699 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192332385 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130855278 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171064168 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160335011 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138028104 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186151384 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143126492 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16022157 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148424326 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.166404182 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140201844 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214705643 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142722954 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203349999 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153139695 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19928133 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124821824 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16995787 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173429435 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172704431 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105590459 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193398789 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191212483 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177752698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15066706 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199115166 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12976257 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343892085 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179090715 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198613071 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136056097 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167283034 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1710272 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184429686 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158637108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213224035 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168207851 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208954868 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197964195 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138693891 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158004778 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147949779 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149122129 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167088906 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179544904 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163056015 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142533197 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215086388 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164689115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169778763 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204215777 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146216742 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177494504 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139498844 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254917986 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168224168 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201249323 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162419427 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190385574 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209841352 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123506927 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125940761 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160559563 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184475855 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128068673 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205831854 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191463254 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20931461 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173744578 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188913354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141790677 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125650067 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196171068 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14713861 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213978824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160839608 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136799588 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21354131 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128469346 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129650372 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187148786 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312947344 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146468056 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196472823 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107943525 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307766604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130502754 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131748019 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184992552 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168084977 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161345821 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181149732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201063763 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141026085 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18729184 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134979431 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204978461 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183151915 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195608702 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203487163 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144757947 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190380841 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156646745 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199298525 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145477438 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175336755 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159054343 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22292386 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.172874027 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15993343 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168638431 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197247986 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170506279 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204031599 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138366639 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211681086 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127313249 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19489067 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13742494 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153935804 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160185081 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193394083 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130407289 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200111914 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170593117 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15883275 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126743962 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17521859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166470464 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167002729 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130744072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215002835 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128884673 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211999831 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208530582 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158395217 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169592978 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168859906 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131273502 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137621333 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171579555 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130683567 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176378202 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201177034 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129329267 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202394023 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193298447 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163202123 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182359188 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141899744 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.291820922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127744982 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218131239 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149614456 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226481873 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14884687 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204984238 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168666464 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180954056 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165999156 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177194184 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219990242 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194579739 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166817719 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159926045 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143332748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166453854 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135316881 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150076578 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19725222 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142625289 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.165313053 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166089705 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173818782 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145980528 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167629957 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19943477 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179091943 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187082467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213937367 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1374565 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203443651 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205730289 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12833454 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192583459 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171871306 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172188269 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153416998 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133671487 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166996838 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243068635 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127270381 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159163484 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203233412 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168532773 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199930953 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134463649 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20753556 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140149558 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205215716 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127063673 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179239443 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169577209 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163237026 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127805085 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199301712 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160641171 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193440785 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142632058 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175045401 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220732141 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122768755 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162891006 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285988794 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188545289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221991808 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133332097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135566987 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175891038 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158835654 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.196534111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169329125 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.158178385 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130593422 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145123815 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185429601 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139216063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19626029 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179768846 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186333566 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212957751 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134854195 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.25371166 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171959964 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170557601 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146297838 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130572117 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139703117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164586749 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141903431 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209080452 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243367259 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163557197 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.179175673 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141026201 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124495042 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159104684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159176981 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178415049 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168695076 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175906529 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104122456 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139023614 seconds)
  done (took 85.015800802 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176407341 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171445593 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.191784206 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.240576138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219144171 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.310642651 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.253123478 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.264833484 seconds)
  done (took 2.94057422 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119166593 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159238471 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142107993 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144215141 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110062803 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.496282057 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160105054 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120992333 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161443012 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152542615 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13590979 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.569865275 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122205672 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144446811 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120724933 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134552276 seconds)
  done (took 4.095679128 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.992108721 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.52857681 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.815609208 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.302066976 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.240550011 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.236383886 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.262627351 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196170448 seconds)
  done (took 12.680890227 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.175181476 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169414952 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46724525 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.326787396 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.215033914 seconds)
  done (took 2.468417666 seconds)
done (took 127.830473433 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124762826 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123799872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124094986 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15479035 seconds)
  done (took 1.630624491 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197298652 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092688916 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123111567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.091977694 seconds)
  done (took 1.61830593 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375906112 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09215906 seconds)
  done (took 1.616194572 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145063205 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135307252 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162486769 seconds)
  done (took 1.568477289 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137530683 seconds)
  done (took 1.25177094 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118383672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116666897 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279149202 seconds)
  done (took 1.634515252 seconds)
done (took 10.438029074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120182317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925128291 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43410067 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133993319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713001519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428538347 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.42774929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176014152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172403144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136542088 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133793641 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690902622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.437499836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880916476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397782749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901242482 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695462935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112100408 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145039455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112546973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404848441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137447859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113398661 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113062341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71604689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421706725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111087137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912906166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11101807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113569759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425807732 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112352284 seconds)
  done (took 20.976895102 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113082488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169282994 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147288233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113166003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114640095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14003997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123181227 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124380448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202161634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110875131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162552518 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111501724 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115913549 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140039792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137521413 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110443177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14239353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114502648 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119059386 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139111394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133911593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109913116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112909286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142131684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110863451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132298437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138860523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123646545 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111062197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143136711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11631138 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111828065 seconds)
  done (took 5.263456354 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.16069568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178751534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149365771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148868825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190298876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114250404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199292679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178843427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205616745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112273043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132783375 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139665933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152408892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111725765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165998724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111749273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113888275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141307576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120544594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112668223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161309241 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111715366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112689095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141521458 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112259748 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133745757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139128105 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124374613 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11204523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144225094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117390934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112953224 seconds)
  done (took 5.593982072 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127017459 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127264612 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134828465 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163512393 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122747236 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124410698 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154726082 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12212916 seconds)
  done (took 2.207597243 seconds)
done (took 35.166610512 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136520513 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130382868 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13206929 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155980193 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275089237 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119711159 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129201237 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149105135 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126759837 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133517092 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110058293 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151328724 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132139668 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123084916 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.27508603 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.159429061 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.281145519 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.246472981 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.152485936 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129473151 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120344467 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281945204 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.156875562 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120768865 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275493241 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114770917 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.265078418 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122495642 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.12243715 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.141612766 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.281200519 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124681067 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119776361 seconds)
  done (took 6.614347792 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.22769077 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153444786 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121713705 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119878694 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121233961 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149431347 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231677741 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150865836 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12114246 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119257844 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151972677 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214541896 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.157392616 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116538237 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121629775 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110979636 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.26298198 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122340621 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144800471 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.09525814 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116732407 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118498194 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.276301827 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.147378596 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.120346694 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120063955 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122060985 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155654622 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122544727 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122163936 seconds)
  done (took 5.579812602 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125616839 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133842052 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137449944 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216477868 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149363306 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161728993 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138441431 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133903316 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173314382 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113411592 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129133545 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181238122 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130795221 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124414949 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142720878 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131802126 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129869448 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144439694 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122818074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132431024 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163385145 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131198235 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137343512 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.122055101 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.144244566 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121869805 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120462633 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.153941638 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122701662 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12924421 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146395273 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117788322 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116228859 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178297545 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115087904 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126991083 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166478894 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127323151 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126710614 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177317657 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118379223 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114984556 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169843857 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171242887 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114958022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156958907 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126725707 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128345701 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.142177254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134891916 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155762304 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.147736046 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135800531 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112500002 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.142049551 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123521002 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.112784891 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146438839 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128978052 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116337352 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135934756 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.151019977 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12577054 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11502348 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155424397 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113038453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113111907 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.146737205 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14021643 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12154202 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180492491 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114224215 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12577472 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156542807 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125641774 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126814036 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112910522 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154665974 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126243582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.118829665 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156001952 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117258387 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11702531 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.160932246 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135757299 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128592565 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.155546104 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127121013 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11665662 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145198665 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133190026 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11554411 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.147227089 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128307629 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114633688 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118336811 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156655898 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126431912 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111349617 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.169663839 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11860859 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114384748 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167878437 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118950382 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119375428 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151771513 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156339878 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117433703 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154434625 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127929457 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114635419 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122208819 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146239264 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114392036 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129388798 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.160133127 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123461871 seconds)
  done (took 17.050233004 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.375593232 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.365931206 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213233722 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413741173 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.160719555 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.25420685 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396372229 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.370439741 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114225551 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179879514 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173990083 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.332892367 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147082524 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148811748 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370081583 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.446504636 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171978113 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.186208869 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.151180644 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.161579944 seconds)
  done (took 6.293779492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135234075 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149655549 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166763111 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143084801 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125534604 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161953352 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115292343 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136307003 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156088346 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124790263 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117094016 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161332466 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12803694 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131723291 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159028556 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148093539 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123947713 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149241168 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138342201 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119069377 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132458307 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141222566 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123836299 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165597393 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134378023 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125847354 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142824735 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119713973 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121475125 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122760027 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150583649 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134688045 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15054391 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106626393 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126698574 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129889253 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151486507 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119528968 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120763282 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146087466 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130595641 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12838019 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.1223297 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129944101 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134513827 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111606741 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127345731 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.15954092 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108134191 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135132156 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159682638 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130025499 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122024108 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16638109 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122707736 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131946732 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155302527 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129731582 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119629794 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141604651 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113336908 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11852627 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12264325 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158985248 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128161857 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135294871 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160327837 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116044534 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118336715 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147064005 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.1192597 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128557583 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164729829 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124864964 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121140612 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156395186 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124513151 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096098196 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123228442 seconds)
  done (took 11.767148036 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139306749 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126532108 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132568856 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179209357 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128381239 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120371635 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155104089 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135085696 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.13060694 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.164249108 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130614745 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128823617 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167186944 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126918734 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125006681 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160701857 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129248458 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153443748 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161801062 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142621683 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130170199 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15033278 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128233254 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125586786 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173823914 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127340925 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140388435 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159030796 seconds)
  done (took 5.146378164 seconds)
done (took 53.583732752 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.290568701 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.488805921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.269528241 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.263834363 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.274633649 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.269789381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.265409008 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.272291772 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.779711057 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.235679788 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.265786761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.264562072 seconds)
done (took 29.103877252 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.667373289 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.412431186 seconds)
    (2/2) benchmarking "String"...
    done (took 1.581564972 seconds)
  done (took 4.163094557 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.256944639 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.257507825 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.503694911 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.258923193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.257891795 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.257551528 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.264834365 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.261593809 seconds)
  done (took 16.219199556 seconds)
done (took 26.465950283 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.296161326 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.564220426 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.537624531 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.240137513 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.26123167 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.260036058 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.280895721 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.322335273 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.257648718 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.239953738 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.672303914 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.528547698 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.258077398 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.663963253 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.236363816 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.267903218 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.27291035 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.641394513 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.259866555 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.30031825 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.2354532 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.255145978 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.280441328 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.27091769 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.264275066 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.263265493 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.268184382 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.267061349 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.634433557 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.27090878 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.239339635 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.276844786 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.262920957 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.260734855 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.268457285 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.274046988 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.578597791 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.26861435 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.244344634 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.280760396 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.598709256 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.271077163 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.257211566 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.265564345 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.242698223 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.313184266 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.254075817 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.372207982 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.281300675 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.263884788 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.307093039 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.649536065 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.26835324 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.288547718 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.260805395 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.611070306 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.285038128 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.349137663 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.289297043 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.260336386 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.260450358 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.259592261 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.301279738 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.281222929 seconds)
  done (took 148.277127318 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.259798251 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.264259037 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.262650945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.323858113 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.262681542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.263849568 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.260119331 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.260692314 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.265792617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.265960672 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.265657501 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.261040781 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.271888229 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202341717 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.268919013 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.282828564 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.265583669 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.275463957 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.27483756 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.260751923 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.263460924 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.265270942 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.278388516 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.262271067 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.272723839 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.351469616 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.302104449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.273665776 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.274518039 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.261104083 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.273280832 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.311703875 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.89311089 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.135406225 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.273464672 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.295193927 seconds)
  done (took 82.466571867 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.264008276 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.262217139 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262432268 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.296622062 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.26502801 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.848679375 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85207017 seconds)
    (8/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.267258063 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.320749853 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.79391851 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.655958535 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495129491 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.262940309 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355051757 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.275140961 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.263460467 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.264206571 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.358056905 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.288480537 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267188618 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264873098 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851052195 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.28026801 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.620861912 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.444662296 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.280810386 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297405107 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.65477053 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263665384 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297146563 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.597004635 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.313639207 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.263716095 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.639566584 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.353876893 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374982084 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267310264 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296837231 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.2678121 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.547255145 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264071717 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.265735378 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.268084692 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.9354921 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.268382872 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.851518178 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268168358 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.229522881 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.265050715 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265106 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.446150858 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.94353181 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.269017871 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.265604047 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.267707416 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266422635 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.265510192 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.298760591 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.334090793 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.133124898 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.266847725 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.269171418 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.299972152 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265821504 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.665145175 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266987355 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.544022647 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.326832612 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.492604049 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.857128716 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.270112681 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.266400557 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361438408 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385430294 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.267790579 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.268038606 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266167962 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.267518517 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.379024486 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.269725391 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.97655711 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.44583596 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.28542153 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.731026678 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.368946594 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.269051642 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625015179 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.271170663 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.26789195 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991595269 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.26811827 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362432687 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.267019332 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268032703 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267286215 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.977451938 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85917483 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.569114643 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272759327 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.096127724 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.269264962 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.150151073 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839871235 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885279086 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.268458513 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379014235 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.446212371 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.286720342 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267048002 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.75243145 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.273288231 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.324545982 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273182337 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.66675164 seconds)
  done (took 386.414226387 seconds)
done (took 618.317454144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.124649399 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.070167619 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.22352572 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.083680669 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.063410445 seconds)
  done (took 11.73319803 seconds)
done (took 12.901681907 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466000221 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.468899403 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337204634 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473798822 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.310633137 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488612206 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453984969 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.29268986 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380390287 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.35451171 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387080589 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.32522637 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307760261 seconds)
  done (took 19.215039578 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568671205 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284391279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337399312 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542775068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319180298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566627725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.611532862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.284132012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446489833 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315499735 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.297875383 seconds)
  done (took 18.744776467 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620602855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.28415869 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357624252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544706392 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31890452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.568751034 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.609370693 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287102084 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444657879 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.320187588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294439728 seconds)
  done (took 18.820448405 seconds)
done (took 57.951889387 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.312477848 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.374325137 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.308811958 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.292389092 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.28964151 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.291781562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.29417253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.290458185 seconds)
  done (took 11.62439997 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.289307087 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.289322794 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.28950777 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.290853057 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.288555906 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.289396753 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.290152788 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.290535902 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.290257132 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.288841861 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288274259 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.289533492 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.289076469 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.290427257 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29114111 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.289525064 seconds)
  done (took 21.806520384 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.292650627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.291436339 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.28960782 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290177272 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.290533175 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.291051148 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.29107938 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.29000029 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.292100862 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.291071449 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.291487662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.290616482 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.291133719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.291785371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.290560252 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.293299167 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.290200755 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.290701477 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.294425816 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.290286157 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.291629111 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.291290942 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.289480365 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.293588869 seconds)
  done (took 32.163497848 seconds)
done (took 66.766556649 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275125727 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.282103472 seconds)
  done (took 5.729607969 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.349151199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.348674313 seconds)
  done (took 3.87034878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.292435284 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291581305 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.291408271 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.29255602 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.293476368 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.292872553 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.291314878 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.293387598 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.292134038 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.293302424 seconds)
  done (took 14.097119103 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.29241481 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.294202142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.292898829 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.292545245 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.293883433 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.293035863 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.293637089 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.293660298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.294363318 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.293133073 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.293052622 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.292143882 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.294117033 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.294676501 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.293624622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.293182988 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.294982962 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.293697017 seconds)
  done (took 24.457758858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.306738457 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.312930585 seconds)
  done (took 3.794447733 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.420401927 seconds)
    (2/7) benchmarking "second"...
    done (took 1.334941188 seconds)
    (3/7) benchmarking "month"...
    done (took 1.398430406 seconds)
    (4/7) benchmarking "year"...
    done (took 1.389573712 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.335080229 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.313757424 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.334390728 seconds)
  done (took 10.701257079 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.280678354 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.58242719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.764592596 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.4350707 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.273202672 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.29855658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.257629214 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.301505857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.303132161 seconds)
  done (took 14.671752477 seconds)
done (took 78.496851665 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.277715078 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.310927619 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.298902514 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.29758505 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.610947079 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.307221959 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.284676475 seconds)
done (took 16.566746189 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.26176539 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.262325866 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.27577379 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.293225973 seconds)
  done (took 10.267617709 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.294068309 seconds)
    (2/2) benchmarking "read"...
    done (took 1.606370761 seconds)
  done (took 5.074723302 seconds)
done (took 16.521374696 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297249217 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.296834391 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.296116387 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.296849911 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.294900366 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.295834263 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.296160496 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.296342036 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.297028818 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.295722427 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296586809 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296665171 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295139081 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.295624653 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296378175 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.296319452 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29637642 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297667303 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.297265977 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296263338 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.297776824 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.29736724 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.295152865 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.296314044 seconds)
  done (took 32.292373506 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.297373876 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.296528661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.296987539 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.298462443 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.29720945 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.297095312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.297546136 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.297344891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.296870367 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.297268756 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296403507 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.296543595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.296403542 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.295828837 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297820889 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297991795 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.298488102 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297324517 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298771082 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.297856865 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.298142485 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298507124 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.29828324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298977428 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.297325293 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298854519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.299407535 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.298071453 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301463564 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.297763583 seconds)
  done (took 40.111834303 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.303511526 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.305332438 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.300018332 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.298606057 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.29959354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.299092874 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.299311394 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.298541248 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.299588029 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.300444155 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.299389442 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.300015016 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.298822723 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.297704847 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.299133193 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.300921335 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.298284905 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.29902972 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.297616684 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.300039067 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.299936806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.298945507 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.299311824 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.298327807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.301454637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.299200593 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.299031431 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.301703257 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.298634949 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.301301892 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.300570113 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.300681664 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.300764894 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.300969413 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.300988246 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.302495842 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.305592334 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.307007881 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.300737358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.30041121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.301053496 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.301375511 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.29992058 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.301614886 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.301648698 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.301378369 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.300522291 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.301987995 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.301258652 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.301816272 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.303692316 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.301947039 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.303125859 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.301221289 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.303231781 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.328463574 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.30210582 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.301497921 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.301574776 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.300011766 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.303367429 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.30236395 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.301981561 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.302052725 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.303111892 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.302990702 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.303199334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.302710254 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.301134548 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.30304656 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.302163111 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.302284131 seconds)
  done (took 94.884779307 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.302363478 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30236827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302656908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.302436603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303404408 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.304260498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.304736375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303117861 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302852618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.304178875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304185338 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303076401 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303380298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305114654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302869694 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303884106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304560534 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304150155 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.303710752 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.306009118 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305895467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.304338754 seconds)
  done (took 29.867821051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304286204 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306213048 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.303944207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306350094 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307325964 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306501752 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304774937 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306375718 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305738836 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304905708 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30570283 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30530663 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306626888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305402773 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305566057 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307736414 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306912797 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.308688549 seconds)
  done (took 24.692277737 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.304460146 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.306190696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.306328094 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.305237579 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.306828579 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.306596836 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305205854 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.307183943 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.306787142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.30732212 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.305743927 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306575336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.306160119 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306441154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306608664 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.306373709 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.306350528 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305495534 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306545484 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306789374 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.305751682 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306704388 seconds)
  done (took 29.923810049 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307032277 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305982546 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305440505 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.307645097 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306722408 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306954594 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.306455853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.30625001 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.308913384 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.308001096 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307642092 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.307768144 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.310176941 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307981588 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.308299734 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308640896 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308417932 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307456289 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308070911 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307686319 seconds)
  done (took 27.338236073 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309034358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309447126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308693435 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309727416 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309155467 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30936931 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311228995 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.309714222 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31004006 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310085328 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.309783098 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.309387782 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310354972 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310096108 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310693761 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309661861 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310758951 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310902697 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310691896 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.310203912 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310982277 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309887625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310691803 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310301126 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3104241 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310269381 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310864127 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309446532 seconds)
  done (took 37.870396104 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310802752 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31033692 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.309217832 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.310847632 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.31031337 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.309967963 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.312089985 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.310463866 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.31108173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.310828 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.309362079 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.311221529 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310830807 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.312716567 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311342615 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.31225734 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311640773 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.311747861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310962022 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311205477 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.312555123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31160612 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.312272954 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311414347 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311652477 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.31106731 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310832549 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311216113 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311563561 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.311283846 seconds)
  done (took 40.524592241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.330182725 seconds)
    (2/2) benchmarking "in"...
    done (took 1.329046103 seconds)
  done (took 3.84837569 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.312348481 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312990695 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.312395366 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.312482523 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.312004862 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314403743 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.3137103 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312946214 seconds)
  done (took 11.694304172 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.304093038 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.312978126 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.313105817 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.315070117 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.312649082 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.3060082 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.314147118 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.317365606 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.307825285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.308255568 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.314185183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.312484743 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.309740029 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.309019362 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.307749687 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311545676 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.317838423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.315405577 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.316017915 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.315154025 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315571088 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310349416 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312519575 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.317883907 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.307610289 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.317353001 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.315781314 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.320564488 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.310280823 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.313634531 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.309936908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.31872402 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.317719137 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.315887354 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.316452349 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.317848052 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318872727 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316150136 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.317510317 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321712767 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.317666007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.318325142 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.311503615 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.314199148 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314257345 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.318799376 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.315532267 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.317120139 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.310429946 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.313016749 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.32440515 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310164275 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.319053205 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31323101 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.314017653 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321943541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.325633754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.313694371 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.317334552 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.321638447 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.329160411 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.327858495 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315710764 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.322696885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.319850013 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.33503251 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3236573 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.32524465 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.320683226 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.318943623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.320314349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331007649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.332519899 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.324629761 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319085194 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.319964997 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312511771 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.32260595 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321632512 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.324127252 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.326161747 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320180094 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320343848 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331396882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.315081708 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.324946226 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.318893302 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.320995956 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.311153397 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325327251 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.329726377 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.320576896 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.311979657 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.315069853 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.315539598 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.32346388 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.311964447 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.31493811 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.323069962 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.319662813 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.320468729 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314258973 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.322239465 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326532809 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320124713 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.32518353 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.329755694 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.31321507 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.325983645 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.329528565 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.320382538 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.314217135 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.320337754 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.32469276 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317023381 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.324447264 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.327040127 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.317312679 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.330223141 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.322174285 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323617558 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.340577797 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.328123145 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.321913146 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.3177919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.331693929 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322428034 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.320418118 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.327939177 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.323308476 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.321659798 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.319396434 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.329807511 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.3177341 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326661858 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317414123 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.326923372 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.323013139 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.323479131 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.322071834 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.322940777 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.320691054 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.324013095 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.325328491 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.329269523 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.319960043 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.332945634 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.323569091 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.322523472 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.326079929 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.329936458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325536829 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.31863881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.328603883 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.31606657 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326610213 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.318651715 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328495185 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324282408 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.326156639 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325051679 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.317207015 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321208864 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329540663 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.324041457 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.324452001 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.328080846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.324736944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327527178 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.316577776 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.328553135 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.317232772 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.32190752 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.331806195 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.324531342 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.326555741 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.324460416 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333610458 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.326426861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32552394 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.319877114 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.328472183 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.332224761 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.328258342 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.336820434 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328415342 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.326201088 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.321411021 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.322914681 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326399776 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.322140512 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.333823163 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.334634243 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342905085 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.325087586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.330032655 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.319882739 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.331452135 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.327704362 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.336375553 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.329522824 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.327406059 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32295018 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330986796 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.321659595 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.332071402 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.320362296 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.330516413 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.328670964 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.327426355 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328437323 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.320651152 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325994601 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.331515668 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.326512783 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328937867 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.31976122 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.333683064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.32111155 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.324786265 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.332456939 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.328109379 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.329947953 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.337541967 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.327815857 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332464337 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.332397832 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.324376754 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.331059566 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327081841 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.328322798 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33334262 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.33342627 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.32589059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33661491 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.335237509 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.324117901 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.330845341 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.33981991 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.329623521 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.323621913 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.338134539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331070991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.330795583 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.330093226 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323504344 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.334605916 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.334309992 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.338437668 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.323888613 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.334401255 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.325509209 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.334974289 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.327654499 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.332975414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.334137409 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335386959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341825551 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.33256779 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327231009 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.335055509 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.331936253 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.331105849 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326697562 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.338777009 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.334102386 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.334227171 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.33097322 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.33009762 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335397662 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.325711961 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.334390137 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.325845597 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34393295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.35554578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336004207 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.338262929 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.337785553 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336066737 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.336006804 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.329490513 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329124042 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332737818 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.327744671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.328171524 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.337308761 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328572586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.337429038 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332062364 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.336341098 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.337078533 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.334944396 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.328751544 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.338165959 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.333351284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.334967281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.326024472 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.334431665 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.32806634 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336339575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.334550717 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.326614938 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341083528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339097903 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.332924389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.330849755 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.33085022 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.327682454 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.332167912 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.341078869 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.329935369 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.339935607 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.329905572 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.336309332 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.331352561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343555943 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.347108135 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.331107408 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.343671233 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336304165 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.326306385 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.329520698 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.336444891 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339525585 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.347673173 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.3290504 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.339301344 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.337577485 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.335964291 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.336194133 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.334936277 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335375155 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.335671592 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343472876 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.343228477 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.333387887 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339229049 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.347030639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.336829541 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.337829193 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.329437456 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340023774 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.348155332 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.334020382 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.335560755 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.332837476 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.339872505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.3387498 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.335890422 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.337279365 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.338490334 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342787144 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.342739321 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341808933 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.338837757 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.343892274 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349244249 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342923564 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.35212353 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.332858742 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.343730916 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.337398931 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.332978165 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.334364773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.335017609 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.340907467 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.332418447 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.345337587 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.339885397 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.33573408 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.343026067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.345454423 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.332256671 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342141725 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362214958 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.331276427 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.342962958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.338806903 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.330943409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.344165507 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.339439957 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.33153323 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.336764579 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34062328 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346092509 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.334217348 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.343276524 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.333465714 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344726808 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34058377 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.340687238 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.339994633 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.341404867 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.334493864 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.342690424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341285759 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.35220131 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.335555384 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341769011 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.337889826 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.349566191 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.354184894 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.33654667 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.346416766 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.341856943 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.334424521 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.340959417 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.348921681 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.335481298 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.3450423 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.334463759 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.341625778 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.339664366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.345153329 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.349248269 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.346255466 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.334955236 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.336782278 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344812514 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.344181077 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343286915 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.34002458 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.350663922 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.336016202 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.336273599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.345025681 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.338237786 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349253154 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337945132 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.341329509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.339614815 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.346955984 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.344031531 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343769951 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.335019047 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.337617866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.349608918 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350449777 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.34435133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.342149213 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.347628588 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.33791512 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341632595 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.34401832 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.338733272 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.339922939 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347891667 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.339360768 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.338570765 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.339179152 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345243637 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.34983967 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.349187993 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.338806965 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.353247509 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.354606403 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.351667675 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.336571306 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.342104771 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.33931669 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.347428633 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.347259166 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.33801811 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353881294 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.353150241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348465994 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345436669 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.347322811 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.339363308 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349180693 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345165402 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.343697475 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.353464643 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.343157525 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355310481 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346405134 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.345935693 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.338660209 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.339736265 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.342744672 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.344936305 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.347267548 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347585152 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.351720378 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.344482449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352754245 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346211304 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.348492311 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.34855802 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.340386059 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349637599 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.340491286 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.348806168 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.352005159 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.342229307 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.350898515 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348710839 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341587959 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.34763867 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.35492039 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347042336 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.341823249 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.346269448 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.355706342 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361180805 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.348730659 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.342756041 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.345995312 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.35246136 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348448499 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.347492732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.342459715 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363283173 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.362560073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344305605 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.345521295 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.35252112 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.359473432 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.348293476 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.349956686 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.344190653 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.350211152 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.355767597 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.351461089 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355422364 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357719897 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.346444937 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.353310411 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.344277171 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.348677825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.352844822 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36178891 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.350543138 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.346608793 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.363479958 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.361383863 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.352532622 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377243311 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.358923215 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.351046381 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.356894601 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343868767 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.353513934 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.346427317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.357337318 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.352084423 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350477192 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.351612304 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.343676002 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.355332947 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.360040192 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.362229587 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.350239925 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.342841569 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.347210832 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.352253147 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.351822542 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.35179937 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.35345862 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.352465171 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.353281531 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.347182794 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.364833924 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.371710575 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.356783732 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.353541885 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.352298475 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.354192316 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.358145109 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355014854 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.360567745 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353322219 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.355300519 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.353111841 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362450416 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.354046552 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.346163127 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.348061084 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349841344 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.356453671 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364071642 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.378156931 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.357776381 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.359167086 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354226691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.352395913 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.34804493 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358774173 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353946096 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.34765623 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.349579757 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357617287 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.354375896 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.353073244 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.349825438 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.359784074 seconds)
  done (took 796.825288284 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355119988 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354712572 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.35376922 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354589564 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354557163 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353999085 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354352761 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355275629 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.354882581 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355067621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354734191 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353419141 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.353515403 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355007251 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354979351 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354713662 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355935651 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.355409034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355767959 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355287 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355225511 seconds)
  done (took 29.676512384 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.35496478 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.356366284 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.356475667 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356474151 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356234019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.356472943 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356675206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356156244 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355593172 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357003032 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.356295419 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356740891 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.356471382 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.357061251 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356826669 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357623491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357167152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35748564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.358377241 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.358405539 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357257771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.357657737 seconds)
  done (took 31.077377605 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.35764494 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.358754219 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.35087727 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.363442429 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.359511402 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.357578178 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.360032433 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.358359133 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.357966679 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.350919638 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.352171992 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.353525681 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.356931828 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.365248622 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.3563782 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.363836757 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.359926237 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.35918869 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.360085279 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.359295343 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.362426544 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.371415952 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.357690912 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.350113263 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.362870259 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.358730275 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.360140535 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.360525083 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.351598666 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.364454569 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.358886125 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.353154579 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.363622272 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.364589281 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.35553727 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.364756605 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.359655073 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.358044774 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.360801706 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.362767971 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.382658272 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361541353 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.366584389 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.373664293 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.360517714 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.355832537 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.366590015 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.360425032 seconds)
  done (took 66.522006192 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359990326 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.3622012 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.361618629 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.361309115 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.361880989 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.36005641 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.360093764 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.36084767 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.360919083 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.360793603 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.360866696 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.362160477 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.36177819 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.360799025 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.361494559 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.361228228 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360538738 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.36077235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.362276469 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.364235915 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.361926954 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.362371567 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.363491197 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.363013096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.363272975 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.362432418 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.362435314 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.364164309 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.362532701 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.362358044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.363405783 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362719291 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.362961152 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.36258318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.362818041 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.363479819 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.362735043 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.36438679 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.364064388 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.363130995 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.36392854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.364724591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.363727722 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.364833346 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.363926817 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.363734501 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.364330346 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363617486 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.362414014 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36461516 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.364868572 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363565762 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365006654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.36454896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.364516658 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.364844506 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.364852339 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.364807012 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.364497053 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.366012108 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.364720632 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.36609464 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.364695747 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.36458196 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.364872983 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.367043349 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.366093317 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365603898 seconds)
  done (took 93.932320111 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365611978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.366101322 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366494602 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367525466 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.36695481 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.367554044 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367036067 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.366424579 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.366771122 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.367121664 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.366750671 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.366289815 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.366637251 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.367716859 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.368257848 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367053631 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.366474412 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368726202 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368005263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368571371 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.368551399 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.366838951 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367913264 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.367379104 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368447545 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.367685075 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.367254414 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.369066739 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367946331 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368101172 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368743448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.369560321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.369183123 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.36998269 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.367883886 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.367866733 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368337102 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368618211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.371039755 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.368872762 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369728264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371437138 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368849427 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.368507229 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.36980973 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369821906 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.370251182 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.369833096 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.370704522 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370229413 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.370447576 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3696688 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368827148 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369846349 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370540479 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.370861941 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.371496823 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.370725328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369758279 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369366889 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370702028 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.368944586 seconds)
  done (took 86.090169668 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370830655 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.370121324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.370044794 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.369965522 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.370969407 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.370343872 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.371170445 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.370887466 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370212196 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.371486067 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371784704 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371301719 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371863509 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370950825 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.371005785 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372631955 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.370756494 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.371987763 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371423372 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.372602911 seconds)
  done (took 28.662832872 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.370827308 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371866851 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.371432821 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.371172259 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.371935152 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.37180686 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.371446057 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37309532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373392259 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371391792 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372555242 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.373365015 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372646152 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.371636519 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.373126671 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.372223712 seconds)
  done (took 23.194829099 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.373907163 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.374465906 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.373318812 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.373360221 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.371462993 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.373738487 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.372414345 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.373836324 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.372363735 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.375213304 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.372857326 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.373604294 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.372479885 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.374245598 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.372914569 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.372836952 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.373372145 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.373859285 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.373726525 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.375065785 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.374898375 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.373202727 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.373865813 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.374126973 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.374620895 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.374857185 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.375690418 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.375038598 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.374964428 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.374533237 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.373372934 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.376438701 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.376086713 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.374282021 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.374744466 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.373445234 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374868041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.375491428 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.376650065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.37594956 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.373761932 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.374483553 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.373723189 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.376212022 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.373918757 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.375132871 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.374843553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.375798119 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.375785104 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.375837476 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.375786013 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.376147427 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.375929648 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.376710416 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.377685075 seconds)
  done (took 76.84193522 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376493054 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.377408029 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.376765784 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376337314 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.376717949 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.376500276 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.37560468 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.377978231 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376953719 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.375988683 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.377028428 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.378360271 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.376495193 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.378043968 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376833546 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377805955 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.377305046 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.376812648 seconds)
  done (took 26.03046776 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.378421633 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.377528769 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.376647424 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.37653888 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.377846558 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.377501661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37737993 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.377101943 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379317498 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.378700983 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377582118 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.378366485 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379160576 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.378169125 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378260339 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378716107 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.37927621 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380260871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.378487086 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37977026 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.379273862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.378200778 seconds)
  done (took 31.568561263 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.369860461 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.369856594 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.368264275 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.386320554 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.388846457 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.370316622 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.370315735 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.370284732 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.393217852 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.418907857 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.411578379 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.387452622 seconds)
  done (took 17.852708511 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381081231 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381045724 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380851662 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379539489 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380808967 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380808268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380175522 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381234387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381896786 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381885516 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380179362 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380518637 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381920782 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379836003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381366822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381850108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380736817 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381099429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380268458 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380999372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380876393 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38097345 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383161309 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380748378 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381343037 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381429924 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381706223 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381720597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381942153 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380930486 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383228576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382198382 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384674898 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381919135 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382545976 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382951298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382668062 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382838673 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383765193 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382952382 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.383082598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383995072 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382436008 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383366388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38348184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383456673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384522765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384077354 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382681764 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384114161 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384518247 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385126502 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381943731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383547557 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383016627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383560467 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383172078 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385557483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385512594 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385430391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385071328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385177298 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383220885 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384604067 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384306078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383334403 seconds)
  done (took 92.494264921 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383508374 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.384121211 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38322447 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384409641 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384990501 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385509457 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384511414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385133741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38679381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385504237 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38585033 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384546542 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386086183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386145399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386025827 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386126171 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385470736 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386735552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385523682 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387284053 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385423221 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386450426 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385729615 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387049034 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386502403 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385559542 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385634817 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387690226 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386330633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387157145 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38603077 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387411685 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386408731 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386119424 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386626615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387293324 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386007175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386843794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387748848 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388224061 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387110905 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387420735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387546872 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387610832 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389241761 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387545405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388438244 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38842923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388493953 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387584048 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387083167 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387470318 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388701456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388186558 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388795936 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387549178 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388058775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387623135 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389147635 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389711938 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388412021 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389845064 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388846892 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388448573 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390731344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388522715 seconds)
  done (took 92.790822969 seconds)
done (took 1867.788874889 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.543675166 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.502262971 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.381016871 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.389859473 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.37970712 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.381125753 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.391582499 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.379825308 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.378282067 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.380016821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.38012576 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.57250163 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.413681485 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.380743251 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.379996182 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.476683116 seconds)
  done (took 27.966560751 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.410461859 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.391314249 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.511684013 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.388020718 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.409951385 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.590222694 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.449364018 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.389169812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.572268436 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.406520247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.38434259 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.406846898 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.386040954 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.383480778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.405332583 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.591561911 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.671986234 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.391976876 seconds)
  done (took 30.397792681 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.888552082 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.464842314 seconds)
  done (took 5.610660902 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.407517398 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.389058083 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.386982148 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.38369744 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.377162041 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.381909505 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.385450665 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.379780625 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.3775692 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.5302537 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.39313558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.400343337 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.386341006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.388567387 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.394110356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.435331475 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.54877436 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.397883582 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.394178769 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.393847159 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.385612093 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.481621359 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.436408148 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.398788719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.526348014 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.384356343 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.393283365 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.395045796 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.505170129 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.396842892 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.387030099 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.38754422 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.389184455 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.379838238 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.942778026 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.383344563 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.414145705 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.397241454 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.394985432 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.521914877 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.391565527 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.397173307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.387621858 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.940037354 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.507344256 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.520133904 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.385000263 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.387803057 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.3902299 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.456081675 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.392173944 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.391386034 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.450606284 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.226066251 seconds)
  done (took 88.527074131 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.391976323 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.380105594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567910471 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.402549294 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.380994052 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402471188 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.404612935 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.709952723 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.386414273 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382757035 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.718763561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.049965127 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.389171839 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.450849943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.431694442 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.442135751 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383437295 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.415968509 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.38581924 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.387395049 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.983589969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.393094721 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.382683044 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.47585752 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.426620625 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.991753792 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.402302808 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.38636326 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.409144334 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.381459353 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.014090628 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.389589243 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.437734949 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.385016375 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.69618408 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.824000858 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.776054783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.387531564 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390548825 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.387256733 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.410189192 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965003649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.797685397 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.38316405 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.383448757 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96995576 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.382588886 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.386075108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.395665479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.661391995 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.387438488 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.384564157 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.386215418 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.383052875 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.385352076 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.446872504 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.445001825 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.97049949 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.386556471 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.38437758 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.419489777 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.386183264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.394333348 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.389276513 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.388120955 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.799720876 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723405098 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.394259461 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799821008 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994807585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.384835666 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069446457 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.385672022 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.424804567 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.430853123 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.386859366 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.407332534 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964888169 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.40364073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386102803 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779787034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.385424731 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.709594011 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.405589231 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.388120024 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.007074193 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.401943888 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.439266666 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.387477844 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.40904295 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.390411554 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.389327547 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.699062655 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.462887661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.387949267 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.386776744 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.396533143 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.388431177 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.390117094 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.390004662 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061832126 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.394776945 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.388481737 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.410713702 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.386548252 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.393494952 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.38838209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.39170939 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676370177 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.393235275 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.396195757 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.389519524 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.388557034 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.41046401 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.519342456 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.389913458 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.735700657 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389529134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.397999598 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.394883731 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.388894289 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.462725883 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.388198368 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.40947538 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.389430969 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.711093568 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.411611033 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390125433 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389886918 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.390035076 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389610301 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389867442 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.447648876 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.392012351 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.218518149 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.396522226 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.403645686 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.388640205 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.393430788 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389841479 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.397206183 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.391470393 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.721933694 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.711040159 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.721652259 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.39124363 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.39064463 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.256510419 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.396533786 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580280044 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415314402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.392510667 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.695935417 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724537788 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.394048125 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.392148802 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.394902496 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.679455302 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.396585814 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745917176 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.036478638 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.392039814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.392970484 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.233555848 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230262519 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.397601512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.394656996 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.721203017 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.41623551 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.390763377 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.391589362 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.393140537 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392213028 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.393089597 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.398624556 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.390934188 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.392556535 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.683266323 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.592944377 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.417697176 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.398513469 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973720107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.417213844 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399066349 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.400530185 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.399365541 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.393838097 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451009039 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.399583801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.394632954 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.394386535 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404275996 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006006157 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.395077465 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.399970989 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.593553856 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.167977996 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.395312182 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396048698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.394181431 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.456994957 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.004083588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.418884716 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.743884943 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.398637436 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.438334402 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.408006574 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422802333 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006053981 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407413795 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.394416816 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.187600286 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.394398156 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.877421053 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.395001926 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.395246455 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.107298318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.396334418 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.395371787 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.394831401 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400073942 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.713510241 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.399762767 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.437607836 seconds)
  done (took 513.929936165 seconds)
done (took 667.689183886 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.395118353 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.401567655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.402037953 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.401345596 seconds)
  done (took 10.872297725 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.414493421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.403573905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.414900388 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.402665185 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.413201814 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.402795559 seconds)
  done (took 9.724785989 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398098724 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.400197155 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.401910571 seconds)
  done (took 8.474837959 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.633072283 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.430333767 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.800582941 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.40934099 seconds)
  done (took 9.549205695 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.414705146 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.413332616 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.412812625 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.414043479 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.41960966 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.41578726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.413769265 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.415184608 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.4159113 seconds)
  done (took 14.006935901 seconds)
done (took 53.904550699 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.664051279 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.615497794 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.403504735 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.527433931 seconds)
    (5/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.570884249 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.40608974 seconds)
    (7/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.522112097 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.51187665 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.47326655 seconds)
    (10/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.47308195 seconds)
    (11/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.377047562 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.389772435 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.434886601 seconds)
    (14/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.507261665 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.405212573 seconds)
    (16/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.377641575 seconds)
    (17/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.384432821 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.395264734 seconds)
    (19/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.437761959 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.711461832 seconds)
    (21/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.434462499 seconds)
    (22/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.494949057 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.382544002 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.498670704 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.629953016 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.382333646 seconds)
    (27/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.453081051 seconds)
    (28/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.443502228 seconds)
    (29/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.563361043 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.492052219 seconds)
    (31/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.432543472 seconds)
    (32/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.485780287 seconds)
    (33/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.457473893 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.560188929 seconds)
    (35/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.511487053 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.399948233 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.470335211 seconds)
    (38/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.709290474 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.529510042 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.566175301 seconds)
    (41/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.432967791 seconds)
    (42/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.410259509 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.53206337 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.796989549 seconds)
    (45/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.406410568 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.393894246 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.414185857 seconds)
    (48/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.4946506 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.428792444 seconds)
    (50/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.391485431 seconds)
    (51/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.525427284 seconds)
    (52/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.529809744 seconds)
    (53/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.492176039 seconds)
    (54/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.57536738 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.526525221 seconds)
    (56/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.629679981 seconds)
    (57/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.487862777 seconds)
    (58/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.802710997 seconds)
    (59/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.498089018 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.552227863 seconds)
    (61/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.495800451 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.593951169 seconds)
    (63/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.440636429 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.501764671 seconds)
    (65/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.674107572 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.617537072 seconds)
    (67/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.381559695 seconds)
    (68/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.398307243 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.429531566 seconds)
    (70/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.385725649 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.543254248 seconds)
    (72/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.44730563 seconds)
    (73/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.381409675 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.672575577 seconds)
    (75/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.491851214 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.501297748 seconds)
    (77/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.487438818 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.678671728 seconds)
    (79/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.446941763 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.528867957 seconds)
    (81/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.733026578 seconds)
    (82/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.401781255 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.685690004 seconds)
    (84/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.523791304 seconds)
    (85/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396625399 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.382309676 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.57313594 seconds)
    (88/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.800849626 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.490973937 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.560595345 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.617092556 seconds)
    (92/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.432400927 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.532223657 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.494440055 seconds)
    (95/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.601213019 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.442011529 seconds)
    (97/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.383056469 seconds)
    (98/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.422305455 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.506250279 seconds)
    (100/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.407967292 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.579151039 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.443820967 seconds)
    (103/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.526784763 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.574976259 seconds)
    (105/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.387762185 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.762219681 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.682753026 seconds)
    (108/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.641686103 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.489103628 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.555215349 seconds)
    (111/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.639512343 seconds)
    (112/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.989590484 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.5954686 seconds)
    (114/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.387879033 seconds)
    (115/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.47916851 seconds)
    (116/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.404473617 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.56935413 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.605592508 seconds)
    (119/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.389693808 seconds)
    (120/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.899673092 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.812705433 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.450084265 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.562309189 seconds)
    (124/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.481908462 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.433385885 seconds)
    (126/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.748010976 seconds)
    (127/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.515682387 seconds)
    (128/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.759478282 seconds)
    (129/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.612656001 seconds)
    (130/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.44348364 seconds)
    (131/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.386128703 seconds)
    (132/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.718502368 seconds)
    (133/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.441122615 seconds)
    (134/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.436993889 seconds)
    (135/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.399609713 seconds)
    (136/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.528014342 seconds)
    (137/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.547394614 seconds)
    (138/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.499405118 seconds)
    (139/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.38672465 seconds)
    (140/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.657024479 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.480336689 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.642773338 seconds)
    (143/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.484652061 seconds)
    (144/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.387083748 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.672080568 seconds)
    (146/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.81381631 seconds)
    (147/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.727992826 seconds)
    (148/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.692478806 seconds)
    (149/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.723145366 seconds)
    (150/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.511531298 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.990720166 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.519380943 seconds)
    (153/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.722828998 seconds)
    (154/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.579616314 seconds)
    (155/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.443077392 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.579126279 seconds)
    (157/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.552283668 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.47881557 seconds)
    (159/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.389158825 seconds)
    (160/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.38480885 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.721231694 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.453202644 seconds)
    (163/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.492312063 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.523279887 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.474336756 seconds)
    (166/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.392462922 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.4432846 seconds)
    (168/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.494805817 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.399905954 seconds)
    (170/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.5273475 seconds)
    (171/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.534874347 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.528588726 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.452567748 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.498288384 seconds)
    (175/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.577910925 seconds)
    (176/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.647213284 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.646035564 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.421354453 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.574888291 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.536305972 seconds)
    (181/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.57571885 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.614953095 seconds)
    (183/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.588436127 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.546325424 seconds)
    (185/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.3950178 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.54411887 seconds)
    (187/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.500048837 seconds)
    (188/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.387712343 seconds)
    (189/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.614862766 seconds)
    (190/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.593416017 seconds)
    (191/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.393756375 seconds)
    (192/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.444497551 seconds)
  done (took 342.323011485 seconds)
done (took 343.600269396 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439216155 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.516591858 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.418618996 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.420557522 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.421487828 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.409506151 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.444528757 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.422102678 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.435766104 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.435543021 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.412170143 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.429917384 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.437318083 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.432617415 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.457168645 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.422849088 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.421098325 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.431123553 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.437676298 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.438761785 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422723257 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422611396 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.448103934 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.422201149 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430025292 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429053503 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.427202751 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.412150663 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.430744901 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.437909774 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.416994938 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.428915812 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.440562422 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.434626016 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422802862 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.429542614 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425132272 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.51901184 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.443386806 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.434135718 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.431011187 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.441121608 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.427969512 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.427214798 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.434852815 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.451837752 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.433479786 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.438490228 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.415141959 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.426922113 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443005567 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.435622462 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.430103582 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.418739168 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.417576289 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.437331319 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.432670432 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446646454 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.432570003 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425901636 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.457161194 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445115292 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.436795914 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.433852591 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.430968023 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.439057386 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.434465227 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.442018167 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.431605333 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.427038737 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427597256 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.43267215 seconds)
done (took 112.541089126 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.547431013 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.420374176 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.581955012 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.434201214 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.596298908 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.55203808 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.432225237 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.432743132 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.432174082 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.229509372 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.434407663 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.434951929 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.42718885 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.432397188 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.550630871 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.432504155 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.432528299 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.12471353 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.431464921 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.561268526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.423817754 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.43511762 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.435352518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.232372219 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.423465082 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.416213959 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.559557879 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.435387854 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.13399301 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.420536131 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.420855731 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.13196745 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.561196239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.453239128 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.445301407 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.444253113 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.598021472 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.438578505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.55352071 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.550237488 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.586663798 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.475240832 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.420553153 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.42624798 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.43642196 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.433884603 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.433591719 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.463372835 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.421105205 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.435300184 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.128891468 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.443581607 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.436051707 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.435994402 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.434762701 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.465344428 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.434968079 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.438724967 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.56626521 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.436193967 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.552885447 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233882901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.230960293 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.43373343 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.425306113 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436343434 seconds)
  done (took 114.793380195 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.497066047 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.504675315 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.547750957 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.429205373 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.476345998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.546697036 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.427511547 seconds)
  done (took 11.722272162 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.434417588 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439267504 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.480216983 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.476518223 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.436422822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.60250086 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440935385 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.443111252 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.434889088 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.480834084 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.439589792 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.437927824 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.446674395 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.429334269 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.475192424 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.444466737 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.545704091 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.428999914 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439640046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.582850362 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.439211354 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.45068003 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.482941058 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.442398856 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.436986292 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.437426538 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.218375511 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437599649 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436998174 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.439659905 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437393765 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.494250286 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.439477782 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.429326997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436566817 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.542548717 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.44035922 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437875733 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.438594705 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.434517945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.440048457 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.440737642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.437851266 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.441062404 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.437899333 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.454289991 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.441592764 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.437661925 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.439212168 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.441984207 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.483848053 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.44284537 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.441857567 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.442978838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.483366316 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449436548 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.444309224 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.439229665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.440438951 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.440779203 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.585639663 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.479271903 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.440478404 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.478785112 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439631019 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441771142 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.442717595 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.441357069 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525235379 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.44136639 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47942782 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.441301269 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.615386531 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453940812 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.442668573 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.437175506 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.435697944 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441873306 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.428291469 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.440497864 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.441402584 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.434633117 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.439935971 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.442238032 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44443067 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.600678602 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544025912 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.442875831 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.451840268 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.442230678 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.444817064 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.486054944 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.442427353 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.440121904 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486660598 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.553979978 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.488361642 seconds)
  done (took 147.672039541 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.447476971 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.447871654 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.440917111 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.464615976 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.436314178 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.434603346 seconds)
  done (took 9.970945695 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.437418385 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.449529453 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.445509338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.445142956 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.445622155 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.446232222 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.446412588 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.439367604 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.449239038 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.444828124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.448001986 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.447549165 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.446854323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.447037784 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.445685486 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.446181452 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.446592022 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.444675674 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.447252673 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449158883 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.435176746 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.446868454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447090757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.439441019 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.450305216 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.447324496 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.463194727 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.446965689 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.446726501 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.443097057 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.450316666 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.446919382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.440015955 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.44340803 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.451292351 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.441039541 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.450086218 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.44947264 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.446994415 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.447647917 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.449663066 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448245639 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448314974 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.447898034 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.440632929 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.443818581 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.450993553 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.463048466 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.445847177 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.448096735 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.448241903 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.447074486 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.449242249 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.449101203 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.441580266 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443484501 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.45317354 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.449868385 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.448905349 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.441399226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.450795519 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.449025048 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.443097487 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.452390411 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.448946714 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.450302221 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.44239498 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.45287119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.450625218 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.448788704 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.449622625 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.448618712 seconds)
  done (took 106.502588241 seconds)
done (took 391.953076448 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.931970735 seconds)
  done (took 4.236384085 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.54637344 seconds)
  done (took 3.853567254 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.035840962 seconds)
  done (took 25.350015534 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.537843922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.437040609 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.455851525 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.438257221 seconds)
  done (took 11.174167054 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.957507718 seconds)
  done (took 4.264041784 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.444498701 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.457289436 seconds)
  done (took 6.209309184 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.726320463 seconds)
  done (took 4.032193424 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.26148138 seconds)
  done (took 4.5755601 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.473380878 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.444295344 seconds)
  done (took 6.231987905 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.433223097 seconds)
  done (took 3.739017488 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.36097215 seconds)
  done (took 21.668279797 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.463931314 seconds)
  done (took 3.772662744 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.49462977 seconds)
  done (took 3.801006694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.43902364 seconds)
  done (took 6.745813336 seconds)
done (took 110.962131759 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.436544572 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.442212921 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.439166961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.441593358 seconds)
  done (took 11.066732624 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.513234115 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.515214016 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.523419504 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.509853242 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.504929508 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.516935397 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.477481332 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.477322027 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.508689139 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.504932975 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.520929164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.509301139 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.5188809 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.493853454 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.503820593 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.51866724 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.507975453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.524913905 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.477524595 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.510219473 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.453615109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.511049095 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.507626434 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.453658257 seconds)
  done (took 37.372814261 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098958239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.5155186 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.599125146 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.493432723 seconds)
  done (took 8.016393866 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.557509326 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.560370625 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.577420177 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.610933842 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.641564338 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.583450889 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.480119135 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.476613725 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.461567841 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.558623933 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.636308924 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.556427141 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.775839561 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.453100548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.772423138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.453432296 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.453810272 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.558636714 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.608791535 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.638532951 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.454271922 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.557084493 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.564091829 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.558953031 seconds)
  done (took 38.858931509 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.463261442 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.472425954 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.457686569 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.470489878 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.457412125 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.455998809 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.457316259 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.463722415 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.458086622 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.456078199 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.457426992 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.470798839 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.458014643 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.457614333 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.462607279 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.458006325 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.458952134 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.464832599 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.465989968 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.457550815 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.457209953 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.464124661 seconds)
  done (took 33.456858788 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.441904977 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.44143484 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.793089486 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.697511266 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.441191949 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.44302267 seconds)
  done (took 14.569903661 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.529148461 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.681836427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.448757254 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.867260589 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.950006963 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.453712381 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.448353244 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.721518104 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.07304678 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.082062212 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.517040925 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.527889067 seconds)
  done (took 21.612616717 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533358226 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451230829 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470396429 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48918725 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452654547 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.454216691 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496487883 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968978684 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.462535235 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728749861 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467820126 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540832356 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.703561953 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46675821 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458377509 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.421131805 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704066452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001158626 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456368015 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471739238 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490843981 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454141095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466187618 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694746246 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459845696 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454393507 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.723084162 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45429014 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782775194 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761508155 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760936694 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460877788 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732640357 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921994145 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564910134 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688485102 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461544386 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475129894 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.447259658 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.464021874 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478698769 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.46159919 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758864157 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462786984 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.454536843 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457433251 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959752613 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.463285266 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.45426377 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45617253 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758967002 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543355394 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.463276817 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455722363 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535143069 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455640029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.461571169 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592778029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093893041 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468583897 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466427477 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.461624786 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457347604 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457713217 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202278807 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.47170749 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.462797665 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46293557 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457025448 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473676137 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482501564 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457422846 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.477972465 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457921526 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352272843 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.462021554 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462764402 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056074513 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46713523 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.463330592 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68536564 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457621628 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458571783 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.458299089 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458066948 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284496358 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465982153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.425883661 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521363125 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980060975 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696490816 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486966206 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487233162 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.680800354 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.427236451 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458570287 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.456996363 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464829802 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480751258 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958595812 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45672772 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.466135997 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709191562 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.670176167 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459032047 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.434455157 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966485855 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468033656 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.494292053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459168466 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.701516792 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.175013298 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773144045 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472715965 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500062914 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461036549 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34843384 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471383969 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.47188114 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460587145 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783744911 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.379050176 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461863781 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534756421 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462568389 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460529448 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460952206 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486370144 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460468213 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.675347945 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467933933 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.768035528 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.467671588 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461458192 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.469362823 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468297616 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.467244368 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.685141125 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467177162 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740127241 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46218926 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463333033 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462338115 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.681932939 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.465227381 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.468800452 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804105583 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462141621 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.469459729 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789926944 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500544942 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575600819 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496141436 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.462799868 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.737651352 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.470252908 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.471344128 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463531559 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470696451 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469445201 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.47338225 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456444918 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174032959 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440750493 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470167384 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464285884 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.479673468 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540204039 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474115755 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.700770932 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.469672761 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468523433 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.476338855 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.462380013 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712631536 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768096717 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.48462395 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645344684 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.964759634 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174415131 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485545986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.465201509 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.46377889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.464928418 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465828855 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464506251 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.464111518 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701024547 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781947047 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466882669 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.186765106 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473401678 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466329251 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.47918912 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769439826 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.479372597 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465406259 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.467952428 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481733521 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488791638 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.774481217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692088045 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.481276724 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465618178 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.986300485 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474864098 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466352863 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467821186 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492961125 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467436484 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05044175 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807703436 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473079391 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777873711 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473823604 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.509142227 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.467294352 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467219418 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472226772 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.482798077 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477469464 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.70603182 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475423912 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474983928 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10732176 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345807654 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123892389 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476863163 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.504158093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47407157 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.973368599 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469046036 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469682107 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750754487 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975526089 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467943313 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971694358 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.468133864 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.370610054 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780680285 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704896547 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488451813 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.46916201 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784745133 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687198536 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495905041 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467576116 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494388433 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.438081634 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0478448 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47009522 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654973464 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000961092 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4788469 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477451139 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.488917684 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.477999589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912275234 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471865269 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470909453 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475143224 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481785604 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058108564 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475941679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47049373 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21374923 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482126606 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.981187226 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471528442 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.710047694 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784266741 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.758365837 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.485851438 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.476470013 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.723629359 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77976785 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476966818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470419491 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13058443 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.340139379 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.479769174 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472027355 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36675443 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481240354 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809156776 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.492250647 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.483638145 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482995646 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472706653 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473740665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.472444228 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478529483 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471387587 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046898897 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.472920725 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492943341 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493435339 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478070739 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.724601223 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.488435864 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190797095 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711305779 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471968717 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509398975 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.480350555 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484371242 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.448901489 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472867921 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47335207 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556374169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6970905 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475834322 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.44348032 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494283224 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685978044 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473532724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480301944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729024155 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.480268707 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.491355754 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343065376 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506890281 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480616103 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481726112 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473565157 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515375801 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550778223 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712856166 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789211651 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787769648 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91696081 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481578146 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482553815 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.492021991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558495528 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483723928 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.492012606 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.481733285 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190310645 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394206744 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205715742 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794279278 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.482289095 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486028861 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475793391 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716984847 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475074319 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752186915 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478582633 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.495360803 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503334464 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484335223 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48553149 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696974437 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752988536 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479616866 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487929523 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483760407 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.479498741 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789084099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.697897438 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033737736 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085789089 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479933274 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478181917 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992742184 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754098635 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479536046 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478556145 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478263606 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.503296444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.494830596 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.487813143 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487366743 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709792964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789332838 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95255355 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.780932634 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.501748052 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.403086493 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491337196 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732351356 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311498413 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.717967907 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208700054 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324708336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740468103 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55313313 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.719686624 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.484744409 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717093563 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.489394939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485101538 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482097671 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481979978 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.479503355 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789877063 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208554373 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742195308 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.48718061 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.4876131 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515789326 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.720376011 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.711094211 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.319054884 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.7037831 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792378773 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49318839 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481871658 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210791204 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797992387 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486891515 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.485711395 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732339708 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488834269 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51906789 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.356507282 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.481441657 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09124339 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.694945259 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502541003 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48009317 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331814351 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21635704 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503819771 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067004039 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48745374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49664258 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765945451 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.490877543 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483088883 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78838387 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.490323523 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.48471509 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729760011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.209066222 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.380619988 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.490691529 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486912319 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.488973358 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484664442 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536657542 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484484613 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485761698 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.919829059 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488314186 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485120495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498056345 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.495349485 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487754591 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.488460087 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485126985 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.493101556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.495432228 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.467590187 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49363969 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622481615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071156054 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487301698 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.103931592 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.826927091 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.73493574 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485172445 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.461272269 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.491163872 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485865767 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486350949 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485793978 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478448799 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1008701 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.488576227 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.797297638 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496859858 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.700277803 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696843443 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494314222 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733418783 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492603522 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51736535 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.455923711 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487502708 seconds)
  done (took 1031.76443462 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.486238893 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.526806045 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.497233806 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.558208161 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.50407409 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.620022999 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.578381967 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.594250015 seconds)
  done (took 21.707207689 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.478992254 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.488816701 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.495748666 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.492318099 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.47968309 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.047394342 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.495142735 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.487646085 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.502473299 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.490578092 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.497699793 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.208960525 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.494237679 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.480693603 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.490806976 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.496399808 seconds)
  done (took 34.478530549 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.654725003 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.635175913 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.928993176 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.525883152 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.479787843 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.482602118 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.820753138 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.506748743 seconds)
  done (took 28.379776226 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.494110805 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.493775393 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.496476276 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.493321392 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.494128489 seconds)
  done (took 8.815659901 seconds)
done (took 1291.407652426 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.495996402 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.495936229 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.495617272 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.496665674 seconds)
  done (took 7.327347577 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.458867414 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.458631158 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.459424379 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.477518243 seconds)
  done (took 10.19835688 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.902061004 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.07840129 seconds)
  done (took 5.326252906 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.492877971 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.263897164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.23353833 seconds)
  done (took 8.336051291 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.801106073 seconds)
  done (took 3.146356845 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.935105373 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.992545893 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.498989516 seconds)
  done (took 7.773891751 seconds)
done (took 43.454891834 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.489181027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.249413277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.638445248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.484483271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.644927981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.638267751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.759358389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.478665942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.489606038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.487366464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.485640856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.644087225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.748762902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.251448222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.748075138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.251342385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.645297458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.498790885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.481661445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.490589004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.759454039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.482088126 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.484370261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.482342164 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.647417002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.637246106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.489336534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.251314558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.482556262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512449666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.637239134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.482152566 seconds)
  done (took 86.300872124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.481948317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.486128358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.484794512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.501935785 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.501043226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.489757316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.505407456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.485774362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.496814632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.496962797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.499555107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.485596991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.48578148 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.497673539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485402687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.49857711 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.487046554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.483128233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.487806158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.48391698 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.504184148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.483210537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.490353858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.485457237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.489801383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.484546292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.512961263 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.484535969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500630236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496811733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.486261572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.503634367 seconds)
  done (took 81.097501093 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.503377001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.490973277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.507856046 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506655292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.48724461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.49258325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.50849479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.491027443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.489798339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.491180743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.492127844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.491976654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.49300136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.486561018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.492602471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.486712261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.50239018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.491594872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.491821957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.489815372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.50574765 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.488195939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.489754114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.491639564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492315665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.489244654 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.51209854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.496039732 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.506669544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.493659336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.493301349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.50952746 seconds)
  done (took 81.207719365 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.728825983 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.503311106 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.506318075 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.498084627 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.506643666 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.503844651 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.497702064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.73626136 seconds)
  done (took 15.831655648 seconds)
done (took 265.786030324 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.50699526 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.503702124 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.530007995 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.499370894 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.573764106 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.525939482 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.732321783 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.53178274 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.714379479 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.504369573 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.614571747 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.512204942 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.444764917 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.65216221 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.499467532 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.500272674 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.527154709 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.495157705 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.499658746 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.749979343 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.526674733 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.506483708 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.50357735 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.514307398 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.47366837 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.571453384 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.575615063 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.667603576 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.628428802 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.570860567 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.497329207 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.527332383 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.50631689 seconds)
  done (took 70.541196909 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.496842894 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.506992402 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.5058766 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.506199089 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.50594418 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.506807912 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.498844363 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.505039418 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.508058309 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.507102897 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.506863352 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.51002305 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.50981968 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.507420082 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.506928604 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.477761569 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.49817444 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.508698654 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.498811955 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.482465618 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.507411227 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.510484471 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.509881827 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.508109075 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.509664679 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.506811248 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.510109477 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.510868539 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.509920903 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.509787407 seconds)
  done (took 46.502344202 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.509041555 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.506181158 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.501378083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.512596627 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.500014746 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.504702607 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.849975437 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.516673681 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.507897445 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.510180685 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.513445727 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.512120403 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.554868914 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.506243617 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.509683467 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.510443081 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.510602647 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.504087389 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.512079174 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.522736597 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.858864318 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.517345137 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.847657273 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.522378799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.509571953 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.503728986 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.514804309 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.500731385 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.504918211 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.511429799 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.431054606 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.848471301 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.513069076 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.495866297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.436418736 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.518736748 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.511451635 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.496760659 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.506424691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.504320203 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.847518841 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.508510205 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.508123985 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.501209612 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.511609934 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.513161843 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.514415695 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.503410942 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.806536179 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.514679911 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.497949227 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.516592364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.515059761 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.507126753 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.796969583 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.511496782 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.506370261 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.503255136 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.514959037 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.846584817 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.521249639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.506373558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.49707287 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.531988013 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.499700223 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.511136346 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.521402054 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.50827648 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.516801328 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.512679197 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.499438315 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.513705252 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.515041086 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.502713276 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.515181346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.521340893 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.511752218 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.499127982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.532557049 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.841837521 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.510211744 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.517955207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.865939073 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.516405275 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.517693118 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.517544008 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.514964993 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.62718831 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.838750458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.464218712 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.525178879 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.508592788 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.850063385 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.516516896 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.508680475 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.506312158 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.521878723 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.516396778 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.513183338 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.506330014 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.5149335 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.522001934 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.502539644 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.516816086 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.84773504 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.517320924 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.507636317 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.513859072 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.5811634 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.51832402 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.522540762 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.520656209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.861603432 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.517563182 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.518388151 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.502392958 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.510990684 seconds)
  done (took 220.876229944 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.517369269 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.504105654 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.519356177 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.503485358 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.504871445 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.511912405 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.50284856 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.505220597 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.50934284 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.504120666 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.504484351 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.513933514 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.511409096 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.502645678 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.507833666 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.504563063 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.517923478 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.502523456 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.506738518 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.504047209 seconds)
  done (took 47.523772758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.519686408 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.159380165 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.132275854 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.521409754 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.519610507 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.511746666 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.57620655 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.525305554 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.520652052 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.857309653 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.71955304 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.527264371 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.520503212 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.520648231 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.134285761 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.492804902 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.858258265 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.158274045 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.522159884 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.158136476 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.493019138 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.524470663 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.510699785 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.160731045 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.867412664 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.84621067 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.580479253 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.164225503 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.522474459 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.521203916 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.160803616 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.522267335 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.514156473 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.147025106 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.522932768 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.536003664 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.520512568 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.581095691 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.585535594 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.863834238 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.167927737 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.863131036 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.53866584 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.695415542 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.524693923 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.493915948 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.170905581 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.523857802 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.493146695 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.523758026 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.528057337 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.159896959 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.521341805 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.161252402 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.52765178 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.524428778 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.163458945 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.162959336 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.158294738 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.723422453 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.519702105 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.848951663 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.523648042 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.173729318 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.525868224 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.522621378 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.524105278 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.722069637 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.168523975 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.850901004 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.864686135 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.864314315 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.524258521 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.59155756 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.525118959 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.86439196 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.591317583 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.947301112 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.865526698 seconds)
  done (took 138.61331986 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.832994378 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.644112569 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.941175798 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.139875344 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.062111299 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.665875911 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.643194508 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.795132651 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.533133755 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.628391872 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.266231209 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.622274043 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.338062636 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.595648204 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.631068634 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.666305667 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.957687092 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.521835128 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.203759532 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.229084984 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.519512337 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.627512228 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.333058408 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.932918702 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.530831581 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.312685942 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.52412049 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.080061851 seconds)
  done (took 58.150974577 seconds)
done (took 583.561008642 seconds)
SAVING RESULT...
DONE!
