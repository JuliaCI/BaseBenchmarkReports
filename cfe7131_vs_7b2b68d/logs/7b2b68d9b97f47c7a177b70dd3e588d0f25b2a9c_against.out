cset: moving following pidspec: 13824
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.451196454 seconds)
loading group "string"... done (took 0.512437602 seconds)
loading group "linalg"... done (took 9.354355619 seconds)
loading group "parallel"... done (took 0.169754931 seconds)
loading group "find"... done (took 3.078076112 seconds)
loading group "tuple"... done (took 2.166706744 seconds)
loading group "dates"... done (took 1.389582745 seconds)
loading group "micro"... done (took 0.194888632 seconds)
loading group "io"... done (took 0.510865897 seconds)
loading group "scalar"... done (took 56.627740629 seconds)
loading group "sparse"... done (took 13.841914549 seconds)
loading group "broadcast"... done (took 1.303544458 seconds)
loading group "union"... done (took 10.492821379 seconds)
loading group "simd"... done (took 3.603141356 seconds)
loading group "random"... done (took 13.613520246 seconds)
loading group "problem"... done (took 2.185003227 seconds)
loading group "array"... done (took 24.467484404 seconds)
loading group "misc"... done (took 1.157439673 seconds)
loading group "sort"... done (took 3.790130687 seconds)
loading group "collection"... done (took 22.050106456 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.707276269 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127569159 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201011436 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.203803057 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.276682037 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164134188 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156324097 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.148839098 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.793108592 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20347721 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136864727 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.357732455 seconds)
done (took 6.243116441 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.259236983 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.06026494 seconds)
    (2/2) benchmarking "String"...
    done (took 0.195196668 seconds)
  done (took 0.941941848 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076971568 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159205842 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108207009 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093343855 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092768654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108476265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092301546 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10802368 seconds)
  done (took 1.451857988 seconds)
done (took 3.421349279 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.502191363 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.95860767 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.504144942 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.190069105 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304557038 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308987217 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265383103 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.229053405 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093647998 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085448612 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.197054329 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.43943581 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.40095629 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.954310811 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068449199 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09400149 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.159672176 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.777308578 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07954131 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108990891 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521112018 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.219905441 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115515064 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106092132 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185181745 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125368169 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139818267 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101586291 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67145086 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133748406 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210964657 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082818189 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137484853 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163873636 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214506353 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10963568 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66547494 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.1976277 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095633561 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099723795 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670161228 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11472932 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208241423 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104411521 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.067898542 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.160945978 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113423405 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077649054 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092433876 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100413453 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.155317791 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.441264395 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104210471 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195798239 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091560335 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691726011 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097167421 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.270682277 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125320574 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094537491 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089889639 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088868726 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.1535567 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095390646 seconds)
  done (took 20.149196872 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.190413563 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.209717078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098434973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143546027 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140852069 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079956716 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087361053 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094300635 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.113075541 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.195679038 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.125192095 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.217232426 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076112332 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.106062322 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.165677338 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252773816 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107461259 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120577853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089119902 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093496448 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143242456 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095603512 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093340756 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112283643 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169810802 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201424386 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109733897 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12425603 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092085254 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097211128 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141529387 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147399147 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090329438 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087871191 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17299196 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122162049 seconds)
  done (took 5.421131347 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.234341202 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101737609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250712966 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.187741046 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125762523 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180815225 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.194052781 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.300988675 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.322371878 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1638922 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126292753 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095448234 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077145975 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078977984 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096299881 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.807860015 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.171002201 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137824895 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185714946 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111555168 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080137853 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.37811431 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082287415 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099207703 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091849555 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079395634 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.221157581 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092739499 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.47351393 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082001709 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093694974 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130968664 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193061449 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135182452 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120715835 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109600258 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083939674 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207852598 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09939948 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.122471376 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077933555 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.077777751 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133588638 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112829495 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107605064 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.119400452 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.119107322 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099406006 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.108110822 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.042266994 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194223327 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.177578991 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102927562 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.257612224 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122843851 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098071117 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107270662 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.779075281 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13406244 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082642798 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098174107 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078914538 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092800918 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095989508 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.455599103 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102451239 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.217207608 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083014865 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158582103 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093251789 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11420452 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084958805 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083817804 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.122059753 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084130757 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078525387 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101115753 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079683809 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08644757 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129435314 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084235761 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095387323 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14522845 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094028984 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120325391 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108079572 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101743054 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084400155 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126099124 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1781295 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097825561 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087596435 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082202735 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.205437149 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112999507 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112167414 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113191236 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141967037 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085018491 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.258362182 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096507505 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122769667 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098426402 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114210371 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11118801 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079465339 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083148555 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094667941 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081063701 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145115268 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098037703 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080617155 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086370015 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107625053 seconds)
  done (took 27.086533408 seconds)
done (took 53.342932019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428482473 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080266405 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100125674 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081393722 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081809778 seconds)
  done (took 1.535218498 seconds)
done (took 2.273617465 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29938623 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19719321 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086754159 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186606564 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086130085 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192786869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162387322 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118078803 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204622091 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084563188 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187769791 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083847313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086503567 seconds)
  done (took 2.74463493 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10329438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105349176 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101715267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118350501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085433979 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101372799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11882457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107051894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099106156 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111930764 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084933694 seconds)
  done (took 1.882550965 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098738362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10357304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092273125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116284378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085210472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096942517 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11629742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106151031 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097443259 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111957175 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085625379 seconds)
  done (took 1.855064232 seconds)
done (took 7.226103812 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.202024658 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.891904897 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.181535663 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245292374 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3331473 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299588568 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.609656999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.20241804 seconds)
  done (took 15.839357435 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.219079693 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090869676 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089280981 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09115259 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110629068 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095931944 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095114029 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113272768 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089918844 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094294249 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.107928357 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091654872 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093418929 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094005238 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111923933 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095067008 seconds)
  done (took 2.491965294 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.134403923 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114447605 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115922037 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098304011 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093336051 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116146175 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100590936 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.095249164 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11138693 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095467001 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101179297 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113715954 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097178299 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091526436 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114682671 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116988039 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092831558 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113174918 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116204145 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097082 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115805256 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095395494 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.096923883 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.113531936 seconds)
  done (took 3.381315622 seconds)
done (took 22.458728713 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140378368 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083269534 seconds)
  done (took 0.975270312 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.168934885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184213535 seconds)
  done (took 1.112342222 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111277507 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089939266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137780989 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102233429 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090197152 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106653949 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115329558 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.090451699 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.108042864 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090586982 seconds)
  done (took 1.804306813 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094103815 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09577923 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121190378 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16058186 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116395006 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092329353 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093852657 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110523953 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097971431 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089852532 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112006974 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108654257 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09400285 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125549809 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094146499 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096118507 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115752578 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093108392 seconds)
  done (took 2.672338164 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089627965 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090726725 seconds)
  done (took 0.942079598 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093261767 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08879389 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091636074 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108180078 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090132847 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088553634 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106376439 seconds)
  done (took 1.428495269 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51955651 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.236290055 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373063213 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072215917 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122745917 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.317660256 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104369117 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071942053 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091237951 seconds)
  done (took 2.70553172 seconds)
done (took 12.397519258 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092016113 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.20801672 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.601934419 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.12977222 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089845451 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.145523643 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344477343 seconds)
done (took 2.381423001 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346305937 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.182462864 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084302109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091918105 seconds)
  done (took 1.468368932 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081772695 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09740056 seconds)
  done (took 0.953113884 seconds)
done (took 3.194440806 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089625207 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087333058 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087541259 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105730115 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.088141097 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.087854803 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.128837089 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088045993 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089099339 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.086714006 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.108707438 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08961126 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087244627 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106180506 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088242396 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087961868 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088067153 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107878669 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087887015 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087829842 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088317465 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106237042 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088251902 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087490063 seconds)
  done (took 3.054156766 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.228103152 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090306951 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110663491 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092684959 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092571575 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109880499 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092713181 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090635984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092015347 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.108652845 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093235712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093319632 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10915218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093912997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089986976 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110851724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092947156 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09048236 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107143809 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093948787 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09280127 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108599841 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09302012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092311586 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109964072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094236462 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089760896 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106738642 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094795535 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092601096 seconds)
  done (took 3.832911764 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097183846 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085228728 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088539797 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114452113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086146818 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089855472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102302526 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089698512 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089548859 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088241312 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.107767099 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089208537 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088464758 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.106573311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090631598 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090952445 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096235362 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107730571 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089355748 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090759997 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109366347 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089308636 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087835997 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087815319 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106442906 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086935327 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088253329 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106285576 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089646507 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088625 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090555171 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109675145 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089225709 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098598821 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109134785 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0900541 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094226411 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08511598 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109066718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086190142 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085726846 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107243825 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091229312 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093735476 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089543768 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.108400599 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089268926 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089467395 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107325455 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091139028 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086178929 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087968204 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.108599237 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090540621 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090460985 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.103405485 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089853135 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08601518 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09048134 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.10603635 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086360666 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085363019 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110032531 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08972319 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102852879 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11253501 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089379983 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091051506 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090894666 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.111775273 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092115144 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097428945 seconds)
  done (took 7.622201989 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.112301551 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097738714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108169651 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09181531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089767391 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089576802 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112068667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090560531 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09034971 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112888851 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090551284 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089656518 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108070733 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090997887 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090124112 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091763627 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112280093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08952586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089049953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10859307 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090304224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093981295 seconds)
  done (took 2.921729101 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217934742 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11368012 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138542007 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120069145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106540454 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119571292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095405263 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095081418 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110375006 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098994694 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098518512 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110881074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107539366 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09794663 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116715203 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100269831 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092767419 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1180228 seconds)
  done (took 2.839802891 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103725673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092139355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152930998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092230528 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092022722 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109279532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097787218 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111155712 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109944492 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092432989 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097610771 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108845092 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092542334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092306078 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091109907 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109457353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092448491 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091415147 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116996385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098194449 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097190631 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116767687 seconds)
  done (took 3.038814155 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104512853 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091374569 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12653274 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095049454 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090878889 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090076492 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.114795473 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092217444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096639005 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.109862968 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092655122 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090297462 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123280178 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093552307 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096821582 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110243904 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092570778 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092061792 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108528021 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091017616 seconds)
  done (took 2.788667173 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.18659545 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125063132 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107395619 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113516068 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127113164 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106524557 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132943553 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106885147 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10728978 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135052852 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107546718 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106490811 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132060598 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111973973 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124967659 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114127555 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114345192 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136016926 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10656186 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105718199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136419382 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107394268 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131522106 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108304401 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106776175 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125225786 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107575374 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111933243 seconds)
  done (took 4.13354821 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091655318 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090259233 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089582395 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107981042 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09067084 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090301181 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089612821 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.1089041 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090091235 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089678252 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108648214 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091176053 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089954068 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089891537 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107892042 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090741918 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089696867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089601582 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108191321 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090694103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089737586 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107059955 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090775805 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089685511 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089123041 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109078692 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090483003 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089661432 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107989519 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090941925 seconds)
  done (took 3.639346035 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102868546 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099615048 seconds)
  done (took 0.992943064 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099054222 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103899241 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089792495 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109699168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097579213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091588084 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117595005 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096647659 seconds)
  done (took 1.597143974 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.183939741 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.207970882 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.115546548 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102235564 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.209580001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.186955027 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130815327 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094808454 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110399312 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083938763 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.201186957 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082937576 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110248558 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089274539 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091939103 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115358035 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092297183 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100850534 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097212239 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112435319 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096288216 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095783619 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112672988 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101522515 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085548344 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112488211 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094654595 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10172799 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105987295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092725196 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088153274 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109889128 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095483819 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095769006 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.109419251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.187601386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119066142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088728706 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091888124 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116247825 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125279452 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091988605 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112313075 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09060654 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094668835 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.113402102 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.096407755 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092455721 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10331615 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088965266 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092583867 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08651701 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.109111127 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09223561 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091524295 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116717548 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09329003 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087390594 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106298549 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088202675 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089747675 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10593497 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094756269 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094022672 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110917461 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093498618 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08973737 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.110112967 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094617501 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092823904 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090009783 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125082734 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092435112 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095242095 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116582202 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092731021 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08790924 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115828835 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09119336 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092538836 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115975358 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12048644 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093814798 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105617566 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088177648 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097366945 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.111693132 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096359469 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084505544 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117131465 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094324079 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092457794 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083620884 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109255815 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088642179 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094790387 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105499954 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093705216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09092824 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113619234 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097512283 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089771561 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112070486 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097942502 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097068118 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090154343 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.163464775 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087287881 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108553469 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094423778 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097566334 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105968029 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092393757 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091202029 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087914322 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.107513002 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09655347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090943373 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.113719059 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097188416 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09348802 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112899008 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094392263 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091545526 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107915251 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096702764 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099752238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112398044 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094368928 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092588995 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091736673 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.112189377 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096008456 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088625219 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116095105 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090185777 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09209503 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.11271251 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097939884 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091620526 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086984386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111337138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092456063 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09054985 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114571975 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093247706 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088568213 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104297165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093829778 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088208752 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112724223 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100392681 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088096959 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112552557 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089929009 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100609677 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107554079 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098435795 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095095409 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096451915 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118251973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085701393 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090154212 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113698619 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094964504 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088612012 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112185409 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093554186 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097726912 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085061854 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116040477 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085420524 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089312772 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116434659 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093443477 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094603812 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106588973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130113828 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102962308 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116688216 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092906169 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091982987 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116197602 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093438377 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095234744 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097013611 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.117380182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090266562 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091029115 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117912903 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089014928 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094216232 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110578161 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094052951 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086846747 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113238385 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085384664 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096524057 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092987867 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.116777967 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097734232 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093943269 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109847883 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100968365 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088906091 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116475712 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086705724 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096535694 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122481911 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099727125 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097348251 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09381359 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110284413 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094513167 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099922029 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114880835 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092947287 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092973769 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105882372 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087917879 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097138211 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114609235 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089629505 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092282164 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093622822 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115340195 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090331306 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084535929 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.116970847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096164967 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089115647 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112943343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093038077 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090455777 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119716428 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086682342 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089114101 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11356987 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09821875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093177499 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092560242 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115521452 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099140657 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09639024 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115797991 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091295001 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099106614 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110533472 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092942019 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089574052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095049017 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.106541459 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094373443 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093292939 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109078585 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089246345 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09563799 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118488906 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098915695 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091114467 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.116867977 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098472963 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098636393 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110829628 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099672782 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089356069 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086244898 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110610495 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086359653 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095050218 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109514017 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098869312 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091791669 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112736484 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098147519 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095039957 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110304246 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098416085 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104243667 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106966386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087443792 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101472207 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092059011 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109958905 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090235376 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094489224 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114915016 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097944022 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095262531 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109475245 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09466165 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100567666 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109420102 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100614728 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099487883 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099477012 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110168467 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098360065 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089192945 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117793641 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087387066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092020977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112431316 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092900852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090100353 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112185633 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090511099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086970138 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110517876 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100683522 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091979117 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097467748 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113672391 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091928735 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089288681 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109573603 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099759823 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102117514 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.12021013 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095083251 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086824705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106370766 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099775784 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093094245 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099704757 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110242957 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09881972 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099467676 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117426787 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095078968 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102624436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122696517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100126885 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098477936 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108018625 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092559927 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09709509 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09459958 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117226863 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096167328 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086851077 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115848746 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099954425 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094763863 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113763966 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088144044 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095161786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119157558 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097475048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098046075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096015143 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115344535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088753977 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098393332 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119324418 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094334871 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101319905 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112416827 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098481695 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090489905 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099045579 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116101254 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08800153 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086082773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111032719 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100786387 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087253148 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11813055 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099260113 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090577468 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091377912 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119522413 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090600245 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096083362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119059402 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092053692 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102499218 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116134486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092482633 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09859944 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118981629 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089061948 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092572356 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093010631 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121190421 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091936374 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099386874 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114447011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099994981 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096429085 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119524012 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099841306 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099854997 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108541731 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101615553 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096922349 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096168411 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112402231 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092589372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088666259 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113113395 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100696619 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09136563 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122650073 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101047218 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092575418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112214484 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100438746 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093351105 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100278509 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112455123 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096260709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087813342 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116947957 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093459869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101734639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.111299417 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089310121 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098264131 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11931093 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099578567 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095674781 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099864225 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.108726059 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087823217 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096394229 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11163232 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10362158 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096104408 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113001057 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093481086 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096121307 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.11638548 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103003315 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089124068 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090391005 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117151775 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095990437 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092287933 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110426318 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098204934 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093150026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116112004 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093393673 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088626901 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114091036 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101688331 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092670745 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089141362 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113737424 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100539247 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093544734 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.11214427 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088537648 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098879201 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117190241 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101382481 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091083797 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.114921273 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092742072 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096606161 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121684845 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093870964 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094380448 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111734091 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100452523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098998607 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087604369 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112052341 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104414281 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098767082 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116493026 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095986915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092769285 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121303075 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10093757 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096978859 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108461847 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090121793 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092807449 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088178692 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118520783 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099223616 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093064254 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113099139 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098716082 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098094435 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117970966 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097887391 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089097528 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101296966 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112416758 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097482633 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08887422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108842635 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097386118 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100129251 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114081029 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096175142 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096393832 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096559778 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111481543 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092021225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098048895 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119801929 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100406112 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094087279 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113931544 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098488329 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104813998 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.114896909 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093730591 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100803675 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121602498 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095683857 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094626413 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100415695 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.122692549 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097861505 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100261306 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113697559 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094048737 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101313244 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121999304 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104197781 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093623314 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110691075 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09906833 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09195574 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109433851 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099016937 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101032585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10129887 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116286499 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093384062 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102437668 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121420639 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094687154 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092373614 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.112666138 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099943252 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092381792 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.119166348 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092133181 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101102058 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100078225 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121408635 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103888543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089086846 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121949222 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09732446 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102090637 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.119036329 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08996449 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088343024 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117417811 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102798045 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10080905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09826577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119493764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100185599 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095537245 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115461515 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093652294 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10139569 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.121839336 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0971283 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096251729 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09273508 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117678296 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096349437 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101135083 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122957584 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096091579 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105981168 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123045627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094693979 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091692361 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115881642 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098198075 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096489076 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098542145 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114901676 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089787207 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101140929 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124091044 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093821699 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102101426 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124099242 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094285954 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097421549 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124112753 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10111791 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096794094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095491237 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.11974083 seconds)
  done (took 61.598118333 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143643388 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104024241 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119248506 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097997224 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114288829 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121511897 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098127698 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098359731 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119760233 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10775556 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097369878 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096337923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.133039818 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116906296 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136167382 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106436166 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097151903 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120749292 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09696663 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098336244 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132472764 seconds)
  done (took 3.201291689 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114283285 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110746419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130268862 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111939648 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105199839 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130665498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109652982 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129205388 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112093534 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105007199 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132940512 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108665701 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104082487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126666636 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106587684 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126167752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111714154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104130595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130968105 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108669802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105771943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130922386 seconds)
  done (took 3.401923272 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127859063 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100160273 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095087118 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118883257 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101072506 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097678064 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120827894 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098287185 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105572445 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092415252 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110375923 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093174577 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09642562 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117961782 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093304137 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098327237 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125193901 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101393909 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102002642 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097650525 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110793423 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09876984 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098726686 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10946483 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105052277 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102446506 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.09746333 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122270273 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08942688 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100654414 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118981611 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092764607 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08999087 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088785413 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.109935712 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101115893 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101483804 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118775891 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099146266 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089236148 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09838631 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123855209 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090685117 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098134488 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119351354 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093778978 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100811253 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097066883 seconds)
  done (took 5.80904376 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126640231 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15654634 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101573092 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126072913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134955179 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108455326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100581863 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152202546 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100628318 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101117244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137672597 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114041667 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125900527 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106636967 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101064373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125646803 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103668813 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100552872 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127336035 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102518146 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107777128 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124237433 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113506811 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.110738255 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126099724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102649727 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10154592 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127356426 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112285057 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107098131 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127144342 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107551209 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132849407 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104572751 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101824451 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124568373 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11457476 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103194631 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123761943 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101051289 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10332113 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127361195 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103480218 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.112838491 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124457989 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104455809 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102648861 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120293544 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.349662725 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10332208 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.128570878 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112756898 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103787913 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.124636812 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10648765 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111388518 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124347374 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102475747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.101710383 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131769605 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100431775 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104370718 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132986239 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102397641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128353223 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113666687 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103842391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125014582 seconds)
  done (took 9.002519947 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132833192 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106104974 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134792346 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113672056 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103717521 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127380978 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104932284 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104296733 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127174098 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109768761 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103317146 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.237860102 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125131436 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109475304 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104558014 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127769714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106410908 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104880734 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127703062 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105235736 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105383873 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134635491 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1054354 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13302611 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115208392 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101542779 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126384493 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105503956 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111411892 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126105278 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115300386 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125512404 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105369699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113877728 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137570254 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104966365 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101047909 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126234771 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10560155 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105023383 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.124760792 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113523228 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106974879 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125552527 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105467425 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.105462882 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134789714 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116120565 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131656884 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111414473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105328055 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134788738 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105393363 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104913108 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134668515 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.120999796 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135156804 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113371614 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105004948 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.134258554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112814677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.141700209 seconds)
  done (took 8.204009873 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099659082 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098925964 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098147378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120357519 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098810305 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09830681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098702595 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119436773 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099177079 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098843546 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119101998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100700293 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098078571 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098702224 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119255623 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098852298 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09862203 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09818562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120233864 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099767807 seconds)
  done (took 2.943489827 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109134243 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116517517 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122064834 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107217266 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101549923 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128045437 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101559333 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101682255 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100863232 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124375074 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109476741 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108455944 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123822253 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106747991 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10819616 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129709808 seconds)
  done (took 2.664282172 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118656746 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116368783 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203490163 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102611238 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124243084 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107387225 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101865574 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125757918 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101108656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10591366 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104175991 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127420836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102132265 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102742452 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124191369 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104774438 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099650111 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127191467 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103009012 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.205505669 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105646739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103011807 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125094163 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104775316 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10365597 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128897752 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107829499 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101046185 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123843542 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103127045 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103189044 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107345177 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122832217 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107734033 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101968139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124961178 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101605824 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10164391 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126251534 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101872718 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103902974 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124071313 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102574437 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103426049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100139761 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124481883 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100318217 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106363107 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125135418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103464045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102202264 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.127767441 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106104268 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108637348 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131375057 seconds)
  done (took 7.151735215 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112372511 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102382229 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136973781 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101001472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102055776 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102737073 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125054925 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104751845 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102821725 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123598318 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103975025 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103146489 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1250337 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104196287 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103804835 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103123966 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.121626766 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102919454 seconds)
  done (took 2.849613107 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106953828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102456636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104963342 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124321134 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10098938 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101624077 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12466271 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100606306 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100891449 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101827704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124984875 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10152846 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10139194 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12372232 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102177389 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101550965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123349863 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101556399 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101713593 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099883879 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124352637 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102066917 seconds)
  done (took 3.251341883 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112222545 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.231818464 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107265742 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.240633428 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.12221083 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098273318 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.107252525 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122121937 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115355581 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097773336 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.1218277 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09841413 seconds)
  done (took 2.449706048 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129790777 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138462334 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125295408 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103593064 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111155995 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130286992 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107716706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105664666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137189759 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118157292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128187869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115475324 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114326994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13657513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111949946 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109763191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130020875 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107197051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10310983 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142661887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107657865 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13744667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106975692 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106678795 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128761849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115360184 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114173444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138975207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107506286 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136475899 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111508417 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106069492 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136635281 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117517308 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125770823 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115467677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106443356 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144319057 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111758955 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114786235 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12490782 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110694797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136312988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11293236 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115684425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129435982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113024842 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107174476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129623673 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128330809 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133511069 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115735305 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111582596 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137284108 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116822675 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150921242 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118556386 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136037294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112690012 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11772614 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137197745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112526478 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136067716 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118872734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111607948 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13737565 seconds)
  done (took 8.888019586 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141144592 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104208079 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130836202 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120199275 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114832046 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130620156 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108241916 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10678988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130445175 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104069019 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172728944 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107431758 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114458563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138703565 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108010472 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130445243 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10726868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115739954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125160894 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128636325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106572295 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137867773 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114863774 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138721205 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11938098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110871049 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130620758 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108295403 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106871342 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129284023 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112575312 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129128153 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115836759 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104467039 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137397066 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108748985 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10737485 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135512417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109485429 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110487681 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13714816 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121694751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1306843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107892622 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117343532 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131064028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10763298 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103581368 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130474133 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105624528 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117719249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141970679 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118310433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136956387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108578245 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110434893 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130023709 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108941178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108813234 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134220857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115764841 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130447846 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129119636 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108836129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131001487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115951932 seconds)
  done (took 8.835415213 seconds)
done (took 167.486091488 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176771836 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215584461 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199949249 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.155376608 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092720343 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.152454304 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127074307 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201033483 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093036347 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092788868 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116740901 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09612711 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.160533948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116038823 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094192271 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096005904 seconds)
  done (took 3.063266489 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.194554168 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.342462604 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.134367578 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098562071 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100466545 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098549764 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120846547 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100835835 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098608532 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128785218 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100408247 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094338266 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127514354 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095864303 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099251484 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121484419 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106574229 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097894098 seconds)
  done (took 3.149087453 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118860429 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143355498 seconds)
  done (took 1.155112531 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129080407 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212307277 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293172976 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170384896 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119315835 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140343823 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148879336 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132520003 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188604654 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132797444 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112021056 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096325406 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148767926 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10437557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114732309 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120000284 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126936394 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11355253 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135560882 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100591128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122254407 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125074184 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10358569 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136533372 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180041795 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132265077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10425775 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102451649 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123338306 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114438708 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105300841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137323238 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111502085 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179892287 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102170213 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1746035 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10592759 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122004359 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113890096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099190484 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124917878 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102184716 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112224889 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120851433 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10427095 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.104576642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126365303 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104427641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106176703 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128799844 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106810011 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105254157 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.173463107 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128523078 seconds)
  done (took 7.875735236 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.907117804 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148371657 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097962835 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.055709587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143525574 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112181308 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.89981571 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148066299 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24829935 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.90120913 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116194225 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105610866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.264487473 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255446779 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273622037 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359477118 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.75818545 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112121753 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129353994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.165844371 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103685042 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139161274 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114911587 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.444851184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099958953 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098960763 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12642049 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107528767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176640209 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099400721 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103581486 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196665852 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293710738 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212862484 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099475446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121585789 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099934053 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187420332 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269985857 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218274061 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167461253 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120813327 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098318147 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103478281 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136501909 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09648116 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182183875 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192099273 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167910642 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127183197 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107586372 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107072159 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126259675 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180017008 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097225333 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357396279 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359261277 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121141531 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105495632 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110720029 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264731456 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123991168 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239411273 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120615203 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21273654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122521182 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803619151 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164851803 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120483717 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103652975 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103936781 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128132048 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102736365 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179767986 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397894038 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128844382 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104021755 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099576708 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241702754 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099193758 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122417416 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.178612206 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101057468 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104721919 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128828111 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105627306 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187861066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248043931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127997033 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105301406 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125514127 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109915246 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09975135 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231288146 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233141512 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179300967 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226602953 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103960567 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182091372 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185039002 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104946486 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188813439 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104754662 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11094603 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126334798 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227746812 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156607388 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101945371 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104393736 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104435292 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161005292 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103166475 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129473764 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165292006 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480170942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187085141 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096794273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127044134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106142725 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178385158 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105665977 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262253717 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127566646 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164950012 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128360325 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098244165 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105497998 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18360981 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107185238 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128329988 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10462569 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107661003 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278377727 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220128233 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130663842 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249924611 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171873222 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126730459 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169765091 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129472322 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162829445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135347321 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102606165 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123170123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792199164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11216571 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105022442 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127325091 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181998985 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121426363 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10301749 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09958772 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097870086 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793306168 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126468494 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098062318 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102336116 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127469267 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105802566 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105097113 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127028705 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157528857 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271851059 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109562435 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104276415 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123004925 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15582826 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124327625 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100479505 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099947911 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122816216 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107931637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103965135 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125768942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164136685 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179204266 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233572825 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580088606 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124088319 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100709492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24236781 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100042834 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.350434851 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106189511 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23733884 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183380546 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097333586 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357741865 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182509384 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.204320131 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103329444 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191397671 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097925142 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105281792 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185758775 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122416121 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107483169 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178382837 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109588836 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107061095 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.27967958 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101533635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24580876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097773334 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19096086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10215379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104454323 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349741385 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102281993 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111159024 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.17982226 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104368095 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123328468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.860818804 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125753708 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108760486 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127687154 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236452663 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159396223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130628658 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107190826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131347812 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158542284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.22844715 seconds)
  done (took 46.378299462 seconds)
done (took 62.508881083 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.221834863 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16469378 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.348685509 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146013102 seconds)
  done (took 1.887026885 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259029607 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163208014 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.242152854 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097663486 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248630871 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097470066 seconds)
  done (took 2.024063736 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.167649687 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163436511 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141619062 seconds)
  done (took 1.390289849 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208031272 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206136902 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345170522 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233380732 seconds)
  done (took 1.992936734 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.273765101 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116573539 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123982957 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.225775863 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242950026 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206407977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122972723 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175551082 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129385431 seconds)
  done (took 2.577274676 seconds)
done (took 10.787544877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.433583726 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.269992652 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.250809875 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.34825759 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.30654142 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127432388 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.309900316 seconds)
    (8/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.137270485 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139315044 seconds)
    (10/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.260327595 seconds)
    (11/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.322226858 seconds)
    (12/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.330762958 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.248414736 seconds)
    (14/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.35015294 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.210587301 seconds)
    (16/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202785348 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.21357199 seconds)
    (18/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.202997159 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110859093 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.215265798 seconds)
    (21/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110289659 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128032011 seconds)
    (23/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.22780227 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.226337328 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127393066 seconds)
    (26/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.142448916 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.200734382 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.111087415 seconds)
    (29/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.308281625 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.257571302 seconds)
    (31/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199664278 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106388435 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084131483 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.268960744 seconds)
    (35/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.416260183 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.156243226 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.336423606 seconds)
    (38/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.170693843 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127907337 seconds)
    (40/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.203721546 seconds)
    (41/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.177657766 seconds)
    (42/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.176498839 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.1383433 seconds)
    (44/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107062335 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106351388 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.194759262 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.088330634 seconds)
    (48/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.158602826 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.213825073 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08582779 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101239248 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084233882 seconds)
    (53/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217570659 seconds)
    (54/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079116771 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125320952 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107478054 seconds)
    (57/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.143468563 seconds)
    (58/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.162614271 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130591141 seconds)
    (60/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133850113 seconds)
    (61/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.139221827 seconds)
    (62/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081055035 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.08511014 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.202462496 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.137178822 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.129886599 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105712827 seconds)
    (68/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.167099028 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.081862741 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.120817107 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.420284412 seconds)
    (72/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082379314 seconds)
    (73/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078141434 seconds)
    (74/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189438508 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135406471 seconds)
    (76/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.133915564 seconds)
    (77/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.084593851 seconds)
    (78/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108223185 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148200185 seconds)
    (80/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079885587 seconds)
    (81/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117051595 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.174461866 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110072669 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102232418 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084760694 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.102804529 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103294556 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.171517966 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.126881421 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129589813 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101764246 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130753246 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124701767 seconds)
    (94/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106497913 seconds)
    (95/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080894422 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158726058 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103141381 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109358069 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109364035 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087045442 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.09962949 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109551633 seconds)
    (103/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.109729755 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11194941 seconds)
    (105/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110442319 seconds)
    (106/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080294005 seconds)
    (107/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.110295315 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128290413 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102420202 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127310586 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119372999 seconds)
    (112/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.133549441 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216657894 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100640423 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079174723 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128671284 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.13214377 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084738467 seconds)
    (119/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078126888 seconds)
    (120/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086178609 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12746919 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.07994976 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08126986 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146039264 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127086919 seconds)
    (126/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079089134 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113709134 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.138288862 seconds)
    (129/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085874396 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080574547 seconds)
    (131/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.081902062 seconds)
    (132/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.130710579 seconds)
    (133/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.108668592 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07959654 seconds)
    (135/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109638919 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080445488 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125002827 seconds)
    (138/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079491861 seconds)
    (139/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.086021915 seconds)
    (140/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100388293 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084211694 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.105800144 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124311412 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081603775 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121916253 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126760006 seconds)
    (147/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086033146 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101836328 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133363445 seconds)
    (150/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081864756 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086686668 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082705584 seconds)
    (153/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078855954 seconds)
    (154/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134739646 seconds)
    (155/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080190797 seconds)
    (156/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083207446 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101990251 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104568891 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083640616 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.132277116 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078303931 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123538274 seconds)
    (163/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086566231 seconds)
    (164/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082699655 seconds)
    (165/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082136971 seconds)
    (166/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108263322 seconds)
    (167/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136275279 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101201018 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108548178 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126244368 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125265797 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085422326 seconds)
    (173/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108532439 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.109278851 seconds)
    (175/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081398599 seconds)
    (176/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113025903 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09953951 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.15839711 seconds)
    (179/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110668691 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079523641 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078588464 seconds)
    (182/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.103798581 seconds)
    (183/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079869839 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121575016 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085583345 seconds)
    (186/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.105903812 seconds)
    (187/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085819095 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.110955213 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083195338 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085698092 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127052607 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103433018 seconds)
  done (took 27.385651987 seconds)
done (took 28.312180009 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224667556 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130679941 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110331382 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108921392 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232406345 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117062622 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152635316 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112270737 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119539882 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135632445 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100887075 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123321801 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135837836 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.218970862 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139485195 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102051946 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101053565 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145850786 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.126063274 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126748766 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23323125 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127768741 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121673281 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101966187 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235307708 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102043148 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.13482708 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113841943 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124877049 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110035026 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13620478 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101932735 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126114694 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151477133 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100997952 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110886196 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124929922 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086942025 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111029109 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.134005644 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125223062 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112764949 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109579813 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127000234 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111687277 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110421217 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126247762 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116275804 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100039099 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.136050263 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105345536 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126127181 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13551116 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.10216485 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100084386 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125275543 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122109725 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101422844 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124437089 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125346549 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103442869 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100195379 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.136878106 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102876088 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110502528 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.125539262 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112218887 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112572866 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108781357 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127445962 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101734944 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110133845 seconds)
done (took 10.010153774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107139499 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145144139 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.248254147 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.250626208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155017037 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120060168 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115266122 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151531742 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116016493 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.119467461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16487402 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133990237 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.253713854 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.118155782 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.144831785 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113786179 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113007889 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137332093 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.24942849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126968524 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124648985 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.144564682 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127210469 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11753554 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.13229934 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129984332 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135605652 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116983037 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105818859 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12268354 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149456766 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106327946 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131757575 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125137914 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123548272 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13894797 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119972409 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113607171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130508105 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107921039 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111989418 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145580214 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106370471 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118258103 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137776766 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12201603 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113014362 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142092175 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109005873 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114276674 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105973131 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154610492 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117954703 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146592004 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119872278 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118430211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.141485379 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119812614 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10987322 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117509057 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131824807 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107010233 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106667962 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151298028 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109717644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118432656 seconds)
  done (took 9.742976559 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125657441 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13523027 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140907095 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117722326 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111755494 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124687439 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10042017 seconds)
  done (took 1.828991138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102121814 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.267849494 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.25806007 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.258210423 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.247323119 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269061587 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126796012 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101467162 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164017442 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113147993 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.267840837 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.323640834 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.13814939 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118837571 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263085245 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101820967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261968619 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.10202953 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143767859 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261198116 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121290328 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132260728 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141948338 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10357867 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.261672538 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102462739 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.303341697 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149701094 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112348544 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115777627 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144955213 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180700856 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.261083156 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.14503261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110924962 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.258849847 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.251992028 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117360027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.333218419 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107924266 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.247791836 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11669403 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117349913 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144367109 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118596727 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.246613227 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120661496 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145736285 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116971659 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.272290842 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112538088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264633755 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141000097 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117677615 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11309793 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145383723 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126283579 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11766649 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270883416 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119271437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.260333881 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259373424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254042454 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260937146 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154756948 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264581614 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211459565 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144327338 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111942433 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117530328 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.261130998 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143971727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115593243 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.250209761 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119079106 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.261934057 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.262189401 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14192153 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116741342 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107744065 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115299811 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.13121109 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252376231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118449922 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115029109 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147679568 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117763664 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117492695 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136041693 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125889148 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11651164 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141357944 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122284061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117048602 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146937486 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.267556683 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114108896 seconds)
  done (took 17.723802738 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105079764 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106042881 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107895469 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130717717 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104460547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103247374 seconds)
  done (took 1.658773722 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142171514 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117697992 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153518408 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119681168 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164833575 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250262467 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259914194 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137876328 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138583449 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129395606 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253235295 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254168605 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253599596 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120900512 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257504299 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120052241 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260540488 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144055617 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127574165 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116039802 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143975861 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122837819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116229579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24451303 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117619786 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148317845 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112201911 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126384148 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152570631 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11314255 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.147574663 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119015882 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109998061 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138113234 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.233476322 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138052228 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114636335 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120908463 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147586736 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119633467 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.25976131 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1154832 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.151667667 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12102834 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111672035 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.137467177 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122393589 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109906051 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.257893907 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14729744 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122582427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118447323 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.145126696 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122324715 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11030095 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139855322 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121890652 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260619245 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122562168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.10950651 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.146921601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119065183 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138220672 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123781293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119387638 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.145734062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112719305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119756447 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141568335 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120324682 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121694773 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.14386335 seconds)
  done (took 11.772243531 seconds)
done (took 43.691892665 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.657266947 seconds)
  done (took 2.654260985 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.099153543 seconds)
  done (took 2.101198061 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.482519123 seconds)
  done (took 19.516270352 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.416350342 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.347653746 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.061004472 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148654571 seconds)
  done (took 2.975802515 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.077371032 seconds)
  done (took 2.095400048 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.338263622 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.250633411 seconds)
  done (took 1.595194502 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725603729 seconds)
  done (took 1.744688342 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.766700626 seconds)
  done (took 2.777345056 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269901607 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.243096839 seconds)
  done (took 1.530954261 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.680231919 seconds)
  done (took 1.698696077 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.660968807 seconds)
  done (took 19.68349308 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251866576 seconds)
  done (took 1.27639986 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293543103 seconds)
  done (took 1.317552569 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.602322359 seconds)
  done (took 4.626633842 seconds)
done (took 66.599335365 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119730105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122172763 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.141360493 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144527377 seconds)
  done (took 1.539056866 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123510846 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117614204 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122210036 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143828745 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125012716 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117505128 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144060537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120587949 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117625501 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146942606 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119901646 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11756421 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146596723 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118298219 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116122056 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147627574 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122466806 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117734077 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145384278 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120634152 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118819998 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145168574 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122005998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120763314 seconds)
  done (took 4.079881189 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115352661 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109458324 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110133476 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133558516 seconds)
  done (took 1.495451177 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12673753 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129108072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151940619 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12681742 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13001948 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15334878 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118490972 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114980288 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142304739 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127653883 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132202508 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15770701 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130685573 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119359437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153954111 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113742805 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11959377 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154991344 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125287148 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126372956 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145381648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125897099 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122282992 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152418789 seconds)
  done (took 4.224307925 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195991346 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12972923 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175870405 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164390295 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178552493 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116111129 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145404942 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151365808 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124890721 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119108843 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146438517 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163122666 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150390532 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121292651 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118145429 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148621298 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130966985 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123370508 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192461093 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123301298 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150182384 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130985421 seconds)
  done (took 4.227297411 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120939186 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108729746 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106492222 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132535243 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121520503 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112122015 seconds)
  done (took 1.73508993 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108970151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103992202 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10344879 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128141527 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109493361 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103173667 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101964857 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129137053 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104473939 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10278297 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127883758 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104261215 seconds)
  done (took 2.359904046 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202773941 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14571571 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248005792 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3889783 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189618717 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159819519 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.312872477 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188181076 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176443419 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164364998 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18094194 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191348351 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153389534 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214515433 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16449576 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.16003124 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197565252 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207499767 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16770876 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238021583 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156734714 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200069574 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187662711 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17548917 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14045241 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189759671 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118924331 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128944127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194022169 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18931457 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175682919 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176602572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141558366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212313308 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260138662 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17694985 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271068272 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160137669 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.172569737 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215143443 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25476439 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140176863 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21747207 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177969716 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129505063 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216257962 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14975649 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.211072322 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134709275 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143057035 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210517595 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206293319 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167605982 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164313824 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326027872 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135956192 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139724205 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206460876 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213601962 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200220026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206115161 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121725439 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202558216 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217020994 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240450103 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143067949 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192241029 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125990106 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189755693 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204448178 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209548901 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157200531 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23617876 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159754187 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170401507 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192758486 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154258081 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233010294 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196567794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120204146 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176174929 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135312871 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124960912 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214560501 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121945362 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242592083 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131444386 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.21010823 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177581373 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183325351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15777234 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191880891 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189536923 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147272692 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101156624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169905841 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15728717 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183437051 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128922899 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150841783 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167960663 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124983076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180304245 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122037541 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195424857 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.134920507 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156735397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196370447 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129804746 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207373258 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145374571 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188143173 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193853638 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191655206 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158472611 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131871039 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245821279 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169448298 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164027034 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168285592 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222234609 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176379409 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13526928 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190460768 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1926621 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169478672 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197543344 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166651655 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134252714 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166532039 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17200529 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186740129 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158537366 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154263509 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164062168 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213654467 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125355712 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165344609 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181510652 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159985617 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124025171 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134160935 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164502145 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141780397 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177767096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138970971 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152547653 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194091299 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189136703 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157250492 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159272201 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173580889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157525829 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169575127 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146021193 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.14552116 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171492767 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226039411 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128068926 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208705507 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187678421 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182265619 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198697617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128888827 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209808286 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126859788 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.148638177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161656377 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196406664 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16181948 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214256176 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204888725 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164036256 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19074809 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146731235 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195694856 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208389332 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156637467 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165931095 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171344323 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196957889 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123028829 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121596104 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154371968 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136999519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128435416 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165373094 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205510752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163161498 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20403748 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16445343 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164846277 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189395101 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154587222 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157033996 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202223898 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137994033 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217376971 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217371094 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177729025 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167006482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161693575 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.146669313 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126503543 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132540727 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186987848 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135815944 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162440309 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141478276 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218973906 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167079126 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17586836 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216230395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164561608 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228970065 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119796941 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.188721387 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165288836 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195691621 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184427211 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133658914 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184950199 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217504035 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141474179 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22100531 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166906853 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207303609 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217270277 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164752896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129128991 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171776086 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157407703 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166248626 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158319215 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171245805 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130200606 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173589886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138534276 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137056403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213310521 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170698538 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173226729 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181814349 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169956381 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153485 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140479587 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199237205 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145669326 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104763014 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192448533 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218918695 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148766342 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178149805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167490724 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157098405 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316431066 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209209181 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168870677 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1638575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13760311 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198507063 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156188244 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18748988 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182737362 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170215109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20689723 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198278009 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137652938 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159401829 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14689357 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17695332 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139457155 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.181371695 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162878246 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.169210926 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186876866 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165480476 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16809476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205022023 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144022603 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178625353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13826006 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254147652 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167895944 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200188381 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.190076902 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161965801 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20959763 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123943403 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125139943 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.160044979 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183236777 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156405682 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175294675 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192140236 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208555925 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173641218 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190265792 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138494939 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154966938 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165804508 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174031396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18341318 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160961333 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136026378 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214471441 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127872598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15880588 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158313616 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31508205 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144932986 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196079856 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106438869 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307165694 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130439918 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132120607 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184970993 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16773141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160281385 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180823247 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201075054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138895403 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185079526 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134716471 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204501098 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183257234 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194791517 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203712804 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143287695 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189801847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154602398 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198310228 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14505399 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175319275 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158085554 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22276086 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.171512732 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160171089 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167737802 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196848607 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170604823 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201376868 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137554942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21065914 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12610881 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195713387 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137102683 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151128783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159944478 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191880508 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130509839 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200319304 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169484052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159086599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127088466 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144422446 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192300324 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139300802 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158750647 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21270665 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129853471 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179732935 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238572096 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158516226 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170466779 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139903682 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160206176 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137731419 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171885414 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134327507 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172500533 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202724276 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127907751 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202203047 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162467989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191607194 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151701495 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170694019 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.261621591 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15736677 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189571919 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17915196 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193706356 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178364763 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17235167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198460896 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148238374 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195442265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174413639 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221944097 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192729015 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167333629 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129786278 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171330522 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137096269 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162326595 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149234961 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195736312 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140669982 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134175272 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194804632 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143634213 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176160488 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140725535 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228745152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148470045 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216294565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215052424 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138042222 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203872009 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174137006 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158231617 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162832421 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200229213 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1418715 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181030493 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133465996 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13561159 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241999184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124488894 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190788475 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200423962 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170275711 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198496164 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135893438 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206981197 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140004068 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203285407 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127014027 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149457932 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198177574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132952917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155951214 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171220153 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189467859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164943093 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170534446 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175861175 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223063683 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124242758 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13308662 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317363782 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188952323 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192569134 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132715329 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167394683 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145419448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18835963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165357588 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200841705 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130171159 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15648404 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145113833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182904942 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139913204 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167606303 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210610253 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154379966 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212944668 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13171712 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28240129 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14000797 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200975085 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117950879 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.158579114 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141921807 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133224825 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171930373 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208659638 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214698015 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191866072 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145088187 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163292949 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127249802 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12942603 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189200998 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149976997 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19652744 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146235176 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103136382 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169232139 seconds)
  done (took 84.691999392 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172305276 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168806532 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.186685703 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.238271956 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215316934 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312300415 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.247033265 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2600822 seconds)
  done (took 2.916234075 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120369692 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160614816 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14134474 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144796932 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108910208 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.496123172 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160301872 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120510551 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161091937 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154096479 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137462883 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572040894 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117308967 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144900018 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123080765 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135939958 seconds)
  done (took 4.108305131 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.996321799 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539466755 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.988420574 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.306302526 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236345389 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214566759 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.794997062 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.711752466 seconds)
  done (took 12.900755008 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174524636 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170595261 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.468434088 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.327363674 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.214449639 seconds)
  done (took 2.478185612 seconds)
done (took 127.76935706 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125527921 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124496533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124297942 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156392947 seconds)
  done (took 1.642402374 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.197486329 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092337492 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094188649 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121276126 seconds)
  done (took 1.625792334 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375508054 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093238889 seconds)
  done (took 1.624100732 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14484161 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134942919 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164217694 seconds)
  done (took 1.577922087 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136620491 seconds)
  done (took 1.259760291 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117881161 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116020664 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279018053 seconds)
  done (took 1.640792503 seconds)
done (took 10.49722983 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121550964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926927657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433541568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137851792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712777015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428854341 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433938256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176447575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172957737 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10945714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16163975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691464348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.448455447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.878748676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.403785391 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905204497 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.715751188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112924959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145661532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113681873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.412735409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136701705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114097023 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112548768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710185052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449528381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111362523 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.916115032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112166373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115634185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400211823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142318855 seconds)
  done (took 21.080615859 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113692688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168295749 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146788577 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113338316 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11463513 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.140856613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122160404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12326931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202926196 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111034811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16091501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111615544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116648572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111657156 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165045398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110811206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113385863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14241624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119316955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112990368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163158682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110467313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113141185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14322621 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111797933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133087762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141450727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123676425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110046574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144689645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116239998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111440222 seconds)
  done (took 5.272946941 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161374621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177059741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149061756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149906654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189820162 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113661379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198781708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179836339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205573343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113131767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133506774 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138583009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153578743 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113632085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165136168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113045956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114058805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141235031 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120115584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113933931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162705232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112048441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112973801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140645981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112925005 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134715515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140281893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125700153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111180403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142992355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118362552 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113781334 seconds)
  done (took 5.609806825 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126725493 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127435246 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134517442 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166516937 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121896754 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126367795 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157228041 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124119782 seconds)
  done (took 2.223392419 seconds)
done (took 35.318595745 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138157939 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128833127 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132604241 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158890849 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.27710619 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119311488 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129319872 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149278421 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128331647 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133000957 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110875997 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152857073 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132913626 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123367367 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.274853239 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127575966 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.279099494 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.278353456 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.152551411 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128074085 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119608103 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.282018625 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12414688 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.152873193 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.276604132 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115999977 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.266733207 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123600519 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122389817 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143091452 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.279806875 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.127429896 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119665848 seconds)
  done (took 6.635321574 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.225877988 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153154739 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123517786 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120727558 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121303045 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151395854 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231797329 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152113701 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120762185 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11885745 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150822493 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214511198 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158671859 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117878904 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121388064 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111268294 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264809962 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123409833 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145820103 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095820375 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115599919 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120460806 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.279071866 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115301565 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.152143657 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120252241 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122393294 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155962888 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124306199 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12291329 seconds)
  done (took 5.600617805 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125604149 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133145369 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137540577 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218620412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149017632 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162652913 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138959135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13306661 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174300295 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112624983 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128977624 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181164657 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131202604 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125485383 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142910147 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133456724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129122889 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142117564 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12400883 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131614309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134321973 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.16250431 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137297647 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.120806512 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.144411138 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12127796 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.119784499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156388894 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121777526 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128138077 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145065466 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117919709 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115295121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.177661936 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115894868 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126596316 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166537754 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127216042 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126721665 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177422709 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117104997 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115977587 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169482276 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16930612 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114356376 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159249155 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126874342 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128355196 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140560634 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133161719 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156759851 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143363639 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13714992 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112622032 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140740603 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123664362 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113329874 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117314542 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159882854 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116576401 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134669261 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152294345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127029881 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11480542 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.154589422 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114188014 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112728542 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117020563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.17154596 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122438686 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15022307 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.145293762 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126944403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126816612 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.157229202 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12706647 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113015007 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154906757 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126511756 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119549787 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.1253138 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14867018 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117416292 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129293298 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.16623808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12842882 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125821073 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15847028 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116400844 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115574004 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16206627 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116956357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118600979 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157280855 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115066362 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118225625 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125622047 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155431356 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111506747 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139291284 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.14865067 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113464437 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138946139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148417992 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119776559 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122343914 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186523175 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11415987 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124282837 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156491203 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115564989 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120863284 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116072903 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143081384 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129079185 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128232509 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152602079 seconds)
  done (took 17.051324036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.376293338 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.363033889 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21191089 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413437285 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126529227 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.285068339 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.395057372 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.369325049 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114399744 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.147594021 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.206194231 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.331224205 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146875325 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148133705 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.369709555 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.447213423 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171674485 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.183744056 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15085657 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127483633 seconds)
  done (took 6.242858285 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135357014 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149618411 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166778428 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141549994 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124023091 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161443218 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115098747 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135422982 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156911461 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124087115 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116049138 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159744963 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128187162 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129544881 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158917776 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147855778 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122877869 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14890645 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13787713 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118262499 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.132651685 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141751246 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123110709 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165285751 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13423932 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125008425 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143148679 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120861573 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121344963 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122187239 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149578005 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134402122 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121253106 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136341568 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126469215 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129783017 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152153672 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118095036 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118966265 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116465829 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159570274 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127198447 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122065225 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130425685 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135529684 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111453245 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128592509 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157770076 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108363148 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134001777 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156883308 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130492914 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121749167 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135312131 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.152903843 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131211874 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124311348 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160022736 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119800131 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112353264 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141822311 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118824844 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123249282 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158741254 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12783568 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134283828 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161735454 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115855725 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11904685 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.146934826 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120293407 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128019827 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164075591 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125725308 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122359905 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125512734 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.155560251 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096527263 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123165217 seconds)
  done (took 11.760426981 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139958533 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124475085 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131853429 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179250389 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127896873 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120760388 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155356436 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134226485 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128383469 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16595449 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130148132 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12823482 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167735287 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125755567 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123471883 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160883168 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.1298427 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152298566 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163818468 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14208479 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128542276 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151383045 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128006577 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125607401 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174023935 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125979506 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14047895 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15933331 seconds)
  done (took 5.145864232 seconds)
done (took 53.576037514 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.322901055 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.498510804 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.272352841 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.27185178 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.311864487 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.303026189 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.271547022 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.28513425 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.920028741 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.242501841 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.272878015 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.269606316 seconds)
done (took 29.414978734 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.418893512 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.40929076 seconds)
    (2/2) benchmarking "String"...
    done (took 1.613153518 seconds)
  done (took 4.197367216 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.262223108 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.263085741 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.507213526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.26174701 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.263360337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.264422595 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.262143072 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.265733931 seconds)
  done (took 16.253135416 seconds)
done (took 26.29702058 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.282348266 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.559274381 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.537745412 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.242948298 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.265542839 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.262246917 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.263812185 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.326609074 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.26373511 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243803188 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.683003082 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.563861368 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.267064428 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.690464418 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.243577868 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.270869617 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.293680559 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.612077888 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.267643044 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.303531825 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.243020503 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.244204034 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.287227166 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.274776869 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.273968724 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.274150107 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.286060342 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.266773202 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.565121276 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.27636904 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.307673014 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.264275027 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.287203792 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.276503595 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.2741905 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.266466602 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.590157081 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.276801067 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.256474227 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.26849834 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.579847373 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.290767727 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.275647547 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.266663474 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.244785515 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.302155116 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.248245541 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.383556657 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.286685054 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.26692801 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.309422545 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.697355759 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.280481078 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.277848249 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.272031315 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.629663169 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.29013637 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.378588408 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.293638916 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.270487482 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.275799154 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.268034851 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.310286332 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.270911182 seconds)
  done (took 148.64275243 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.267291983 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.272873344 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.272484494 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.272203357 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.271609936 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.268133662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.266183631 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.268411388 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.268023495 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.301458962 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.27199138 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.273843031 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.273569636 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.235890083 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.276642566 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.290253708 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.273255408 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.267696021 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.300971395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.268018528 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.274713681 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.272981236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.2734136 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.274157567 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.278572543 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.361249884 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.276714028 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.280058733 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.281342452 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.268615179 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.276554805 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.275364812 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928883393 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.140308918 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.280437583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.308327778 seconds)
  done (took 82.681977028 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.269357212 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.269597353 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.26791181 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.304585458 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.268283763 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.882654208 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.888999438 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.332082917 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.827706753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.773884267 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55069666 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.273621455 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.364312104 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.281465442 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.271399511 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.364685572 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.295745598 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.275492037 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27001603 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873169338 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.287355894 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.369606178 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.451146632 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.287424391 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303168778 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.66279263 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.271186906 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30487754 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.608303127 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.321367706 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27043587 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.656984633 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.589535127 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382875142 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27308109 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304498858 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.272106876 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.555688201 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271486545 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.271582922 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.272602076 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.274762294 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955981607 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.277202167 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.886695298 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276162679 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.263695952 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.270936989 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.271361931 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.281428675 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.088217396 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.27612923 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.272654155 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.275174261 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.271331688 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271214157 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.305601154 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.382450504 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.162843376 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.272179318 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.273296642 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.275945707 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30729748 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.272200993 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.446539922 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272509839 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.781012944 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.328584328 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.493627073 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.885220378 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.276613428 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370916744 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.392094497 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.272816644 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.272696285 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272525372 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.273442261 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.385688438 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.275041016 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.994701145 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.454654953 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290055067 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.778580233 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.3775933 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.274027042 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676479404 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.279207021 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.275493644 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.007761401 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.275067422 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369784489 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.274409989 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.272910671 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.275345283 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.274857724 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.998919424 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892528198 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.584050637 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.280733377 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.807795407 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.280091321 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.164301132 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.867329308 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.959489227 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.281229044 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388794461 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.457935786 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.293962238 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.276076199 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.766633525 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.280685761 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331345483 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.280325325 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.677695553 seconds)
  done (took 386.555571638 seconds)
done (took 619.045481168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.16270349 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.100641922 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.256529887 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.13482138 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.097141105 seconds)
  done (took 11.926527007 seconds)
done (took 13.102097187 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476336688 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476955956 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341296784 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479920435 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311371588 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493744273 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.458297606 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.294176836 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.387843981 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.36122537 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388276003 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.331624405 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.310427105 seconds)
  done (took 19.287406497 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562234079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.288013345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343107181 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546686829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323094974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566119265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.606907123 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.288667876 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.448245837 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322714355 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298946077 seconds)
  done (took 18.771664273 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576169115 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.288973326 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.363289418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549936477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.323892517 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.575631536 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.607525812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.288805653 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441263603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.301736938 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301966763 seconds)
  done (took 18.795191649 seconds)
done (took 58.032060481 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.318142113 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.381632057 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.313506764 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.298983626 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.294770611 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.296107267 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.299011467 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.29694662 seconds)
  done (took 11.677521645 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.294283488 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.293307483 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.29378289 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.294947616 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.295564387 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.294139404 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.294312414 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.29381094 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.293678079 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.294848279 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.294867184 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.295244931 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.297492983 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.294860747 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.296572438 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.294754448 seconds)
  done (took 21.89549014 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2982773 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.294898814 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.295256805 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.296201305 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.294835467 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.29519112 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.296906724 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.294780622 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.297283951 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.295972974 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.296505987 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.296251221 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.297627107 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.297203717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.29701603 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.297532646 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.297049817 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.297192922 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.301645496 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.296243491 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.296686273 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.296000171 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.29610519 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.296700556 seconds)
  done (took 32.299821053 seconds)
done (took 67.051302059 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.281733024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.282568764 seconds)
  done (took 5.746013266 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.362498903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.355465894 seconds)
  done (took 3.900596829 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.297737146 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.296469024 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.298167289 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.298187978 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.296799707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.298529785 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.298971207 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.298179954 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.298205384 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.298930972 seconds)
  done (took 14.161732859 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.296918397 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.298259682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.297768774 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.298184692 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.298416348 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.299183944 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.299401749 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.298628551 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.299337561 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.298400369 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.298165887 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.298099774 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.299745002 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.299219871 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.298752887 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.299933941 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.299152186 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.298392268 seconds)
  done (took 24.557946057 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.313176213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.316732369 seconds)
  done (took 3.812349568 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.426747355 seconds)
    (2/7) benchmarking "second"...
    done (took 1.341015441 seconds)
    (3/7) benchmarking "month"...
    done (took 1.402620302 seconds)
    (4/7) benchmarking "year"...
    done (took 1.395843282 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.34158375 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.319831314 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.339902944 seconds)
  done (took 10.749449038 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.286939425 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.592236113 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.782151148 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.442728059 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.277727501 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.303936268 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.264122667 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.305164877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.306947346 seconds)
  done (took 14.745755877 seconds)
done (took 78.853768143 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.284710253 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.311391724 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.317006399 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.306064617 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.595259359 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.327997468 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.292174274 seconds)
done (took 16.618871097 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.280480342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273519998 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.268307218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.298031362 seconds)
  done (took 10.305373955 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.298596619 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611542633 seconds)
  done (took 5.09463309 seconds)
done (took 16.585094812 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302286679 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.30221252 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.302162428 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.300543133 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.302123563 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.302400283 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.302554542 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.30330053 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.302483997 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.30363799 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.302788025 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304801082 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.301917249 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30206206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303351051 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302825754 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.302535175 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301318291 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.302219711 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.303386101 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303361517 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3036715 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.303475469 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.303358749 seconds)
  done (took 32.450632002 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.30318561 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.303603855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.304426262 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.303060019 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.304235675 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.302886522 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304131588 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.304045292 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.302912706 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.303111798 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302805468 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.303662015 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.303489363 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.304888893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30553799 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.304808518 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.303334661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304570285 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304318644 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.304021859 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.30342666 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303799705 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.303573148 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305080958 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.303836729 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303523187 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303279797 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304264321 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305973394 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.305080898 seconds)
  done (took 40.305664389 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.308868948 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.31050422 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.304634457 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.304265843 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.304235579 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.305032781 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.305197544 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.304618281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.306283098 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.306161703 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.304697232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.304244668 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.305798474 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.304601307 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.303998442 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.305586522 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.307489719 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.304531551 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.306520795 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.30550401 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.305427843 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.306806584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.306237593 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.306045794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.305339875 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.306334114 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.306636454 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.306075163 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.305888665 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.305184987 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.305603973 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.306409617 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.306182799 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.306080119 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.307619378 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.307720189 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.31072073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31482316 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.308143555 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.306627559 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.307989015 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.305615674 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.306465487 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.309115355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.308612152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.306839217 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.307885301 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.307309965 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.30727972 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.305820558 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.306355994 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.308727185 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.308070006 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.306969281 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.309133845 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.307541043 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.308508518 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.308929297 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.309496368 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.30740544 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.309114975 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.308519746 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.308849825 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.308837977 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.309487084 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309025472 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.309061682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.308545042 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.30769048 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.308896278 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.308374743 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.308563417 seconds)
  done (took 95.302292891 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.308829188 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309025461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.308077294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309964502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310140383 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.309719506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.309051625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309581014 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309803509 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.309502096 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310732987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310209665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309731307 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310904417 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310052596 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.309655813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.309959434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310444854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.309338582 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310375521 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310432092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.310612597 seconds)
  done (took 30.008597958 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309322048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.312136464 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.310424419 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.311535521 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31222719 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311321103 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310398086 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310797235 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31094892 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310320929 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312243562 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311809289 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.312383609 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312502634 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310982748 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312554956 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311621784 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313759207 seconds)
  done (took 24.801644602 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.313229245 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.312282909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.311754333 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313052547 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.312372401 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311438282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311503102 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.311286386 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.313113363 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.313862872 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.313119146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312916694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.313508022 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312398117 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313368812 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.31275116 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.312844749 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314445369 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315147237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313101791 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.314176802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313786371 seconds)
  done (took 30.080295807 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314419703 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312479299 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313438894 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313055362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314423866 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313109843 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.315006507 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.315013438 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.317188431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.315558658 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313740532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314251735 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.316080366 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.314464417 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.314301508 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313108496 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314797485 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314387704 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314477192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31629612 seconds)
  done (took 27.485190808 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316866999 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.316747274 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.315897699 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315211502 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315751455 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315327203 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315918102 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315741735 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315440269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.317218475 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.316076058 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314803495 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317031191 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315857813 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316207744 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315589674 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316500118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316992006 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317304334 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316839293 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317383827 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316974626 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318303072 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31597286 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31757215 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317509048 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317001495 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317879792 seconds)
  done (took 38.060254463 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316983846 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316177565 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.318535799 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.317464369 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.319230843 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.319260237 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.319609936 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.31730277 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316775514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317394909 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.318257792 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.317808424 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.317476212 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.318351447 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317902485 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.319331652 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317676012 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.318364156 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318579212 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318278105 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.319006663 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318452109 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.317631203 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.318430999 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317966089 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.31892793 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320128827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318717735 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31957217 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.318142627 seconds)
  done (took 40.747289418 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.337864568 seconds)
    (2/2) benchmarking "in"...
    done (took 1.337116637 seconds)
  done (took 3.873927693 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.319073321 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319094042 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.319159108 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318300651 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.31906884 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.320404799 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320596943 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318731158 seconds)
  done (took 11.754936806 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.310096071 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.321121835 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.31996028 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.321260336 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.319861236 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.312685843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320885901 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.326520651 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.314600127 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.315899032 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.320485708 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.319539824 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.316594551 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315109607 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.315738218 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.317355753 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.323333462 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.322450766 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.322387161 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.322016328 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321947392 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.317695571 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318479986 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.325759336 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.316862492 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.326370298 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.322617357 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.326918046 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315236864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322770912 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.320183525 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.325429214 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.322695905 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.324081538 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.3238489 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323037443 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327801116 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.324202075 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.327672139 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329581638 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323844058 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.325095748 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.318473518 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.321783796 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323348018 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.329318339 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.324790728 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.326162394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.316195599 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.321612844 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.332430397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.31670926 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.326903534 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320237429 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.323839572 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.327876856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.331987671 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.31844394 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.324526259 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.329553751 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.335548592 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.335258776 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323980085 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.331058797 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32756418 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.341738458 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.331676864 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.332794226 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.324331465 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.327544147 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.326665028 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337058889 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.33816495 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.33022138 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327741818 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.325462301 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320699413 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.330535343 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329052144 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.330421119 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.331396992 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.326780873 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.327936981 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340077363 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.323088777 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.331135964 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.327186059 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.327306667 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.319875061 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332404182 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.336257231 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.328143676 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.319281014 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.324139272 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.323942691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.329715724 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.318550202 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323383866 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.331528791 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.328292083 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326995701 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322812963 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.331391766 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332815278 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329394063 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.330262194 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.33482953 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321353619 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.332958815 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.33653079 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.329271155 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.321969137 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.328549069 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.332467757 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324159445 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.332071548 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.334414807 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.326193954 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.334579849 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.329043368 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331320812 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.349564097 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.335895659 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.329790797 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.326353823 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.340440787 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330785612 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.329521138 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.336032033 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.331085376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.330387004 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.326207003 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.336623745 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.325077682 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333878959 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.325509031 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.333119593 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.332435166 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.330935967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.327173884 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.33014533 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.328541131 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.331531304 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.334881892 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.335975423 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.327389083 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.337714715 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.330913756 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.330445784 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.332320768 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.336252779 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.332968179 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.326125754 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.336030467 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.323961026 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334580855 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.325762093 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.334763217 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331350225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.332577672 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332406358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.325072066 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329370929 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.337243093 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.332462427 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.332997667 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.336170965 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.334767876 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.332021002 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.324920391 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.335230138 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.323958091 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.329289369 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.339140679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.333379742 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.332390367 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.330673864 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.339915606 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33294366 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.334004153 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.328407554 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.337266489 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.340156505 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.338552309 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.343493748 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.335926538 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.336802429 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.330176254 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.332143177 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337294624 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.330525787 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.344478072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342795337 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.350037597 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.332132508 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.340928228 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.328808218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.340598003 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.335838362 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.344701445 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.336983949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.335762642 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330376646 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340681458 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33223402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.33928947 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.32628719 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.338717709 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.336119228 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.334889145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335967859 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.329744201 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.333389511 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.337559634 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335159969 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.334773544 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.329184198 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.339962501 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.328354219 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.333120715 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.340412358 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.336791736 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.337854776 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.343670804 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.334145621 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340221528 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.339118366 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.330395037 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.33839519 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334859319 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.33654359 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343507738 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.338381832 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.33391818 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.344133756 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.340530326 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.331697227 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.33842625 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.346290395 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.337804155 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.331027674 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.344286592 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.337867175 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.337284358 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.337469364 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331548808 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.341118834 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.339313226 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.348356737 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.331989749 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.342581688 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.332780652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.342178956 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.334987538 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.341081726 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.33944685 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341877505 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34680707 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.337489754 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333387462 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.34325173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.338492937 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.339838789 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.334465263 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.345703127 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.34071348 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.340536388 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.337789309 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.335170404 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.342726973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.332320472 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.343530633 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.333944869 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350555868 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.361688448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341648536 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.344262427 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.343624884 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.343637411 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.344509052 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.335778591 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335518708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339405855 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.33609416 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.335968656 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.343868321 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334938739 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.345520021 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339717875 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.342930932 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.343725617 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.341442921 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.332520887 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.3450227 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.341785138 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.341872817 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.334145318 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.343506039 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.335605973 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.344191577 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.342381846 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336143792 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348745125 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348653772 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.339289189 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.339550265 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.338181168 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.336115935 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.339293769 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.347533614 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.335593285 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.347527912 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.33732406 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.342791168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.339248722 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.349111054 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.351955495 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.338076219 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.349386114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.343033686 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.333368238 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.336620001 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.345515952 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347013726 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.355332105 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.335152462 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.345431605 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343508519 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.343862219 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.342867303 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.341878009 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343936516 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.344407986 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349289601 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.349221551 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.340690009 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346702513 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.353552802 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.343963919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.34372488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.336465044 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347098393 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.356021106 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.339963128 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.342554603 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.340254836 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.346593939 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.343614811 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.344239281 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.347207355 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.345599175 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348368042 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.352022833 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348614249 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.346871818 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.349254522 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355750783 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350906821 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.358341299 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.341005674 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.351420512 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.346354323 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.3392971 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.3423992 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.342702443 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.34974243 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.338157891 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.349761499 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.345422177 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.342746903 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.347712683 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.352952738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.338478324 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349536247 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368153988 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.338828362 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.350070789 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.34622769 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.3398591 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.350044584 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.347028573 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.338866827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.343934543 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348418887 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353746239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.340022411 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.350603638 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342008513 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351181925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.347600369 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.347924184 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.347364857 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.347957332 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.339707092 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.350483922 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348158274 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.358417519 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.344168743 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.347570233 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.343112383 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.355562453 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.360903207 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.345832014 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3541606 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.350029486 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.342784323 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.348126453 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.353622146 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343657562 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354065024 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.341849784 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346706522 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.34773709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.35231211 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.353953812 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.352826969 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.341142093 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.344996423 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350797296 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.350283596 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348179048 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.346212614 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.356942046 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.34259022 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.343687284 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.352154818 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.344165884 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356183277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343741374 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.350213464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347272948 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.353652427 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.349111075 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349433261 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.341584364 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.34514719 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.35811817 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358062904 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.35176098 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.350419412 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.354252795 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.345639938 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.351089004 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.353014178 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.349011126 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.348298724 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.355223397 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.346544827 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.346821143 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.34546207 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35416799 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.35682645 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.357003684 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.347130692 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359838787 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.362224152 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359121421 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.344557639 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.349450329 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.348720979 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.353367355 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.353615214 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.347238644 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.36114918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.360314442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35645209 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352605592 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.354972565 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.345496778 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357807628 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352705937 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.349793551 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.360105284 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.349963199 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36154029 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352937527 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.352369844 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.346995612 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.34914932 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.349960516 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.353277841 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.356936502 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354498843 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.359933569 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.352200642 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359733532 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.355019982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.353491507 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.353984304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.346599954 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356116587 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.346359233 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.357714933 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.358156832 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.349543246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.358710258 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355226719 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350304012 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.356943276 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.361807831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.35551452 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.348350678 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.354874292 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.361050731 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.367777435 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.355961118 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350095687 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.353681617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.359629597 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354064283 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.355798413 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.350597656 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369881659 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.371591011 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351293919 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.354915372 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360376697 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.368083766 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.356046862 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.35535757 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.352682502 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.355429144 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.362699743 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.357306415 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361181947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363974384 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353817542 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.360921264 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.352693276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.355327089 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.358802918 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.369145677 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.356202074 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.353902007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.370799328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36899049 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358522825 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.385968021 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.366083803 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.358778564 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.362816908 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350424841 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.360445004 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353517534 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.362907162 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.357440996 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357740698 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.358632264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.34945105 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361769494 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.367807238 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.369755588 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.36031278 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.351368951 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.354028739 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.362654554 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.360033727 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.36051397 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.358850498 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.360442132 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359964436 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.352279531 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372232215 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.378053689 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.366370451 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.358543057 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.359001656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.360702349 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.364051896 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.361234222 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.366489816 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.359817631 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.36090897 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.358994175 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.369225226 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.361108572 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.354785131 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.355914332 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354529295 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.363322746 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.370280026 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384647875 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.363312254 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.364664772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362358275 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.360602314 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356472835 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364802905 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361390826 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.354558821 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.357998066 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.365202696 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.362743102 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.361117449 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.356368159 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.368253007 seconds)
  done (took 801.176837878 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.363449268 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.362038074 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362082324 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362962188 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361703461 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362515278 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361518693 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363065615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.362403889 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.363694137 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.363427266 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364896019 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362842172 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.363682486 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36291483 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362049793 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364282587 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.364057951 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361685481 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363254793 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363270602 seconds)
  done (took 29.858133735 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.363228081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.363495224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363044989 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363941698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3645258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.362346479 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363983263 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364488706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364285167 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.362889708 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363367757 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364692193 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.36446106 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.363194015 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363768969 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364480726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.363970365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364508639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.363462199 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364573784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364694576 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.362976596 seconds)
  done (took 31.242611739 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.364931941 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.365654608 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.356513114 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.37009285 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.364681286 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.365182583 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.365007263 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.365548071 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.365243708 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.358146816 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.358110965 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.359616833 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.363576235 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.372341519 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.361777951 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.372757954 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.36521372 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.364363395 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.364484754 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.365625672 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.368510488 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.37958562 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.366854576 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.358112113 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.366940249 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.367339314 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.367191068 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.365226221 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.357248217 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.370408822 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.367218153 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.36078271 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.370384913 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.369340098 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.36063002 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.370655955 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.36771896 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.366833696 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.36771585 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.368894135 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.388541328 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.368590049 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.372103387 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.381729258 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.367795656 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362449876 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.374045999 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.366748386 seconds)
  done (took 66.848108258 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.368218208 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.369910945 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.368049119 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.369170548 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.368671156 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.367920367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.367706393 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.368472474 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.369415195 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.368234757 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.369057313 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.36882964 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.368765108 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.366989889 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.369666357 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.368774844 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.370131944 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.36962636 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.369615689 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.36863206 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.369486861 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.369580605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.370432071 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.36881184 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.371047593 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.369619846 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.370346202 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.36910027 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.370679644 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.370224402 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.371157229 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.371607918 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.371488263 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.369771352 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.371307761 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.370650948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.370594508 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.37046281 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.371561241 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.369488363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.370485267 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.371641557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.371921615 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.370358669 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.370466777 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.369830633 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.370049113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.371960053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.371028853 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.37165751 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.370409922 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.372105895 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.371913148 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.370774643 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.370476114 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.371402918 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.371795961 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.370313333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.37207943 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.371086236 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.372590597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371686597 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.372953313 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.371791183 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.372392411 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.372487836 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.372442738 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.372020333 seconds)
  done (took 94.427046152 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372031588 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.373128075 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372358731 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372317633 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.371426624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.372877159 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.372565487 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.372583585 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.371481321 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.372226212 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.373191589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.3736795 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.373126148 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.374211094 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.374263291 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.374349355 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.375103044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.374526879 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.373851315 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374240377 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.374567133 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.374051083 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.37410361 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.375247275 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.375281382 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.374617935 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.375357032 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.373901364 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.374734267 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.375106448 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.376195987 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.375509163 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.375876126 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.376367884 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.375846721 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.375987194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.37556307 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.37642928 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.376171922 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.375712971 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.37555294 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.37559058 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.375852583 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.375418352 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.375786425 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.376209891 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.375189225 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.3762726 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.375866944 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376813438 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.376757487 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376828504 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376288831 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.376465281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.376612013 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.376209847 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377188335 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37591857 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376004617 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.375664048 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.377002272 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.37740206 seconds)
  done (took 86.495525904 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377594878 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.37806805 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.377313301 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.378868353 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.376964978 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.376029605 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.37685598 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.37634469 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.378526293 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.376752458 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379101451 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377384107 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380548681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379681337 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378027171 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378016794 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378659796 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.378225103 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37779926 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.377911975 seconds)
  done (took 28.807306641 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.376842537 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.377158242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.378465744 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.378918207 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.378022894 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.380029871 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.379432154 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378950277 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380248594 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378596972 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.378815438 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.379636651 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380015765 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.380224604 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.380585736 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.379019003 seconds)
  done (took 23.314723285 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.380702164 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.379618203 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.379478659 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.380072917 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.379369452 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.379891655 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.379735925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.37979846 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.379914956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.37908535 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.380702992 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.380283049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.378905828 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.379567335 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.380794971 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.379689501 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.379593873 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.37957527 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.382116534 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.380803979 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.381611672 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.380836438 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.379753846 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.382344427 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.380884435 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.382112779 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.380507022 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.381032087 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.380914196 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.381020202 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.382013754 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.381986181 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.382413505 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.381351428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.381611902 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.382678747 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.381483582 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3820169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.38197952 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.380751876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.381703907 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.381860904 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.38316371 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.384097983 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.380910564 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.382478197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.381353241 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.382741165 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.382225318 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.383182938 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.382984539 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.382969315 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.382999372 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.384457248 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.384325705 seconds)
  done (took 77.223113428 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381715786 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383005199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.383703796 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.384014895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.384562426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.382815426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.383794643 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.385400416 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.384836822 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.383857399 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.385415405 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.385558047 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.383941708 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.383041487 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.384519525 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383883705 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.383846264 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.382754375 seconds)
  done (took 26.163873787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.385415425 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.384881069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.386854355 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.384385523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.385066084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.384726867 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.383305482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.383776179 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386245099 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.384529975 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385601856 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.384483162 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385373116 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.38606006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.385765269 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384828344 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.385614087 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.385269074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.386070245 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.385345564 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.386327149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.386212015 seconds)
  done (took 31.732448956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.374857282 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.37528565 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.375824697 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.394335668 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.394260089 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.375745839 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.376045826 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.37655588 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.40008416 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.425209758 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.419881034 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.395051863 seconds)
  done (took 17.938734065 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3874001 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38701321 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.385370631 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38784349 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386190897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387496169 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386529567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386546216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387666252 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387215592 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38745493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387680761 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386297226 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387045485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387562671 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387307552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386406384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386953463 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388857817 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388316923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386872162 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389108082 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387196567 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38862459 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388572977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388253596 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387595307 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389518576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388317587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388250551 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388311511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387351019 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38935957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388610195 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389326193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389222144 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388368112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389416252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387854468 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390569257 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.388494773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390527519 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389846352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389802011 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389307397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389697342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390030286 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390331992 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388921097 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389673473 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388915644 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389503034 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388949778 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39070386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38849834 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390128362 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39025715 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390964189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389451055 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392519693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390000028 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389592668 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391223066 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392543839 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391189898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391017434 seconds)
  done (took 92.914456763 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390360949 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.39075575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391071179 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391094215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391689154 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392492878 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391143782 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39265833 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393028621 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392023595 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392731035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392022864 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390516264 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392248379 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392179699 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392656899 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393300909 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39208858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392260298 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391717627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391791876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392947504 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39351397 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392242266 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393010602 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393035682 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392953737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393776905 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392803825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393581947 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393396223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392536023 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393790239 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393416192 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395011333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393757426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394129175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391969963 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394078227 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393887409 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394382901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394367025 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393851871 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394642296 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395780584 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393343166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394864519 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394610441 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394588332 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394505798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394642579 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394447681 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394726498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394906825 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394716841 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394990574 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396273405 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394863593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395083362 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395991764 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396770062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396449457 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395919822 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394776863 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397058073 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396467988 seconds)
  done (took 93.240175487 seconds)
done (took 1877.437781595 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.553133255 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.515539942 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.384959797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.39832053 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.385046723 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.384120415 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.400734106 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.387046638 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.385951612 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.386266557 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.385312884 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.62514358 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.421815165 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.386163344 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.386257863 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.484893011 seconds)
  done (took 28.13369769 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.415820505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.394812203 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.521789518 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.393298723 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.417476372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.59881176 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.454789042 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.391344739 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.585906921 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.412183392 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.384488293 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.433238186 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390494533 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.398307564 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.412495249 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.601443111 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.690240056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.402940286 seconds)
  done (took 30.565478125 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.91757058 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.397517401 seconds)
  done (took 5.580430179 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.426533948 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.393755066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3950577 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.390913547 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.384744876 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.384246658 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.390676209 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.389586538 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.394401393 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.536677167 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.397042189 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.405738713 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.39292205 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.392817003 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.400016252 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.439756506 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.540245668 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.401222007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.400979886 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.397504153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.392511348 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.487297819 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.441870797 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.406362012 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.535403811 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.401332999 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.397202299 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.399963345 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.52384561 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.402086685 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.393560369 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.39397532 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.395218138 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.387818122 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.974338579 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.388063197 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.420950352 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.401623267 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.400326361 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.550150126 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.395798987 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.400509358 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.386448935 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.965856895 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.513269511 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.524307443 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.38860783 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.396388319 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.396891665 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.461181236 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.396834236 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.397149114 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.456722623 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.235923557 seconds)
  done (took 88.939374921 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.409855331 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.389015609 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.575788573 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.409349115 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.388682508 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.416923888 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.392526975 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.729306333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.427853148 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389607166 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.727780847 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.070370321 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402267799 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.433895641 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.411688904 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.419902855 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39155909 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.389510995 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.389372824 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.389233203 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.991674933 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.395435726 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.389953481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.546688601 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.432112033 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.981348833 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.397391127 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.408294376 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.39090489 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.388401516 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.033429881 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.402400993 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.430617914 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.390796655 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.699162181 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.832857269 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792535611 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.398628726 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437282137 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.390419811 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.390288994 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.983401922 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.814985841 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.392455789 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.392379456 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.987401452 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.393086349 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.392635141 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.390447025 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.660697956 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.391631166 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.394715149 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.40168998 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.396737668 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.391322508 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.443390908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.422257287 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.986439719 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392677158 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.393061005 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.408466176 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.395753341 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.396837849 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.397800952 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.397632138 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.81695832 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.569132935 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.396263837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.818040235 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.030232901 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.395896378 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119076812 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398885886 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.393859739 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.464042256 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393931698 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.392579946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980774707 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.428911691 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.392463899 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796555303 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.392860873 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.716293173 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.413051625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393065805 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.014547584 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.408124006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.447434984 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.393891063 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.413192569 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392462298 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.399235591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.706910948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.464372013 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.3937359 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.393900567 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.41195394 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.39527966 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.395153396 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.393607207 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101042649 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.401115916 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.394639954 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.397714886 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405233026 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.393484379 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.395384417 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.398575139 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.676906265 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.394859223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.414706496 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.395635697 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394883674 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.422446404 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.552142438 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.402164937 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.766013843 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.403693312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398163006 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.397006038 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397308184 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.43559804 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.396596507 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.422867583 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.36913684 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.713188652 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.429015473 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.395464016 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39465353 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.397420383 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.39787705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39774635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.428385093 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.398095851 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.250201248 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.408349229 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.413913057 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.395147914 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.404607198 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.397222874 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.406848841 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.399705379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.705462345 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.70674299 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.572639507 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.399403219 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.397969889 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.25829037 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.444521893 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584251737 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419967472 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.397171148 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.702132493 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.617497772 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.399706416 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.397989555 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.398774285 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.680337786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.39850087 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722192572 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.057956488 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.402354724 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.407291446 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.258165402 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.164154154 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.400905428 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.399284655 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.718884542 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.420145073 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.399575702 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.398416583 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.398508194 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.399753323 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.400872927 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.407876328 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.398902768 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.401169723 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.51527189 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.598322112 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.417332099 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.402844495 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988750553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.401424894 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400171073 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.426408261 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.401693017 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.400299189 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.428272591 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.404252311 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.443825037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.401413309 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.407458313 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023255432 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.400935818 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.406598302 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.599075044 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.201927913 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.405223875 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.402159493 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.399787112 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.434403012 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.019811118 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.457342541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.758317032 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.408307466 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.443719073 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.40365322 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402492998 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021702429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401856798 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.401170116 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.175775615 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.401964818 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.086118884 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.400735611 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.404337038 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.105693664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.403584338 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.407351507 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.402102044 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.404437337 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.710875443 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.403593528 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.429432442 seconds)
  done (took 514.058953247 seconds)
done (took 668.542393989 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.405114794 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.406666075 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.40570379 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.407276897 seconds)
  done (took 10.906383977 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.419870667 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.408664037 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.419656973 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.408056061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.420411987 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.408608123 seconds)
  done (took 9.768039932 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.403981375 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.4082721 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.408639053 seconds)
  done (took 8.502875227 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.643604098 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.432608103 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.811519101 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.409354759 seconds)
  done (took 9.581906885 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.420382448 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.418941616 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.418871075 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.419638094 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.421998735 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.422417629 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.419174275 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.419827211 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.421036878 seconds)
  done (took 14.063546336 seconds)
done (took 54.10430851 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.743096286 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.439899115 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.512080205 seconds)
    (4/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.431997863 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.565654327 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.477336837 seconds)
    (7/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.399485372 seconds)
    (8/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.43729174 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.439947498 seconds)
    (10/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.519385274 seconds)
    (11/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.437703926 seconds)
    (12/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.641189517 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.530280742 seconds)
    (14/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.675217747 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.385355769 seconds)
    (16/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.385395717 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.400004278 seconds)
    (18/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.623902987 seconds)
    (19/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.444906282 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.803858635 seconds)
    (21/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.441652519 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.486670152 seconds)
    (23/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.588033586 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.678637252 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.671332823 seconds)
    (26/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.584859922 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.406120139 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.392710425 seconds)
    (29/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.642409061 seconds)
    (30/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.395796868 seconds)
    (31/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.385038547 seconds)
    (32/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.534068134 seconds)
    (33/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.805563235 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.642065742 seconds)
    (35/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.602667925 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.4876445 seconds)
    (37/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.512243559 seconds)
    (38/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.404737761 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.493747564 seconds)
    (40/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.38731011 seconds)
    (41/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.386746205 seconds)
    (42/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.406849183 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.502255503 seconds)
    (44/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.618201111 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.481799672 seconds)
    (46/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.577704083 seconds)
    (47/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.385384823 seconds)
    (48/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.38772711 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.617166924 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.976977113 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.513083118 seconds)
    (52/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.394723891 seconds)
    (53/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.487757622 seconds)
    (54/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.490596933 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.525298302 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.539804717 seconds)
    (57/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.646576166 seconds)
    (58/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.443467668 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.485044583 seconds)
    (60/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.584691414 seconds)
    (61/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.41818324 seconds)
    (62/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.731417029 seconds)
    (63/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.687903452 seconds)
    (64/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.766982358 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.508394781 seconds)
    (66/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.573831524 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.526622049 seconds)
    (68/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.492568936 seconds)
    (69/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.644144036 seconds)
    (70/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.409562689 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.502977386 seconds)
    (72/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.388042883 seconds)
    (73/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.432840991 seconds)
    (74/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.723540024 seconds)
    (75/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.44240028 seconds)
    (76/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.675702966 seconds)
    (77/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.528145708 seconds)
    (78/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.44803007 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.500270291 seconds)
    (80/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.493130132 seconds)
    (81/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.433752132 seconds)
    (82/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.564018945 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.452468665 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.440627535 seconds)
    (85/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.820869217 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.389350404 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.677517678 seconds)
    (88/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.392749722 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.527445666 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.495929293 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.532551564 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.537651266 seconds)
    (93/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.493579788 seconds)
    (94/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.501415795 seconds)
    (95/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.730184476 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.721720532 seconds)
    (97/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.451976977 seconds)
    (98/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.454911439 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.810858523 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.409912109 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.547184936 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.445027437 seconds)
    (103/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.817573307 seconds)
    (104/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.447618207 seconds)
    (105/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.499733786 seconds)
    (106/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.392367105 seconds)
    (107/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.730914805 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.499171837 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.520865454 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.412165137 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.587924713 seconds)
    (112/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.741243469 seconds)
    (113/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.578161963 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.497000389 seconds)
    (115/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.516811656 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.44690125 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.496369347 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.560205036 seconds)
    (119/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.39225951 seconds)
    (120/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.603680209 seconds)
    (121/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.541018162 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.477068576 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.393831567 seconds)
    (124/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.408994602 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.523257013 seconds)
    (126/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.480195103 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.576109067 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.453631341 seconds)
    (129/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.64957107 seconds)
    (130/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.502194035 seconds)
    (131/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.605133254 seconds)
    (132/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.532931653 seconds)
    (133/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.534969991 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.402935553 seconds)
    (135/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.448203191 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.395298719 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.583705688 seconds)
    (138/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.391955656 seconds)
    (139/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.530182733 seconds)
    (140/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.481550567 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.691792263 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.651000376 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.555299375 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.515720509 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.507280039 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.428234345 seconds)
    (147/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.394295039 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.492457038 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.491134773 seconds)
    (150/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.517193405 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.644890486 seconds)
    (152/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.419635392 seconds)
    (153/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.403722997 seconds)
    (154/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.507276458 seconds)
    (155/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.393267055 seconds)
    (156/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.743004007 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.586318595 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.579018086 seconds)
    (159/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.632616592 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.611509139 seconds)
    (161/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.394661263 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.540472747 seconds)
    (163/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.588234117 seconds)
    (164/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.523010019 seconds)
    (165/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.514758694 seconds)
    (166/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.447476895 seconds)
    (167/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.488146128 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.483290251 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.454480913 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.532867592 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.528307282 seconds)
    (172/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.684207134 seconds)
    (173/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.456087479 seconds)
    (174/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.693704917 seconds)
    (175/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.394911524 seconds)
    (176/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.61428421 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.626558499 seconds)
    (178/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.613942404 seconds)
    (179/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.457291955 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.395080188 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.418981557 seconds)
    (182/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.395956124 seconds)
    (183/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.425956898 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.632680444 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.395543804 seconds)
    (186/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.770781031 seconds)
    (187/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.541154586 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.455005283 seconds)
    (189/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.891166174 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.990961252 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.582674561 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.585368144 seconds)
  done (took 343.251803345 seconds)
done (took 344.535158551 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.446715394 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.514452563 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.426200983 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.426519764 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.427754555 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.418659991 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.448897308 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.426747722 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.441210737 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.44434868 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.418181996 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.436987376 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.44311651 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.43913141 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.460142853 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.42699098 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.425920595 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.438229474 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.443156726 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.444908881 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428611102 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428042726 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.45610573 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.426407036 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436120429 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436269349 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.434103142 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.418624875 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.436459976 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.443595 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.424958604 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.434988099 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.445875769 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.441543963 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.428786573 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.437624375 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429297009 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.516900851 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.450884372 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.439754291 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.438125526 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.447418717 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.435365295 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.433911641 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.441172081 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.456790432 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438476408 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.444529841 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.42519348 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.43422043 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450276953 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.442025739 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.439773771 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.433760996 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.422179227 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.444524583 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.440317027 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450066885 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.440806592 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431815259 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.463736863 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449999099 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.442669467 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.438566345 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.43858806 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.445763352 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.439695951 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.448506097 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.438848032 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432831467 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.43302171 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.439579544 seconds)
done (took 112.996451093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.554104741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.428418593 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.587264204 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.438496254 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.601666006 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.552621736 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.438461439 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.439365644 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.438406407 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.236661855 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.439290842 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.440675779 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.429801401 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.439617613 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.552075498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.440270439 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.43961045 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.134457572 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.440703491 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.571553704 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.430545013 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.441311133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.440549468 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239348766 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.431008974 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.42655757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.571965036 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.440774897 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.139803784 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.427655852 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.428178516 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.141192639 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.573719398 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.461007839 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.450386552 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.449804696 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.602663318 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.444096326 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.556793527 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.558060629 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.591598644 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.482281525 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.426398173 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.432397322 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.443900006 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.442475106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.441258023 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.471865786 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.430682174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.442801139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.137883485 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.452961837 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.442502619 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.441704576 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.443445877 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.471517846 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.443500372 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.443873813 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.576040994 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.44482982 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.557775283 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.240347133 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.238269058 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.44352663 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.430628743 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.443630648 seconds)
  done (took 115.2598293 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.505738187 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.507508251 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.554502354 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.434315668 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.484266069 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.557930017 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.434127593 seconds)
  done (took 11.781788605 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.438792435 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.44506369 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.483837582 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.485572555 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.444283264 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.608132556 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444401115 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.44685997 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.4434766 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.494105306 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445161881 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.445807517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.453261219 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.434930957 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.484934381 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.447142709 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.54941307 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.436346554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44478736 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.589224436 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.444623797 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.4530221 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.487062121 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.446526295 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.444880038 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.440936274 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.235233034 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445306357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443893157 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.444759108 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44470853 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.501676662 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.444937118 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.435605334 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.445385432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.550984975 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.446399095 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.447299519 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.446647796 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.437899831 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.446973218 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.445253126 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.447523198 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.445579787 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.446506274 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.463117713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.445635132 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.446968081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.446541279 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446871894 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.494446949 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447059575 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.447825452 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.447140288 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.500155277 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.456736806 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.449262857 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.447204421 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448067051 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.447304178 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.593048366 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.486392534 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.449040354 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.487461655 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446810538 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.447751473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.446833785 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.447519938 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529540186 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.447126683 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.48839773 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.447414461 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.635374287 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.463275315 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449550932 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.443801794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.442741363 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448369726 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.436224526 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.445336035 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.447167804 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.44087375 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.445083681 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447620049 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448683168 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.601794559 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.546342726 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.448918249 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.45602671 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.44658916 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.449379781 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.498215758 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.450218661 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.449758489 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496491429 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.555487958 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.491519137 seconds)
  done (took 148.329664409 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.45105766 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.452166253 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.447143085 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.469404521 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.441717169 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.440739337 seconds)
  done (took 10.010419497 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.444522565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.454702583 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.449475193 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.450213274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.450362053 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.450269005 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.450495853 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.442442945 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.454082322 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.451335054 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.451454287 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.451486794 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.449950006 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.450920766 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.451900084 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.450841231 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.451705855 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.449455302 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.450474268 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.452336983 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.439064064 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.451578996 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.453414479 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.443979114 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.456082885 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.451064888 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.466026525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.451744894 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.451412411 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.450078323 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.454942655 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.451973602 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.444995169 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.45051984 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.455274593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.444697419 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456477434 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.453338424 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.451361589 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.454376383 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.454018457 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.45326383 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.452640626 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.454714366 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.443899147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.449847456 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.45831176 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.467846663 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.453839062 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.453498125 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.452720008 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.454011412 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.453026088 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.454924814 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.447485364 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448631685 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.45772383 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.453832342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.454956901 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.448370334 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.459664865 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.456063656 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.447593353 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.45861512 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.455973094 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.458043454 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.448043438 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.459892174 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456478548 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.454675061 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.456380225 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.454520665 seconds)
  done (took 106.88745438 seconds)
done (took 393.568199697 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.910849519 seconds)
  done (took 4.224991841 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.553943916 seconds)
  done (took 3.869908712 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.81057636 seconds)
  done (took 27.131131636 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.499998254 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.449359962 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.440309139 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.447700871 seconds)
  done (took 11.151250611 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.992139661 seconds)
  done (took 4.307098081 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.448994685 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.454761789 seconds)
  done (took 6.220106444 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.747772617 seconds)
  done (took 4.063139204 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.269208168 seconds)
  done (took 4.589371681 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.461030849 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.460236106 seconds)
  done (took 6.242655985 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.417292557 seconds)
  done (took 3.732071403 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.610720249 seconds)
  done (took 21.926312718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.47124954 seconds)
  done (took 3.789119278 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.495202242 seconds)
  done (took 3.811565958 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.690436789 seconds)
  done (took 7.00703184 seconds)
done (took 113.380914077 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.441236625 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.442748747 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.440234031 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.441796829 seconds)
  done (took 11.082425556 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.521073659 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.520230141 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.529612809 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.513818084 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.515562163 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.523327787 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.483230046 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.482186169 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.512906263 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.509662594 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.524013787 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.514427075 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.524191437 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.483676499 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.509239738 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.525737945 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.513872477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.530296966 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.483744312 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.515733827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.458365625 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.514666962 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.510584066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.458476833 seconds)
  done (took 37.494320022 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.945986602 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.521592565 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.603919831 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.500275641 seconds)
  done (took 7.888681077 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.563437926 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.563558622 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.582307831 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.626856458 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.651422719 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.577420658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.482544987 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.478864605 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.466763855 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.565105583 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.639598147 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.563182708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.782050949 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.459868329 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.777936996 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.46120276 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.460111951 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.563539241 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.61469181 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.646813953 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.460467043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.564010153 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.569066807 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.563997805 seconds)
  done (took 39.003418108 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.467688699 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.478534327 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.463489592 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.47617861 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.463076545 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.46326054 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.463651818 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.468463799 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.460790316 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.461839905 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.460255455 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.475524266 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.462094704 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.46180214 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.469642353 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.465275954 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.462999702 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.468792676 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.47041779 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.462567091 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.462203758 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.470136089 seconds)
  done (took 33.578255307 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.446110929 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.446459822 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.796364942 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.700887855 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.448793833 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.453189774 seconds)
  done (took 14.61160104 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.53389755 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.691702847 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.454028882 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.872121035 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.95661075 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.452945915 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.454123719 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.740505724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.120972313 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.119290103 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.524289982 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.534361536 seconds)
  done (took 21.77572178 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537284401 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458310545 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475319975 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490311053 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457376386 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.459716597 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522951625 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966115091 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.464980337 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734375306 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462518554 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543770935 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.704187762 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458701274 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465661704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.426804771 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688813771 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010264483 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461105986 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472387237 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492171947 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459341546 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47149312 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.695983626 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460621269 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459301685 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.722601562 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459836758 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797704142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775198694 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774878799 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466294152 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736216061 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930551195 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566652876 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695145253 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46175189 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462488896 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.448410267 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.481027056 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466034473 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462645428 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769526385 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464269708 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459724735 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470866614 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978632048 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.470499988 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.460887056 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.461476524 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775250529 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549849409 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.46771068 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462218969 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537108143 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461312638 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.466444065 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595962504 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098573565 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461951508 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497726252 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.466405315 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469562974 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462296431 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195770576 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.470049797 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.46714431 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.467583842 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461772502 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467682537 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487162359 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46299691 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.483455809 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461512293 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333022309 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464112511 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487632859 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064954413 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481319867 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.468908784 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691639096 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463994492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463549586 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.463706847 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463784465 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291895571 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472007553 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.452802895 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504816771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972555382 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.70063633 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482367021 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493208762 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687118719 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.432345984 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464037835 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.465749492 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471553836 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486983753 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979556913 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463305476 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.470185704 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713587859 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.676425445 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465047224 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.436643126 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983145029 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482054662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.489861613 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469225061 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.706007635 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17669784 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786298148 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473999916 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505622327 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466779533 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34570631 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479732345 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.475375201 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46631898 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782604452 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.369567716 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467763766 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539506781 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467820098 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.466663551 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482318979 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468794655 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.467901934 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.680550324 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470678372 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783030639 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.474954 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467937653 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.466912972 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487877674 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.470804036 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690116056 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482522354 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746811635 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467750725 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466707596 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466901119 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.686248999 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.468850484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.474695221 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807365067 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476145631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477694873 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786553996 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507477483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581169564 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501353608 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.473888632 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.721596814 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.475473906 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.47641162 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471171953 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474255627 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474600633 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.476749374 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490192438 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181200723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442149444 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474779818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470175916 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.484164859 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543396607 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476267465 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705312793 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.470739767 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463716771 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.477745184 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.48385248 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694773135 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784274674 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.486985464 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645268988 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.981830197 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181566186 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486159612 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.470800515 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.469021191 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.470508952 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472342088 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471154743 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470948532 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709727783 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790477905 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476781982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207947983 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47413192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486000378 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.479433798 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784491474 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.484539731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471864571 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.47994528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473455095 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482359704 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.788608107 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698387936 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.488933678 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472198072 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991669897 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481409362 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473707063 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473338654 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498833848 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48607329 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062041219 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812804401 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469401899 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788583804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490962044 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.488436886 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.472247004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472691139 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478907615 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.488324998 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482062379 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.710092744 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474853017 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47804838 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113883962 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359027776 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130808426 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497114243 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.491503109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.479100307 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996882846 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476333916 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474705675 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75625052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990819508 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474295989 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990645396 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.473679684 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359500812 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789264058 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705255161 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492281928 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.477079664 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795654087 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691085465 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502228053 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479243995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479947586 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.4457202 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064568577 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482738759 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654858428 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992521406 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481639148 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479911213 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.494109982 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.483875788 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92760734 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475598041 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47495696 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.48870712 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484280629 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073497035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482678198 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477720781 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208950055 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495132382 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.003406687 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47631862 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.716833125 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.792884324 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.774654755 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.481876014 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.484311471 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.722659991 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794087026 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483176601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489469635 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134976866 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.336362957 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.485985581 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478561998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367061927 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478518812 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827184383 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.489924492 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.486725664 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486579508 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480113462 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47914961 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.478746606 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483716552 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449209501 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036299399 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.472252234 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499633142 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48941524 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484764465 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.727561928 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.494753397 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.195056784 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710358985 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481258539 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513612887 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.485223364 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479147919 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.451738438 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478981587 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479916016 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482627682 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.703271852 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.479221355 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.450023572 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.500663382 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.69095597 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481651352 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495478503 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729298094 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.481320387 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.482112352 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373914557 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51228521 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.498051557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482551893 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491335844 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518331578 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554976353 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720533106 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.801570332 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.805304566 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938404006 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48039773 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484315954 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.498415891 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562846067 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480038138 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.499659231 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.481704747 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19673027 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365040715 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203889756 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804181079 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48891486 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493182966 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482350178 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723913159 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480311409 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758652628 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481527173 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.473715618 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524476688 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483679263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500641512 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698431984 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756487868 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482689825 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482025325 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488778561 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.484157066 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80702334 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.700884354 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045813491 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099864237 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485712778 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49372503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013341043 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761458018 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485882589 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486188196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486561881 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.495825379 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503035594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.492408472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494212178 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714075086 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804504777 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969190314 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.803128879 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.513586472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.361714152 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485051412 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.737189663 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317290362 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.726543264 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209055152 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329289673 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740763876 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559719954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72714942 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.487699259 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721466359 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.499129662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489183408 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486903663 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485562035 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.48529839 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.80308846 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213890245 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740699255 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.491812042 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.500413849 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517099657 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.726336462 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.709146118 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317007711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.709248142 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809600917 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.500225478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48810811 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213450992 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809251216 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491852725 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.493463146 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737876489 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489268651 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523426143 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.369130492 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.487063972 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099379068 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.700422816 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510036841 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494419263 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.339687866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211482559 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.50641959 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046612326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490844563 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493598497 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767832877 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.49518843 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500516757 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780681522 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.495012604 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500567086 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734692628 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.207996396 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385535509 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.500936121 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496899699 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.492971847 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489307968 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553981037 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4891077 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49151285 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.926265699 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.488155278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490581447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501937364 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.489394169 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500499732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.4947127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48965501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.498688611 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.459424772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.468814362 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507405432 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626826462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090567315 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493264413 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10561522 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.825554336 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.738434612 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499085783 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.463142639 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.496924785 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490817416 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4923204 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491040399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490198121 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111494964 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.502017142 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.817979121 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502713536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.702967254 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702843003 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502658947 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738222318 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503075403 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514961873 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.460985685 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492212244 seconds)
  done (took 1034.243703363 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.500822057 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.540776148 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.505826207 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.563497524 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509844706 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.628175178 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.58693214 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598738621 seconds)
  done (took 21.785263355 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.497436548 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.491915026 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.493754333 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.491507689 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.483503334 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.040157258 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.489563922 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.492434685 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.506414337 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.490105147 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.492295122 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.20272428 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.494063509 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.503736271 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.494784696 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.495219059 seconds)
  done (took 34.51680432 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.619024906 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.671101426 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.020390634 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.562025614 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.510784784 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.490959679 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.861902558 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.517656924 seconds)
  done (took 28.606835763 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.499624708 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.499246307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.500893764 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.499414172 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.500156102 seconds)
  done (took 8.852507533 seconds)
done (took 1294.755777319 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.500488065 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.502478031 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.502145269 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.503169247 seconds)
  done (took 7.362000824 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.466323162 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.465748893 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.465396906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.477565929 seconds)
  done (took 10.227976824 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.912481692 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.097732462 seconds)
  done (took 5.364065494 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.496112385 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.260238365 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.237226023 seconds)
  done (took 8.346788474 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.791237068 seconds)
  done (took 3.144864531 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.940053504 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.013484488 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.48721729 seconds)
  done (took 7.795369899 seconds)
done (took 43.595921184 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.495712137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.251832996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.645476203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.493491016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.721250729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.644206643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.771822001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.486872726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.496552205 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.493615622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.492647803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.651339753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.761732526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.254010705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.76155393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.255094975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.688539167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.506111008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.488783584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.488561474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.771677946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.488255783 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.495437343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.48768187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.68888393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.635563899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.492470153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.254635352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499095224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.495844179 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.643504201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.488123867 seconds)
  done (took 86.645763441 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.487822804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.493167227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.490425787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.52589326 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.505351675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.490060548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.509013527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.488859093 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497636419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.491200341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.507075694 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.489932074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.508239545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.504642218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.492940863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.508969944 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.488241122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.491657224 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.498143485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.490578216 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.510582877 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.489485342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.497625289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.489302424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.490011594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.510839475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.509716228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.490833942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.509477783 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.490834857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.490849926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.512850425 seconds)
  done (took 81.31013615 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.491593364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.490314888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.491987393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.513536491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490966881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.495021156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.511430101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.49302619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.490974975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.509961263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.493690229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.49137569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.492864149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.492402359 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.49420689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.490697465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.491646093 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.498726186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.502276003 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.491784093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.496292428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.492268037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.492918736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.492149072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492503076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.492447658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.504530727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.499983809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.492878048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.523105549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.493578813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.493130444 seconds)
  done (took 81.243969551 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.733219777 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.509261625 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.512924573 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.503716877 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.510249741 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.509000943 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.503309405 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.739937741 seconds)
  done (took 15.881139064 seconds)
done (took 266.436141946 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.502515988 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.50516331 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.551412153 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.50452587 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.569056832 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.531357292 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.73427937 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.529084748 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.722815518 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.505489494 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.617944054 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.511432466 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.439583108 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.650311793 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.504925313 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.518247158 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.505064472 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.514628671 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.505284243 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.771899231 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.531541244 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.503984726 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.510820151 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.515082615 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.474514742 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.578521704 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.578803948 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.669027255 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.632639955 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.5762318 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.497005462 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.526788081 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.5064067 seconds)
  done (took 70.65847481 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.502125346 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.512068271 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.512969129 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.513915158 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.512675389 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.512263863 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.502961904 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.512565609 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.513844005 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.511846762 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.512454565 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.513852477 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.513371153 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.512726488 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.512060328 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.485745175 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.502954706 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.512954658 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.502675103 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.484743741 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.511546528 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.513873705 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.514641557 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.513622223 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.512839685 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.514273468 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.51231873 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.516305997 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.512942975 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.515158923 seconds)
  done (took 46.663558952 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.512706121 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.502754523 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.499937487 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.532283308 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.50537322 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.509556481 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.853262416 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.516123245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.512705905 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.51251822 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.505375654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.517776439 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.560664979 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.501129192 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.509406599 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.515033369 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.514692316 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.507651474 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.515798782 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.521490839 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.861454237 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.516130986 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.854841908 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.523183802 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.515344571 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.508327703 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.520518655 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.519582339 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.509221144 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.503572442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.465057988 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.852368234 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.500364872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.512239662 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.473826883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.520895614 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.516785156 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.516338983 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.511116975 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.509158664 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.852766446 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.508563616 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.502731293 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.503539628 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.531340228 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.517590066 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.513422289 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.509967402 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.802800416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.518317416 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.520517316 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.514377866 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.52013746 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.510119147 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.801641018 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.51178879 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.509278934 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.502848299 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.514571685 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.854932353 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.518220911 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.510674583 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.513544705 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.509942519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.506990634 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.511272511 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.525374758 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.512336771 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.503628817 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.512732258 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.504527279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.510987121 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.518452487 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.506320289 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.5093071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.515326121 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.511664641 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.519842681 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.504453161 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.854165068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.516762542 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.507027345 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.867336104 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.51711326 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.522680821 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.521472341 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.520748002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.583755661 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.854704233 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.467235226 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.526213816 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.508617385 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.861106635 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.522085712 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.512798741 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.506690779 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.522416001 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.521454282 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.505300107 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.506758675 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.514565886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.52531406 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.507570478 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.516338508 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.860148963 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.519710687 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.506302675 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.514218164 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.582948271 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.522532252 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.526328316 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.527092021 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.869245598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.518675099 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.522586665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.50631197 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.529343042 seconds)
  done (took 221.249238063 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.509365274 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.528811632 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.526001335 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.508214495 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.508904219 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.514915676 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.511392732 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.510819241 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.512812888 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.509424603 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.511085422 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.515845254 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.51496621 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.507675245 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.518464264 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.509881012 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.524123085 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.518625987 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.509985353 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.511193857 seconds)
  done (took 47.655842384 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.525510895 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.184290308 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.156910937 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.523337301 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.523132229 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.517068537 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.582707762 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.527387184 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.525076312 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.873467459 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.726463647 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.526308497 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.526767045 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.524465763 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.159197116 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.498900779 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.874051696 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.183350637 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.526802994 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.185746359 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.496363931 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.526592029 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.516939303 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.187263217 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.883378425 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.862116658 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.585051436 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.190170161 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.525231513 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.528651374 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.185256382 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.529154807 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.516026044 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.172586931 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.52928099 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.53940846 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.527326579 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.585723668 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.587935142 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.877018089 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.193846609 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.873366633 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.53799832 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.701059853 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.529197623 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.496749215 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.19812754 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.528154697 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.49944 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.52934894 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.533368057 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.172240554 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.518863249 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.172399649 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.529466653 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.527812293 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.190153388 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.174185645 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.163755909 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.728745967 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.518524834 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.866409041 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.527352237 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.200087689 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.531986921 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.530599467 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.529695077 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.735778955 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.195285601 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.867279883 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.88029584 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.881440634 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.531391593 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.597932547 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.531389626 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.878922844 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.596910607 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.921788702 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.881299529 seconds)
  done (took 139.40208675 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.831457549 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.645380375 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.957276646 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.146936297 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.080098819 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.671576821 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.649147464 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.786280099 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.538230473 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.630519884 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.278470068 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.625162509 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.387354449 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.597166558 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.641542796 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.661078706 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976118398 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.515080055 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.23075882 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.255429412 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.525793602 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.660916296 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.328099388 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.922355666 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.529016748 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324851839 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.537071176 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.101249129 seconds)
  done (took 58.41332679 seconds)
done (took 585.402784133 seconds)
SAVING RESULT...
DONE!
