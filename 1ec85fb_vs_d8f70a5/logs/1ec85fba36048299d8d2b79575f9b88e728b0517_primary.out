cset: moving following pidspec: 3948
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.510836644 seconds)
loading group "string"... done (took 0.501479262 seconds)
loading group "linalg"... done (took 8.554563267 seconds)
loading group "parallel"... done (took 0.174045153 seconds)
loading group "find"... done (took 1.359125409 seconds)
loading group "tuple"... done (took 2.020888596 seconds)
loading group "dates"... done (took 1.323247769 seconds)
loading group "micro"... done (took 0.208836712 seconds)
loading group "io"... done (took 0.591576122 seconds)
loading group "scalar"... done (took 41.12717439 seconds)
loading group "sparse"... done (took 12.836224784 seconds)
loading group "broadcast"... done (took 1.043201308 seconds)
loading group "union"... done (took 14.243225119 seconds)
loading group "simd"... done (took 4.893538092 seconds)
loading group "random"... done (took 9.84179185 seconds)
loading group "problem"... done (took 2.115374779 seconds)
loading group "array"... done (took 24.345336951 seconds)
loading group "misc"... done (took 1.083084279 seconds)
loading group "sort"... done (took 3.645456763 seconds)
loading group "collection"... done (took 21.01980961 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60754059 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120762104 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144099402 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172532884 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204496656 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136701726 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154314968 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.550319518 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029963892 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206486723 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140322902 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.542457223 seconds)
done (took 5.76187803 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223013553 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072603177 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125007949 seconds)
  done (took 0.878728597 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073442297 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170407613 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091211794 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.106986611 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.106907895 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090671978 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107145036 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106908004 seconds)
  done (took 1.458350686 seconds)
done (took 3.319754373 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.805595509 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.831492147 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.481740173 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121998732 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154987691 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.135280315 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.306976195 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.155747201 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103785695 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.111921559 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174066956 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.345975098 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475943633 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.939453752 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105492774 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.123777238 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078648028 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756580585 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08083609 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127296416 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513074085 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109517816 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113833933 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12320361 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.205077145 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127965707 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178229626 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.092022034 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682082293 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.100323045 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18282124 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096827973 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159104543 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.236185817 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.077019381 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10601591 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671180457 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186703432 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108664399 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092897125 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675880948 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077310457 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185778229 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104326365 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106544332 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185183776 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100488347 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09397147 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098242441 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085900332 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161469577 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449984347 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103700672 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.139547373 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096960758 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702370743 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094226945 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152660359 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122597971 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105565218 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094477772 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090201488 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.174333408 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097364617 seconds)
  done (took 19.600305898 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113151043 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136519532 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091270403 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137063423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136652823 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093817526 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08150369 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09092447 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.10615142 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179962752 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133455583 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138714234 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072213965 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.094250821 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.096414647 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244726798 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118927073 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100102033 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095492304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086911012 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137766523 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108176222 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088802694 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10748344 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166926274 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203327835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.119460003 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119790937 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076658215 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111574027 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13855415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141748947 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.088945233 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075481393 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178117364 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.117705368 seconds)
  done (took 5.029511143 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194978228 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093822467 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204538162 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174296566 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14579281 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162346217 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114116685 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260291116 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.234840139 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160064956 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125061506 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10954057 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076518047 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093496201 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076253508 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.736760806 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180758331 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147710773 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102584036 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1017199 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095613573 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382395548 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081591545 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094700361 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082239529 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085757468 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171520238 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081081335 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.220320236 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113846296 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086676708 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130181708 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191123686 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12357353 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159093476 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138553114 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08166127 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098283117 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210158378 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105177681 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074398319 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118720426 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12875244 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112738621 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096821487 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106309173 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222627354 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096324288 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097469662 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.05061779 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194426456 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079782927 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094021513 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089962175 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.327175603 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114242067 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099927015 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07749535 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.306713318 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114370456 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096549009 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076445689 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093832581 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080593149 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092916089 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386872329 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103910997 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.398940457 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077534556 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154117571 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096106792 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102078575 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083010636 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098722376 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097804013 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094228404 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074984212 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093659817 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075670085 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098126323 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094884613 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096695583 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075012734 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159461187 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11262198 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096599351 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122831512 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080842991 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093389178 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124521313 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079025631 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076164561 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097540323 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139440226 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082290668 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112797111 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097123391 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138329713 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077071667 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199695761 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078330984 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119876487 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095505963 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109176464 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114388283 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093846487 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080976839 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.091857465 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078517688 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155432258 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077516697 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076156416 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098020768 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107668164 seconds)
  done (took 23.661327003 seconds)
done (took 48.968981151 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414619979 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107590815 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108190299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109601012 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107102756 seconds)
  done (took 1.601844429 seconds)
done (took 2.331870689 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.321287307 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196306937 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097718492 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188136271 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083873402 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195454664 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161593328 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096912746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205937262 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079220507 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182932006 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079821051 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100766505 seconds)
  done (took 2.75335586 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09009206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113864795 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078216202 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10509507 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072582652 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087855253 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103785696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108235647 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105218253 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081062351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089571669 seconds)
  done (took 1.764705192 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089389005 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111923576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077599698 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086613841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089212558 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087247484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105318004 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097842414 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105288723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082432985 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089255275 seconds)
  done (took 1.755964486 seconds)
done (took 6.996134387 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.047186869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.856677585 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119957839 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.17025079 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329689711 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.212105274 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.564916152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112379291 seconds)
  done (took 12.329776468 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.125042653 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095330342 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075636049 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094217639 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076402955 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098114107 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075659231 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093968834 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07831369 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094511702 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079267991 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095350339 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076981542 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093731719 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079808532 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07570875 seconds)
  done (took 2.202402131 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112472312 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110913383 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099751834 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086402336 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098285394 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080734584 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100887097 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098146466 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078850756 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096729843 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086570292 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102096254 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084537673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09522407 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.083099074 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103041676 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096396938 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082691697 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100624668 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083017454 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102733787 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.080718857 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100823433 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102453681 seconds)
  done (took 3.108362651 seconds)
done (took 18.377587573 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161555469 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080892831 seconds)
  done (took 0.98481496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097882114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115304738 seconds)
  done (took 0.956307658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103317953 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094528469 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132373758 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112092684 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077808359 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077319402 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126079336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094848237 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078097359 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095065718 seconds)
  done (took 1.733951906 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082358238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099023359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086041661 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115230327 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088899797 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096856746 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082627694 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099003336 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099945974 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076976497 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102717246 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096627167 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101376869 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115600319 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083148838 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101724268 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087788801 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099279123 seconds)
  done (took 2.460377151 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078049843 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079831495 seconds)
  done (took 0.907220866 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081606927 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09340597 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080087107 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096213357 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076069628 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093156835 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076218291 seconds)
  done (took 1.344864593 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.473912237 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.246303815 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304389664 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111522549 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129456041 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.48748052 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130566786 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.090529044 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109699849 seconds)
  done (took 2.875063936 seconds)
done (took 12.000942781 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088553169 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129662818 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.496738645 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112675219 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075123615 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156249824 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.2564176 seconds)
done (took 2.067651286 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339903665 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11834212 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085690251 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075405449 seconds)
  done (took 1.369640426 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077023157 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082089873 seconds)
  done (took 0.913530892 seconds)
done (took 3.038405509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10624381 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094444015 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074387029 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091112159 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.072565915 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074732377 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.091307011 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073698724 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092502508 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074682231 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075363899 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091717463 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.074976319 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09200431 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072955123 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090390114 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074733836 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074368581 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088974906 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072139909 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089598498 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074571643 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090109586 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073025155 seconds)
  done (took 2.773808751 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101363752 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093747802 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080437809 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098945099 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07979953 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099054236 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081437094 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092975132 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098160249 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078058851 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097405909 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079048941 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095569569 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079707643 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096109351 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.079407002 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09890257 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076299777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095982756 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.080528356 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098460402 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076644154 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096878594 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081664439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.096745107 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096550387 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077752281 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.075841216 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098616153 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09670306 seconds)
  done (took 3.436124168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084309807 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072715447 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090498749 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083917672 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09024446 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07608311 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090816814 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075827636 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095477426 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07305112 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077908832 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090209809 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0758667 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095144352 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077374873 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097239684 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090814913 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093653828 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075646552 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094912832 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078391297 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076153907 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09405695 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073116596 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090811214 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07276579 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074815509 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090577565 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073972475 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090505526 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078318451 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097305781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072795406 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104060584 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080438248 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090315799 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081545959 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073043472 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096480995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072734342 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091178393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073828513 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094749596 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085517898 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094925178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074145222 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076083674 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095623533 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077437308 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098090391 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073042402 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094420739 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07885351 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096216913 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079673501 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073113974 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091420675 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073227945 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095748902 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.072966406 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091081272 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072822691 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079635396 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090923638 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096293956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101667494 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.076016309 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096540289 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076914951 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098990237 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079374353 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109560836 seconds)
  done (took 6.881569533 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079585066 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101947705 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075536634 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075845303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089842378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073772863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098450033 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073357702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092799104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091934386 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091196379 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074846269 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09289238 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077320246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091508189 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075242911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101298228 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071417323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091219176 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077738361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091780142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079530114 seconds)
  done (took 2.629244769 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217802438 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100275258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138459417 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091988368 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110849965 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109086046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081361518 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099767557 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080275488 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101011829 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101964221 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080304325 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111514801 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101350111 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084073585 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102934127 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080784681 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103399836 seconds)
  done (took 2.664960808 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090264826 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094969203 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100500761 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094801469 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076726947 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09676551 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083379742 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109900629 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078474596 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093769636 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088126851 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098958332 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079909301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094137077 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079038417 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094062203 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07919086 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094989444 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087977669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100461147 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101364487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08769767 seconds)
  done (took 2.768997188 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094184732 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096676563 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100779615 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098882353 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075820227 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095879617 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085398375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09445603 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08688177 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0962619 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076708619 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095353956 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084642301 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095509482 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.083430372 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095332554 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079294951 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094775579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07913679 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093757176 seconds)
  done (took 2.574405214 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119922542 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108881675 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092364275 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121062051 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109753195 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091712083 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120957498 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091602502 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109579433 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122085665 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092451491 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110084936 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102844378 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115762634 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109441025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103568714 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120194916 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121017965 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091275278 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109420899 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122131703 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091749311 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121283901 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091859823 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109240212 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091895737 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109460219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115920094 seconds)
  done (took 3.78152647 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078341661 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076341 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091697784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073651927 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092181551 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.074875318 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074662843 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091693159 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076585465 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092070761 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076382145 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094902386 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076928557 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075808169 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094940935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076445347 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094753805 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.074441908 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073979166 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092031238 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07616933 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094677548 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076654883 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092282396 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074206661 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076801286 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092203943 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074816787 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09521914 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074604322 seconds)
  done (took 3.251686354 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086792133 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100811191 seconds)
  done (took 0.963384909 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076383076 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111718284 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073953445 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080333954 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101590418 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077926457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10622428 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10135521 seconds)
  done (took 1.503115318 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102070397 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115677239 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083855331 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107922561 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096440161 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113588986 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161922287 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08491015 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103637087 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078070631 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11489167 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078457838 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106614322 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083019994 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104812709 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092580218 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097053641 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087818605 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104417133 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079768176 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102208387 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094506447 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106208212 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084765531 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.098355906 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088792716 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109753204 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108141645 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083145937 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108740781 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084715831 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089353203 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082624834 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101304777 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079063153 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113784723 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09524182 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100701197 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087148556 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10193977 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086739107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094473875 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087945662 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103536926 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090103451 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101342337 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084019926 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094173539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.078111938 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099947895 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076182863 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098914404 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072772019 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105021342 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086600783 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114863424 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080548459 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10060416 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082710577 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099515516 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085956184 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099607617 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088023585 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099417375 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088565756 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105017993 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08619362 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093954151 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071568394 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097104213 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087117493 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120956713 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089387786 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100943847 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084645613 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097096013 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083999022 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102154335 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086108995 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106821275 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100704512 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085214827 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106887992 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081482652 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.099696054 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084439858 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080382837 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099415304 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078387052 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116422637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099054175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078381168 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078069506 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106874005 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082321054 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099873776 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079183497 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105948844 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072263443 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101872797 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084244373 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10354907 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091003307 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101026951 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085077686 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105336951 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106959543 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083064841 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081236192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093183492 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084457195 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09840742 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087677988 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090046115 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083473339 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100610746 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085260528 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107390846 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080095686 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102112493 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090596644 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107585139 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081984989 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093144239 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083148972 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101215579 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08894285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107980097 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080720381 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095243004 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077168848 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105641679 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082948539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103215954 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083703662 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102182689 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072546532 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098439344 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083182782 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107378732 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081777806 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103151826 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088448358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103545072 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081282758 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106249324 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081197153 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097131104 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087851391 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100369467 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077066915 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107022843 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082419357 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099028437 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083424314 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106492338 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082774474 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102286352 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080742651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101571173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084264448 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096521065 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083971905 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098900509 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091253811 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101270201 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077033314 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093177826 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084446841 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097799949 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082249383 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096615192 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082965604 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102701456 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079551292 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081844175 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100974641 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112522229 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100634046 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10271234 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086144958 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109080449 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083358464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103400978 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082981049 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102738101 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083992345 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106012552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085569998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102532256 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.082561118 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093200382 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.084770635 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107243065 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079029703 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0799899 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097317536 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082838899 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108467482 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.082566639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102574689 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081080966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102871424 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088438982 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100587466 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083380862 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097056629 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083866608 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105404207 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084754643 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103371933 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090748087 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102341467 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078345176 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107483722 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080907621 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105552752 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078337534 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098293858 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079166628 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10710439 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081927989 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101002731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073274845 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107289586 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089404677 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102305084 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078457767 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102570562 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092639755 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100549299 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086131894 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.101337929 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085556838 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116025601 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079060147 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101474135 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.090993922 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102056225 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072669293 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104499529 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081414752 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097552343 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082099143 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099047194 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084679616 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104354115 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.085113812 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091085953 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082522911 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081024781 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098382356 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078676705 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107111735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.083996098 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101489042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110961042 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086460602 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102777741 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084793456 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101650544 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084580001 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103168616 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08434913 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103600349 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082311406 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079374437 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102255902 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07830628 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09856129 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082078964 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102069706 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084074261 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103423408 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082325518 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106838044 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084358313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103188054 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.120399083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080763628 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098129442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084436127 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104650061 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082823093 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102808842 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077275362 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107561907 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084182456 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108641715 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083009902 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09486863 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083642912 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101256653 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085155248 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103434148 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084995925 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081638639 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101040418 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083278388 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111371184 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097961537 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090596542 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104427047 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085556624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102175389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083962892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100329353 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079444079 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101318577 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085160178 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103501209 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082438025 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104213417 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084342309 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101687842 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081882921 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103328961 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08537507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104161372 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074137131 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079433717 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098932859 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084503236 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106762902 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085047103 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100436958 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082636297 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10447212 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082138968 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095049773 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087977361 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105068419 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085175616 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11225812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079497388 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103070449 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09424282 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09278232 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081618354 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099182132 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080158197 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108658016 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085495902 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108722957 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084745581 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098800029 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076590873 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103931486 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082305022 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073309724 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099163553 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087235847 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.100200994 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081456781 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103285989 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086547944 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103504508 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087640359 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101120881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083784014 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103436888 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07693218 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099570612 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079712247 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102898765 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08508058 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098494238 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077035066 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10197386 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083536218 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103504928 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0832308 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083011103 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108699982 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08372393 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102423842 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108756896 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074444605 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.084480117 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102138231 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084000034 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098800937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085231308 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105152839 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086625787 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106552117 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083575687 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10561595 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083795964 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099351614 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083629236 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102740875 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085437216 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099314527 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086620367 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109578531 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080494585 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103699965 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085418813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099650893 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086591326 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104835347 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084659809 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10724338 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084127496 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102725431 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08715243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103057089 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085090854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105434138 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082122684 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107796992 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080116412 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109792682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085057494 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104228196 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083132738 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099742558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083586516 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102646219 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082867154 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108195872 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085581888 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.098379541 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079714668 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080892999 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103680285 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109254401 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091529668 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103782387 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085828236 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096782133 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.076866324 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086218151 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099389679 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083190674 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10573688 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089137143 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104512766 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081680949 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102738034 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089204763 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107834842 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086753881 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100473159 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086132431 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105411105 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084614267 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10198855 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083938353 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104755321 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086634348 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102526484 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080180565 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11234391 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107902504 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086726457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101206287 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086385266 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102163423 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078807265 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085946483 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103915676 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087243212 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103283946 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083956572 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114044423 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098533637 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083421091 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108052531 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083614181 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.109507898 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079036716 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103604531 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086501165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105212329 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078542473 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080103617 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10194997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084992848 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098713106 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079002054 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113484109 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089793566 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104427735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082504317 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102040948 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078654533 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097411862 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080166508 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105477864 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08383081 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111125285 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080685031 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099615783 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079115418 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102863281 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085656768 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104958525 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077789278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097963929 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081992698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085118713 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111811377 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1015061 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085390155 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085529264 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103379785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081321962 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1093073 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.076796824 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104671794 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11411149 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086343409 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105748979 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.087543471 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110296924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086170704 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097956498 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08638663 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103868681 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086315714 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10479379 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087145327 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11937079 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085930725 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099582544 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086099722 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104075774 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080999701 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111692256 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087020188 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105409515 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086839106 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101852517 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087444057 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111243625 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086638905 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104266933 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084984352 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10343896 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084319087 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101457104 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084172262 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106958597 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087001889 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103531967 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.087101663 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099934092 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094738587 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110393446 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086559746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096167436 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081211547 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100550261 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080135571 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105775133 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078793031 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082481719 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101641553 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08306609 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10656306 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087017557 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103980572 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086183839 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103535141 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074747974 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107571097 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085335034 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106938504 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077215067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104046554 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086506513 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108858706 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091378481 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101579685 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085308335 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103615455 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087487323 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098546447 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088002861 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102906453 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084565122 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10027462 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085991025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106057756 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086528687 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105681765 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088274822 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104405622 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089420644 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108027768 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078347545 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076946661 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108461387 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082145303 seconds)
  done (took 56.554873067 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147270769 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086660804 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075715326 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095781256 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123216632 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080907377 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09549275 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080838277 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0993958 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089989739 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096226777 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076400034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118681645 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124892534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120787617 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091003536 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096077723 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080225833 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094848762 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080587353 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116311297 seconds)
  done (took 2.891793442 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103621795 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114272526 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111918354 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09890336 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106713504 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114200595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093079048 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114471193 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117711287 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089329122 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117628462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114402212 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.088404998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107980867 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107157351 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091329253 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11747685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10617903 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.095952429 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113023641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110011396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09231304 seconds)
  done (took 3.147193686 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.091642143 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.083765068 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108897346 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.078853752 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10365305 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.079060509 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109514218 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.080945297 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109442897 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.084304264 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.101909052 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.084957279 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10921675 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.078528767 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.102167577 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.081913487 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109873249 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08421381 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.0869233 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098943259 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123640722 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.079136413 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098008499 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081591015 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112365687 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08638474 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103759583 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084479599 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.081174816 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103180251 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.080680861 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105401951 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087532487 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101361677 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082208199 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104346441 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084971377 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09792551 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.081213608 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107184867 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.079627342 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104751554 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091256948 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099969776 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.080563184 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08538077 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104276652 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.07844898 seconds)
  done (took 5.306822859 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118614748 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.152949601 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.083449954 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14302105 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.11893297 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093902747 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105105678 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142176953 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079350532 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103626245 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122869481 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.097825957 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10495046 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0901918 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108389233 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103604256 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086596728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098755973 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091414728 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103355962 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090382961 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106869572 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118199921 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.096653545 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1091939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102608579 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081289511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109451399 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095829864 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111101234 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109426563 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093070394 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120070065 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106139424 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084114646 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10669947 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.10055436 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104962451 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087547577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099626532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087292327 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110265837 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106924212 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101810733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104770458 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.105785896 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085379108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097420729 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096363844 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106474433 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094649973 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118735582 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108802241 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085773125 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111112918 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119378611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08539204 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102928811 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089097593 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115875057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.078625662 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10952995 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117277178 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087070682 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114036056 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117911581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.086368339 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109337806 seconds)
  done (took 8.004774634 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11566658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109919761 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101711104 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121743008 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110230352 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.09006977 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110440188 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109894096 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090687395 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117146275 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0901506 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.157069616 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106984176 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096341101 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111052098 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109676565 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090377403 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109710759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09112185 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109834756 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090006334 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123312568 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109990846 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121249046 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103355376 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106635457 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090186254 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111596878 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12189569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090336726 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12344722 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.109723196 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090608748 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12177693 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123192302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089552425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104857769 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089568464 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111824027 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109773103 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087569203 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121599749 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089612602 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107792955 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110432532 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090723352 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122754703 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123667696 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096480515 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118944223 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.1098567 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101950667 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110357069 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109843605 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103230865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129913374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12206655 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122635418 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09180436 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123038526 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122300355 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13095762 seconds)
  done (took 7.56975422 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084762309 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081209588 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099235264 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.079990416 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101431183 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079674452 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080397681 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101589261 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081534888 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100981145 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081936914 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098646228 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079916168 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080811091 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099574995 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079212537 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101854702 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079675212 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081077435 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099867894 seconds)
  done (took 2.603968737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093788597 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122651504 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083654612 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109641828 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085273739 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110096034 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083533257 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104487367 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084236521 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105080136 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09505771 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115159215 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102796266 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089313975 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114797274 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109272776 seconds)
  done (took 2.445901689 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.105057547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122976108 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127332737 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087648084 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10049011 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.090333635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105237144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.078518119 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077801293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111295312 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088195911 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108435497 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0849201 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101094911 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.08244506 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108989207 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.079206242 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.106264328 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084805111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126533201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107993668 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085306502 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105672644 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084184383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104639856 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08757783 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108865019 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079943748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10050373 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085662691 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105581396 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090218265 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099247278 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087455393 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100294464 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080376293 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104984212 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086204762 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10805759 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085811425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100485542 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085403179 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105370527 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088082164 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077770017 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10650413 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077920589 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108941253 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083406957 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105565374 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084564128 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110679276 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088117821 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114908154 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112444491 seconds)
  done (took 6.161206196 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099561348 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106303178 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087320316 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09951263 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085315778 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109954134 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08710967 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104463311 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085111345 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099178338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084612864 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106085201 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085394668 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106079795 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085449443 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106025102 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077384943 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083780719 seconds)
  done (took 2.535273353 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090524258 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081235173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110697551 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082313784 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102898199 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083551324 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098736061 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081541544 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100737241 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082785847 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101677285 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084759593 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099905874 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.084535612 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08143266 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103313816 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.085279122 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100456075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082169656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098093254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084742362 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101042069 seconds)
  done (took 2.868179507 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101766172 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132685864 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.097105053 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.143976144 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.107175576 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086739193 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116291072 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.087214682 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.125165056 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086360487 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.105713644 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.086608211 seconds)
  done (took 2.117838089 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110662905 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141088413 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083245575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106014938 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096366015 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10910014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10702637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089123007 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121926076 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121775623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088132307 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122100678 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121930427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119491328 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096686942 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117198065 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087681262 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108824854 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082891459 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131545011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107890898 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122623238 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088429702 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108081991 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087859928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120169131 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122181815 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12090412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088358624 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122884339 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116405235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088364307 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121688563 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121275995 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085504149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122221407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087386257 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131256826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116715182 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119248306 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086149743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116880247 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121115945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096341878 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121337232 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108624876 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095296993 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10838848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087831576 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136231894 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117297825 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120112329 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115934899 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102051075 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122021211 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137193943 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122539616 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119076558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096944078 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121350739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119671607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096117997 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121159573 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122605214 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117647629 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099388367 seconds)
  done (took 8.14112498 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124655199 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105158255 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087920052 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123022064 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12149117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10839877 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088087122 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108336317 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088030194 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104818564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088697658 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120943233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12074876 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088319504 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109299432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087962419 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121186661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105018605 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13678373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088503323 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120191237 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120481332 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120210345 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101425591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117021112 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108620388 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088603439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108481622 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088226839 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11579191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108127821 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099049154 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105024089 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120682303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088602383 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108735001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095541195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10869757 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117189542 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099742776 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13081598 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108525975 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089083035 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122019891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108819394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089785346 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105131966 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088116403 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105149559 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122455554 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101008217 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122809627 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120392195 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108556123 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08812177 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108308012 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088780312 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10887689 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096164798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121639466 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109284371 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137678898 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088917666 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1091955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120336692 seconds)
  done (took 7.977871265 seconds)
done (took 152.310949065 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103495367 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137874927 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096249929 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167026154 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083930516 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138821068 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116595884 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119045697 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084312287 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.103736562 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.083459022 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.105919084 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.148914455 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082402805 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104795937 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.086556518 seconds)
  done (took 2.613498458 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180854232 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281259196 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103372773 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109952292 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089233713 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.107166021 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088325026 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110316812 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.084779244 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117346877 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.085686761 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106103883 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.09645962 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10757905 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084692456 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106606285 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.117058621 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085718344 seconds)
  done (took 2.918695325 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117689588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14812226 seconds)
  done (took 1.127966956 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122889429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181636654 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298979164 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13673311 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133294439 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127393702 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160874832 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.103920181 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.426844338 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127772986 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12847265 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110520073 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.113003372 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116321617 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093495718 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.111503191 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135592778 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092360757 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112871621 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.091980129 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13418048 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091769873 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116504214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.090999601 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178964059 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126381139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.11328597 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.091163829 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113899826 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092104651 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11670037 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12516543 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124441697 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167720797 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095191488 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.183340175 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097609903 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110281002 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.090409854 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111066933 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114072797 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094080553 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124941657 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089780631 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112094973 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096923366 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113129401 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110910431 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098577115 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119948118 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09692692 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.117133798 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.159600867 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12065923 seconds)
  done (took 7.721333743 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786204935 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15207894 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088524976 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882049646 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142024798 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1025411 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784779647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131932 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.241392332 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.775490574 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128131912 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124375291 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212044809 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274883584 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.14387702 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315267371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.682749116 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102029929 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140605493 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154296668 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095151737 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140101618 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130635029 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426902307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.088822341 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111380763 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116125994 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103330399 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163627522 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11241637 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091661017 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206478603 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267904679 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207403786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090179903 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109474584 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088790639 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17226844 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272262602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22183881 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179599226 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085486242 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10986418 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101653987 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131645515 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10667369 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169602287 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178177933 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177221847 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115218052 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123674105 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098226745 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123579827 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166569445 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107847973 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318842378 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345428766 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110874972 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096443153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.130800107 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270242026 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088147737 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230332498 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138048915 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215241301 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090046692 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784970024 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171502596 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092617009 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121117489 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118411564 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095450146 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123008828 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169526743 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.38483455 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126117808 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094005103 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110799658 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208245108 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110152927 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088817336 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168497998 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112646043 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097435634 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128469698 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124882639 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177497901 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253022756 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126654935 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118902242 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09509846 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124479314 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090424022 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23797704 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20127757 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184207823 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.220562057 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12453446 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.169463304 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170579711 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124393759 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177825121 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118703362 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108098337 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124872554 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220225753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147177025 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090109155 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116397982 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097104289 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149244144 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115176421 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096415158 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193970126 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459881828 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169664614 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107990103 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094405581 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119524464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169245445 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11827631 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243070148 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121599571 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173411928 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117678408 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086500267 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120050293 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169858476 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127035533 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098272591 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124729623 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119701027 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.254731044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226151924 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105145783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24491377 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182519953 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099191234 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20263107 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09822662 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.197489927 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099438401 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12469035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089696058 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779811834 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12507492 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096831234 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11793702 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190798396 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087865018 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113248344 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088938111 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108224565 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755600088 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115440076 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086965836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.113182819 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099083995 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120604755 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117796792 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095523351 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165995623 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237884565 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126647279 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118232844 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089825229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165307082 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113016752 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08981967 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111209529 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090319019 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120182615 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094390804 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113349862 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179128617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162736783 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226540132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576379706 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090352667 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088702458 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2372062 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111173667 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309718282 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098257104 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232867901 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17320327 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108646772 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341867752 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175786792 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191332811 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.092666477 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176719751 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109415398 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117718601 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167872798 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088936207 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119561185 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164096995 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129416611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103981179 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150863235 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111479164 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235722643 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085518314 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19874178 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091663393 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125965495 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.316266325 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089755367 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131975537 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16738123 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116798375 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090897254 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.738179539 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090368504 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122240906 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100451229 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229092873 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171426498 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121091955 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118799517 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104233933 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190384218 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.217987526 seconds)
  done (took 44.278162679 seconds)
done (took 59.511669266 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305963745 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265001831 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.298446049 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.19819499 seconds)
  done (took 2.028671652 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179632397 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152203819 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124387508 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.1089836 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153983469 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086714997 seconds)
  done (took 1.688579222 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.48159674 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.376570218 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.345208788 seconds)
  done (took 2.090342407 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254307451 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.280684252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321199096 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.427058354 seconds)
  done (took 2.274642845 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206813514 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125633166 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.099427375 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138215089 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.170381741 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17863558 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142777365 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156376868 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.107234596 seconds)
  done (took 2.258816032 seconds)
done (took 11.224763715 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.286386766 seconds)
    (2/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.155300434 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136620071 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.214650735 seconds)
    (5/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.290950898 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.163114493 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.204298915 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.124053738 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126916534 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094963738 seconds)
    (11/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120625202 seconds)
    (12/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179780063 seconds)
    (13/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.101785582 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.183641355 seconds)
    (15/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127151181 seconds)
    (16/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.237968571 seconds)
    (17/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.247598783 seconds)
    (18/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.199323648 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136636354 seconds)
    (20/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.253189007 seconds)
    (21/286) benchmarking ("sort", Int64, true)...
    done (took 0.22154367 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.216168264 seconds)
    (23/286) benchmarking ("sort", Int8, true)...
    done (took 0.217215 seconds)
    (24/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.223323978 seconds)
    (25/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.249077827 seconds)
    (26/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098678576 seconds)
    (27/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.193025016 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190842344 seconds)
    (29/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114350252 seconds)
    (30/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.132636129 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.147214031 seconds)
    (32/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197284992 seconds)
    (33/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093334158 seconds)
    (34/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.098459372 seconds)
    (35/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113491074 seconds)
    (36/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.136538988 seconds)
    (37/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.097383474 seconds)
    (38/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.157232365 seconds)
    (39/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.202970852 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095352076 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.182380303 seconds)
    (42/286) benchmarking ("sort", Float64, true)...
    done (took 0.227426843 seconds)
    (43/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124249575 seconds)
    (44/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.133316202 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.140736969 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125127898 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.142271178 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096356565 seconds)
    (49/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.125279237 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.134639127 seconds)
    (51/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128138485 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112500538 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103081541 seconds)
    (54/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.097942316 seconds)
    (55/286) benchmarking ("sort", Float32, true)...
    done (took 0.228244237 seconds)
    (56/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157653442 seconds)
    (57/286) benchmarking ("sort", Float64, false)...
    done (took 0.172028672 seconds)
    (58/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123882062 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091056936 seconds)
    (60/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.225835276 seconds)
    (61/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.21621708 seconds)
    (62/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.074480891 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115431754 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081940976 seconds)
    (65/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10595388 seconds)
    (66/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.213835163 seconds)
    (67/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.130659802 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116950187 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.149654061 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.098534715 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.20610654 seconds)
    (72/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165595281 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.087483597 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109972267 seconds)
    (75/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094015014 seconds)
    (76/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196353947 seconds)
    (77/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127945728 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095314068 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115827617 seconds)
    (80/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092963324 seconds)
    (81/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216714307 seconds)
    (82/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.200209268 seconds)
    (83/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079057113 seconds)
    (84/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.159156387 seconds)
    (85/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12568421 seconds)
    (86/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.182289323 seconds)
    (87/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128163908 seconds)
    (88/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.200813961 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094013818 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119140732 seconds)
    (91/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092663867 seconds)
    (92/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.100486955 seconds)
    (93/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.075643776 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185180723 seconds)
    (95/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.237379713 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.076825135 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124845406 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.078345692 seconds)
    (99/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139725546 seconds)
    (100/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187459473 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142829446 seconds)
    (102/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095055857 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113559529 seconds)
    (104/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086745735 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.148234889 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.176438258 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.203354205 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08112637 seconds)
    (109/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.126631248 seconds)
    (110/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079863459 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095381287 seconds)
    (112/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127267178 seconds)
    (113/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.168823517 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.198972177 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099244584 seconds)
    (116/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116590897 seconds)
    (117/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.190387677 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116866711 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117049845 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122354222 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096495043 seconds)
    (122/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.074268553 seconds)
    (123/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.097562072 seconds)
    (124/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.083599089 seconds)
    (125/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.158001319 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099335145 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126163329 seconds)
    (128/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092940923 seconds)
    (129/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12667262 seconds)
    (130/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.244763891 seconds)
    (131/286) benchmarking ("sort", Float32, false)...
    done (took 0.175159174 seconds)
    (132/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092230749 seconds)
    (133/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.114501223 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087455202 seconds)
    (135/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.120033781 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095518895 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.124419198 seconds)
    (138/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.124575798 seconds)
    (139/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.16136801 seconds)
    (140/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.111794977 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095423176 seconds)
    (142/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246224768 seconds)
    (143/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185726222 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129751189 seconds)
    (145/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096087991 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123866505 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091740373 seconds)
    (148/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.123008966 seconds)
    (149/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.169373144 seconds)
    (150/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078810379 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139090455 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076749546 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.116352576 seconds)
    (154/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117160076 seconds)
    (155/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125590197 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079698842 seconds)
    (157/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.127167653 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080715968 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.101625334 seconds)
    (160/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.098622828 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115853868 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096369757 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118731547 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095159347 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111548568 seconds)
    (166/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160087593 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124215879 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137080818 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.110549812 seconds)
    (170/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.110014266 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16050626 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124668632 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077635084 seconds)
    (174/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116191008 seconds)
    (175/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.1961772 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.221032288 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.184535313 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112016102 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116466826 seconds)
    (180/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079590558 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079133856 seconds)
    (182/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139826111 seconds)
    (183/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075836792 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.11861736 seconds)
    (185/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075699256 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197308147 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.099993381 seconds)
    (188/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077736735 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118244203 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.1027053 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124180871 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.104182744 seconds)
    (193/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179605884 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.182283469 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115810867 seconds)
    (196/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102209281 seconds)
    (197/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103076407 seconds)
    (198/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119359052 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.089828235 seconds)
    (200/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.101378721 seconds)
    (201/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.078100654 seconds)
    (202/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113718561 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091140501 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.101865243 seconds)
    (205/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.076276424 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.075009194 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119476678 seconds)
    (208/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09253649 seconds)
    (209/286) benchmarking ("sort", BigInt, false)...
    done (took 0.254325142 seconds)
    (210/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.135522948 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.100724334 seconds)
    (212/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094011839 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134944921 seconds)
    (214/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087952435 seconds)
    (215/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100020799 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079804624 seconds)
    (217/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134349146 seconds)
    (218/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.076848636 seconds)
    (219/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101106338 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080829185 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.116005302 seconds)
    (222/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096406931 seconds)
    (223/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116238531 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093310191 seconds)
    (225/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.100608089 seconds)
    (226/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076335496 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087425086 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.118180405 seconds)
    (229/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.113910676 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09724852 seconds)
    (231/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.127359502 seconds)
    (232/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.075184727 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109048904 seconds)
    (234/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.075931814 seconds)
    (235/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093460472 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119339968 seconds)
    (237/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077410469 seconds)
    (238/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.156374646 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126425143 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.102112846 seconds)
    (241/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.099753651 seconds)
    (242/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.127936096 seconds)
    (243/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.100608458 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077286586 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088374829 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111944169 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085094096 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117566057 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094558751 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.114878622 seconds)
    (251/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.07612791 seconds)
    (252/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.100419647 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095229284 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137435317 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088653606 seconds)
    (256/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111105096 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091747881 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120693718 seconds)
    (259/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07842615 seconds)
    (260/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11827021 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.180312151 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088932099 seconds)
    (263/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119397791 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090128166 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119663435 seconds)
    (266/286) benchmarking ("sort", Int8, false)...
    done (took 0.195996294 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103428432 seconds)
    (268/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.1011156 seconds)
    (269/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.077011077 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11564362 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159308371 seconds)
    (272/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115630652 seconds)
    (273/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077362706 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118808268 seconds)
    (275/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.080123945 seconds)
    (276/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117345007 seconds)
    (277/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162953744 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095717985 seconds)
    (279/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119144242 seconds)
    (280/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096383416 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120839916 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092546651 seconds)
    (283/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.105594233 seconds)
    (284/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078469298 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119058032 seconds)
    (286/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077597916 seconds)
  done (took 37.792413292 seconds)
done (took 38.689184106 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106362101 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15235748 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099047525 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142444488 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099825251 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129503289 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121754138 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102455356 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126535833 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.104412789 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.126393054 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.08419519 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122637141 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09961704 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.124014717 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141540966 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102895362 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.120273873 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.091769518 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114422749 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.091840527 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114820211 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.093936737 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.107069931 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099661539 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120871214 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094934126 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.122582541 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092719716 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112183284 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090252095 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119007154 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.090227389 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124955408 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094373383 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090638746 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124131429 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098130009 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118307551 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115428633 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09685411 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115129484 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.094814967 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096429308 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117474088 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09115236 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.115377208 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127175945 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118869452 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116647348 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096817378 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122461379 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100372678 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119361032 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089813157 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.114888839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093461594 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143107873 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.091841395 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116511393 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.114442686 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.119621957 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.091454397 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.114547219 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092382585 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121638576 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099931574 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114571229 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099435696 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.1175426 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08702829 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.1151587 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090688135 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089016527 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121318863 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.0990901 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109896932 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092464027 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118200646 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093604194 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114760238 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090137655 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117324694 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092813209 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113995076 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083992659 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113390354 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09465154 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114904663 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091622612 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117314189 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095476191 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.117144343 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100369059 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114953487 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093146375 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.116282024 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092256509 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117417462 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090809138 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110713711 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090779078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119873142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089720311 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092302924 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125123272 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113925806 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095098549 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091498748 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116003144 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.129277565 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099153061 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.116386149 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093091471 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088236654 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120043792 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114167597 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090434206 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089506715 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117385841 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092470634 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.117179673 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09046311 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.1186828 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102970798 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111757172 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090837018 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114276332 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092453025 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118434521 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092418465 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113220358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091346861 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110701563 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090782298 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113261866 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095746383 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113822924 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092611002 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115953171 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092664642 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117312412 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09336058 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116598743 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.090660749 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108669033 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093060793 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09034074 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117143389 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092269947 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115713562 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087718906 seconds)
done (took 17.133950242 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102044554 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185143336 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149002829 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.150157547 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.124271121 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.134010854 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125911557 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146910336 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.100060714 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14354376 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.146883046 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114181219 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151328639 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123740599 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.10910928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.122965772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.097888042 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.132570944 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155171986 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.117455117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149468406 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.124871314 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.143821065 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118488205 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121939105 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.143374549 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102297485 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.122531108 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.100900034 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141843834 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114444974 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125929843 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124422817 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.110821633 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129985592 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097220532 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132721126 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.094684204 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123559633 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12200338 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111644064 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133867113 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.095691277 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131047471 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122905877 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10251154 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121234955 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.096975845 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12355348 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.094030474 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12751478 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1440459 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.096841648 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125567426 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.124151771 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099935788 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124782761 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.102467118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.125174429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.101966313 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123371822 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126454426 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.104123931 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139945641 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121857018 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.102057779 seconds)
  done (took 9.043679449 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116815071 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.150670034 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130433862 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106136771 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.126231488 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087992005 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112577853 seconds)
  done (took 1.786018253 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09274594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143229567 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.121398865 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145804345 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138000748 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125481968 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130872634 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090438363 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137607376 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.099401161 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.142865108 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16844389 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090463761 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126734821 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148359278 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090083442 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.148274292 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090187625 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122969054 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.121309621 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119931497 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136790372 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103313783 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115093639 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111726291 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115979893 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.183409594 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102113922 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115820157 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096372624 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122480371 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184810071 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111783204 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125422538 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088268833 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142304989 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1364835 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095485512 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.138337058 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09462884 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135657441 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097096524 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12266453 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.096160325 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122204878 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103872305 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126032734 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123146486 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095911412 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14222825 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.100867883 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136661387 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092311444 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119578274 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099804227 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121889489 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103899623 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119517263 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.142585099 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097804361 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139656893 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115439201 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136743083 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140604347 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107583897 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13637259 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.111184412 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120665711 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097586688 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.122299217 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140894196 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094926855 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126241384 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105242395 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124548157 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117040367 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141898018 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094552161 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128268554 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094336362 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118008963 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09098082 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.130885492 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094710944 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118421703 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10751286 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127837314 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121739276 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094343887 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.137643152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095225905 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126833574 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.102133036 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119477985 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130463433 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117813137 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.126070566 seconds)
  done (took 12.525084269 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098519112 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.092847065 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121989446 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093314386 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.117629784 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092386374 seconds)
  done (took 1.578972192 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12585778 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120256574 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.107694505 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123034512 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159179153 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.114971188 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.140048562 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101581253 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135789706 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131410841 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.114940378 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.141810735 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.121660504 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124181062 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.139933302 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099683673 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140001146 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096485641 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131161039 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096152342 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.133278922 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099335616 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119981567 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.113160706 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.124471031 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099782641 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124893709 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.131639258 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105704677 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125967546 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098885899 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124056382 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098934196 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12575911 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.140302612 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098585568 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119180591 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.10106088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123997977 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099392652 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.141632334 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095565607 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130593954 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.101296526 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.127296509 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123594369 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101268436 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123475491 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114805804 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.126305276 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.10150243 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.12425851 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09974882 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126487872 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099072482 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127189541 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101195944 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.140054367 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.124121953 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099366057 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12038399 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098978509 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126392137 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099468925 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.124609537 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101635757 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124309783 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095550148 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120799441 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099074008 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126359844 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095769796 seconds)
  done (took 9.403307253 seconds)
done (took 35.285217907 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.674643189 seconds)
  done (took 1.634236507 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.834611165 seconds)
  done (took 1.794896182 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.885329799 seconds)
  done (took 18.874616226 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504677784 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593559806 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.989681227 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166071014 seconds)
  done (took 3.21272252 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962571719 seconds)
  done (took 1.939793079 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.311132787 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271524574 seconds)
  done (took 1.548516598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.795970368 seconds)
  done (took 1.769476656 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.546922312 seconds)
  done (took 2.519771324 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361317771 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.20217187 seconds)
  done (took 1.547974401 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.575142079 seconds)
  done (took 1.549286843 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.734574346 seconds)
  done (took 15.718303126 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248769746 seconds)
  done (took 1.238874487 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304722134 seconds)
  done (took 1.285309934 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.666187132 seconds)
  done (took 4.645960763 seconds)
done (took 60.251879904 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103807597 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129049528 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105158916 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.102300702 seconds)
  done (took 1.418219152 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108331409 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124448576 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103035101 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124231581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107506096 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.125549418 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098617406 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131056486 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098525557 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126477754 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099546723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124788775 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126477687 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09793951 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.12245491 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101567702 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127941018 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099763166 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125360499 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100204742 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124149502 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100727886 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128551357 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099310458 seconds)
  done (took 3.713132257 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104769204 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.096497672 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123139554 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.095107361 seconds)
  done (took 1.408291645 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107775074 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137958123 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111437592 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130160557 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111975312 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137929317 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120410706 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095711318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096908121 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130546564 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095587834 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140295413 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136823543 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.090406948 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.132013021 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092469261 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117333441 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111520339 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130468005 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106307545 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120239971 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103406374 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.128205873 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109806611 seconds)
  done (took 3.785327126 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181542551 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.135208479 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145145954 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.101776307 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172666755 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.147722063 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.094738407 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.146780129 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.095287434 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.143718131 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.124737773 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.147687732 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.137898419 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.124147225 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096314044 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.127784309 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111619415 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.141576788 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.123649561 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107545601 seconds)
  done (took 3.598816871 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101526427 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119812118 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090805624 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095085326 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126438751 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097392244 seconds)
  done (took 1.627064669 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092046111 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08943478 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116212546 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.08954104 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120576603 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090343732 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088609185 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116418329 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089622486 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115199275 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090026035 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11439935 seconds)
  done (took 2.208818136 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382898938 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118861031 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127096806 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094645515 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.137991402 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093747955 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134155455 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093866043 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152656248 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101242428 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119827411 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097549884 seconds)
  done (took 2.644050182 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21377571 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100426897 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267860913 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.426587123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159299588 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169465882 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.329292561 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167304352 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.187891936 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14173937 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198869284 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160723255 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157962715 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183433271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143105215 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.179396955 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179783179 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204897735 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15232788 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211022366 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168694427 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172396108 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184357351 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156060935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114446536 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161314654 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122205789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106038686 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177097023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20088216 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179894241 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152017892 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116030084 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232530633 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217773188 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183025247 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.388773063 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135990861 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193424227 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186483021 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231533473 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143713684 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199917404 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158927358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135879159 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185827486 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162126889 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185407357 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134372022 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118168182 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213687536 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180735862 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184238416 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113586283 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.372536018 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150128444 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150897207 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191775105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191018725 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194337184 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172129485 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125038981 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225123044 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182836038 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184863881 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148373479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170223468 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128999547 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181611854 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197723608 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181278527 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171906985 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215530956 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109771332 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169234058 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171937566 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158665733 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182799266 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165071436 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124419976 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1286768 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14153211 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130866515 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.163441059 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126298145 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207978664 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140588091 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270694538 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219407017 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162276841 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165200125 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168794793 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171727661 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152314697 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095148851 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151319187 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165546567 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163453131 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107567025 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161389019 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151316795 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131515769 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156750933 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099840644 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163706377 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138116349 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172690897 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168162216 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105580002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169042567 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154347679 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161847128 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176063559 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191792786 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10887192 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135581543 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197482342 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162766319 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139867108 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179698125 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190354656 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169156172 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113884893 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173375839 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226360681 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117968832 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191147041 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145694466 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13753999 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.155658137 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165829936 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160157443 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131119567 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133718361 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156470761 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198229675 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.13078818 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11338637 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180106593 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130277889 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106889315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148682598 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139859773 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.118552523 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15405206 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143646718 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160752675 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165166483 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157416918 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162012219 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118210416 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225218382 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109168828 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164306515 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151632301 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094379553 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.183908719 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214770935 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105764527 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190259033 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172736938 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266514847 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167710191 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135498371 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185072444 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106008917 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12328797 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172699796 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165581667 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166088375 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185986106 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238150634 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195774054 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129897778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154599969 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171782959 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.17791266 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16123786 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.149093122 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167472769 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172485919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097761346 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128077914 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102779988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145800675 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13481963 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108051145 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213664703 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169408788 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230086319 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164024851 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145770053 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185360023 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10121217 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169796821 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204411649 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114588631 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187508067 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185127464 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171346468 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145820392 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179391092 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122837418 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101411883 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.137172218 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16981656 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108267849 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138757958 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147648541 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186902464 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181705668 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155220943 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269439838 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175086488 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196623829 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097915059 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167528348 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175033103 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16337638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166182664 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133962699 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.165836091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180982212 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147033496 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196080355 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167715564 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172933956 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20349352 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.161759064 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134439774 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124571647 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200783179 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116919096 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164852257 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149930371 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11153704 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158866761 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140396384 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128548759 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187913572 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14791706 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184773264 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16020007 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179183444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101570995 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147154997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165386608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15205142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094167483 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175452884 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219063128 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119089989 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163019901 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179127988 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134246825 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.352887507 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21956367 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190818851 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112202412 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147951581 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167079029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16399151 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169874148 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186427473 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148889441 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185423225 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161561693 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.119338245 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139678559 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151621538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125792258 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.15840373 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138303655 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.157389544 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.118385045 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220654462 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148998265 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135857146 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170198883 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151439765 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158804425 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118609981 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233450517 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135573002 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209677914 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131272177 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.171355369 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192374316 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128355111 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10397945 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131219281 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18588551 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136848646 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134940291 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.253111865 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273662618 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164610634 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175463893 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114024317 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127665168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164668167 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153479847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240885324 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144483929 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142673661 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197260544 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156464323 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10582642 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169123438 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366296883 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121201751 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204751 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.097498281 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.321146173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128158645 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134709931 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13578405 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176682934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136408796 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.187594437 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170817209 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121106101 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163618556 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142556815 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254852709 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222372256 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175821111 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181016937 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147712174 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162250248 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16960776 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181634831 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146463778 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121713252 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167652431 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187587694 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.187220613 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138793534 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169067818 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169064428 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164007611 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178786104 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108863557 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192114611 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136268756 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17091263 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144887895 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099880064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163764475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.253601477 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135757132 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182186232 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135024449 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137865262 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128988539 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126590384 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164366823 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147566406 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.132847908 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184336683 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.103385456 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167753404 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184727552 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134986445 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130335268 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14963914 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135360737 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146995964 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120670547 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13990786 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149896338 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210868266 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107015241 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180779276 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180289013 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170138602 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163949944 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148853416 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665572758 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102698645 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185861083 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152470415 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189943262 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153947824 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171943272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168113852 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153508551 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174206978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125455619 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.225538366 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170156352 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.164077054 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135656029 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148885208 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122367894 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136151289 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156155652 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168131193 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116543314 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.141803606 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161674735 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150173833 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.12071331 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142984079 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188452851 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152353933 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189247856 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18793217 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141565107 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171123849 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179081769 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105985317 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16563681 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176814904 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145558288 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155063757 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106286172 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140166303 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185242645 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0990903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165384822 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16788329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166287691 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168943518 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138852249 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16416306 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118095377 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166608341 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13165869 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158041387 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133809116 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134469892 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1311264 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132148036 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164078797 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162459214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131149926 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.149612542 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182343033 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.129244005 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109018396 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364330291 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164094644 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196751884 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.157208487 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110184224 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149570645 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160606732 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.158630121 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166429651 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.104188658 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13760492 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134227952 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182742423 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.131405605 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16145486 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199693551 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166911904 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194168866 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140386011 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.267158401 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114637556 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16047579 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.134420267 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105511111 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147877053 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138642088 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120980821 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.25912976 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185050694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156974141 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.119303538 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1320164 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131039647 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110082354 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166431933 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160224403 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1638859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119238437 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.122959919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148172472 seconds)
  done (took 79.598095049 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14921004 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148481061 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.152719123 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199154315 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170718759 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.245948807 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210039828 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231044222 seconds)
  done (took 2.579067043 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.104377933 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.138645161 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142357526 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126696936 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.096192504 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.333548571 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140727502 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126864176 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.123885242 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140877718 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.121236748 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.568591969 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.098322715 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128768772 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.117601168 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.094530976 seconds)
  done (took 3.670459527 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.313874282 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543017158 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.079880018 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.2502641 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232782107 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.157247433 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.750377613 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190090448 seconds)
  done (took 12.588911629 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.129835674 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144306829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.142790358 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.168862462 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.125798304 seconds)
  done (took 1.793578601 seconds)
done (took 121.612361488 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101780621 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.101448815 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127818433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130659389 seconds)
  done (took 1.529994507 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114292829 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08433162 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.11599374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084101659 seconds)
  done (took 1.475341222 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.429411695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115026374 seconds)
  done (took 1.657248687 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.123327465 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137808548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.110819266 seconds)
  done (took 1.452718473 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109318345 seconds)
  done (took 1.192309978 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.104125807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.103486169 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145148528 seconds)
  done (took 1.436177387 seconds)
done (took 9.826403318 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116341253 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.44058996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.388732696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141314896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725600122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383154877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.063013297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160672674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141118555 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122186718 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111449571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.702101182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985473903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.372887278 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970031422 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.46619196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678688079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124604839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101025344 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123742579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.012309609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122139738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096235999 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124650604 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676125779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426608353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094573269 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.479316239 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093921025 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126831334 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383714624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122752464 seconds)
  done (took 17.148277427 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103025786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183407579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102964568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125481421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098669513 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124695071 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104354857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137092861 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183763565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094100353 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140950391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093653837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128843308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095680514 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143038574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095116975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124759238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098229285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130672451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097275397 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141770829 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093910383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124132711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096569488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12235365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10806392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122154406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.108198336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122202688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099592582 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127828626 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095891989 seconds)
  done (took 4.849598106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146972868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192796888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131169707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130557744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175242602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096477463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.208133322 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162545904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186962208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122605899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113072554 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12297209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130047568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123909424 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115011901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123184961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097956765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125517979 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101285512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124850936 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115102198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122864402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096760327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125687214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095547614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137671901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095149259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.13653973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096883037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12859832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100360958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124005033 seconds)
  done (took 5.194167108 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10414406 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132022058 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111786057 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13997354 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098319812 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.130507575 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.10397064 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125633653 seconds)
  done (took 2.02936777 seconds)
done (took 30.300871598 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116230331 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.101205518 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.137512561 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.108498071 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13291498 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.118310965 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122376488 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10685857 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13554857 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10413791 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139275301 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094066401 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124479623 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094730462 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.107702706 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128206074 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.109759039 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132840285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.115563271 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.139206468 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095057119 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135860553 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104199475 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.145057428 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.11527415 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.144980576 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139102518 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10208154 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123894231 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096863891 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.111439016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.14846308 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126208692 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111679455 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128420526 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100145574 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09531477 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.12515947 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.11036527 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134836655 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101225266 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135704685 seconds)
  done (took 6.079590009 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.124507269 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.166758554 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09549347 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125168556 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.096285674 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.161539005 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.158317054 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096857422 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.096775729 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.148557509 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.149563676 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.096918794 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.095611947 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.126771139 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.095916267 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.125236409 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.118433821 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.149127101 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.154117358 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.12594927 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.168738627 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.155131717 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.129596266 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.147463442 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.136676819 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.15842582 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.144463029 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.13150972 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.151332006 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.094956835 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.154419925 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.156278527 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095903912 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.124096254 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.135192186 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.159159221 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.15054106 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.13459522 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.155088546 seconds)
  done (took 6.284332974 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107282143 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10952715 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.146086049 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191493098 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134103776 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.138339203 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106677303 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143256369 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112698394 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124155461 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.105258864 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.156134292 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111859109 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132268883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.10114118 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139523581 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.115783249 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.126858216 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100058335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143865574 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116340344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.138118592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107814036 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134387699 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095569295 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133415205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098189489 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140308963 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.101516798 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132956832 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099893945 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128569555 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103939027 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.136841398 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099658323 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.13166658 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.118141776 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133895421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105224311 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158086454 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.136008348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.101531571 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145815469 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136465891 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125362588 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.103278251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131713625 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1053627 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124153067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115367975 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105706365 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.1251618 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.140872891 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096080726 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094738501 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139552262 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096705361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12705894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103836232 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.131866119 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.115750009 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.129431548 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111767536 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.125579948 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101695408 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.125667447 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.096556569 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129635637 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118967696 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128218382 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13558023 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125730904 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.101999852 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.133478952 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102245293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134694518 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096359283 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138719298 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107090664 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129853616 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106776236 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127847239 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100565993 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142301877 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.110965966 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.133300697 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101217365 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132013208 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100508866 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125734216 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11036543 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127453854 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099668745 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141996573 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096510803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.127090996 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103015577 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129008344 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095625211 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108241939 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129847785 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096243756 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.134550866 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09627685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.129275991 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105560113 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129443488 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096075291 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.139019232 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102728751 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125209593 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099322743 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128955585 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098002505 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.138271405 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103582951 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127567567 seconds)
  done (took 15.142972646 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.243021807 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.223575846 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198045414 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308573147 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.148666837 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123446551 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220791808 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178195282 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097277405 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.165488658 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.182931721 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.192273511 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.181330755 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.192268402 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.182850282 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126655517 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116462582 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.178513145 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223080261 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.305053777 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116624363 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.142378357 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168831523 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166593722 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.116125891 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.143296585 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.153805991 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.120911324 seconds)
  done (took 6.019964959 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11325778 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.165939194 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.104351664 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.155775884 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153435516 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098178757 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.131567153 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096779732 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.140145055 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.111111093 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.12827771 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103726425 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132618339 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106392411 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126495417 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106737842 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.137083724 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.106671308 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129449362 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100709299 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.143859567 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115538735 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.133620042 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.102896293 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.145792509 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.13330622 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099660415 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148273315 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.134994793 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.126083086 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.124231017 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106139547 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140993919 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097022809 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.133618184 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099704688 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127382003 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099250871 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.098736727 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124834559 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.09710902 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.117521346 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.103133877 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.142105984 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104270442 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.129398613 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102198617 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131183705 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103394476 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123643128 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099241214 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128713065 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101427 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.141602666 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099762168 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.133358257 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100670736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127072829 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106108441 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.100014078 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.124572784 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101784372 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.132940687 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.130557353 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105383555 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102763058 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131691494 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.099361741 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.131783253 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103918955 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.129688009 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.109289917 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124124218 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098517088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.137410734 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109333464 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.131370175 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.102358822 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134210017 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096386752 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.115688115 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096839333 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.084496478 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13188016 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096140049 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.132560202 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100103948 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13276418 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143220146 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.10640596 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135196076 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098070883 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.132837191 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101973026 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.095231917 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.13182076 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114353986 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.147649801 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126405573 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095081259 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.143146357 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098763425 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095036294 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118690547 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106689904 seconds)
  done (took 13.514272499 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138054024 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.177489552 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127649972 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.116415723 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.161618986 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.168133118 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106154786 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105562292 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.129087515 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.117307517 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.134577324 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10564573 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133891852 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111970215 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.170154813 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.137874302 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098027167 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.141937945 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102596035 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.181611928 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.146447318 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.13602085 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.171596214 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.134298787 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.10232657 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.164759006 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.171541729 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111440958 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139703588 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171267203 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111760975 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.171164785 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172650406 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103021187 seconds)
  done (took 5.796304922 seconds)
done (took 53.919501875 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.215781524 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.402929765 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.176565302 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.187443501 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.192408638 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.209353389 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.180028906 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.368903214 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.923621194 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.16924038 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.174599094 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.176571261 seconds)
done (took 27.483084627 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.212229212 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339073411 seconds)
    (2/2) benchmarking "String"...
    done (took 1.49174315 seconds)
  done (took 3.933860601 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.174820312 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.177259191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42516712 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.178714518 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.177564525 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.192820995 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.177095281 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.182400456 seconds)
  done (took 15.613798251 seconds)
done (took 25.044983876 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.25197623 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.390790205 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.432406171 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.194112595 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.176866725 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.177094958 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.177480164 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.221810341 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.187985421 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.177813133 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.200548852 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.446432833 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.198904955 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.563327014 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.17872068 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.186165219 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.19528569 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.409637204 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.187973209 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.226289026 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.18313537 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.166049146 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.192599111 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.212796422 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.185247231 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.189966027 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.199940035 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.17801533 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.389013474 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.180538439 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.222488055 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.181310989 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.184708619 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.184481041 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.289817829 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.202853214 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.361339235 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.183746728 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.174490848 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.188764868 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.366638069 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.58686005 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.183229843 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.210061661 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.185763197 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.231312605 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.169053278 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.900937596 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.183277854 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.180519366 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.19219102 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.555255481 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.191205807 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.191913532 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.183363542 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.416878596 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.206198938 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.213493282 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.211624953 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.185414657 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180230111 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.20766 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.197021143 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.179988799 seconds)
  done (took 142.047745259 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.179354698 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.184074865 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.185071509 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.24555631 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.184593166 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.185052241 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.179566634 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.179976806 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.183730076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.210467546 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.184423294 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.18015251 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.185670695 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.139632145 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.181301286 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.202117839 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.184301354 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.18256566 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.182137795 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.179491186 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.179770683 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.183039349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.195234808 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.179690655 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.223377868 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.277249035 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.222009609 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.21416794 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.18233022 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.178847798 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.219985189 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.245025377 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.782035187 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.037122611 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.185203512 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.196556175 seconds)
  done (took 79.527581361 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.179186424 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.17948345 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181865736 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.20971599 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.178591374 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.737329135 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.741954004 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.904630453 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.508526679 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.48312568 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.464433632 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183921197 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.273200463 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194167979 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.180950013 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.194806987 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.204174956 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182350261 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179276251 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.733264568 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197397038 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.24094413 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.354409265 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194295475 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210271827 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.577668123 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179605146 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21051346 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.506730619 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.224527412 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179627073 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.542525464 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.167385833 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289764579 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.177957952 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179637382 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208516455 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180531342 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.456164793 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178634113 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.178670231 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.180837745 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.842743683 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.181280011 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.723798032 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182511864 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.0826587 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.178827432 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178385329 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.211296485 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.782812998 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194023889 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.179330063 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.179791369 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.180421338 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.177927601 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179171083 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.210743113 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.188684493 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.287001453 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.177725317 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.17977375 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.18187982 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208315161 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.178716652 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.419485292 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196107703 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.603586817 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.239072885 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.390683209 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715548284 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180789147 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275445528 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297281695 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.17945799 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.178054118 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.178604117 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.17929174 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.288045388 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.180020805 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.569626822 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.348838293 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.195761362 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.421090039 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.279147622 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.179116452 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539403266 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.183758878 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.179384825 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889592676 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.181211897 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274230302 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.180588487 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.18040929 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180342999 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.575064991 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717285792 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.383046623 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.184505462 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.417147803 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.184296572 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.583523032 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.696447526 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854219536 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.186084591 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291961321 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.350152289 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.196980178 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.181524016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.416091201 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.18552646 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.23866772 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.188499608 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.57799377 seconds)
  done (took 361.78544714 seconds)
done (took 584.464392309 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.913786292 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.860830616 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.988361169 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.889241484 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.859873153 seconds)
  done (took 10.61767607 seconds)
done (took 11.723682249 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.359071578 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.359194962 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237324156 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.361135703 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2127763 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.377037981 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.344744465 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.203675563 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.280798808 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.256512953 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.280313051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231424657 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217107141 seconds)
  done (took 17.826496648 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512075242 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.185741697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266701752 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504567433 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224973667 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544882297 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391905643 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.204795658 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407504915 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201102459 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.195437295 seconds)
  done (took 17.747434996 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510710536 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.185789976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2665167 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49514812 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225547479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535991201 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393171564 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.200315306 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.387247349 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200082177 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.194344364 seconds)
  done (took 17.701634971 seconds)
done (took 54.381653041 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220223391 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.347568709 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.203912034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.194350955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.189148128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.191978704 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.192928135 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.188316452 seconds)
  done (took 10.834808884 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.18844261 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.187214444 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.187389686 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.187922447 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.185583575 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.188150139 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186842152 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187213735 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188684036 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.188592454 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.189662955 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.189123589 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.186538249 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.186384059 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.665611898 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.18628527 seconds)
  done (took 20.585372229 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.188806085 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.18818935 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.18771768 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.188306925 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.192502197 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.197128595 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.189130948 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.18866515 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.187891111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.189128478 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.18842371 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.187310143 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.18750003 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.187731054 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.188154328 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.189940373 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.188923792 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.188607513 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.192414314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.188267899 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.187436369 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188980707 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.18733037 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.188519048 seconds)
  done (took 29.646345173 seconds)
done (took 62.170449405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.1837266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.203368683 seconds)
  done (took 5.494443553 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.249112393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.250581756 seconds)
  done (took 3.608577563 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190372277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190970129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.192707866 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.190766583 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.190137693 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.191532568 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.190616288 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190822227 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.190420312 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.191277427 seconds)
  done (took 13.017651204 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.190830379 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.189155502 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.188933552 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.191305761 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.191879664 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.188907867 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.189860289 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.190848502 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.19089753 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.188035171 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.190151489 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.189285061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.191292009 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.188369856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.191625107 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.188989619 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.189080141 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.188484 seconds)
  done (took 22.527935444 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.204365984 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212682561 seconds)
  done (took 3.52537112 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.31776326 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232212487 seconds)
    (3/7) benchmarking "month"...
    done (took 1.298449499 seconds)
    (4/7) benchmarking "year"...
    done (took 1.287715776 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.229991797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211036765 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.232168397 seconds)
  done (took 9.918134626 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.192771354 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388699823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.500051721 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.764484137 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.193095361 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.194899154 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.062209065 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.194828391 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.19747344 seconds)
  done (took 13.796819396 seconds)
done (took 72.995972667 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.183304998 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.201297614 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.204003138 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.200725508 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.483529325 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.226858287 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.185130313 seconds)
done (took 15.793713601 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.181669705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.177601347 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.208850427 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.190635171 seconds)
  done (took 9.869301672 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.179572008 seconds)
    (2/2) benchmarking "read"...
    done (took 1.504318592 seconds)
  done (took 4.795929673 seconds)
done (took 15.7744767 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.191573583 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.193706187 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.194906257 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.192877724 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.191618007 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.195063716 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.192494751 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.192552244 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.195472571 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.194216347 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.19493843 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.194373786 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.194136656 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19519269 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19180929 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19137204 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.195557598 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195434498 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.193104096 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192723608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191280227 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.194414474 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.193084836 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.192699096 seconds)
  done (took 29.756815737 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.193747121 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.191779467 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.19545456 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.19700057 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.192994805 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.1952474 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.195084593 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.191927469 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.195630663 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.19568743 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193003307 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194462904 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.195337708 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194135098 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195801314 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.193997856 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.196602224 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196000248 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198403592 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.196567393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.199001531 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196190626 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194663058 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19831176 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.19625192 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196123089 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.197314557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.196518468 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.199151808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.196436373 seconds)
  done (took 36.981087738 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200206853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.204155841 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.197956717 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.197118339 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.197754354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196690298 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.197440235 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.197518228 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.197340642 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.196551628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.19813015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.197905176 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.198051557 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197511914 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.196470706 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.198116612 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.198041506 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.198092406 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.198424822 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.198117498 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.197974298 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.198595883 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.198223425 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.197662919 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.199229956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.199565147 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.197904132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.199170539 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.198503262 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.199477322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.198710612 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.199802389 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.198777037 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.200054464 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.199385393 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.198758564 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.20321539 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.206233464 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.197902283 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.198784972 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.199105963 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.199570052 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.199713723 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.200196866 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.19889161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.198322576 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.197649349 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.200015183 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199126018 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199261835 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199340898 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199243139 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.199240577 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.200372728 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.19977569 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.199575128 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199231616 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200916397 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.199933488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.199660596 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.200189718 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.200145684 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.200562776 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.201336275 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.201329959 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.199222256 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199848348 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.201495062 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.201972166 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.201713642 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.200878288 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.201621712 seconds)
  done (took 87.464545673 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.203642519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.19924238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.19889779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.198643159 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.197838838 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.201445606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.198630996 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201333444 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199463652 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20207373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202317127 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.199021715 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.198647427 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201270884 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201950466 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.199814294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202573646 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20025215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.20322265 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.202092452 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.201739196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20134136 seconds)
  done (took 27.532590705 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202706024 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204298171 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.202605123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20380929 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.202125443 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203540808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202188215 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204082401 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203916193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200392019 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201952409 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202671243 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.203067561 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201429067 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200197212 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2031109 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204186015 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203296296 seconds)
  done (took 22.768086141 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.202151355 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.201170854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.204028189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203105716 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.20047568 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.204971182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201898527 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204343647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.203575649 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.202870936 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.205665051 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205401839 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.204910275 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20260062 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203914204 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.202644947 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.205618368 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202903474 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203537174 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202510367 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.202053994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205430058 seconds)
  done (took 27.596428699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204802358 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205013458 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.202327634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202004862 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.202365208 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.204702164 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.205642749 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.201778361 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.207383199 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.204510175 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.203694717 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.205174503 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.205649612 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204451225 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.203249732 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.203913827 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205235526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202567335 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206959186 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204064466 seconds)
  done (took 25.207204691 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206941191 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20678798 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207112898 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208186895 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207029156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207170116 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208426731 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.208413311 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209082478 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20781202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207005187 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208514542 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208439722 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2084736 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.21008149 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208572063 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208685831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208569839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208568582 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207777298 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.209442683 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208447053 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20761313 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210726426 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20886041 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208121939 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208578376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208371884 seconds)
  done (took 34.953883349 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208721045 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209987764 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.206986438 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206807139 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.206561606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.206676489 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.206508537 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.207439112 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.20908233 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207227077 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.209420378 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.208444074 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209378364 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.210728397 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.210119539 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.209222539 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210101341 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.207142239 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207069683 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207631706 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.210296089 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211214363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.210471648 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207847621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207833056 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.210328618 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207136216 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208585207 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209653467 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207863769 seconds)
  done (took 37.382321141 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249246511 seconds)
    (2/2) benchmarking "in"...
    done (took 1.249320301 seconds)
  done (took 3.622902256 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.208275945 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209524032 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.209818296 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208479649 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.20857866 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211449826 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.211272712 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209805511 seconds)
  done (took 10.801929127 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.209742357 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.210655698 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.211400603 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.2105917 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.211070766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.211308415 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218727956 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.229921545 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.212127406 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.211703786 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.219143618 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.219132098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.213437933 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212473662 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.211533295 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21361844 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.213692052 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21266905 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.212199587 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.213402734 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211426147 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214569478 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214708348 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.211577889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.215561455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.223512982 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.217171854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.213725017 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213890206 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.216674035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.213801087 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.210916853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.213564765 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.213543076 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.214242215 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.213515893 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.221948132 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234285294 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220416293 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214375799 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214605047 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.211042057 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216099099 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.215715539 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217455336 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.213569454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.215304256 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211778922 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.217009796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2189037 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220552716 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214863729 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.213964249 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219007323 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.215352334 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220994653 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.234310025 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.218841319 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.225597143 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.226016657 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.228094093 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238379728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.217905486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.216224788 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225417859 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.238313314 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221680852 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.233360775 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.214001368 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215570979 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.222980786 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228392838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.239272745 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.216220267 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217237886 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.217302034 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.21615089 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216592167 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223475147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.236838586 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216619159 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.217262554 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228948365 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238313805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.217150943 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.217945722 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.21791557 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.218319053 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.219674031 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2277003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.236721494 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.218757778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.219797428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.218004928 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.219244356 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.218942392 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.216435576 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218785672 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.215358205 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.217975084 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218375181 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222362612 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.226520183 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.218968914 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.219321457 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.224665188 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.218865777 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219678686 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.224892284 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.219187453 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218965511 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.221765132 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.224598627 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.217053363 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222313439 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.226398672 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.220517616 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.219818439 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.219058517 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.220555189 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.229405333 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.244161301 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.220737851 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.22005074 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.22535751 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.230646983 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.220215897 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.222051738 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.220857873 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.217152326 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.217834301 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.220890531 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.22209385 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.22123788 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221450754 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223709619 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.217946933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.220301445 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.219209876 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.222349445 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.220651392 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.22131161 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.221301465 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.223419582 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221607514 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.223430288 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.226951963 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.221321429 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.222596646 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.221419291 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.218439726 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222079439 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.222319767 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.22155954 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.22190063 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222063039 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.221249633 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223019353 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222242997 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.222369737 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.222404917 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.222889752 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226847462 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.222386307 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.226638904 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222521977 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.219828471 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.221210831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.223352225 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.22098913 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223504544 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.22248872 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.225554907 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.229441121 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.222817702 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22335177 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.224991296 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.223183413 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.223234623 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222699067 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225859167 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.230124409 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.222302226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.228956517 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.223219147 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224259084 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.224632806 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.223261639 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.223486487 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224387585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.228952717 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231411374 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236095931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248283328 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.224995394 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22772045 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.224774793 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228660679 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.226916459 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224744071 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.223979003 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224891038 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224168576 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223641696 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.22511537 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224794683 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.224240533 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225587053 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226409933 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.225077775 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225658227 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.226001394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226127062 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.22271327 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225603725 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225300773 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224345449 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.222557585 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.22465316 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225474093 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226393232 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.225973671 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.232062302 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.22300077 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227502526 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228012796 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226480494 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.224422311 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227359198 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226967082 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224713263 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233312914 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245315508 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.226203996 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232787 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.242806563 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225655357 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.229338633 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.227244231 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.224166968 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.229513291 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.232980568 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227282451 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226813696 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228448314 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227630167 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227926245 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.233987586 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.225316849 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.226562824 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227110248 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227981153 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.226222604 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.228267033 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.227719381 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228087991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230196826 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228263882 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229268397 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228663273 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.2290186 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.230228397 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.230702612 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232900215 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237015404 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.234167022 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229354177 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.230113928 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.230279054 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.232441388 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.228812191 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.229892222 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229417326 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241950313 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252911839 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235358266 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.230464255 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229759935 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234312411 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.232602552 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.232822953 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230626507 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231492396 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229629814 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231527251 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.228337025 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231224721 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231448968 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.233531652 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.233736825 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.235436871 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.231476382 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.232123124 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230654951 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231304176 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.23150513 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229861466 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.232076124 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.232672027 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233328883 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.230994247 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.232036263 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237841008 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249406743 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.232282369 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232162785 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.23215072 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230732486 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231469018 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231798334 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.235235544 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.239032365 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.235643193 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240877034 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.234516607 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240137068 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231938812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.235899173 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238888775 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229649268 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230622539 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.232050364 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232620498 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.239139235 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.250211146 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.233560527 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.237319285 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233248813 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234122903 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.232567391 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.232944558 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233881614 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.232146912 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24160182 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.254658664 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.238205261 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236111742 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.230755099 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.233723434 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.233706429 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23223019 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23607995 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233716277 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.235348802 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.232939283 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234216674 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.234227745 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233989561 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23424507 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.231917431 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233825049 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240412899 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.255193877 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238264939 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235519355 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.241159513 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234788927 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241547682 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.252097532 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235111886 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235417723 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.234653318 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.235912098 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234513062 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235176235 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236468765 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.237543029 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.239099444 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.235625969 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.238027327 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23696409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.237014766 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.235993531 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246280101 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259591283 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.23744512 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240444387 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235013842 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.238854854 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.242391284 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.236488885 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.236171009 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.239888217 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2478878 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244525605 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.23673372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237830437 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23754196 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237388836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236908646 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.238611164 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.236916628 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237893621 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.237558952 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237492239 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240165437 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235535475 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.237321968 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238366381 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.239404587 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.246625163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236711891 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239756773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237154407 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.239373836 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.238136128 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237775902 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238329183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238950355 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23828322 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.2408377 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246183443 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.243155935 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.24065563 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.237778266 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238195298 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237877922 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.239115748 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238779436 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240099855 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238621398 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.240145864 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.239529487 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239941928 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.239522556 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.240029946 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.23910566 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239042427 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242685198 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.247448496 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239020265 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.235857304 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.239486628 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239368371 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.239458717 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.240261765 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.246653005 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243029042 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250658404 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.247908468 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243084793 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239896687 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243566894 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.248733689 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.240505694 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240272578 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.240686053 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.240732867 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.241643396 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.244690472 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239858563 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.246754837 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.24076067 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.240845761 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248246342 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.263456137 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240972253 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.242467171 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245479965 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241041376 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.239237505 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242501032 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241567669 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247989317 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.261142721 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241590447 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24236922 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.242242049 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.242722656 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246339875 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241633179 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243359321 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.239442672 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.243103786 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243413641 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242903015 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.23995462 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.24207961 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241048432 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.246114326 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249676285 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240487204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242679956 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.243214894 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.24342352 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244063141 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24312451 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241290769 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.239558983 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241538175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243427276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243696482 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.244957559 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.243738582 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.245794424 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243267507 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244179617 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248017112 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.2533612 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251798481 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242383719 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.243844882 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.24644295 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.24587953 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244104635 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.244872011 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243754654 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.246054008 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.244229044 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244128115 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.245679055 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.24901546 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258813399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.266067794 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244759525 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247080014 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247987739 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244756565 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.242939733 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.245423576 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.246798239 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.249362365 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.253195114 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.246764635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25188091 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263796173 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.24833433 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.250858631 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.249763737 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253501044 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.248047489 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246214429 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245983901 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251009708 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.261820099 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246978882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257128616 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276657405 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.264971628 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.247277682 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.247583714 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247483995 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.247098953 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248806078 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.247115729 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.247243594 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248202458 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.247288381 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248134665 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252833821 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.249044194 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249946069 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.24798789 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.24832751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.249172277 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245699669 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24770984 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.249074583 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248098139 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.247933575 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249794938 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.249175552 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260939593 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.273746677 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.24916951 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.248804983 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.245982571 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.251121078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252040739 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259936264 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.2559507 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248766299 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250146256 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.250471249 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249573728 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.247336166 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249502848 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.249166811 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250588814 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.247628014 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261768901 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273512389 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.254020672 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.24869086 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251223742 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250127769 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251338407 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24972944 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249624598 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250230796 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.253068275 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25335133 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.250757948 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250652972 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253340005 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.257594109 seconds)
  done (took 736.338606659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248529824 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248441756 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248340797 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248890058 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247860984 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248333899 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249758048 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249209395 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249373896 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248985378 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.249200408 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248576667 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249725839 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251052525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249307629 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25024721 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24923541 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249818241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248889182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248772149 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249401553 seconds)
  done (took 27.394395565 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.252066161 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251190088 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.250211847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251262926 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24942894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251675178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251507764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252817685 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252769847 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250497375 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252719018 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253248487 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251628543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.251771429 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251080285 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253131198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.253492919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25046644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.252524157 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250786968 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25353992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250886654 seconds)
  done (took 28.702581532 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.254856233 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254680877 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.25410582 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.250817532 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.255107483 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.25110886 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.253565524 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.254334225 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.254186265 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.254978393 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.253309131 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.255752469 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.261432051 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.25955448 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.256108775 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.25471403 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.254761707 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.256317043 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.25514568 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.252584897 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259025345 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.25252079 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.252607196 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.2542195 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.255518484 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256970488 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.255708568 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.255614393 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.255821614 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.260251592 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.25524885 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.256463118 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.257181297 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.256692247 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.258063978 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.259912455 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.25646896 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.253938837 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.256439291 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.265999912 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.275452032 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.257143957 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.262670133 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.257127246 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.255979875 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261522436 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264730531 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.255302209 seconds)
  done (took 61.486618935 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257986719 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258823524 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.25426832 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.256582508 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.258242887 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.257524583 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.257510152 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256768416 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.253732491 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.25487344 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.257922482 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.25574914 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.254988835 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.256811848 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.257219569 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.255357886 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255228341 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25554251 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.253662538 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25563384 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256436919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.259539615 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.258644294 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.257471788 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25876877 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.256262237 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.256185901 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.257823502 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.255959558 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.255208802 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259190866 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.259715181 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.258653889 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.256654711 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.253976638 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.259795815 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.259765307 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256225298 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258493319 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256844017 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.258051465 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.259101022 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260261285 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.25920201 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25690566 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.257284619 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.257195537 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.255885311 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.257823665 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.259319454 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.259652985 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.257271662 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260603053 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.257756164 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260312909 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.260422932 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.25710857 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257640098 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.260188152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258368977 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.258187684 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260636979 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.25829754 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.261012235 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26087417 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.259113019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.259302853 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261450636 seconds)
  done (took 86.694402919 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260117941 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260398114 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261839109 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260464219 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260984038 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26141893 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261229937 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261461102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26126717 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262107901 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262288557 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261695603 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263355305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.261709257 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261770419 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26284961 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263085349 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263281542 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2633436 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262789588 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262513429 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263181995 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262279678 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263837541 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.263125412 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263139653 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.263437006 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263744159 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.263465432 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264470423 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263197206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262789254 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263614609 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264205578 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.263216176 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.263670606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263892332 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262696126 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.263559628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262645231 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264655821 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263787606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264107733 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.263941276 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264556787 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264377558 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264120952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26563928 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264315266 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.264529968 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.265099328 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.264441632 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265633927 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264376168 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264907898 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.266461746 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26599858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265369818 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264127375 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265590954 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26527169 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.265372705 seconds)
  done (took 79.503673281 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265947808 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265900325 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262938011 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262094456 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.263941716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264001466 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266766093 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.265028526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266293004 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266345178 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267509114 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263606162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265754691 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267157794 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.26426554 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265745657 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263596066 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264423317 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266617599 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263675902 seconds)
  done (took 26.477259409 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264250372 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266378435 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.264451737 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263743653 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.266851137 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266432328 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268005132 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266884083 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.264651863 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268114623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267939926 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267285919 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265088855 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.266429513 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268539782 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266231808 seconds)
  done (took 21.438336058 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265556339 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.267970953 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.266895291 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268148972 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265767734 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.265787698 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.268033767 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.264414942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.264807206 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267677305 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.269340198 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.267293577 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.268144937 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.267895145 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265805774 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.268973259 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.266051375 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266357923 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.267635435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.269153482 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266602872 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.265800835 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.267834317 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.267958111 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266931588 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2667497 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.266560881 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266880263 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.267134566 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.268097494 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.267362711 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.267697387 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.266893783 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.266012065 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269577612 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.26649384 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.268867358 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.268361472 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269507592 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270266565 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.268535079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267876218 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271094919 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269500394 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.26889255 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.270666724 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.267594422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268097648 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.268847178 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.269820689 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272301547 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.270266449 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.272043943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271251631 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.271191115 seconds)
  done (took 70.918978173 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27089619 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270700042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269490531 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271062948 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271408192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269057311 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271779679 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269836342 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267919424 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.270449659 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268984705 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272269498 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268420685 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.271774331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268871594 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271551827 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269353553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26925811 seconds)
  done (took 24.043078976 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.270323659 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270350999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.272355676 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269684322 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2706093 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272957489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270284764 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.271975592 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273661784 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.271431844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271028712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.272294625 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272874686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2742843 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27156891 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271323217 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.272826317 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273440023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.271558284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270586412 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273540661 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273400631 seconds)
  done (took 29.16361192 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.272634625 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.272252153 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.272832505 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.289704684 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.291744476 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.272752033 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.2722859 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.272613164 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.294981477 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.324881052 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32024381 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.292042273 seconds)
  done (took 16.629933213 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271751779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274436796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271655237 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274898542 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274492547 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272393365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27338442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27282173 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275629461 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27297132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274105382 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275748328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275550857 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272588492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275507796 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275900343 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273188652 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27306858 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272537853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275672451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273926187 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275209771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273371469 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273931396 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273984541 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274601169 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276098221 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274343822 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273851959 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275982717 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27622483 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273160049 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277080427 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277644357 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280869616 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277794798 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274029472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275533438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277395617 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274134176 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277591339 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276657486 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277558075 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274564651 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277912535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276344056 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275707156 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276202176 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27504322 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2783685 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278183756 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275950592 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278338041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277797777 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27843957 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278921639 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275084714 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274515419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277718987 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276139377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275610082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279253321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277203112 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277248308 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278208721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276621662 seconds)
  done (took 85.37381738 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276693481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276643825 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27719422 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278581677 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277134716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276777401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277545355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277044074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276512812 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277479401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278651411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278022939 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278166446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276991695 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278010409 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277518357 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276920725 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275757594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277556483 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280036827 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277361175 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278599241 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277752514 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277482922 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277587591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281625503 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278400049 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278137353 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277865586 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279402706 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277960114 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278482345 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282714932 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281859795 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280405256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279924291 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27856487 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278972347 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279388341 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281753934 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278034884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280335927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280595118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278799433 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279726381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279399689 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280717672 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280406022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279859654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279855302 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279924647 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27985449 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280130245 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280052871 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280754544 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279453599 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279915388 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28024026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280837348 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283539434 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280536111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27974826 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283606505 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278768807 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280263294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279956606 seconds)
  done (took 85.606935532 seconds)
done (took 1724.951408938 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446410424 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399777388 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.281778614 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.294458499 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282501634 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.304827131 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.293289437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.284358835 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.282596233 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.282854896 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.281617271 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.468429413 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.276361545 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.284277533 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28326469 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377486817 seconds)
  done (took 26.315552433 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311826814 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.290607315 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.398023066 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307887868 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.309362116 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.466300962 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.34385393 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.287836324 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454274734 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.332319469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.279035556 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311919819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288043602 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.281611694 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309134755 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.468474672 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.534264109 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.285772021 seconds)
  done (took 28.4524332 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.724925852 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.309523557 seconds)
  done (took 5.226148154 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.307197888 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.288525219 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.289572095 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.287593744 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.27926735 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.280624645 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.288162192 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.284614198 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.281917074 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.410732152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.295013895 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300841115 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.309220265 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.289423218 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.285291139 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.327429198 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.442485455 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.286710916 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.285246296 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.294799533 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289154268 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.373433517 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.329807929 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.28657949 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.411733352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.292652201 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.297260732 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.299178363 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.441094187 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290816589 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292248442 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.292811992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293170104 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.210789925 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.798133688 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.281298781 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.319759326 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.298234996 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285739825 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.43392867 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.290557228 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.296172688 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.28620365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.768553031 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.42330236 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.400907485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.297715462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304504014 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.290357461 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.353716663 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.290610216 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.291462758 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33278037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.074614235 seconds)
  done (took 82.840332503 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.339523785 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.281224209 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462711645 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.301659937 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.282131073 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283883767 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.304363601 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.564351801 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309984253 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.283301515 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.571703307 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829200486 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.304367571 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.319686183 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.1442534 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.339171671 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288537841 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.282458411 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.303069017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.286605443 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828414911 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287634549 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.283913192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.420482351 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.323715873 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794278835 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.284309512 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.287434663 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.287993838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.283581203 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78380749 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303696304 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.339053368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.283682639 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.55320627 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.65420965 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.616408414 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.284036588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.307731957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.286109334 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.291213322 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81184601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.638668157 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.284037693 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.299290354 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785040542 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.285444675 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.289988282 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.286893319 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531026554 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285349989 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289122513 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.284407505 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.286579419 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.285980994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395804483 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358028449 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796140798 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.285630627 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.29037773 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302687566 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289201257 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.293093005 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.29120547 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.290517921 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.642070951 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.422628934 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291659892 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643273871 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77784563 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.30211927 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874755936 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.302276815 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.29298154 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.491673523 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.286470909 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.302793485 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787941696 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.310218759 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.287314536 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.621104782 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.290904556 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.583166846 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.306258091 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288654762 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840295247 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.296011635 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.373934118 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.287031676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.296670419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.288035668 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296263468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.562507796 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.328411362 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.287858935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.288778389 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.290143348 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289077563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.289274159 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.291523749 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853426929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.315464818 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.288132776 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295493022 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289360583 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.309795381 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.289715998 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291182319 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550925667 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287854286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.297867282 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.289381928 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.289215998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.301114493 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.407952056 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.292568703 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.595207653 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.291910833 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290591956 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.294934163 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290680012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324958466 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290844388 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.296771027 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.160934611 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.631041397 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.308868983 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.289951061 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290401207 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290445404 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289732606 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.291760079 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.338851974 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.293111563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036649125 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319366728 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.30870607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.289572761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.295292745 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.291153695 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.298344943 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292657477 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580827712 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.567179528 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.427309355 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.296273288 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.291644031 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.032079603 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.317968949 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473026273 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309793534 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291620054 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.581022772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.441043946 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.295059786 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.291745197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.293131418 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.547814486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.292504065 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608561428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.819943456 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.309205322 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301200005 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.035873706 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.010247219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.297773667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.296633649 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.58030329 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.311315461 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.293297332 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.292033901 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.293054807 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.292868287 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.314204805 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.301263956 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.293430432 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.294453534 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.413021785 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485139555 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.311124142 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.294233477 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.798097102 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.382509489 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293137363 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313234247 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.294909504 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.293778204 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.352379606 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.299127711 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.337924668 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293703987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.294752638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886576729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.293943837 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.300321596 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4869689 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962146354 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.310528217 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.301343984 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.293566369 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.176388409 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824077366 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.336408582 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.598954366 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.306997523 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334665188 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.294798138 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390498797 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824633055 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306167418 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295585123 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931737293 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.314138138 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.835424553 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.295786426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.307432032 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862040581 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.313730756 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.304377392 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.29671912 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301116841 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586905471 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.295622867 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.32035093 seconds)
  done (took 488.584465967 seconds)
done (took 632.609503365 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.296388227 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.296074447 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.287166763 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.30510486 seconds)
  done (took 10.39258621 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.312419681 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.308557603 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.309070787 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309914281 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31042464 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.308201267 seconds)
  done (took 9.072399224 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.302010151 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303127322 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.306128001 seconds)
  done (took 8.125763461 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.510082095 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.324642745 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.642954951 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.331169072 seconds)
  done (took 9.023574209 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.310296324 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.310786403 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.309704951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31218164 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.312172674 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.313073159 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.312452165 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.312969227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315625439 seconds)
  done (took 13.022238374 seconds)
done (took 50.844194977 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.291443251 seconds)
    (2/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.316856475 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.30641899 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.332541279 seconds)
    (5/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.023363493 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.550738218 seconds)
    (7/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.317700905 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.314783768 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.34593776 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.330090204 seconds)
    (11/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.303435308 seconds)
    (12/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.306532797 seconds)
    (13/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.331306334 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.693708847 seconds)
    (15/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.412545248 seconds)
    (16/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.291703982 seconds)
    (17/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.308310575 seconds)
    (18/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.654572176 seconds)
    (19/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.310976403 seconds)
    (20/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.860802761 seconds)
    (21/286) benchmarking ("sort", Int64, true)...
    done (took 2.304778267 seconds)
    (22/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.291467891 seconds)
    (23/286) benchmarking ("sort", Int8, true)...
    done (took 2.304013832 seconds)
    (24/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.292298163 seconds)
    (25/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.309040199 seconds)
    (26/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.41751664 seconds)
    (27/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.269687793 seconds)
    (28/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.434812363 seconds)
    (29/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.368691723 seconds)
    (30/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.633363345 seconds)
    (31/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.30758853 seconds)
    (32/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.309298189 seconds)
    (33/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.437435527 seconds)
    (34/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.293043143 seconds)
    (35/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.326802977 seconds)
    (36/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.363589427 seconds)
    (37/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.482047178 seconds)
    (38/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.025129262 seconds)
    (39/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.885948749 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421625416 seconds)
    (41/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.293219443 seconds)
    (42/286) benchmarking ("sort", Float64, true)...
    done (took 2.308300571 seconds)
    (43/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.428966694 seconds)
    (44/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.640910671 seconds)
    (45/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.570990269 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.697406842 seconds)
    (47/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.872459238 seconds)
    (48/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.388023317 seconds)
    (49/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.408670264 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.313660703 seconds)
    (51/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.306923499 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.38234566 seconds)
    (53/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.307701508 seconds)
    (54/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.305905114 seconds)
    (55/286) benchmarking ("sort", Float32, true)...
    done (took 2.307069505 seconds)
    (56/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.293778038 seconds)
    (57/286) benchmarking ("sort", Float64, false)...
    done (took 2.323497277 seconds)
    (58/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.39337765 seconds)
    (59/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.44332092 seconds)
    (60/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.299529372 seconds)
    (61/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.301267652 seconds)
    (62/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.637262755 seconds)
    (63/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.748751078 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.294277015 seconds)
    (65/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.294800963 seconds)
    (66/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.29458107 seconds)
    (67/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.296174762 seconds)
    (68/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.364595051 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.319187363 seconds)
    (70/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.394850626 seconds)
    (71/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.295010015 seconds)
    (72/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.308514914 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 2.308630483 seconds)
    (74/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.311068385 seconds)
    (75/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.39444748 seconds)
    (76/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.306925035 seconds)
    (77/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.315998952 seconds)
    (78/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.296169084 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.635468143 seconds)
    (80/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.541284722 seconds)
    (81/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.222622526 seconds)
    (82/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.31962349 seconds)
    (83/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.295970439 seconds)
    (84/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.299215701 seconds)
    (85/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.320972527 seconds)
    (86/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.296869387 seconds)
    (87/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.321952734 seconds)
    (88/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.299586461 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.708530577 seconds)
    (90/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.357408129 seconds)
    (91/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372786562 seconds)
    (92/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.296795404 seconds)
    (93/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.896410806 seconds)
    (94/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.297055547 seconds)
    (95/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.326767409 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.297749116 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.547720723 seconds)
    (98/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.300377206 seconds)
    (99/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.309774487 seconds)
    (100/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.316624857 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.13396815 seconds)
    (102/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.336115754 seconds)
    (103/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.375026167 seconds)
    (104/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.302380814 seconds)
    (105/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.325463033 seconds)
    (106/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.306034246 seconds)
    (107/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.329332474 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.302608494 seconds)
    (109/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.332175747 seconds)
    (110/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.307018566 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.157417204 seconds)
    (112/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.313349696 seconds)
    (113/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.312449252 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.827193447 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.338370643 seconds)
    (116/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.437168563 seconds)
    (117/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.874617277 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.590407902 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.054625068 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.57066904 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337151539 seconds)
    (122/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.648173473 seconds)
    (123/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.458651336 seconds)
    (124/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.315701894 seconds)
    (125/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.297639992 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.413671177 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.204999583 seconds)
    (128/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.057303729 seconds)
    (129/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.32143159 seconds)
    (130/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.312929946 seconds)
    (131/286) benchmarking ("sort", Float32, false)...
    done (took 2.311134741 seconds)
    (132/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.312358214 seconds)
    (133/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.330256275 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.096352321 seconds)
    (135/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.338871601 seconds)
    (136/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.339068871 seconds)
    (137/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.312261265 seconds)
    (138/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.458938727 seconds)
    (139/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.414996437 seconds)
    (140/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.410548824 seconds)
    (141/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328677691 seconds)
    (142/286) benchmarking ("sort", BigInt, true)...
    done (took 2.311523235 seconds)
    (143/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.302860542 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.073095362 seconds)
    (145/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36066154 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.336213068 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.331990566 seconds)
    (148/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.414530586 seconds)
    (149/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.336087737 seconds)
    (150/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.302400458 seconds)
    (151/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.344020185 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.927812065 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.146573091 seconds)
    (154/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.355247467 seconds)
    (155/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.32401535 seconds)
    (156/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.299704239 seconds)
    (157/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.416027766 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.300317102 seconds)
    (159/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.302322951 seconds)
    (160/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401533639 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.206813536 seconds)
    (162/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.322159902 seconds)
    (163/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.315852665 seconds)
    (164/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.351270666 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.784666519 seconds)
    (166/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.153770069 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.360209616 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.317382975 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.323704881 seconds)
    (170/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.611758152 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.307340448 seconds)
    (172/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.512418105 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.309474687 seconds)
    (174/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.324606972 seconds)
    (175/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.302588188 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 2.313472261 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.319543197 seconds)
    (178/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.334750261 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.377009294 seconds)
    (180/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.309003013 seconds)
    (181/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.306208615 seconds)
    (182/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.149022121 seconds)
    (183/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.634782705 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.458955899 seconds)
    (185/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.913346371 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.262898409 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.303692964 seconds)
    (188/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.312397175 seconds)
    (189/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.083790158 seconds)
    (190/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.341085558 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.523999391 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.314103372 seconds)
    (193/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.307577735 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.312012567 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.325413173 seconds)
    (196/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.256335956 seconds)
    (197/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.320243446 seconds)
    (198/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.342987225 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.338175724 seconds)
    (200/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.312270069 seconds)
    (201/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.305285587 seconds)
    (202/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.417290486 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.356069506 seconds)
    (204/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.3187749 seconds)
    (205/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.483023543 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.308676682 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.66163074 seconds)
    (208/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40047697 seconds)
    (209/286) benchmarking ("sort", BigInt, false)...
    done (took 2.316983026 seconds)
    (210/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.305814874 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.080661084 seconds)
    (212/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.321845438 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.144325813 seconds)
    (214/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.585548264 seconds)
    (215/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.323542649 seconds)
    (216/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.305678391 seconds)
    (217/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.35211519 seconds)
    (218/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.209018667 seconds)
    (219/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.324064644 seconds)
    (220/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.306499634 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.443240909 seconds)
    (222/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343513677 seconds)
    (223/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328638918 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342774299 seconds)
    (225/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.305928918 seconds)
    (226/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.317522241 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528275083 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.950667726 seconds)
    (229/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34515912 seconds)
    (230/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.318776826 seconds)
    (231/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.350868631 seconds)
    (232/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.321768987 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.309787445 seconds)
    (234/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.964631613 seconds)
    (235/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.408253474 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.34361171 seconds)
    (237/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.097459704 seconds)
    (238/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.653082562 seconds)
    (239/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.065998098 seconds)
    (240/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.731472803 seconds)
    (241/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.311685387 seconds)
    (242/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.159509676 seconds)
    (243/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.307910029 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.31472375 seconds)
    (245/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.074723991 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.138775818 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.308297869 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.324431342 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.212411224 seconds)
    (250/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.402918261 seconds)
    (251/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.46840466 seconds)
    (252/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.321046783 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.323853411 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.330923093 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.306503525 seconds)
    (256/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.201706324 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.320894385 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414794769 seconds)
    (259/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.307916154 seconds)
    (260/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.341275387 seconds)
    (261/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.378337537 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.407540651 seconds)
    (263/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.38264579 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.440283439 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.714971331 seconds)
    (266/286) benchmarking ("sort", Int8, false)...
    done (took 2.339692963 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.320590071 seconds)
    (268/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.152280426 seconds)
    (269/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.912602009 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.369098767 seconds)
    (271/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.421329821 seconds)
    (272/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445121989 seconds)
    (273/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.310283918 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.213998457 seconds)
    (275/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.309409846 seconds)
    (276/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.325366102 seconds)
    (277/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.446814762 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.321450091 seconds)
    (279/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.384852 seconds)
    (280/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348931449 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.322479418 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346917224 seconds)
    (283/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.324564602 seconds)
    (284/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.822597898 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.941760997 seconds)
    (286/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.320113685 seconds)
  done (took 560.30172747 seconds)
done (took 561.517918157 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.354638567 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377079708 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.330922681 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.353446308 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.443865121 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.508353663 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.343905528 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.335263568 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.380171502 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.382549372 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.337458385 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.508449793 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.334237675 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.330794837 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.332111169 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374273406 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320574484 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355890615 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.348705642 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.342205881 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.348778814 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.337092756 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381733561 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.508437293 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.337238451 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336138772 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.336134548 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.352505932 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.445966003 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.336267835 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.336544133 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.343721551 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.323464162 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.353874466 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.329401217 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.352742033 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344439589 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.343980047 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.337670076 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.444586367 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336878851 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.343968766 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.335940122 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.336599195 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.336255533 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.339464644 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.336216857 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343816213 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376879064 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377546408 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.333819089 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.352157114 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.342763627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.336620753 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.34584731 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33576937 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.339729857 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380287376 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.353621041 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38014548 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.326688132 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344814643 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.338230504 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.3527596 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.343848793 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.324428255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336685951 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.34060809 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.337382596 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.345401664 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.325083402 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.349734148 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.338184137 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.349835548 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.368669782 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.338123983 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336954932 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.337186355 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.344549974 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.335224259 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348569624 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379412957 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.342913062 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.33854538 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377562152 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.51542794 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347525738 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.340579436 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3471245 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.355332915 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.345211409 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.348414367 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.342138166 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334093812 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.347709936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.342042841 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346870992 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.348110982 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.343648114 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.350101934 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.336234769 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38780605 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.335842298 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.336014233 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.339040732 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.460731598 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336723419 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.343257676 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.361657125 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.388722278 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.341578448 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.330075701 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.35070277 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383359461 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35088572 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.34217323 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.336197901 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.331947614 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342278584 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.463209234 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.342806054 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.345391502 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384895449 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.341634411 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.336445349 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.342553028 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.346225784 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382451202 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.459982378 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.350809672 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.451461556 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.339313528 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.343576501 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369879694 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384701109 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.371726487 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.343702193 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385170303 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.356505968 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.338982501 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.351244073 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.353163242 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.342805663 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.347762525 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.337971016 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.371685125 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382737727 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38364742 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.362508366 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.462334326 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.340248119 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.333820237 seconds)
done (took 223.671579602 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.401967057 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.338855703 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440902575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.339126099 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439448827 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440865733 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337060881 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.338510942 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.337762239 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.715574979 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339488975 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.337691877 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.338831528 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339482485 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.4238892 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34096821 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.336726398 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.680418226 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340704236 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.411467692 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.342220638 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.339107407 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.341317722 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.720635348 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.34051778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.336958731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.411126918 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.341810681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.686289603 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.336450945 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.339819593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.685886592 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.430327889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.358636471 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.350163258 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.34935745 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.441173474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.360592381 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.42247346 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.421361064 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443272985 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37953311 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.336001943 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.341895622 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343602018 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3420664 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340728111 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.368495224 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.34273997 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339452409 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.681434038 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.353259522 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.349611429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.340181006 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.340981445 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.36268876 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.340187551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.343116695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.432882854 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345983685 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.406785773 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.724959192 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.718846317 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.345094976 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.341432794 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.342470507 seconds)
  done (took 104.967825717 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411939264 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419427775 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.457704623 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.344245392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394921909 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.460472401 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.344921636 seconds)
  done (took 11.079219471 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351640166 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346128579 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.393810631 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395158503 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.345287238 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559761991 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345584407 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357577002 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.343982785 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.420679482 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347753339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346762495 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.351039247 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.342276352 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395148628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356766189 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461741306 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347023546 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.346280827 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50009685 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341692645 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.351884386 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41742675 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357036362 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.347740814 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.351275787 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.302878389 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.345740211 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344619397 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.345478574 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342391047 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.453080448 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.346704876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.343370036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345226572 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.506581444 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.346598652 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344334394 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.347435553 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.346909702 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348676466 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.347614034 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.346892505 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345209202 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.346251481 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372391473 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34746852 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.348831136 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347821679 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.347096958 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.421808257 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.349305124 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.344530781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345871906 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425915551 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355195529 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.349439361 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.345780851 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.349208808 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347473174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501620711 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397301011 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.348603 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397746536 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350300933 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34901274 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349491099 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347332177 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441658918 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348495062 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397156871 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.345549797 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.571227532 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.372710957 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352034972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.351915528 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351822992 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34963805 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.347425647 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355365188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.346806262 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.349581259 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356580842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347526334 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3467862 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.534957939 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.505513486 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.347258705 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.361255496 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357467798 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.347600173 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.425287213 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.350088742 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.346962912 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402224678 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465833758 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.427625705 seconds)
  done (took 139.509654052 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.356103823 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.358063267 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.353633394 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37461109 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.35340609 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351195125 seconds)
  done (took 9.398115453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355333931 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353119411 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352147654 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352797045 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.351014917 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353179455 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352878524 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353072979 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356493349 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352519031 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.352793989 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.354974001 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354408192 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352359383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.352804658 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.354078581 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.353180136 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351632712 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.352916461 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353519784 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.352506566 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354185768 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352965081 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354859938 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.358693313 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353293093 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360803824 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.35296389 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.352249486 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.35868185 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373269553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355147359 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355957381 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361094445 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358430366 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355109485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358928059 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.355513721 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350931087 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.353947886 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.356616501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356031191 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.354937923 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358761517 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.357485234 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36029468 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.362793039 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.36394963 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.3553247 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.356738277 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358257392 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355392592 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354864267 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.358329777 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358222516 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379185241 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.361596164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.356683492 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.356749794 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.358200935 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.358165717 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357169728 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358767966 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.366874652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363925858 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.358951575 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358715204 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36067818 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356085674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.356828807 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359656249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355088239 seconds)
  done (took 99.940321097 seconds)
done (took 366.135933036 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.794184356 seconds)
  done (took 4.052247168 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.440558581 seconds)
  done (took 3.699083743 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.86930039 seconds)
  done (took 23.133154501 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.436372144 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.397946716 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.35252282 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.35184447 seconds)
  done (took 10.797345072 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.624971913 seconds)
  done (took 3.883330728 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.352689427 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.353484865 seconds)
  done (took 5.967438733 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.641502544 seconds)
  done (took 3.90030266 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.771866485 seconds)
  done (took 4.036769972 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.379577506 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.367399336 seconds)
  done (took 6.014575786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.340861357 seconds)
  done (took 3.600349266 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.407963699 seconds)
  done (took 16.667567218 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.355181901 seconds)
  done (took 3.617525896 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.380774007 seconds)
  done (took 3.638635375 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.981342529 seconds)
  done (took 6.240659833 seconds)
done (took 100.506443535 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.350967259 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.3573027 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.356044663 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.35587401 seconds)
  done (took 10.680455257 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395291137 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394559734 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.394422336 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404692952 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39657474 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391769657 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.384334415 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385729431 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.403947866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.395922768 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.395300019 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.396565534 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.393550758 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.38424019 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.395882463 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.395735178 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.404843125 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.396016602 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.386089961 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39757906 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359712632 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.405145685 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.396555133 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.360167115 seconds)
  done (took 34.675853083 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882332217 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.465956619 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.514540666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427474358 seconds)
  done (took 7.550702191 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.413944732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414332635 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427187373 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.465149544 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491308082 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.424377939 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.389968999 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.38360382 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.369455271 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.415490782 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.492238855 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431497929 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.516126214 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.361899671 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.55120662 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362225418 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.361720405 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.415308184 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.465510774 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.487659211 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.36365708 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415122692 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.41646022 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.431081261 seconds)
  done (took 35.528330799 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.362705108 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.380791323 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361690454 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362046704 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.369916959 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.361816884 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363670117 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.361775352 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.361393403 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.888227724 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.364861406 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376064905 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.874686526 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363517253 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.367709816 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.364177583 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.890185504 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.879244872 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.363593687 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.370385282 seconds)
  done (took 30.650096041 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.356710996 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.357826054 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709118316 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614733264 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.357611265 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.361180508 seconds)
  done (took 14.019886871 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434271758 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.583643147 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368158888 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.723923547 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.803541461 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.366932424 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365327256 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.616723376 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943841521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.921780842 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426438974 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437814528 seconds)
  done (took 20.25713913 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.361503636 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.363155024 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.362038069 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378311428 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420411909 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.371728772 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.37330372 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.358967048 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.425583657 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.42864803 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.374405075 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.421051101 seconds)
  done (took 21.906678854 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446840346 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360511125 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359929176 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443135849 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359533866 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203718956 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414218798 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078325072 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.382764169 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634471632 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369894377 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453547797 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617817282 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360948363 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382577393 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.349881707 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590842433 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868912016 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366687235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361380703 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392022456 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362765431 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380465445 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.588062913 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366276863 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361534127 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621585065 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361649087 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652072659 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37621584 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373051008 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36060262 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636499974 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034449239 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47672677 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581240106 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399141053 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368363354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.35126783 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.362931302 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384610081 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36864807 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374486952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362864779 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362276015 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364338217 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092386492 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.388646724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.359878111 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.362134821 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62790756 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4586356 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368572541 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362835166 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451068675 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363523307 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.367519281 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.361965558 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950120224 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363836882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369774399 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.369080116 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382172667 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3683717 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996378975 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.369970201 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366739458 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366645554 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365919255 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365381519 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385926922 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364040275 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390463359 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364026709 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092034232 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387097254 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371427949 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93844946 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371157649 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.387302724 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593438733 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364066903 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364907694 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.36606084 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365490036 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101674246 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378410372 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.352244427 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388826221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090399472 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607485488 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391756817 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389996281 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590270966 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.353703418 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366609491 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.374299906 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372282155 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388518139 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090600405 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386538548 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.371229724 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623241954 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579676041 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376062701 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.372002449 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863993167 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386098498 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.387520938 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366612222 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594639648 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.968895472 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388884421 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36677789 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389540731 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367153536 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14651931 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374871853 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474301907 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381961838 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642501785 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.182568232 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373483005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436514317 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372049254 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369803496 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36838476 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375981824 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368088488 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.582273099 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40036953 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386438189 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.370367329 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370037577 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.371752925 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371053652 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.376302313 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595653055 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373235546 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651233837 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37083984 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370856133 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369596356 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.5937852 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.367893207 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.72924237 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632643483 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378451903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38320253 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38630559 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390928848 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470335339 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393128695 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.371021745 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650193947 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373974415 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.375738109 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371809746 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377126093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375877641 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377569693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409888684 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976617253 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355836606 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37962446 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260185209 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.38619654 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439050494 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378917618 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596828047 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.376268263 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388821349 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.383023736 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.37185887 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600706492 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382278023 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.371038603 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458240592 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860556584 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992333141 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390293492 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.372672386 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.369281558 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.369548654 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372530612 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371964224 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373619921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595138004 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390612033 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389754224 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98346653 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38046107 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37462116 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384184618 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385831632 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.380618885 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375867316 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.377920758 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380926352 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380057568 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.392495724 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517989374 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387423374 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374544146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892276262 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380423697 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37485437 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374488448 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410045515 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374849395 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197894578 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633124935 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393534578 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644803074 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378394375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396716455 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376573897 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390934829 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381993808 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.391878659 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385988378 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.387146514 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375795324 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382547505 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951977986 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13386533 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93447331 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383743468 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.396658768 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397443754 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.108939021 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396783286 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375192418 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618253043 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103678227 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396237149 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871407733 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.393395284 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158148942 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649217291 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606807407 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376347477 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.413017683 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651280407 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590992776 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413463476 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378444516 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383320172 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.365604044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950351612 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40381516 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461395667 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107739113 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413080834 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385384967 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.443304722 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388030902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800079672 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397825703 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378036806 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379138667 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382735235 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206040009 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387222797 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380451034 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015765092 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392516167 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.875345608 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397872501 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603922538 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395480243 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383737791 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.377712463 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410016981 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.641117019 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648310917 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382019052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387501757 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939946485 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.241335839 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387376921 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379809905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160646321 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385357291 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695036925 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.388995592 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395100787 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386999051 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381980568 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379863951 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.378134018 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385518762 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35823202 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894312956 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.407081007 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428602313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394811289 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232369287 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638119324 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396684342 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985195767 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612629995 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401101513 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408881782 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.386591876 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381489144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374313423 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382109367 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38329495 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475516255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60654178 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.381770975 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.368722857 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448783422 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60008692 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382896842 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38214613 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635814547 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.381569307 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.400591942 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117364513 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412030117 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382598495 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389408058 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406395217 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387841953 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458679071 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608327067 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.399489824 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393816617 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805497492 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403075577 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389271153 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397217632 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478512822 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393464527 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.401154977 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.163431222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99166982 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164646543 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995627286 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658794219 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387708838 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387154584 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385675249 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534368833 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38348873 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658353833 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385053953 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.386108315 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413702674 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385881644 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397875849 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601659676 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6597642 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384161169 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401349625 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391159388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.38655892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397260949 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.5978615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902029179 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97127907 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392225251 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385337894 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.121308705 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680680802 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387481857 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387504499 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386313396 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.404942301 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405528091 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397343745 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39272886 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539239665 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652815812 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062999283 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.415343822 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.41537491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.160871737 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390947515 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645891786 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397576855 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618758211 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000017801 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119600178 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655842883 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458894152 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611863093 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.391677483 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536270878 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.395495829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387482509 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388726391 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235148846 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.386257792 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.399433579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004016096 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658189218 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.392873622 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.396173873 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411096078 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.400801064 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614158383 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138435977 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61786287 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399743273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39255434 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389249325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001561219 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66486508 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392215327 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.393952228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640809472 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394570379 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416188149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.842741594 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.386487429 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970827765 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.368781185 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411134325 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396171735 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125450091 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008789472 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393874783 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928851729 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39589057 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390650424 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672202856 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397442366 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400245934 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671838696 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.39515381 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391834651 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623374743 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.003742898 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185009398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.41384727 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401992162 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.398189184 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392638387 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454267708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394674645 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399932435 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.83280721 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411369348 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392269874 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403791112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.395874897 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407390501 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.39436862 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393511019 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.398039971 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.392586298 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.38071986 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409329295 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394899621 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975694765 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419599608 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.076403331 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.724105071 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650787672 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395506593 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.382578873 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397914417 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39330081 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394559232 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392335601 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403345696 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981551419 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.406930566 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409500957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397711555 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611712398 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604771894 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398718521 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627246136 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403247387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413650721 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.380082956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395315081 seconds)
  done (took 983.062603059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447823105 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.414241479 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.437023503 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.456448069 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.405124043 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45046668 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.408914954 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424272178 seconds)
  done (took 20.741627499 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.395216908 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.409033245 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.400306518 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.409505738 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.40657469 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.89685854 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.427153945 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.405925536 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.407333281 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.397043901 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.410791914 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.112257431 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.423791002 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.406335973 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403125579 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.408529427 seconds)
  done (took 33.023950375 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.4394325 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.563144559 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.463853216 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.468455875 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.421247614 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.406496269 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.6550352 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.415423869 seconds)
  done (took 27.131923726 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.407549984 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407308067 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408307594 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.408638948 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408513323 seconds)
  done (took 8.339289113 seconds)
done (took 1248.828724617 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.400883916 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404696957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402451893 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403319715 seconds)
  done (took 6.911537544 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.385538484 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.387126891 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.385028721 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.399389293 seconds)
  done (took 9.855711283 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.135528717 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.070108321 seconds)
  done (took 5.505861692 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.397837217 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159051258 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.13473067 seconds)
  done (took 7.993518899 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697908329 seconds)
  done (took 2.9979628 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.807969353 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76745817 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.590702918 seconds)
  done (took 6.466527346 seconds)
done (took 41.029816878 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41162434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.647788636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.554839519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397193443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.577568703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.55405035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.20763083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.405861347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398619146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.429449204 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.40502946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.558334579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.117316334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.647345673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.116749879 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.743627752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.559383598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.397636019 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411535925 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398401674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.207157222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.398862573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422545695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397783918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.561995478 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.543220471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.398655255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.763246941 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.39721946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398826038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.54655693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.40824445 seconds)
  done (took 83.685629678 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400160614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.408435479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.410561184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412090387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.405193748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.413424696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.405417875 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.407393878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.413451175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.409461371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.410880397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.407848345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.402739096 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398779703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.417846311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.400827728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400532978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400165195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400000513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399256067 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402237357 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.401320415 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417372234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399845274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.400841455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41435565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4003699 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.400581922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419674772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.400644991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415270455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408203682 seconds)
  done (took 78.30680638 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400701305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401871386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.402621384 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400781147 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413436306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40101339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.407331287 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401656304 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408479402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.406902842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402038977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413312815 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.402305589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401678845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.404900016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.402942309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400542268 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405290755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403580008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423148557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402709748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.402254148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417495271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.403208342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402061077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.402359957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.411688029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.402417612 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403576344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413653453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.40301847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406477925 seconds)
  done (took 78.279370386 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604941561 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.410276679 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.410748871 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.363348428 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.410608638 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409326259 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40398771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.607627361 seconds)
  done (took 14.92469722 seconds)
done (took 256.495799672 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.404301387 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.405707587 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.619177555 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436935299 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.419408075 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.433322079 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433776682 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.631905045 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.392371585 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654150723 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.423527254 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.431215204 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.40309284 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.432590084 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.689137517 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.562067806 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.314422452 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.406525746 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.754359814 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.423763255 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.679486816 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.4072642 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.68527722 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.372185123 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.425373834 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.406419904 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.405492813 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.321447574 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451762366 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.760537073 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.414536767 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.41133709 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495483308 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.51551372 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.628492581 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570634153 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.408855571 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.510914032 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.636042081 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.410381299 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.423546078 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.196957943 seconds)
  done (took 84.516348537 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.412322894 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.534741187 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.41450761 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.414939632 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.413462677 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.53519567 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.50895487 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.413511991 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414237265 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.414118758 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.413871324 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.419775959 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.418613276 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.415264337 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.41467778 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.415881546 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.415531864 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.416430748 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.418731635 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.463430661 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.539103372 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.439989937 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.410151162 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.415376093 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.518602811 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.553950425 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.414287232 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.409229938 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.458503868 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.417007345 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.419516245 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.463950552 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.416681501 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.416202571 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.53204573 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.516881866 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.417542919 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.416033568 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.53216043 seconds)
  done (took 57.706082922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417963264 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.670049895 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.852111794 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.425768566 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.418600975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.424452226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.5081554 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42394059 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.42227214 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420750876 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.572812869 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420783105 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452789403 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.879251828 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.422084188 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419144283 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.417315867 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.418929499 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.678513456 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.428988892 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.521880495 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420297584 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.499533552 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.429901817 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.444454983 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421248643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424777773 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.990784622 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.422254433 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.574988643 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.242277166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.500638494 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.970556231 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.869613922 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.246860702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.426330832 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.419409208 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.578706096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.423611451 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420822893 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.500983145 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.425351071 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.863935815 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.094123953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.445551405 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420462466 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.018077906 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.58653897 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.67176982 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.431212548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895584818 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.430559575 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.423086086 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.421808734 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.673129353 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430252988 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422720724 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.034832691 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.448871896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.502956113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.422550947 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422831158 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.688517492 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424220076 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.676990746 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426887259 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.431131348 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.444863263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.867319815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42748553 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.145054483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.441301105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422417047 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.57610462 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.674972163 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053260717 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.428842133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.691859323 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985553593 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.505052134 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.428772565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.988000435 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.506311033 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.427881154 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425880203 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.42653109 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423082742 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.474269207 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.501972451 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.038231241 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.10942451 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.059880862 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.523079866 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.439158468 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424737333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.03430311 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442637524 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.421696308 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.863384385 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.114643947 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.444847959 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.432041319 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.116816448 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.446277143 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.507250896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.43097463 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.879269188 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.428394784 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.484832716 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425674645 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.431815263 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.450631803 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50624303 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42909081 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.426395583 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084335374 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.605235059 seconds)
  done (took 187.562000089 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.427996807 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.417913692 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.422258955 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.418677968 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.418437214 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.427303405 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.418506333 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.419783567 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425285872 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.417261686 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.419982373 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.421036764 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.420978569 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.420338519 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433144026 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.427003023 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.420026622 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.419205423 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425231777 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.419731471 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.418091036 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.440126461 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.425382963 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.419772022 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.421325448 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.421756851 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.430565444 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.424239919 seconds)
  done (took 65.162651282 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429916223 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.00562748 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.429709555 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.56147281 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.449127889 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42366813 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.560004662 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.485167642 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.434380862 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425904457 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425020491 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.73574504 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.430471162 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.944550606 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.630416536 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.567232305 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.939682405 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.452585482 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425946176 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.425011899 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.565767079 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.441378629 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.732911169 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.013269568 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.430172587 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.005196638 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420731253 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.430134451 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429103964 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.008028484 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.427229438 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.740109204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.508381291 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.493165485 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.014758972 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.95738144 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.975535967 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.58242426 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.429983114 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426624502 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.426524442 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.424041826 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010015688 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.432167979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.431534092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.997841071 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453459569 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.429905716 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.436661149 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.428850888 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.49161504 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.495911476 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.746533257 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.014386434 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.514508703 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444425965 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.566481696 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.791644268 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437005232 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.957361433 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.421864303 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.0211101 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455714612 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.421194104 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.432239047 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.438143021 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.586321263 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.567148435 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.964664257 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.456467157 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.965663527 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.606795316 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.43221558 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430426038 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435160547 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.025945132 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.970290302 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.607979929 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.571315494 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.633331481 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.425440162 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.432318785 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.423768871 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.512042678 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.431548563 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.029008209 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.984400445 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.456256419 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.430329373 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.431824614 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.430517355 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.611959907 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.028536982 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.514794447 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.955463417 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.776051422 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.758216791 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435511201 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.49269485 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.447931734 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756705049 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438306127 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490951037 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.852452767 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756227478 seconds)
  done (took 170.217064629 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.676950961 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.450424006 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526793644 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.592571123 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.043103076 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.016314708 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.42741417 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.560688974 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.547864086 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.702437313 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.436980961 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.52224385 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.651623472 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.507361136 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.154729259 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.504689504 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.526669284 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.586040203 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.575768842 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.436398679 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.093356894 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.744565721 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.619551325 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.463949055 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.541531611 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.240521554 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.019993156 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.99299704 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.613903659 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.427368237 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.969477345 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.445433251 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.397980155 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.113543864 seconds)
  done (took 66.455949819 seconds)
done (took 632.925661672 seconds)
SAVING RESULT...
DONE!
