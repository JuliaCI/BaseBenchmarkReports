cset: moving following pidspec: 7602
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.527590095 seconds)
loading group "string"... done (took 0.514985052 seconds)
loading group "linalg"... done (took 8.553307392 seconds)
loading group "parallel"... done (took 0.171917313 seconds)
loading group "find"... done (took 1.358623489 seconds)
loading group "tuple"... done (took 2.050376533 seconds)
loading group "dates"... done (took 1.336009838 seconds)
loading group "micro"... done (took 0.21196582 seconds)
loading group "io"... done (took 0.600513555 seconds)
loading group "scalar"... done (took 42.45770591 seconds)
loading group "sparse"... done (took 13.449166263 seconds)
loading group "broadcast"... done (took 1.10862424 seconds)
loading group "union"... done (took 15.068618141 seconds)
loading group "simd"... done (took 4.996704136 seconds)
loading group "random"... done (took 9.816724299 seconds)
loading group "problem"... done (took 2.249555628 seconds)
loading group "array"... done (took 24.323294583 seconds)
loading group "misc"... done (took 1.166767668 seconds)
loading group "sort"... done (took 3.578603392 seconds)
loading group "collection"... done (took 21.28494041 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6061772 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119272954 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.142380741 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171463786 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204284568 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136687706 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157766618 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.555738042 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.051514777 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205554842 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142730122 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.546751326 seconds)
done (took 5.794393818 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224773511 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.071144009 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125103291 seconds)
  done (took 0.873515911 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073618705 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170604193 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092555611 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108572816 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109141865 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090535455 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108982755 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108250572 seconds)
  done (took 1.466587413 seconds)
done (took 3.325104952 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.797576626 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.81669643 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523516984 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.125449449 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152737336 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.133960564 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.311697762 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.159745977 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.101451821 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.117400017 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168588829 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.389488488 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475669612 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.99971787 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105511932 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124812755 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080057416 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.74304441 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08021881 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.129217292 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.521427158 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.111753383 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116599954 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123557325 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.214417515 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128077652 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.185856928 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.093986015 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.681948557 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099851463 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183098225 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098318293 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161097193 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.239519129 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.078554612 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108322528 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672305598 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188553642 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.112904428 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.094812538 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673529278 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.078915252 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190945607 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106207135 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.109048473 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.203986864 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099539737 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095474978 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099770028 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088821477 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16096843 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.455184972 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106023443 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.143274816 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09673797 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.697848831 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093317746 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154243263 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122475144 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107711308 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095180126 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091816723 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.182645935 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097186556 seconds)
  done (took 19.822232158 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114469975 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138741839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092985977 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139547138 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138657895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096769136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082413901 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092768348 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108831284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183745348 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136553239 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141705328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073310237 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095791121 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098918069 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247137039 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120269288 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102197075 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098429378 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087460479 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141580206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111050654 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092137124 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.1098426 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171419393 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206163752 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121149652 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12165097 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076484842 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11421632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140297582 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144987783 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09169543 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076255249 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179424858 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120493432 seconds)
  done (took 5.110006383 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19991293 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095483437 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.209536322 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179876913 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149434321 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167868705 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116851281 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265326471 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.181039753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162225509 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128962877 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111791918 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07705828 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095403559 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077083374 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.756010152 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.176135699 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15073106 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105666935 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105284333 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.161282213 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098935625 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08167055 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099558278 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082915223 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.133292114 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.326249277 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175626064 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083218379 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.239114843 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096463049 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107860284 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130888885 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200054924 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123384337 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079852003 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137542492 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101536222 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079460657 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.231265479 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090549165 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094459389 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102751445 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132869901 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129436022 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096282554 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.091524931 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.243378347 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079183064 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118347949 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.046482717 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195963957 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091715943 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095153915 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332507257 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096630475 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103728147 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.096632019 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.293103531 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111081527 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097819455 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076104751 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101601403 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074908949 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40529489 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087767006 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.976500363 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093946992 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155039253 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095684094 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081153469 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103741705 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100812401 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084675534 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116625432 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07877349 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075422407 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097619396 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076147171 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100609251 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11309215 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083378006 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094591874 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146017696 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111524334 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097606878 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125950009 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100750799 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077257335 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129065411 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095559885 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082142962 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.140572618 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083974734 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116326702 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100247989 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140845526 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079008867 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.185190816 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07976566 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122908245 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098637058 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111611184 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117720822 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096840996 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079080671 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099545022 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076967245 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096410618 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144861839 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078627765 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.094999658 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080358362 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110814373 seconds)
  done (took 23.423715741 seconds)
done (took 49.031940374 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.4256597 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109526474 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110062301 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112433382 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108198063 seconds)
  done (took 1.626734974 seconds)
done (took 2.361378588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316524271 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198233541 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099375861 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.195446738 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084785537 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200597501 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165969991 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098532693 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211472613 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080591263 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189970764 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080827677 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105271255 seconds)
  done (took 2.787691653 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089691813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116250714 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078561599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106909323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073064853 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088297863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10510542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117082568 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104806519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082193893 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090816681 seconds)
  done (took 1.781630189 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088611467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113732154 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077689267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087816379 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091205841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088269945 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106249917 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099110513 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107220214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083873826 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091596358 seconds)
  done (took 1.76783731 seconds)
done (took 7.062999958 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.055587732 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.896565378 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118540851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.170658903 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341699579 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21402556 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.567173062 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113078381 seconds)
  done (took 12.391667805 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.126255908 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099053972 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076707716 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096616296 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078392633 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097622449 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078620936 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095215691 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076225263 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0974008 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079743448 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096194559 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076494168 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094039279 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078598817 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079972714 seconds)
  done (took 2.227328306 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111396822 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110181194 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100428762 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087454748 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100738726 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081231771 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102618305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100725774 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08140788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097726045 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.08747322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102935953 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085676691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097356153 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084292064 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105901576 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098574743 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084096675 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102072355 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084057357 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104270447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082191361 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102928685 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103697908 seconds)
  done (took 3.140023262 seconds)
done (took 18.493679906 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161705574 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082214094 seconds)
  done (took 0.981138295 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096947961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117097199 seconds)
  done (took 0.955049866 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102738644 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096462747 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134371509 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113427446 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079663172 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079092298 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128633826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097341629 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079220616 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097508475 seconds)
  done (took 1.749514809 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082372862 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100590592 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086621359 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116979687 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091187127 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098726955 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084449568 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10056296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.1023172 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07783719 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104172245 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098375975 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103612684 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116293315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084112006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10257257 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088104318 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101056597 seconds)
  done (took 2.483866007 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077781708 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.08085011 seconds)
  done (took 0.907852568 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080428956 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094316222 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081376565 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098259968 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077252144 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094730892 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.076837323 seconds)
  done (took 1.349213384 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479842743 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.253795156 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316071567 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.11348602 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.131535674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.497890949 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132987626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.091985944 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110741689 seconds)
  done (took 2.917511715 seconds)
done (took 12.084819962 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087671998 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.13264653 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.50415819 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114228188 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.076405582 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158625979 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.255975823 seconds)
done (took 2.075480564 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343890143 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121156593 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087535905 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077379562 seconds)
  done (took 1.375381753 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075402585 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082993822 seconds)
  done (took 0.911470198 seconds)
done (took 3.040790394 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.10959644 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095118645 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073216016 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095835386 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.073108086 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076736269 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093395571 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073231518 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.093718177 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075771512 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07577956 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093050179 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075850809 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091255345 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072971782 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093427255 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073726336 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073683802 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093677825 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07334178 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091239822 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076139844 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09046449 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0741705 seconds)
  done (took 2.794940562 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100420089 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095427557 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082708151 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100219578 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081057033 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100878115 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083115001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095295786 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099745862 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078982578 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098068288 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081971841 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096861916 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080436554 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096598646 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081391591 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100812715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076927534 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097349417 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081133508 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10097845 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077785418 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098563302 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08353534 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098211528 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09882425 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079754846 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078274472 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100306825 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099466192 seconds)
  done (took 3.480400508 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084183159 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074226849 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092696299 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08624617 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09241452 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078424855 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092992208 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07831635 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097613156 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075544161 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079572444 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092528262 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077997312 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097908469 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079513181 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09901016 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092868204 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096056516 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.077683347 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.097270631 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081117071 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0776571 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095931212 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074238176 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093577826 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074466538 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07586212 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092889639 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075844644 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09310679 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080527433 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099868615 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074321013 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.106820167 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081660726 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092504588 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083513636 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074462847 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098973478 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.074887464 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093783124 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075391435 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.096887546 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087079227 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096039479 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076221069 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078960636 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098443883 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078789672 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100008129 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074215031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095647306 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080883197 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097212758 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081158083 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074551201 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094370267 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074424493 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09753505 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.074907213 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092682561 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074431149 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08172806 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093537112 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098699344 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103952022 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077757755 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098086729 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.07923312 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100996017 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080541711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111450621 seconds)
  done (took 7.023119427 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078739015 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104430241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077016693 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076769546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091494555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075524532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100266148 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075305331 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094906509 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09306356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093007823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076904496 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094620221 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079240957 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094383269 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076653322 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103484683 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073275674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093568112 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080449217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09403983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081788502 seconds)
  done (took 2.675535552 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218904078 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104082773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141886682 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094547132 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11339428 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111668091 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083037265 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103005531 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082557261 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103354401 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104120429 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082433049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11348595 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10361849 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085871885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10507683 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082420063 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105671776 seconds)
  done (took 2.704409659 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088415456 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094525087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101807361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096793315 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078523848 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099273092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084945356 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112222105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080971972 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096408306 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092919615 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099073341 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080501632 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096910244 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080888628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096678861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081280506 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096804991 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088108812 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102790295 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102689072 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089167355 seconds)
  done (took 2.807066885 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094417755 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09847082 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102178484 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101419212 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076917928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09891699 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086617377 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096328618 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087223858 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09798094 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078726178 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097893395 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085701514 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09600478 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08415413 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097471555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080502097 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096479205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080266175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095388414 seconds)
  done (took 2.603689131 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119225109 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110139223 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093901609 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122847375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112049182 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092654877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122432582 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093351996 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110876485 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125816536 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09346123 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111875154 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105807763 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118294237 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111827323 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10605194 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12344957 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123504633 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094165854 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111820221 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125033728 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093617119 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123526578 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093846193 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111979878 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093659275 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112159302 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10039519 seconds)
  done (took 3.826962642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07681118 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077872863 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094016566 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075843269 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094426847 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075202813 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076223404 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093754885 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077873493 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094283122 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078386612 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096295312 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078022187 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078886393 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096189433 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07850621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096825986 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075852801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075637734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094920028 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077758404 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097104615 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078370451 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093811389 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076321607 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078181605 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094438942 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076346499 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096615285 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076236662 seconds)
  done (took 3.305839911 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086399616 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10195885 seconds)
  done (took 0.963503932 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076354306 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113484664 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076300749 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081862105 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104067034 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079270188 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107086832 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103488901 seconds)
  done (took 1.51699224 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101457229 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116936839 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085650374 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110886442 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098066983 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.116184379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164353758 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08605129 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106657112 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080968029 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117518936 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079814078 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108908937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084889992 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107149753 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095164385 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099019363 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090717497 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106529495 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082048124 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105089955 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096816583 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109419752 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.087106592 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101190123 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092007704 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113044771 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111549447 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085197383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11165321 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087568659 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091790815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08537484 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104422047 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080494862 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.117006327 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097382551 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104381686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089455039 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105036717 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090014177 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096755994 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090725719 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106524187 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093095438 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104048494 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086729965 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097576681 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080758163 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.102683219 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.078730942 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102198958 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074359378 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107900598 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089326584 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1174893 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082509629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103695696 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084361285 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102642626 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088491726 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103572322 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090930183 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102759374 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091391384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107504016 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089292769 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097009641 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074041094 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100181446 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090234015 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123356742 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091727475 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10473591 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085793591 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099619644 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085261532 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106197554 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088131261 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111569618 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103899691 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088025765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109551882 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083641882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102321861 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.086670909 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082253029 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102723363 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081038092 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118792312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101892708 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082109302 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081143937 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110819434 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084639148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103136259 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080729613 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108193102 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074151238 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104632203 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08682854 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106390982 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092545572 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104791335 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086530497 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108334434 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109837956 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085283972 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083343573 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096118611 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087095677 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100835912 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089249044 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092464584 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086247334 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104171646 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086693053 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110160399 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08321987 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103752176 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092309964 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110535982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083316197 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096280431 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085046922 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104526988 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090441811 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110792534 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083173292 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097516686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079873342 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108517475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085751724 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106465939 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086568032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10491222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074801164 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100392017 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086343509 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110753056 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083654011 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10598237 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091024573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106562633 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084820058 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.109988376 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084165556 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099721641 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09025178 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103301769 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079569498 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110256711 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085331719 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10288131 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08565536 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109365636 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085944181 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105669906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084071758 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105125981 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087326944 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099473609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086463665 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102625618 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093973653 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104960911 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079339983 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096435477 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088075232 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100789604 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086094446 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100075471 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085992665 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106289178 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082718903 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084138724 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104697281 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117264023 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104388592 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104841532 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088965475 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112955566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086028457 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107080943 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08552898 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106503674 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087595402 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109421828 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088159549 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105699861 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085014223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095967337 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08861013 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111587802 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081180576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081870722 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101380202 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086033736 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11197311 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086392906 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105685875 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083489126 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106961676 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091211019 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10576987 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084797793 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100247678 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08612819 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108518257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087719773 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107234054 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092853983 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106263538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080019472 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109945918 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083130584 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109126558 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080450741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101368398 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082035254 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11007881 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084442644 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103827939 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075033221 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110274418 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092541777 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106343271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081115479 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104995015 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096007036 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104319364 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089227356 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105444973 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088594784 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119800155 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081338306 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105064499 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094592892 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105718365 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07530282 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108768866 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084956937 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100292581 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.084350407 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102478135 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08750118 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108115679 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088605635 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094414043 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086051477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084235752 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.103490275 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080000855 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.110535066 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086648815 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104168521 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11475827 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088800487 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106918011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087901495 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104760327 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088451824 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107113873 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088113406 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106702707 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084475588 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082289023 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106575884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082048304 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101584319 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085292066 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106149239 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087867762 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108599722 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086237333 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111009189 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087189581 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107171125 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123276548 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083832138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101545143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088018716 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108750323 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086069948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106056329 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080689659 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112001009 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087123595 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112278946 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086234616 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098431247 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087798877 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104835742 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088248479 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107135264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088894415 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08556042 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105892599 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086555592 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116872108 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102584743 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094303489 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107527042 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089435988 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105696092 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087734378 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104619293 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083135314 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105557862 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088760575 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106916064 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086267803 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108024274 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087544385 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10508721 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0851844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107809575 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087709113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10845182 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076550698 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082037505 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102500978 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087018934 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109942379 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088624795 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104697479 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08599319 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108822953 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08560526 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096780556 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089934371 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105478355 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085344228 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110314105 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079236817 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106186035 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097400167 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09608818 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085047906 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103149283 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085001706 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112889862 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089132147 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112601887 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087929684 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102681578 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079462997 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108769601 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085404854 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076795076 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102706374 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090529544 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105058884 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085963257 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108185367 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090249681 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109247904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092500376 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105467627 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086489097 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107028313 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079725271 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103027546 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08277397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106543574 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088620355 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102897284 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080176835 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105943837 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087014415 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106151789 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087534933 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086162103 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114129508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086886676 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108552474 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11249581 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077124493 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086968914 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.107163277 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087549874 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102233876 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088974798 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108815415 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090105847 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111854873 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08740456 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109375365 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08749171 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104082577 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.087816259 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107413193 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0882738 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102713579 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090431181 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113543773 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083531308 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107409489 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088428923 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103501535 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089205996 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108230983 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088119065 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111372081 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.0883108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106514493 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091955042 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10723322 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08886726 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109138296 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08700481 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111899367 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083620818 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114588481 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088997478 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109109585 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086779962 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103661449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087761452 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10621188 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087024914 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113328482 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08942377 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102278496 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083137498 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083925355 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.1089442 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112761241 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094832952 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107087507 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088758682 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101207267 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080394915 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089097861 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105857274 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086323068 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11007187 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092667218 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109832391 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084965386 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106350002 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093186252 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112439719 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090335956 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106546957 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090855845 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.111726012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088358174 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107356441 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087927535 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110372316 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09044835 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107104495 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0842694 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117617584 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112549002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090850999 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107277754 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091416309 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107042408 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082317028 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089934001 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110415222 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091665409 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109089067 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087891101 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120673116 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103578817 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087680904 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113190322 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087998385 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113901957 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083056869 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109063635 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091102043 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11017054 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083838535 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083834641 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107117446 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089018157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104442994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082817022 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118596368 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093759145 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110433066 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087292819 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106971136 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082745171 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102215319 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084434704 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111277838 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088188328 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11689782 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085167673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104341828 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.08297025 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108198614 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09029911 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111145462 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08197072 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102899316 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085146757 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088596356 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117092825 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107114659 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089735722 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089856048 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109082328 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085617165 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115345307 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080588896 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11051225 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12045917 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091093726 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111058419 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091747334 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114911653 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09045611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102182047 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090474802 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109099635 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091216995 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111562352 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091274262 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124490357 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090228969 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104574893 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090614531 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109115428 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085149695 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117842905 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091345605 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11150082 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091671191 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108162278 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091564792 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115751462 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091949808 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110032464 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089670162 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108380926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088921416 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108080485 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088153531 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.111993969 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091026224 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109114196 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091794149 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.105777329 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100283986 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11641393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091569448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100991074 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08520679 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105798281 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083897109 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11067473 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083321483 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086869995 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106686024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088613806 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11190855 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090924506 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109332233 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091359145 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109616226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079313174 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112787535 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090573541 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112731442 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08125732 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109900722 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091642483 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113860792 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095079699 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107590462 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089600863 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108742542 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092226538 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103985695 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092881271 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10860191 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08837727 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105982307 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090044349 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111787533 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091434015 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111445311 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092703482 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10930054 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093663769 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112595489 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082692813 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081730124 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11304619 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086057321 seconds)
  done (took 58.710211489 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149963019 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090167155 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079998318 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10056905 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127625695 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084551724 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100511044 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084957779 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10449782 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094742498 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100128613 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080591801 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122271789 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128010875 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125559741 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094822402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101069593 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084843331 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100638054 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084852399 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1219804 seconds)
  done (took 2.989738628 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105288607 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119275183 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117498418 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102459951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112247721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119025953 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097186211 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11938181 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.123482513 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093219815 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123294875 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12043555 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092632913 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113405219 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113424011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09629815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122442332 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111221049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100126082 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.117841861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115858689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097451792 seconds)
  done (took 3.257635758 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094359562 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.089029954 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.114614115 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083194635 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109208129 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.082652974 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115661512 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08569813 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115322619 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089878964 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107149984 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089703645 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114737448 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083337987 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107506184 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086005057 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.115756413 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.089543368 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.090554906 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.105399158 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130096104 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.083331572 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104649062 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.087342072 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118834574 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.091266169 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.109092391 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089512274 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.086181437 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109931772 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.085792229 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.112073983 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092668736 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107741487 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.086726293 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110044499 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089391188 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103557176 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08653262 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11296793 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.084717195 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.111024979 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.096589535 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.106126133 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.086045322 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090409945 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110859661 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.082751747 seconds)
  done (took 5.566231581 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.118309689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159453884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087383649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14966865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12556457 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.098288462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.112166295 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149324333 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.083736969 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.109613808 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127894184 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103116277 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112265735 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09463068 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11201485 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108990546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091916329 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105195398 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094502516 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109867409 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.094748753 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113259978 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123538942 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100899848 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114799102 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08743176 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108098552 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115873451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101419888 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116722665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115110834 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.097812859 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125601485 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090728053 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109529951 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113144905 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.107207079 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11137568 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091746555 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104767824 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092069317 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116796949 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113864562 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106462148 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110977709 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090286953 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112502749 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083364316 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123538436 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.114297128 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.100143048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.124080905 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115178146 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090404267 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116645819 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126035885 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090704281 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109159424 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.094918091 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121616885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083476538 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115387511 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123353434 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092616583 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120404535 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.123883813 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091801293 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115610439 seconds)
  done (took 8.397572058 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11342586 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112370386 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106758671 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128409717 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112884274 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.094564983 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116305613 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116211748 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095623752 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123138727 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095803594 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.164609152 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.113333936 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.102596917 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117274377 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115878045 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095286268 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116333192 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095446494 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116689824 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09512803 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128644777 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.116325297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126827319 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107949335 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113104814 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09509483 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117864931 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127679076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095283403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128581245 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.116434037 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096036622 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128243547 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129337772 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095222193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113009899 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095436404 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117544638 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116264712 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093752169 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127828562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095681081 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116086777 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116086965 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09667626 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12782767 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129162036 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.102252587 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124188064 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116871125 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106984461 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117215888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116533018 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107167776 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136900966 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128578113 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127803392 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096500122 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128656907 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128114079 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.136523228 seconds)
  done (took 7.925323232 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081611862 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081317699 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104380743 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084576747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108311715 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085294281 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085830123 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108377761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087236999 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108350333 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088074033 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105683483 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084860903 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086814496 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107012588 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085293744 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108750454 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085479368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086728501 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107562273 seconds)
  done (took 2.715799709 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090546036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129175494 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088668541 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115870614 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090414797 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116497531 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089082183 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111812504 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088597109 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111846099 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100640172 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.121925652 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109371487 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095448264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121052836 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115901038 seconds)
  done (took 2.535796994 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101981166 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.126325002 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.13394685 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09306743 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107432454 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.096249655 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112418491 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.084028324 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082687505 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118096502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.093475755 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.115738383 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090149365 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.109285076 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.088015946 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.115364645 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.083396934 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112669686 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.090843327 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.134197118 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113954403 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.091841268 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111786593 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090327124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111367967 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094231727 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116248932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08550172 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.107099723 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.091880763 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.111970484 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096125506 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106071861 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09272035 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107916238 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085545441 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111460243 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.092559358 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114005691 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.091439004 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104454116 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.091501967 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.111183604 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094072419 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083409913 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114952627 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083396751 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.116343907 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088931998 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112843797 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091026179 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.117847903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.094800998 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123521493 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119670452 seconds)
  done (took 6.497974507 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097414257 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107285647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091915859 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103894964 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091684426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.117646321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09235198 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111285261 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090532715 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106245665 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092030103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112548378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090934201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11249962 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090838503 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113708369 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08352122 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089359492 seconds)
  done (took 2.637221613 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088532816 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081437044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.11254857 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084020251 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105055 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090433081 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105746381 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086962052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107865804 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087944707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108331149 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091330412 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10649315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091472677 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087655244 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111150323 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.090141688 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108941156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088333712 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105775443 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090413905 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108376634 seconds)
  done (took 2.981720968 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.099883756 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.13523565 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.102319911 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.152219065 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115233641 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092490941 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123860332 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092979886 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.132779781 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.092292532 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.113191966 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092769305 seconds)
  done (took 2.187733441 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106361362 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141831615 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090825092 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113573258 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101826979 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116557057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114713145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094188642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128373931 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128239846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093824112 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129197985 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128629286 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126380708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102873067 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124256388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093609623 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115407743 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089359096 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139274125 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116168792 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128843564 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094462224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116022233 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093518962 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126916102 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128795931 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129644489 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09438301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129291135 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123745599 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094652466 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129079809 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128773196 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092189283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129424983 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094492522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140540687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124217872 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127328334 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092455152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124626702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128478904 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1015558 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129559271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115208176 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101508348 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116135938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093246417 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145358463 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12612265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127240414 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123852602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108088212 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128512934 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143672801 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129131674 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128320234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103363446 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128452071 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126508707 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102578693 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128301928 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128985036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123850616 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105495446 seconds)
  done (took 8.582068915 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121668202 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108118344 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093602831 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128338643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127526218 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115807166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095527042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115426516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095532999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112593717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162813012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094594429 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127595819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12803478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094293577 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116473296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093881301 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1273385 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112659252 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144709453 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094571913 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127951314 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127375952 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127723024 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107352488 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125482002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115406797 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095284172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116272918 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094835531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124304989 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116102731 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106703894 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113091027 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127203265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095144683 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114470238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101847352 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115324478 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125123353 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106169131 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139830375 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11628898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094830073 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130928101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11654731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094695457 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112954095 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094580758 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113524172 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129268004 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108602312 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129335809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128708323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116011071 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09590227 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116254269 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096200632 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116670427 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103200316 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129443942 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116472971 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144958086 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095028855 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117103512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128286631 seconds)
  done (took 8.435370894 seconds)
done (took 157.876208561 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101468698 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140842822 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.104516684 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175288793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083612858 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140319828 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117049686 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.119247799 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085534495 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109686801 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.090480464 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.11482576 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.157546843 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082425354 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10714627 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089208075 seconds)
  done (took 2.672250674 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.178720211 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.294004458 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111528952 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119707618 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096620823 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115715333 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.095672101 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120019985 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091959733 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126460151 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092417868 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.115902316 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.103539738 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.115813224 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091348037 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.114333954 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125389962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093731878 seconds)
  done (took 3.064803975 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114834062 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151874102 seconds)
  done (took 1.121836539 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122253879 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.184601884 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31202863 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.145558602 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.142207426 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135368284 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.169167195 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.35273607 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192348959 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136804537 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.137613055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119546153 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121825016 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.121866035 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100163794 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119899217 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14549378 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.100123552 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120026651 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098569113 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142780999 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.098885775 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125395583 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097362359 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189766555 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135345047 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.121331075 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097672907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120610132 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.097709896 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125650743 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132950741 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133287716 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176433733 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101969182 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.196604588 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104794084 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118875101 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.098563797 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.118196679 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122448681 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102048567 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134567776 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097385059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115327774 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10403522 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.119568585 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117218654 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105903206 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.126622014 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103954657 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12495624 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169315055 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130620999 seconds)
  done (took 8.142725364 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794259527 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161284195 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095776035 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.922881619 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151064592 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110971686 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.793589893 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13289352 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251779496 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.791811981 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130078788 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125918027 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.218762911 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.289540404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150944746 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316451585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.694067527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101676839 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143939742 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159488745 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103998896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14544009 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139655928 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.46412104 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.088056249 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11353035 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116853452 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106330585 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165992118 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.120633765 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092464577 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.215777251 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.278280914 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210336437 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097926845 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114238037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094453445 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173294986 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.286549581 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.230144602 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184459677 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093028921 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118573899 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109628275 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.14055997 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115217072 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177689211 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188067203 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187608211 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124476022 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133498656 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10696702 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126992083 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175947929 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117475426 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.326920494 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.354071448 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119864383 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104982177 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135624679 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.281035486 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.091338235 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233638412 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145868587 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222755797 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093924547 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793082016 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175636352 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095977759 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125856393 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12138678 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103137376 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128078176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180885384 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.438360819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134896872 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102099572 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113661253 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225941467 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.096441496 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121772856 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180233071 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12204886 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107304668 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13497225 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13366738 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186408191 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.260688449 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136098738 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129074267 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103116795 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133825952 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09748691 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.222990262 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234451536 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.190608413 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22837868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103775348 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197739879 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180834843 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133656583 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185114447 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127710442 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116720525 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134072097 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230546127 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155975775 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098490112 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125554596 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.104983255 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158290248 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123633956 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105117748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197432653 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493886752 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178906339 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.112999514 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101601893 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120077355 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1683417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118799624 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251493303 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122578748 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181477828 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127929492 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094490295 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123220142 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180081387 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135757967 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106877475 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133939533 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128283371 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.264569973 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233570482 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11406065 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248407131 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.188618605 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104009389 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204505157 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104972549 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.199628621 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109133197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128264492 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095500404 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797827307 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126918115 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104270721 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121390784 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206873207 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092001382 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117572519 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.097351688 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111488291 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790798146 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120103386 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095573824 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.118587442 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099131929 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121734379 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099275927 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125789434 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.173867337 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248388878 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131347319 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104666303 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123367028 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175365358 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122088641 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098390451 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120175423 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.098486988 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12860196 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102084573 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119648645 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183517052 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173506981 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234389361 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586206738 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099375778 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090103077 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241644097 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117109114 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29932599 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130507512 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.239212968 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182889741 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117960576 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329171678 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21073011 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206953566 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101111854 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174738194 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110442936 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095065439 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.195657687 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091614545 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120157546 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168642093 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138714012 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111944765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.172624391 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113056186 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238014893 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08522008 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.200289181 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091323449 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125630736 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.317455553 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091090745 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133300204 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16915741 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.120087114 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09289255 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.050451394 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091965507 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122601023 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099905944 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231831389 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.177379954 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127290799 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126092402 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107782491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193033831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.224168984 seconds)
  done (took 46.24368433 seconds)
done (took 62.100942542 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312895088 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267570428 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.297130814 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.199723689 seconds)
  done (took 2.030866356 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176955949 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.153795441 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12370277 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109932408 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15748466 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089520161 seconds)
  done (took 1.701645394 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.487262427 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.38201359 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348746282 seconds)
  done (took 2.10941021 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.261630593 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.291472973 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32841788 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.447556381 seconds)
  done (took 2.328615767 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207070366 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.125919234 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098686037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.139348319 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.171385939 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180027655 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144968098 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.157647253 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130786077 seconds)
  done (took 2.288863013 seconds)
done (took 11.351612085 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.128804606 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122468664 seconds)
    (3/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.250553713 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.163915075 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.12464593 seconds)
    (6/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.224490627 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.257874855 seconds)
    (8/286) benchmarking ("sort", Int8, true)...
    done (took 0.221355202 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132221859 seconds)
    (10/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135274777 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.224051618 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.15913617 seconds)
    (13/286) benchmarking ("sort", Float64, true)...
    done (took 0.225937397 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11487964 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094195997 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116918987 seconds)
    (17/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.261787134 seconds)
    (18/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.246867452 seconds)
    (19/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.259550707 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105677857 seconds)
    (21/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126249418 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197326557 seconds)
    (23/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090823875 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.238630805 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.128265331 seconds)
    (26/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121399384 seconds)
    (27/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091610828 seconds)
    (28/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.213188602 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.212723563 seconds)
    (30/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104855785 seconds)
    (31/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.159207592 seconds)
    (32/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.191883052 seconds)
    (33/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.221312297 seconds)
    (34/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.227489294 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.142854385 seconds)
    (36/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103902112 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136522391 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.147940703 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.229978114 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10084372 seconds)
    (41/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.205711739 seconds)
    (42/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127132176 seconds)
    (43/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09841912 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.125918143 seconds)
    (45/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094225588 seconds)
    (46/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.162625196 seconds)
    (47/286) benchmarking ("sort", Int64, true)...
    done (took 0.220904171 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.193784751 seconds)
    (49/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122845474 seconds)
    (50/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160951882 seconds)
    (51/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.192594715 seconds)
    (52/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.124527121 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.116777631 seconds)
    (54/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.099563352 seconds)
    (55/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.233072144 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183362221 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.271366699 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.126640004 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.115722375 seconds)
    (60/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090990213 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.099224786 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.07843935 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135974125 seconds)
    (64/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092261935 seconds)
    (65/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118362826 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.210728292 seconds)
    (67/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098976607 seconds)
    (68/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125140811 seconds)
    (69/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101028302 seconds)
    (70/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165969125 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.170135159 seconds)
    (72/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096504478 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.142908022 seconds)
    (74/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118225842 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110553537 seconds)
    (76/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112264458 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.099024098 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.154767493 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201917169 seconds)
    (80/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18880911 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095596332 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.113189826 seconds)
    (83/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081393376 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179322903 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.152676051 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100184868 seconds)
    (87/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12665672 seconds)
    (88/286) benchmarking ("sort", Float64, false)...
    done (took 0.173612586 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.096632796 seconds)
    (90/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117440371 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113777234 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.168463749 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.183489571 seconds)
    (94/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.132451357 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138867271 seconds)
    (96/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.122373427 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208282292 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093354275 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115167363 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.135530643 seconds)
    (101/286) benchmarking ("sort", Int64, false)...
    done (took 0.110219711 seconds)
    (102/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.133901944 seconds)
    (103/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09848552 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091896226 seconds)
    (105/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132597089 seconds)
    (106/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.089726407 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.117070437 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.078724257 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135757301 seconds)
    (110/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102005902 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 0.226245562 seconds)
    (112/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106795348 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.114830404 seconds)
    (114/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117897993 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089774857 seconds)
    (116/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112058945 seconds)
    (117/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.184298369 seconds)
    (118/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079233292 seconds)
    (119/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.121889542 seconds)
    (120/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.076752806 seconds)
    (121/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.073858599 seconds)
    (122/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193344497 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11791671 seconds)
    (124/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090318958 seconds)
    (125/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125875128 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093776896 seconds)
    (127/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124485068 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086018357 seconds)
    (129/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117032104 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.143723378 seconds)
    (131/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079385651 seconds)
    (132/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.116418226 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19337818 seconds)
    (134/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096166022 seconds)
    (135/286) benchmarking ("sort", Bool, false)...
    done (took 0.187465034 seconds)
    (136/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.126209292 seconds)
    (137/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.101373459 seconds)
    (138/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.09828219 seconds)
    (139/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158200256 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116464958 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099495341 seconds)
    (142/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.100658619 seconds)
    (143/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092445016 seconds)
    (144/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.11657262 seconds)
    (145/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204085148 seconds)
    (146/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075523137 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.122642467 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093241594 seconds)
    (149/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.160009385 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.116032709 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076112492 seconds)
    (152/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.154257009 seconds)
    (153/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.075338716 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078322569 seconds)
    (155/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185446675 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.098563304 seconds)
    (157/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078307652 seconds)
    (158/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163528281 seconds)
    (159/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087420543 seconds)
    (160/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119299077 seconds)
    (161/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.079383927 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115436163 seconds)
    (163/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088485372 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126306691 seconds)
    (165/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07897613 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.117355763 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077041082 seconds)
    (168/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122075871 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159155729 seconds)
    (170/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198940766 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.114272617 seconds)
    (172/286) benchmarking ("sort", Float32, false)...
    done (took 0.151051555 seconds)
    (173/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100330388 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117793491 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.118726105 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102846035 seconds)
    (177/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.123193937 seconds)
    (178/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083061535 seconds)
    (179/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.158757006 seconds)
    (180/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.081809031 seconds)
    (181/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.20588492 seconds)
    (182/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.103629324 seconds)
    (183/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.193071398 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088726231 seconds)
    (185/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.246985493 seconds)
    (186/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11803532 seconds)
    (187/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110245212 seconds)
    (188/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119277266 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.079211326 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12547181 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.177968391 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.086642381 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124568559 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.103230751 seconds)
    (195/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.163034187 seconds)
    (196/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07997544 seconds)
    (197/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.100601468 seconds)
    (198/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084436642 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118304597 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 0.218688436 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091448073 seconds)
    (202/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117784573 seconds)
    (203/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09121253 seconds)
    (204/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230262096 seconds)
    (205/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.117061383 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088094476 seconds)
    (207/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185059708 seconds)
    (208/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.111286951 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094674593 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127491001 seconds)
    (211/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.146372528 seconds)
    (212/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.099417745 seconds)
    (213/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100264472 seconds)
    (214/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.1004438 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080779266 seconds)
    (216/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.128125905 seconds)
    (217/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.077109521 seconds)
    (218/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.116579512 seconds)
    (219/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07909774 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10369154 seconds)
    (221/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.076803571 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.089200317 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116656737 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.076344593 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135720077 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.090488749 seconds)
    (227/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.100952928 seconds)
    (228/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077577877 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100509955 seconds)
    (230/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087275665 seconds)
    (231/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.098752232 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114261659 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.10505533 seconds)
    (234/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077105737 seconds)
    (235/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.104527312 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.151759322 seconds)
    (237/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103775332 seconds)
    (238/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090555368 seconds)
    (239/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120318523 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089470572 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129246256 seconds)
    (242/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076894327 seconds)
    (243/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.099036361 seconds)
    (244/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.07552033 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118460003 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.091793537 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124531329 seconds)
    (248/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.075514967 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118395272 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094408525 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.128375145 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.096653149 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137436358 seconds)
    (254/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079419213 seconds)
    (255/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116071706 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094169022 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117879889 seconds)
    (258/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.077690696 seconds)
    (259/286) benchmarking ("sort", Int8, false)...
    done (took 0.194150385 seconds)
    (260/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.117685567 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121427644 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08803554 seconds)
    (263/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.082993318 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113260454 seconds)
    (265/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092588518 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191209139 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.103626098 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094644742 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.126349085 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0941825 seconds)
    (271/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.101524062 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091253375 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119123775 seconds)
    (274/286) benchmarking ("sort", BigInt, true)...
    done (took 0.249296339 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078383535 seconds)
    (276/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118347753 seconds)
    (277/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077975811 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189626556 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087573986 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139193878 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.101481216 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090574803 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117762573 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076790883 seconds)
    (285/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.114192219 seconds)
    (286/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.1029935 seconds)
  done (took 37.790265853 seconds)
done (took 38.683202969 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104524066 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.152140592 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098958554 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141061824 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.099507293 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129847252 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121489076 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09933405 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124948001 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101676366 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.125667704 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.083309981 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123747019 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09975829 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.123140895 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142145132 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101839605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121435235 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.090513808 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.114460402 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090184419 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114751055 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.092888356 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.106464849 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099156677 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121650719 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093944132 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123167848 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092750464 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112403208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089828418 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09464512 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113923247 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123343573 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093451522 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.090595109 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124003497 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097220401 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.118200316 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091405175 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120008863 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091438884 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119572137 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095917116 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115459127 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.090701509 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114991646 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12508643 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117534813 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115344986 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095706697 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122793237 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099944213 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119687103 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089667426 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.115673086 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09191404 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142563965 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.090275047 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116961755 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.113983897 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12023477 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090248754 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.114504431 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09149835 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122257714 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097427341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11433316 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097936248 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11764501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087100592 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114658282 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089835119 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088537239 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.122204492 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.09842638 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110110397 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.09268863 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118761411 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093506288 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.116075156 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090032555 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11839905 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092527038 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114269086 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086521901 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113146002 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093357193 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.116435612 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.092897672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117393741 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094020716 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118209262 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098602995 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115548974 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09305438 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.116368898 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092252297 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.118540952 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090044345 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111532162 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090139078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119544069 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089067373 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.091583919 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123983517 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089908141 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119244775 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.090871906 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115770594 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128043683 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09887321 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.116024936 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092991733 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088078867 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12070092 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088957152 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113177064 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.089888945 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11692343 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09197258 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.1161814 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089791493 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119056627 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100343992 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.113013612 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.08956248 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114561766 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0913194 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.119325019 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091893238 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113932917 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.092082971 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.110658781 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090193456 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.113322087 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095259431 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114315126 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.091625315 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.116308995 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.091881077 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117625562 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092342252 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116326261 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089326697 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.108453357 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092630623 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089945657 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117932984 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091720059 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.118773529 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089712519 seconds)
done (took 17.094987113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101504809 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187312124 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148999672 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151493075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.123160173 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.133541622 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125698626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146242141 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09935558 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145280123 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148130388 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112487191 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153228418 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.127649019 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110053887 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.124970669 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100953297 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13116475 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.158689103 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.119569875 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148793227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126090695 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147272938 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118732878 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123875682 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146155342 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.102818347 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12411274 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105238204 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140787432 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115079632 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.127763485 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.124905116 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111793089 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.132066409 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.100079357 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.132445305 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119277092 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.097969941 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.122833659 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.110413091 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134839655 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119134546 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105099086 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.124119163 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.103638927 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.122490176 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099438107 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124092258 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.093492389 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128628629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145486968 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.098877124 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125884991 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.126338103 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099830415 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125863361 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.105110289 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.127599348 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.105245887 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123765082 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.128203492 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105131987 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139846973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.122274523 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100986621 seconds)
  done (took 9.104083248 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116684306 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.152912065 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131711329 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106157153 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127293712 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089670985 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112433411 seconds)
  done (took 1.797729116 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093583233 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143307049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123132693 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14751458 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.143276999 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136744617 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139576008 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095845908 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139988866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.10144072 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143191879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.170841501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094844183 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126469916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148668919 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091283803 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.150682289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096168058 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122195865 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.122525668 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119626252 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139300963 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.104203 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11577302 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110520042 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.119886779 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185229836 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10328472 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118203797 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099237254 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121106723 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184618998 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110788513 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126665914 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090258343 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142419487 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135444687 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09471643 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13818979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094207528 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135957768 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.099045881 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122267468 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.096194285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.124492578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103895621 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125515781 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123715961 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095993162 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14216111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.100809566 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136416593 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.0934558 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118910855 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099666144 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123505868 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106653675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.120909893 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11697566 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121625034 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139958443 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11491516 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136186201 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139755996 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106511216 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136020299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.110590072 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12052557 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09696228 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125089643 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141298618 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093776406 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126020078 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105014802 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124015972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116923738 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.141297072 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094740907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127916785 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09397742 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118709304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093122949 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.131707966 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095725454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117779371 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108470156 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126991834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122894672 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093981117 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.13837126 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.096904275 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.128147143 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103044152 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119249749 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129813452 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.118193342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.12622139 seconds)
  done (took 12.610995078 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096911349 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.092907471 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121715347 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093386153 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11869636 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092114934 seconds)
  done (took 1.580580444 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123115496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12070501 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106995747 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123512792 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158984136 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.114187202 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.138531563 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100769338 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137003943 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130843868 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.113616454 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.142044645 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.120440326 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123875898 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138469143 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098790757 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.140435064 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095355942 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131042342 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09531333 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.132328675 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099044031 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12070014 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112232413 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.125240417 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099088316 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124532417 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13142743 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105311049 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126160022 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099381048 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124616686 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098551855 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125750258 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.140885214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097502796 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118492547 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.101028179 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124334408 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099055333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.141026661 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094998049 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129845001 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100533032 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126250708 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123261623 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101442861 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122560041 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114622985 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12551301 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100383157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.125133169 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098843423 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126901805 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097988155 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127810865 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.102248801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.139975737 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12477008 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098060476 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120791078 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09937957 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127458733 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100515776 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.1240748 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.102248101 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.126184687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097361686 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121767701 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099755179 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128115962 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097318201 seconds)
  done (took 9.399354784 seconds)
done (took 35.445570565 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687810955 seconds)
  done (took 1.654121729 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850241873 seconds)
  done (took 1.81630917 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.159431372 seconds)
  done (took 19.152602346 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.518251123 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.612493884 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.010713607 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169244904 seconds)
  done (took 3.273786324 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964372779 seconds)
  done (took 1.953946576 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301615541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261743211 seconds)
  done (took 1.533986052 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.803579522 seconds)
  done (took 1.781884907 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.564031768 seconds)
  done (took 2.539798366 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.358589796 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202285342 seconds)
  done (took 1.548988055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.57125818 seconds)
  done (took 1.55448831 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.669877034 seconds)
  done (took 16.655658193 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247010732 seconds)
  done (took 1.247293526 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303482269 seconds)
  done (took 1.287076422 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.729880564 seconds)
  done (took 4.714703417 seconds)
done (took 61.693725245 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103937971 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128930906 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103964647 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.101301966 seconds)
  done (took 1.417045017 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110152981 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124619802 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103140168 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124720536 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106230208 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124830767 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097080306 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.131300981 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.09841504 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.126909511 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.098897186 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.124702583 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.125896862 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097560826 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122233572 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100879784 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128114204 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099544723 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124487602 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100812771 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.123957518 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100327347 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127239308 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099526943 seconds)
  done (took 3.716124639 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103628781 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.095432842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.124191111 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.094918936 seconds)
  done (took 1.414096045 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.106835411 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137662554 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.111167307 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131315177 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.111696953 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137925107 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120230109 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094626678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096593407 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130931165 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095621718 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140025782 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136690395 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.089757378 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.131799426 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.091954922 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117368295 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110431913 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.130858033 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105347311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119950735 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103832159 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.127415255 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108400805 seconds)
  done (took 3.78515911 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.181705098 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.133797132 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144357956 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.102680893 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.17339769 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.146097851 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.09322279 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.148071321 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.095195871 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142339665 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.124758428 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.146917802 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136861501 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.123601372 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.095372424 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.127552961 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111849537 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.141216637 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.123431685 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107516996 seconds)
  done (took 3.598441971 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104289437 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120121918 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091007947 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095194836 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126519895 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097513367 seconds)
  done (took 1.6347077 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092816146 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08972703 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116548602 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089385404 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.120804166 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.089706777 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089086399 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116974582 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089422749 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115644462 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089196098 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11410396 seconds)
  done (took 2.212306825 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.384631102 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118859839 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.126631323 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.094589192 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.137269414 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093686026 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133070723 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092553545 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.15204584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099893888 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118762849 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096889263 seconds)
  done (took 2.643668138 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215051167 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098242149 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267056208 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.426272067 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162308782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167802509 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.329073779 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165801028 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.186975694 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141254208 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198970431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160202728 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158756999 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186543678 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142482175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.178546773 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179088707 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205785819 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155482666 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212005117 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169091929 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17164037 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184055748 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155485981 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114030716 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162239424 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122311065 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104987793 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175673122 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172395973 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204790038 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15153045 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115617035 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233489451 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222485722 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185373104 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.394529622 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137607662 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1929854 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186194942 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234481447 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144295949 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197942797 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158586746 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133916654 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186963848 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161612871 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.1852842 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134966786 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117884659 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213215492 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180278113 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.184300712 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112849326 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.377483977 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154104906 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.152231765 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191353144 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192373185 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197214796 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176813729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.127793273 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224494252 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181730435 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183084415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148211417 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170832274 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129024273 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180658205 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197544372 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182774276 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174877589 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.217932244 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113567032 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170436034 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173559535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157545864 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184361997 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168433825 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123794474 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127771761 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141480811 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131478305 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.160389587 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126851074 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207054687 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139268788 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271407859 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220074362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161845702 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165347726 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170599575 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173304342 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151358936 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095055774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153630934 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.166087877 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165357219 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108175338 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161414357 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153181018 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133644845 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159846784 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098955451 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165760536 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.137337845 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170913492 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169251206 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.105064967 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171966431 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153581297 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162302622 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178729107 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191092991 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108548418 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136501245 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198964286 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164278367 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14240811 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18194382 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190481063 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.169963328 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114843821 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200646476 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200589201 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117821687 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218141133 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118136934 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137250366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.155077412 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164895571 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160556969 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131275457 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133569464 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.156315306 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197290267 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129798826 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112174335 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181046314 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132995788 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103954353 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14983734 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140334133 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.117894159 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153127444 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144510701 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162427231 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167810995 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157143035 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163168119 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11787699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229335208 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112933638 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166298341 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151890152 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094865781 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.18478481 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217658549 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107950906 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191262093 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.174189824 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267841462 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167111018 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136102827 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185253923 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104086288 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.124226733 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171422481 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165929847 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165201664 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18730859 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24142084 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197858323 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.128182998 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15519103 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171370806 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179426556 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159967594 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.15121933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168184448 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174904994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097710552 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12848146 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102142358 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14451971 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135660664 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108366702 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215717555 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170613827 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231565058 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16268836 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147291927 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186941171 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129468165 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139489975 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203878029 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113132121 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189770309 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185799726 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169963527 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146245378 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175387161 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124167319 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10090236 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13942813 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173570739 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108412262 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141253182 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14844239 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188295648 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180812163 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154606137 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267499108 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174321398 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198360665 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097884439 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167974935 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176778708 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165091127 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166797301 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134777776 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.165608879 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181852889 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150209261 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198137375 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168520998 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173822072 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204763509 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162740001 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135692159 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152946458 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171880326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114969926 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165382753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150318909 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109752015 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158427081 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140259336 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130580003 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189788126 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15059047 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187153039 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.163623024 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178098271 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101217183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14708305 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167207801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151084389 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093316762 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175456335 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220880449 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124044309 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163839969 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179365996 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134155779 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.356074808 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219477743 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190975621 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111775627 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148075618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169043506 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167086005 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173806702 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188525322 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149933697 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188736026 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164884052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118233586 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141748083 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15395983 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125267644 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157589395 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138516823 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160123189 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.118177187 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21831112 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14951809 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134392907 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170696807 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152878859 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.162445402 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116478025 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236014212 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134618784 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210167701 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13134567 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.172224453 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19604653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128291578 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103357506 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132418204 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18796122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136657032 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134570102 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.25403957 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277208651 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163907061 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176357984 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113577501 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127380159 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167082274 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154557171 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24281373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143370736 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144107881 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197367664 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.15703765 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10549401 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167292679 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367614541 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122677282 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205142586 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.097021104 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.326741354 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132743212 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136372962 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135015462 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174676424 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139231765 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.192193329 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170759426 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120155046 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16623489 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144653815 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.261709096 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225318008 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177611744 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18406807 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151539974 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164401066 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171365509 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182955125 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147698611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121002798 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170349592 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189509304 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192105908 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143922735 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171497368 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173749515 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166812463 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182098568 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110538786 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193363312 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136218145 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172986671 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147346732 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098045412 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167130741 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.256811399 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137755953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18254602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135489186 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135931735 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131064439 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127728898 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165516727 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150756963 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139138368 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187698841 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.105219974 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170361136 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192028862 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138009901 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158293826 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120895128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138358007 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147999212 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120478624 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14074444 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150653754 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210342232 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.105755987 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184296925 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177196302 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198947603 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135629907 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151053374 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666350654 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102561108 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186596859 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152408173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193165484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155769514 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173496623 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166613119 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15477375 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173982072 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125063262 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22569959 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173247165 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169222867 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137528525 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149374309 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120951337 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.137738144 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157217968 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167758474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116952053 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.143993308 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163612327 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150125954 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.120111367 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146052376 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190633772 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153409279 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191157159 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192211957 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144728872 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174239853 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180434431 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105620012 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.165798589 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176032139 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147202447 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159298416 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107602885 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140374658 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185676539 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098682506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167089577 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16811948 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1678336 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169402231 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.141052551 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166766544 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116599315 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166657742 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131961365 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159511241 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161750564 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105486133 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1320999 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130431619 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163506448 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165174534 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13417063 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.148779627 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181482319 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.129496202 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108587876 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365927237 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163884969 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196429705 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.157224397 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10906323 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150921456 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161874343 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1602699 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164503768 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.103317879 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136997586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13524386 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.182619154 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.130410303 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163667859 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200445121 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167369042 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194294425 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140467424 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.266332384 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114449345 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162593406 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.136695333 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105341272 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148964967 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138929275 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119932786 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259976324 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185332375 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159663392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121826229 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132737174 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1315265 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108768901 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167509483 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162008125 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165141312 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118053474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.122885906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149782732 seconds)
  done (took 79.987572294 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153464624 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148494466 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.153621919 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198573704 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170246578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247322972 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209261034 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231983424 seconds)
  done (took 2.600559298 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106734873 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.137347829 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143647081 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126961374 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095294411 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.33011334 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143198262 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128019118 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.122699755 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143083758 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.12217167 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.575735895 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.104011522 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.129269301 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119865646 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.093631151 seconds)
  done (took 3.699353401 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.366170311 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54861309 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.171463579 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.251407873 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233094857 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.154922799 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.767549569 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188939094 seconds)
  done (took 12.770924376 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130552867 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143620507 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.141557128 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167956185 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.125244704 seconds)
  done (took 1.802448396 seconds)
done (took 122.260354007 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102349471 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.100447196 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127331756 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129846308 seconds)
  done (took 1.53656625 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.114765984 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.083877137 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.116356431 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083695298 seconds)
  done (took 1.482158904 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434088556 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.114543086 seconds)
  done (took 1.672966315 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121651189 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13843575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.109440099 seconds)
  done (took 1.462007658 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.110873925 seconds)
  done (took 1.205342516 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.103949502 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.102434045 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.145098093 seconds)
  done (took 1.444042481 seconds)
done (took 9.894528287 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119518164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.435807728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.389043025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141287458 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728190456 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382669226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029914679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16029248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140317857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122863781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110517428 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.704967883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985672973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371555585 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971875424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369609761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678058345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.125078987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100082993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125041869 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979171365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121883295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095666286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126793608 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673681541 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426654109 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093755013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.381770283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093671566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127946261 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383050336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122486142 seconds)
  done (took 16.900492461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104078952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185526974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102242618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125563338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098664751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125528279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104022468 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.137620931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185932826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093945404 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140588636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09345571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128847586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094471801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143834143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094487467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125420303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096176599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130130271 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096699414 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14291755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09599421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125253566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096313556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122707997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1074333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123231911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.107364524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122564563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099103621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127968154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094763944 seconds)
  done (took 4.865722464 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148713767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192644562 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131544535 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1287732 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.175187149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095919707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.207383925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.16254451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187196803 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123610918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111979873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122732585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129215177 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124922411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114927719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12358008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097296825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124662506 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101091697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125382808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114426609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123838842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097169768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125283703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094207992 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137170282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09502458 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136690673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094518441 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128410197 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100059311 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123625326 seconds)
  done (took 5.201121286 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106786334 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.132014499 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11170394 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140674777 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097291423 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.13123672 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.104063684 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125780018 seconds)
  done (took 2.046137948 seconds)
done (took 30.106621932 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116845055 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.100195227 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.138282724 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.107263463 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.133984306 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.118172966 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.123020443 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105858149 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.137026359 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103694476 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14021828 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093967241 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124181639 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093480645 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.107029503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129006068 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.10888246 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.133058468 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.116003486 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138165297 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095239639 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135772241 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104304842 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144502907 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.115084394 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.145121801 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139682579 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102758796 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12439973 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096805041 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.110997361 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.149048516 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125930213 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111581392 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128831682 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099903114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.095775973 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126291731 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.109504817 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136610222 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100626072 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135188744 seconds)
  done (took 6.090620593 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.125144272 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.167602336 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.098383703 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125344773 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095818297 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.162589233 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.157914101 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.096212681 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097140857 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.149121866 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.150175638 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.096731004 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.095892637 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.127435815 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.095766932 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.125748482 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.118448954 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.149286201 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.153859317 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.125273381 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.168860899 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.154891452 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.13128407 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.148738685 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.165008427 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.129550917 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.145917023 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.130593682 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.151737658 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.095009566 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.154470622 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.156089437 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.094960361 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.124519266 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.134659854 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.160020235 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.152508103 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.134124173 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.154723985 seconds)
  done (took 6.305494716 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107667752 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.110528968 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.146388397 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191482775 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134630241 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.138930188 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106072026 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143486072 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111538608 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.124949887 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.105393957 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157410948 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111625501 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.134027746 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.100976618 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140897333 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.114795016 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.128202255 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100733889 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14454015 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.115874388 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.139651974 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10794435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134949609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09547141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135362744 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099005361 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.140274689 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100868054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.135175853 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100452378 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12953208 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.103551559 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.138107908 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100336717 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.132486609 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117441987 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136441572 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104775554 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.158241655 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.13721111 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100596282 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147155051 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13717008 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.126981857 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.113719005 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.132175716 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10401228 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124538011 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115046106 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.135687342 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096071187 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.141865241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096082684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123456115 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111056901 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126994915 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098645713 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103752785 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.132922341 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.143847446 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100116779 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11104663 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128377995 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101604349 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.126054712 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095735948 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.13016108 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11767086 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129938839 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164522875 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09590573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100965744 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13587744 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101335018 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135098249 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095417418 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140854827 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106098435 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129885663 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.105573913 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12988545 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099823138 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142582214 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.111358944 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134057962 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101278595 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13227371 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099011708 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.127225689 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109754746 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127720213 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099828662 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143612189 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096442395 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12806253 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102679664 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.130719317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094800951 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138759342 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101857083 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12534229 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10650876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096648058 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.131612632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105133113 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.131470015 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095876042 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129922775 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101873231 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.127020086 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.100458052 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12948791 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097921545 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.139974439 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.103293016 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12790326 seconds)
  done (took 15.200217043 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.248557791 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.227379257 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.198156443 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309223657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.150655366 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.123710998 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219738188 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.178805092 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096539267 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168123823 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.182099169 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.193183302 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.183958069 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.19234961 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.183141309 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.128075426 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118344946 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.179221231 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.223150839 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.306001531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119376592 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.143747027 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16996317 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.166777008 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.11577581 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.145801101 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.154486097 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.119335104 seconds)
  done (took 6.061916873 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115516536 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.169162986 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10435064 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.160786132 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.154832882 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097308028 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.132998393 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.098027661 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.14189243 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.110654056 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.129449155 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.103218687 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.135126912 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106004601 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.128922692 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105504855 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.139923717 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.108298668 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132040369 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100612241 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.146746432 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11598241 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135897125 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.101787389 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148456801 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.13474693 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.098413303 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.150640173 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.135528586 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124885948 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.125168118 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105245559 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.142094891 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095916879 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135390712 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.099281146 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128415008 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.099288821 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097803464 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126372266 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096758332 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.118454789 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102740821 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143778465 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103952889 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.12985542 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10182969 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134085035 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103663109 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.125950975 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098697832 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.130787731 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.10305417 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.142182497 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099738301 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.135189214 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100430486 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.127484017 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106478169 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.099219688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127724769 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.101575625 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.134330313 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.131374498 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105230447 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.10229219 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.134077294 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098934907 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.13498907 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10371289 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.129562403 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.108717465 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.126642015 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.098096598 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.138613633 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109194094 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.133484693 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.102184804 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.134359801 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09622851 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.119106008 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096151834 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083811543 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.134172995 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095451001 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.134342512 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099399913 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133212621 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143461817 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.106915166 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135297294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097351501 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.133656745 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.101722884 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094239423 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132388184 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.114429475 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.151179438 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126826183 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094555644 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.143551218 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098889506 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094599905 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119129146 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106737197 seconds)
  done (took 13.606071243 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.1414965 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.18162542 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.129694029 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115719687 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.163908238 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.168622248 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106624269 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106975111 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.132536585 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116486612 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135825842 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105651241 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.136855779 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.112439959 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169668151 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.139567323 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099806161 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.144363633 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102097015 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.183374055 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.14734851 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136015731 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.173870854 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.135066327 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.102177493 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.166186624 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.173338646 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110747941 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.14145533 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171773987 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111382695 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.173813598 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173230762 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102315633 seconds)
  done (took 5.853020227 seconds)
done (took 54.211957084 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.228919877 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.424482218 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.196400293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.195597292 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.204845359 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.232621414 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197639265 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.392844759 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.003854442 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.1864348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.193827145 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.198773562 seconds)
done (took 27.779749673 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.275732034 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364695098 seconds)
    (2/2) benchmarking "String"...
    done (took 1.510034559 seconds)
  done (took 3.997017756 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.197693543 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.19642614 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.446748764 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.219333688 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.199082193 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213987894 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.196983457 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.225086075 seconds)
  done (took 15.820501465 seconds)
done (took 25.415374021 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.28911945 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.397794266 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.443021201 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.213175524 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.19700828 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.192874701 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.213332458 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.246227375 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.211811946 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.20549726 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.20036844 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.461011132 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.209246722 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.574479417 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.210234757 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.198671338 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.221131173 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.425084356 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.196175141 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.202153354 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.19913525 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.191162534 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.209881338 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.218622895 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.208360106 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.199519196 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.26409449 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.203237144 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.40161489 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.217279571 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.246612984 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.206973701 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.266669933 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.213100343 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.323304869 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.237162932 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.383229275 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.207431082 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.193057374 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.206706623 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.408175716 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617075073 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.200792326 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.210597463 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221256604 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.271104462 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.191519607 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.935132288 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.208847765 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.206194017 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.229227383 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.573266159 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.205765157 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.227315303 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.214875836 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.443194401 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.202458648 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.245718993 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.234318073 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.209930924 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.201706588 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.200561245 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.236768691 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.202110367 seconds)
  done (took 143.526326494 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.202732782 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.204184634 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.20823077 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.227542757 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.204945744 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.204531592 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.204836258 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.206633067 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.201159379 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.207676221 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.206950575 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211624893 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21291478 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.18675474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.207159885 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.227447109 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.208189355 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.221650709 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.227191368 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.207105062 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.210216341 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.206232094 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.228301122 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.210164692 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.215724026 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.285587425 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.21988135 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.211741534 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.205863156 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.207486314 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.203452597 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.214085586 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853048076 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064374583 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.226981949 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.237730312 seconds)
  done (took 80.317236709 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.203827849 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205049775 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205143542 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240246652 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208434946 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816132061 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816657143 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.93551916 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.499557169 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.668348083 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523374831 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209445031 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301436912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.216527593 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209282813 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222748478 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233865958 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202765439 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204152927 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815149663 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.207108177 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221302433 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384074836 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218763472 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23691927 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.608326733 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.39817126 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222986006 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23823638 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541674755 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.253195563 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2019504 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6248573 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.017117119 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318545717 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205143313 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210335622 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.239522571 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.208253562 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.493353255 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202904964 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21023924 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.209736397 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931887237 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213683835 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.818671682 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206050649 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.180803581 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207815656 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205708514 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.369340349 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.990034728 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.225504604 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20944453 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21225587 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207075068 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211306904 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243203644 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.302439735 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.327341558 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209195916 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.214851904 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242869074 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211091193 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.354624947 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222317317 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.199514284 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273474149 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313834067 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200674595 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808768594 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211061554 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306495067 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324048978 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.20154354 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205829064 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208197786 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.208985407 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319509593 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199999096 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.633591055 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378930461 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217318343 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.648186985 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311066114 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201195875 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.625334335 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.209315681 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207432706 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961080539 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295989749 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199766479 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206272862 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202555727 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.628241737 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798771138 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.45863916 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207206871 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.588670138 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206453506 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.627544134 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763398761 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919920776 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209729818 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20713085 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318921529 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378526446 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.218700893 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201819895 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.610433414 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21157888 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265616823 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206059492 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600857542 seconds)
  done (took 367.171361806 seconds)
done (took 592.138323681 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.929424784 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.880946432 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.028293039 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.907336539 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.883982465 seconds)
  done (took 10.755885085 seconds)
done (took 11.884073503 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398332063 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.404149883 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272818551 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406684294 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242691124 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422797739 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.38241641 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.230508377 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315330553 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291596368 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312095796 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265472419 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246472621 seconds)
  done (took 18.318336559 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54637763 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.20410437 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289805068 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540358103 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24490388 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541117419 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413083305 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.221560353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425173912 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221455809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226853345 seconds)
  done (took 18.00482802 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562980028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.207512815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289395449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545396207 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247706278 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531440499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430734992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.226795693 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439562532 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221391022 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224334701 seconds)
  done (took 18.059015112 seconds)
done (took 55.508124057 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256318193 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.384268474 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.246577161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226719408 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222188624 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224700221 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22894483 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.232483761 seconds)
  done (took 11.153329198 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.220495753 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.224015906 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.221523087 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.222574333 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223051479 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.219939529 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22388069 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221428693 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219307817 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222675103 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219545655 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222706604 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.220812135 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.709478966 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.221434697 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.224760457 seconds)
  done (took 21.17365143 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220696198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219546694 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.218504964 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220410233 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219922683 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.221119052 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220434889 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220216186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22202888 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221174981 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.219017207 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21987726 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219963102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220432496 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220672165 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.22173579 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220067846 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.219038661 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.225721737 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219329175 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218759878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221299668 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.219901803 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.220102491 seconds)
  done (took 30.42565539 seconds)
done (took 63.884129972 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.216519063 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.232375811 seconds)
  done (took 5.582925443 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277124376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.284858149 seconds)
  done (took 3.697847238 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220235867 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226726599 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223420436 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223014363 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.224394398 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223769722 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.223950214 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223623084 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.222954005 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224708364 seconds)
  done (took 13.372064068 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.22301098 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223486291 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225260908 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224994372 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223528332 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222327474 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222802191 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.224647451 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222630918 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222590352 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22301328 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223923549 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224079882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223995993 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224897521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222015025 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222686586 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.221566277 seconds)
  done (took 23.157081339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.239440487 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246231745 seconds)
  done (took 3.622389277 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.348787763 seconds)
    (2/7) benchmarking "second"...
    done (took 1.261689586 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332114137 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320315945 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.265067311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.243628127 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.266936736 seconds)
  done (took 10.173586628 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222268166 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.419694277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.529077691 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.800382621 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226600713 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22628152 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.086060726 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229197872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.231689296 seconds)
  done (took 14.107263602 seconds)
done (took 74.846201633 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.218144667 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.246531723 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.231219992 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.223652231 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.560744403 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.238467256 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.211478019 seconds)
done (took 16.066512184 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.195409053 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.212815529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.195081478 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.220014228 seconds)
  done (took 9.95098762 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.204851379 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553168917 seconds)
  done (took 4.880520806 seconds)
done (took 15.962948941 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211285996 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211668933 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210116587 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.212541126 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.209742632 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213972087 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211959801 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.212272407 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.211468604 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21255346 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.21439775 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.210133273 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212803781 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20849204 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210602655 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212911245 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.209753065 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210685445 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213377276 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210335166 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.211148249 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213790126 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210410131 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.208296644 seconds)
  done (took 30.206726813 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.209205269 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.212531945 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214974782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211635837 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211944686 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214432511 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.212675907 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215429171 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209697179 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.209774475 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208305253 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.207503893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210012159 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.207393816 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209137904 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208255676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208889346 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205679193 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208468863 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.206216859 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.207802813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206226048 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.204669121 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210444816 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207702034 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207951579 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.207646764 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204438286 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208180367 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.204919864 seconds)
  done (took 37.401965003 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.211907577 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21540049 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208827875 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208779154 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.210770321 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210352217 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.208216422 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210469562 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208621294 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210335457 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.208650542 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.208057935 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20989694 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210090034 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210336697 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.208723697 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209515246 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.209995811 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.211694555 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.208168864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.207689877 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.209433027 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20997842 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209487637 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.209640621 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.207873993 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213575904 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.209289021 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.209756704 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210122685 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.209397606 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.20969043 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.209878774 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.209898437 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212079346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.210142635 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213962286 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.215823204 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.209924906 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.207637139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.210106558 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208495758 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21025287 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.209094374 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208923276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209960843 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.208047957 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.208806318 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.209780315 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.209178531 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.209850871 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.214960078 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211152499 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.209491009 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.209625632 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210413589 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.211090956 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.210304074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.210007698 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.212779146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.210294069 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.211322991 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.210384105 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.210893615 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21069489 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.20886506 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.211012234 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212580258 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.20970275 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.210283366 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.209496297 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.209309637 seconds)
  done (took 88.261233608 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.210353889 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20702597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.207130188 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209203308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206875647 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.210692208 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.208658089 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210229675 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210733719 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.209260058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210978426 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210381433 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20964508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.212539842 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.212532715 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.210684275 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.211479773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208561879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.212288558 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212220604 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211537613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.208071161 seconds)
  done (took 27.749564614 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210144145 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211964854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209759971 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.212424721 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211762585 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213943173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211559174 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214367838 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211721337 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209649261 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210828631 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211961002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21105131 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20995657 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209187772 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209758055 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21281867 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212445842 seconds)
  done (took 22.935892178 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.208396127 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.209566628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.212233489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.209092049 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208151803 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.211866103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209350582 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210684159 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.211783852 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.208209248 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.212123173 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211266471 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.213364855 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20933277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212366742 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209934118 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.212359718 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209565755 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211818158 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209426307 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210765102 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212630911 seconds)
  done (took 27.765419048 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21276456 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.211991306 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.209991122 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.20953276 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210565916 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212361007 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.213248694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.210390726 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.213964619 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.212929138 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211722614 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214718173 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.213222293 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.20973172 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.210237569 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210184392 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21171468 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.210516097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212767753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.210590786 seconds)
  done (took 25.364394386 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222721857 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221985579 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222595698 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221516075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222014408 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223504052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224007908 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22280609 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225249575 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222952226 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.223768538 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222773088 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222126509 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224015476 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223502036 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224192256 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.224706899 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222460823 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224330659 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222733954 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222359003 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224140298 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224351344 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.223185636 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224958386 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224013521 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22332921 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22399553 seconds)
  done (took 35.387376275 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214438139 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.214156133 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.210826429 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.215087594 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.212525798 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211926289 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.211793797 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.212944961 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214889107 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21239007 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.214129529 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.217822667 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.218071708 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.215219374 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217057924 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.216468695 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214001611 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.213439797 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214194628 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213772854 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.219673193 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214533562 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.214448343 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211875064 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213476115 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.216185612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213915302 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213195628 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222156861 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.21418467 seconds)
  done (took 37.570482911 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255498984 seconds)
    (2/2) benchmarking "in"...
    done (took 1.257798579 seconds)
  done (took 3.651885713 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.215196003 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220054519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.220164668 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215787494 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216790981 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217186151 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220361025 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215703713 seconds)
  done (took 10.879390283 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.218836257 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.217701652 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.215582716 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.216011123 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.218996433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.214822748 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224514528 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.238202391 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.2161217 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.217471566 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230195758 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.225892071 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.221080466 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.218758186 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.216113064 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222579664 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222436947 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.221483635 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.221469033 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.218827722 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222131735 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21962479 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.22708396 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.221607523 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227150876 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.231184411 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.22709091 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.220774732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224385749 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.224376242 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.222295832 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.219265425 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.219816606 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.218585616 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.222366874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.223882414 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228037561 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240552196 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227369867 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221825193 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220935196 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.219606741 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.221264058 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.221491523 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.218007368 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222024853 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.220501126 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219795423 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218810375 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.22285125 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.225444665 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222721931 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.218680053 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219189869 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.221175201 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225999153 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.242121064 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.223700986 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.229498719 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.226509619 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.227052433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.242552092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.216537582 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.216103475 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22521815 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.236868991 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.22176253 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.237693788 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.212646426 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.214962113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.221044264 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227466278 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24100976 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.216848052 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216334657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.221217629 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215550127 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.217591593 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.223220644 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.237584369 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216885977 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216862029 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225288164 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240029595 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221442525 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.222961474 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.217968967 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.220605136 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.220427021 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227815968 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.238306798 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.221158202 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218528193 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.218175466 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.222799159 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.222180841 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221243468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222282462 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218788714 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22310506 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230008678 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.225486012 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.230529958 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227075223 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.221573386 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.226987357 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222037341 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222988836 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.225781415 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.22183258 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222214124 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.222174203 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.225130889 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.217974606 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.229200804 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.226024595 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.226079016 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.222708823 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.222796053 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.221720244 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.237849944 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.246820166 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.226341629 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224730909 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.234243569 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.236193355 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226220127 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.221608065 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225025547 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.225350446 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.224781896 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224776507 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234290665 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23151269 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.231151001 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22931618 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.226538469 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.227249003 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235380929 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.229877955 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.232260239 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232142572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23085786 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.234209818 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.235292666 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.230117674 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237911495 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.235071497 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232775954 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.23191151 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227705797 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236138035 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.231757968 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.231048443 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.228612461 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229773035 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.228726308 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.233829462 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228448378 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23095543 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23120218 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.227468194 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229378893 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22965776 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230315847 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231607431 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225899607 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.228110545 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.227645638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226977407 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225938535 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223180981 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.228267968 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.233747926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.225999226 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.228567713 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.227186604 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229656651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.227779298 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224906704 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.224720219 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234174608 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.224646379 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233334544 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.230174264 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225520238 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.226773481 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.224969826 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.228823031 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228742031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.228626699 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231387671 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234705117 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252019627 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.229603369 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.228496325 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.227411337 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.22695743 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.228159908 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.229629214 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.231448361 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227588188 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229849489 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231680624 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224756427 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.230520554 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.223480316 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.22913165 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.228220335 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230887556 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228970574 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.229620508 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227452049 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.227725225 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231537368 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227080374 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.227681433 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.228382247 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.228879718 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.22967034 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.22931444 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.233400466 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.240168778 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.225356808 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228117582 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228614225 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.228900034 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226825665 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22881476 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229241033 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.228918148 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232821193 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.244023965 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.22532495 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234807697 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.241088806 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225543663 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228885002 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.230630724 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.225444384 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.228344146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.231552021 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.230421196 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226701742 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.227174923 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227543364 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230857279 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.232924394 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.226228591 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227983631 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.228422005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.226251412 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.225685587 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.229311531 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226126891 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.225702695 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227216682 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231541357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.224639174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227451675 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.227179227 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.229030402 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.227164266 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.230299296 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.232024904 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.232337316 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.228265851 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229487758 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.227796472 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231358176 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.229637135 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.230956156 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.229065664 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236598132 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.255059904 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232789104 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.231174651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.233418469 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237277482 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.23360326 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.231848522 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233705034 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234295415 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228212162 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.229774431 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.230012349 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230594008 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.233656727 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229751164 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.232818659 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234148712 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.230970786 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.232762937 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.229609299 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.231534665 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231656946 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.229873057 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230891304 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231897533 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231895624 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.229787444 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.233181389 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233004995 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252988409 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.232900618 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.233078351 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.233880544 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.228328488 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.231121497 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.229684872 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.232207245 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.235827286 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.233609166 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.235687653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.23469033 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238899651 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231761168 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.236313854 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.240187614 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228932796 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.231675315 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.230456097 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23370816 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237956049 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.252886036 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.235171942 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234125028 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234699753 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.23603641 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.231811157 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234339945 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236197692 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.234913738 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237285648 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.252600025 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235332269 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236514007 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232866459 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.233725095 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232992875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.232168728 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234474238 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.236334762 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.232690527 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234592912 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234372232 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.233900908 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234055678 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.235006039 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230360584 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.23406826 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240491411 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253685988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.234527445 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235115716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.243871382 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235270425 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241211423 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.254422912 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234379351 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.231075529 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.235084755 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.236249967 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234411021 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.231374772 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23484196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234061216 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232581992 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.23282755 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.234992118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.234958706 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.237222771 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.231175232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24261054 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25595578 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.235838241 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238404376 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234824608 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236630374 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.238302436 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.236761422 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.234456678 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.237607684 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.240306956 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2403156 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236242413 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235613116 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234020758 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237331895 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.234484641 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.235989844 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235802422 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237234344 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.235597632 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.237797364 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235676351 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23719595 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.238231336 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236358831 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.238295426 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.242916772 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.23607516 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.236301416 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237144799 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.236116728 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.237714651 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.23959986 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.237945762 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238207068 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236205446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.238085822 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241155523 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.242051856 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239228246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.239439157 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.237098179 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.235884995 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.237393862 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231698145 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.234000324 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237862788 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238096086 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.238430647 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.236880725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.23489416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.236658795 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238867054 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239080982 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238752459 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.24385428 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238864028 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.237559144 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.24092666 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240507717 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.236163787 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.240678196 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240989616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239835191 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.24438256 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.242401081 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.238546664 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.238466503 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243432589 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.244277873 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.239094875 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.237166634 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.236351174 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239106522 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238500039 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.237298197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238074348 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.241332828 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242156682 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.238487883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245027316 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.263771285 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238917391 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.239469404 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.240797294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236634789 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237128564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239739157 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.237273662 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244243008 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.262016567 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238992081 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241420551 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241868897 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.240665868 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241585524 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243168141 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241501871 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240001953 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.238062344 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240952046 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242338005 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.240977036 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.238647497 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.239832707 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.241157382 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.244329253 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.239004299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244297765 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244091241 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242064654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241616602 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244674111 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238812248 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238772662 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.241409429 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24165998 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.240489848 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.240099708 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.239009701 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24192323 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.23904363 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239765107 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244342923 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.248777275 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.245296068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.2403846 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.240615892 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.242598279 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.241703138 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240854686 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242287701 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243360479 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.241550674 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241982281 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243403231 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.243829762 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.244377499 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253367368 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.2635577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243135313 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244501518 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245594801 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.244286014 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.239765448 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.244375806 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.242736189 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.244248499 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.246963069 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.2413669 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249996985 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262014537 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241397311 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.243488522 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.243653873 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.247803895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.244596027 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246047999 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.242125158 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.246120292 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.253773696 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.24329037 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253358679 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268942539 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.259978884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.245244414 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.24816741 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2440277 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.242980295 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.244166847 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242963605 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.244740123 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244303317 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.244042957 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.245254255 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246546726 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.24876728 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.246284795 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.244950482 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.244144886 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.242897336 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.243490403 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245191793 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.243807805 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244047733 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.244130406 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.244992133 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244684896 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257170999 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.269303996 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.246648766 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.244594346 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.244374612 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247738051 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.247180227 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251847338 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252211571 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248015536 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.246110731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.248217686 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244990203 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.246786639 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.245518106 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.245678204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248142088 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.246429679 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.25823042 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271732379 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.251922571 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.244959382 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247560071 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.248816969 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249251572 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248027102 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246981524 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.246877299 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249736077 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250977498 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.24789597 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.24698325 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.249440618 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.251198931 seconds)
  done (took 736.764001292 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244239427 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246138779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.246024813 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244583898 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244749849 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249180649 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244501108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24530225 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.244679748 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244236377 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.242446839 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244689422 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245949099 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.246686803 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244878446 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24647621 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249025478 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249610662 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245326611 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245314955 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244181956 seconds)
  done (took 27.322166289 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.247402753 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.246409946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245444828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250704957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245305493 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248314396 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.246977072 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248682399 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248978303 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247051172 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250774513 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247698256 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.245339923 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248816731 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246882684 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250188422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250279989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248961393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.249246723 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246476409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251211696 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248847971 seconds)
  done (took 28.623794826 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.250791319 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248226723 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.247549428 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.247983719 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.250225616 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.247836463 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251373951 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.250735907 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.251348227 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.247230162 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.248738989 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.250362845 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.254734043 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.251577607 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.252471372 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.251185596 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.250283548 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.249152775 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.250571321 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.247234292 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.25611372 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.247065799 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.248982557 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.250672842 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252880003 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.252369707 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.248915337 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.248799499 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.251818185 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.254071613 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.251541351 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.249825805 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.250847669 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.248697483 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.251173673 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.255206317 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.251298681 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.24810345 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.251804312 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.260452827 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.270912899 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.251721669 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255879823 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.250263478 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.250818416 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.252131539 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.256109448 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.24652589 seconds)
  done (took 61.232750976 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.253723159 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.252413334 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.248970913 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.253750114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.253909675 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.253560032 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.254342189 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.252855371 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.248788345 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247643015 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.255292474 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.25173402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.250876267 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.256558826 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.256119564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.253735495 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.252979338 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250922476 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.251077365 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249789527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.251293778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.25535217 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.254707607 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.256101264 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252796073 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250336706 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252886319 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.254304893 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.253296873 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25081501 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256159413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258088697 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.257710839 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.253595825 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.251110663 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.254857797 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.254915873 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.252936576 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255446664 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.253146188 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.256527241 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.254423843 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.257922507 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.257699991 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.253833179 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.252022013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.255421241 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.253632484 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.253627812 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.254740678 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.255517638 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.254094194 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257344441 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.256309977 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.257059574 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.25847422 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.254947189 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.254453957 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.260820329 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254996616 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.253370297 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.256823068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251969666 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.257953562 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.258620017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.257824236 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.256522746 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260475506 seconds)
  done (took 86.469210562 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257044592 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.258071273 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25860631 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256750435 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257159145 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.260430916 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259600851 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261579166 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260639746 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.259290792 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258649795 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260222361 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.260045885 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.259176107 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260430868 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262164319 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258264095 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260094778 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260059138 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260034805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259557332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.259363779 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260068536 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258773571 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261053185 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260752812 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260619132 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.263415726 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260709319 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.26328413 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263342012 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.264074304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261002636 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263435341 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.26211398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.262867591 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263738542 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262157912 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.265265539 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.264398429 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263790246 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260281656 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260518677 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.26432412 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261217458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261355548 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264120447 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.261789723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.262979143 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265358721 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.264643289 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262564917 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.263090039 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257789052 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259568874 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.264754519 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262237742 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261377026 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254139473 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.253586318 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251628802 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.256582718 seconds)
  done (took 79.340575372 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250943138 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255129413 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.248067205 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.236471818 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239927145 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237726219 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.239850094 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.238744531 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239668943 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.241355274 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240509718 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230822515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231644707 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235211927 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230574899 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232663957 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230469773 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231713972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236013645 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225813275 seconds)
  done (took 25.920074668 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.224702017 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.22622076 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.225175127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224730374 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.22757109 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226259205 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221761047 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22216728 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220191376 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22146399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223167038 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222709478 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219881704 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220275708 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.221989463 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.219442041 seconds)
  done (took 20.709549108 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.219446745 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.223017215 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.223525486 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.224090651 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.218948423 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.22054854 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.222281685 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.221120187 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.219342237 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.221641544 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.223729819 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.223908185 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.222729132 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223391824 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.220457391 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.222589807 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.221133284 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.221306627 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.222910696 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.222719522 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.221407698 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.222215523 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.223764841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.224020785 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.219855983 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222076765 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.220662918 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.22094747 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.222634112 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.223894411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.22156058 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.223061348 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.221637157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.221911225 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.224940248 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.221531203 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.223769584 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.224592094 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.224064549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.225576405 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.225588245 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.223494367 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.224817639 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.22461668 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.222032493 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.225626399 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.223042868 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.223478056 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.223311882 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.221974357 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.225596274 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.226371463 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.225456155 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.224934943 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.225129955 seconds)
  done (took 68.397396368 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226065928 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226540209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223104552 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226547532 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.226076933 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.224385846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228439157 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226125033 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224482731 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226501729 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224390758 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.227365516 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224199781 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227998093 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223833405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226957349 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225107198 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.224819013 seconds)
  done (took 23.202351002 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226602381 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224606529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.228035188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22467936 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.225068189 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228912009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224243001 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.228142088 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228134889 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226072613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224864114 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.227594576 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228653694 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.228351512 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226997695 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225639918 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227780487 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228049937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225565629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226576177 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228481506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227955644 seconds)
  done (took 28.133807493 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.226776145 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.227549243 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.227155971 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.244521287 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.245075713 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.228379335 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.228914037 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.227076827 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.249181566 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.27508655 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.271394433 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.24378255 seconds)
  done (took 16.039216821 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226848322 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229240125 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.227255053 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229440068 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230373026 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226603505 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226912135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225907903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229739245 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227487172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227867904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228553351 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231562922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228375764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22987337 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230230792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229060484 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227998025 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227622207 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231194221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227584937 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229934951 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227778441 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228547317 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228954156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228239561 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231866967 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22917333 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228365042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232151263 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231428622 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230561484 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232145999 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229661824 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232496749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232089883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228654801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232021172 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23102776 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230280392 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231958774 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232225646 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231824834 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229961078 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231504579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229037894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229698931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229558561 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231064434 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232454155 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231517851 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229648062 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23276414 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233002716 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232280273 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233618042 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230560914 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230690361 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234132435 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230356336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229828448 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232635324 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230927164 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230989249 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2326099 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230544658 seconds)
  done (took 82.336110215 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230503999 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23065082 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230782939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231210735 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232964975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231796394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231475061 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232124207 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230736954 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231239954 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234193895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23200814 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231625126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232344983 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232203727 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232289052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232083368 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232730447 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232364608 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23429577 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231642996 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233360185 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232954033 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23215726 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231903764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235281134 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233668526 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232996858 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233149581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233785162 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23333567 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233525503 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232602647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.233472571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233611428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233625441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232726048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234732608 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233662161 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237357726 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233927577 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237361528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235315303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234429748 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235008083 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235150698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234529753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233995961 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234124108 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234083687 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235994705 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234054246 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234685561 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233804176 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234617664 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235185164 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234725976 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235640799 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234742603 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237736522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23359076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234864204 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237922157 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235224353 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235517967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236284349 seconds)
  done (took 82.571481587 seconds)
done (took 1715.365518714 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.398478769 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.35362068 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.237139633 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.246045108 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.235685012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.230180225 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.251399842 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236984317 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.236490447 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.236290068 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.236809418 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.424570205 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.231075057 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.236602273 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.236750252 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.332546848 seconds)
  done (took 25.512987528 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.262736274 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.244278545 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.349035804 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.26668623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.264388106 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.417005969 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.298807538 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.249701715 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.403235151 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.290528451 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.255938903 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.273476389 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.249413979 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.237564725 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.2719214 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.425187939 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.48374513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.242291455 seconds)
  done (took 27.639232586 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.653763745 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.25658112 seconds)
  done (took 5.065662521 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.261888162 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.243892778 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.245488001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.24325544 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.234940307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.241471355 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.243347691 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.241646862 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.244619817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.365511241 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.252775088 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.255267182 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.263476982 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.244136286 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.24256983 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.280917276 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.401108419 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.243500713 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.240699653 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.251641739 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.243547389 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.343926726 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.288894137 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.24893999 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358389148 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.256927563 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.253736331 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.25094303 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440765938 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.243254194 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.24377965 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.245024488 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.24650677 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.158315568 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.679277948 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.244085304 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.266923443 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.251044648 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.241619921 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.389056761 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.246084056 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.246996269 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.231932618 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.642946553 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.380865847 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.357287179 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.260503283 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.249054415 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.241948785 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.30111584 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.248189424 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.24255315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.284462187 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.020632255 seconds)
  done (took 80.256375485 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.240024423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.234778057 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.414250469 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.261019978 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233643636 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241848142 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.241692548 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.501869421 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.286652987 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.231808608 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.52623802 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.772873488 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.261318149 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.27883907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.084228318 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.293115902 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.229346025 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.245336903 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.236289532 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.233792699 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758153554 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243406058 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.234090401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.461752375 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.266811908 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.730858393 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.233677783 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.234668968 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.237186033 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.229144567 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.718655141 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.252047701 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.287918895 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.231685143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.496439446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.59355576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.551614486 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.228072383 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.249838612 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.230277903 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.23292973 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.708907358 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569895978 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.229929284 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.228726963 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.718348682 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.228632574 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.237638081 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.229666882 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.472189636 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.230708389 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.232804986 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.244327197 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.235820425 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.228687024 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.301957929 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.306550713 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728075387 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229088893 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.2287676 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.231369158 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.230851336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.235151574 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228832477 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.229482589 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.573222493 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.374962004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.238136357 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.57055753 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.711842346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.245086002 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.798294404 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.245066246 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.249533051 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.372835267 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.234735683 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.243672884 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720473522 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.265018213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.231748642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.553467532 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.235208075 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.514167673 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.249031019 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.230160512 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.772541632 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.235958475 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.319927158 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.231296376 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.245739107 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.230490872 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244791784 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.500404679 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.272810624 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.232881653 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.230750965 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.277338365 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.231405528 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.232108947 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.241300193 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782649247 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.265231513 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.23214558 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.233274268 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237802362 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.232309497 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.231822669 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.235293502 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494104431 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.23283613 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.238020295 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.233500976 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.233551361 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.250075976 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.460802151 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.236181702 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523650334 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.228949167 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.223448856 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.229628863 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.2248821 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.233709814 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.223179293 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.230383183 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.110936992 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.528607606 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.240470774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.238120201 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.224086984 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.222349507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.222076698 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223272452 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.257690063 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.225740096 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952615576 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.263927881 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.247103111 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.221757827 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.227944499 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.221884111 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.23066406 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.223219914 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.510240157 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.499529475 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.368793411 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.226263471 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.222882013 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954693583 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.293745753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.402172441 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.242392697 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.22331523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.470545772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.44192229 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.224719359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.223355273 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.224813943 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477977392 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.229268452 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.540011224 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.742215615 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.245897629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.227019843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957726253 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.94550425 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.228169623 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.229004378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.503710096 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.241158145 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.224927619 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.223954743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.22348105 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.225121294 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.228491769 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.233257273 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.224696935 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.225254178 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.345833518 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.417169361 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.245051178 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.234572981 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.72058598 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.241375854 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236879589 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.228869131 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.227076874 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.225692705 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.287972407 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.231796287 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.264580544 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.227827341 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.233851995 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776238654 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.229803685 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.228110647 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.41710575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88473152 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.247227587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.226672532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.24067547 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.128605217 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748468278 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.297561059 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.522522883 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.239226087 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.264748094 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.240019116 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.250237535 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.747113875 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.23385972 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.244818527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855823474 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.248990295 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.076616625 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.226444308 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.229795923 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80502452 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.247791418 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.234237073 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.225784914 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.227969149 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51662603 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.234645413 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.24815967 seconds)
  done (took 474.869328928 seconds)
done (took 614.493094899 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.227440026 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.229761313 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.222116793 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.23653939 seconds)
  done (took 10.063575672 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.238949067 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.236006154 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.246455657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.235263313 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.240299634 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.235626687 seconds)
  done (took 8.581294003 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.229426287 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.23276894 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.237500381 seconds)
  done (took 7.84916996 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.429474347 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.253522807 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.545744938 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.253442539 seconds)
  done (took 8.632372714 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.246571565 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.246585651 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.245967288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.239218751 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.242215649 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.24228031 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.239670744 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.241065487 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.240862419 seconds)
  done (took 12.334453762 seconds)
done (took 48.608091546 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.256969403 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.319111506 seconds)
    (3/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.793322837 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.243457884 seconds)
    (5/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.320914847 seconds)
    (6/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.022874377 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.61152469 seconds)
    (8/286) benchmarking ("sort", Int8, true)...
    done (took 2.247699071 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.637986835 seconds)
    (10/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.249052475 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.23195336 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.838968543 seconds)
    (13/286) benchmarking ("sort", Float64, true)...
    done (took 2.236508826 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.476595699 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.569656711 seconds)
    (16/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.275284172 seconds)
    (17/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.231888109 seconds)
    (18/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.253738607 seconds)
    (19/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.796740039 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.949069023 seconds)
    (21/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.273079907 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.231727784 seconds)
    (23/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.301984551 seconds)
    (24/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.219937394 seconds)
    (25/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.259581514 seconds)
    (26/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.316903876 seconds)
    (27/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.247710752 seconds)
    (28/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.233429088 seconds)
    (29/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.234098494 seconds)
    (30/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.237590304 seconds)
    (31/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.230843075 seconds)
    (32/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.225772114 seconds)
    (33/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.339380345 seconds)
    (34/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.2191534 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.030805941 seconds)
    (36/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.245737481 seconds)
    (37/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.254520792 seconds)
    (38/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.249646437 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.22839179 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.562143406 seconds)
    (41/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.589699201 seconds)
    (42/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.321751594 seconds)
    (43/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.359440033 seconds)
    (44/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.259140479 seconds)
    (45/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.260764913 seconds)
    (46/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.223020102 seconds)
    (47/286) benchmarking ("sort", Int64, true)...
    done (took 2.238457536 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.221669843 seconds)
    (49/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.347680796 seconds)
    (50/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.232973706 seconds)
    (51/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.569117725 seconds)
    (52/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.132439174 seconds)
    (53/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.304463731 seconds)
    (54/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.222818016 seconds)
    (55/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.224171184 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.336630023 seconds)
    (57/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.227365184 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.050186645 seconds)
    (59/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.283689917 seconds)
    (60/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.235945595 seconds)
    (61/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.036429965 seconds)
    (62/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.227478315 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.254108735 seconds)
    (64/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243851936 seconds)
    (65/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.432228396 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.222938192 seconds)
    (67/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.497478839 seconds)
    (68/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.462487467 seconds)
    (69/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.320543258 seconds)
    (70/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.237259526 seconds)
    (71/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.223924569 seconds)
    (72/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.236507618 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130501381 seconds)
    (74/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.263016414 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.235992495 seconds)
    (76/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.295482076 seconds)
    (77/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.262350176 seconds)
    (78/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.130956627 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.224977882 seconds)
    (80/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.239918065 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.253683135 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.244198262 seconds)
    (83/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.238458583 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.303432857 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.243716501 seconds)
    (86/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.246880482 seconds)
    (87/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.243979726 seconds)
    (88/286) benchmarking ("sort", Float64, false)...
    done (took 2.250073574 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.325325241 seconds)
    (90/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.237306752 seconds)
    (91/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26768404 seconds)
    (92/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.224779087 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.23253392 seconds)
    (94/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.580396594 seconds)
    (95/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.271412715 seconds)
    (96/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.35342846 seconds)
    (97/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.226027932 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.85049873 seconds)
    (99/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.444383441 seconds)
    (100/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.251895559 seconds)
    (101/286) benchmarking ("sort", Int64, false)...
    done (took 2.238244195 seconds)
    (102/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.962595752 seconds)
    (103/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.008049698 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.308142483 seconds)
    (105/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.238650001 seconds)
    (106/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.320891302 seconds)
    (107/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.007992623 seconds)
    (108/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.22584629 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.237816649 seconds)
    (110/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.247923972 seconds)
    (111/286) benchmarking ("sort", Float32, true)...
    done (took 2.239143863 seconds)
    (112/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.229999083 seconds)
    (113/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.24585705 seconds)
    (114/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.368732443 seconds)
    (115/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.264256662 seconds)
    (116/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.239072282 seconds)
    (117/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.758251208 seconds)
    (118/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.232178855 seconds)
    (119/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.333115331 seconds)
    (120/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.225357687 seconds)
    (121/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.80788564 seconds)
    (122/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.24070923 seconds)
    (123/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.244667881 seconds)
    (124/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.499350065 seconds)
    (125/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.324562854 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.623037601 seconds)
    (127/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.469975838 seconds)
    (128/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.070453473 seconds)
    (129/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.303501574 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.238712828 seconds)
    (131/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.231974919 seconds)
    (132/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.361122662 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.227304053 seconds)
    (134/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.266009565 seconds)
    (135/286) benchmarking ("sort", Bool, false)...
    done (took 1.775395264 seconds)
    (136/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.26874287 seconds)
    (137/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.512236372 seconds)
    (138/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.237774821 seconds)
    (139/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.234720507 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.97116582 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.505161463 seconds)
    (142/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.24139966 seconds)
    (143/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.361664188 seconds)
    (144/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.351677929 seconds)
    (145/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.228205987 seconds)
    (146/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.233487323 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.360320541 seconds)
    (148/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.24100205 seconds)
    (149/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.640429395 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.631276521 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.254727725 seconds)
    (152/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.230694784 seconds)
    (153/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.583244245 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.244671996 seconds)
    (155/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.228875823 seconds)
    (156/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.815406128 seconds)
    (157/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.234450396 seconds)
    (158/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.23409101 seconds)
    (159/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.02744354 seconds)
    (160/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.271536461 seconds)
    (161/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.229209099 seconds)
    (162/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.690229647 seconds)
    (163/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.996252723 seconds)
    (164/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.331924814 seconds)
    (165/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.242787111 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.383901338 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.229447219 seconds)
    (168/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.267877026 seconds)
    (169/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.233686711 seconds)
    (170/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.23640219 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.194780577 seconds)
    (172/286) benchmarking ("sort", Float32, false)...
    done (took 2.242541177 seconds)
    (173/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.213305985 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.284265267 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.121508814 seconds)
    (176/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.245518502 seconds)
    (177/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.274123929 seconds)
    (178/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.247314392 seconds)
    (179/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.610435547 seconds)
    (180/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.965112984 seconds)
    (181/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.095405997 seconds)
    (182/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.234873202 seconds)
    (183/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.831146469 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.422187775 seconds)
    (185/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.242431221 seconds)
    (186/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.363156288 seconds)
    (187/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.251624902 seconds)
    (188/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.27638556 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.231097182 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.980354204 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.291571871 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.557010725 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.286420759 seconds)
    (194/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.246581979 seconds)
    (195/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.359773701 seconds)
    (196/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.23097649 seconds)
    (197/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.236863618 seconds)
    (198/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.265725543 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.277111385 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 2.242637926 seconds)
    (201/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.319221553 seconds)
    (202/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.270140816 seconds)
    (203/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.325992291 seconds)
    (204/286) benchmarking ("sort", BigInt, false)...
    done (took 2.243877698 seconds)
    (205/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.254330092 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.723608083 seconds)
    (207/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.235463544 seconds)
    (208/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.261173365 seconds)
    (209/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.98123355 seconds)
    (210/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.180927383 seconds)
    (211/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.268606866 seconds)
    (212/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.405654301 seconds)
    (213/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.45636219 seconds)
    (214/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.292041094 seconds)
    (215/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.250306648 seconds)
    (216/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.260410548 seconds)
    (217/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.232967864 seconds)
    (218/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.260146145 seconds)
    (219/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.239714224 seconds)
    (220/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.237207888 seconds)
    (221/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.426842252 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.269756404 seconds)
    (223/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.263929058 seconds)
    (224/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.233570731 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.258431742 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.292534772 seconds)
    (227/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.233452096 seconds)
    (228/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.243055253 seconds)
    (229/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.247616227 seconds)
    (230/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.513103549 seconds)
    (231/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.842905995 seconds)
    (232/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.253211948 seconds)
    (233/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.277153211 seconds)
    (234/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.809522525 seconds)
    (235/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.241335927 seconds)
    (236/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.270138484 seconds)
    (237/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.245047483 seconds)
    (238/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.442161413 seconds)
    (239/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.273520367 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.448674859 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.003158509 seconds)
    (242/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.089649239 seconds)
    (243/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.841486718 seconds)
    (244/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.43914082 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.27409946 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.372280078 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.638727394 seconds)
    (248/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.407730905 seconds)
    (249/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.248306007 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.266603811 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.247776932 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.252707611 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.063037126 seconds)
    (254/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.256337289 seconds)
    (255/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.3315602 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.12661878 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.127765981 seconds)
    (258/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.239936583 seconds)
    (259/286) benchmarking ("sort", Int8, false)...
    done (took 2.250765228 seconds)
    (260/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.248979478 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.381457209 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.33644311 seconds)
    (263/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.238497095 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.424293066 seconds)
    (265/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.257179236 seconds)
    (266/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.14064605 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.254714825 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.792286677 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.251443933 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.250849472 seconds)
    (271/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.236332047 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.290793718 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.252040706 seconds)
    (274/286) benchmarking ("sort", BigInt, true)...
    done (took 2.255789306 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.236642051 seconds)
    (276/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.272441474 seconds)
    (277/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.236937915 seconds)
    (278/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.361718556 seconds)
    (279/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.073833196 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.259294867 seconds)
    (281/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566982052 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.273872502 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.056729156 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.243288861 seconds)
    (285/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.265472374 seconds)
    (286/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.258415884 seconds)
  done (took 539.897293452 seconds)
done (took 541.047092979 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.294773765 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305811831 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.260057303 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.293206394 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.375859649 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.436455139 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.2709222 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.298891237 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.308995376 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.309465492 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.265415385 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.43747023 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.263078528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261282331 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.261258556 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.301153788 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.254402233 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.261687228 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.277462875 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.295548956 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.277835752 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.266900145 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.311160326 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.436644955 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.265548074 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.264487391 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.266389866 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.285517803 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.376785974 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.265515191 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.2645833 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.272946592 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.253481509 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.267551682 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.256760927 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.286524061 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.272681317 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.272778299 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.296865837 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.377636853 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.256065981 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.27007226 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.264176793 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.265015154 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.263682022 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.302311766 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.265356073 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.321508071 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.306711894 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.307414582 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.261315842 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.277540103 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.272589422 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.265237114 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.273609583 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.265216465 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.322147051 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309360762 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.284430117 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.310193783 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.265347066 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.267633756 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.303460974 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.28185844 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.275710563 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.254722192 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.280280675 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.305748286 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.256894641 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.26795969 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.254112741 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.292290083 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.265692641 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.279018457 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.300986225 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.258415322 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.258774247 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.26365693 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.275365802 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.263639282 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.312734036 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306349487 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.315765794 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.265343422 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307085122 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.441199907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.275993627 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.266228426 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.300041681 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.284212826 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.27543402 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.276519053 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.30187312 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.267486946 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.314233928 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.322844862 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.27513176 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.275058234 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.317412538 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.277543593 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.258603269 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312421443 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.263750236 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.263445842 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266026757 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.387937608 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.259651954 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.267587089 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.300336032 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.314963187 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327587695 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.270215927 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.276855352 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311643513 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.276355568 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.327790127 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.270022264 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.258250929 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.286741764 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.391120047 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.272162705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.27625169 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314578413 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.328663083 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.267202212 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.263979291 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.268931813 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309416974 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.388909461 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.279305803 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383310618 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267664346 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.271180467 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.302936743 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313615057 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.304407562 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329468618 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314408972 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285566215 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.270315836 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.278852121 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.280445309 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.271142891 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.326331202 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.267002338 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.303421789 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311042729 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311921473 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.302442276 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.390060472 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273306187 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.259506994 seconds)
done (took 213.63881445 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.3296648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266028171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.37649555 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.26744218 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.367186571 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.368171961 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264201399 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.265017323 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264471161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.643612709 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.265511831 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264983731 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.265225315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.265911525 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.351520162 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.269630341 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.264055703 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.604700907 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.268156538 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.338334946 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.268069743 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.266756213 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268378385 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.647362439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.265830193 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.263443459 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.337382283 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.267958937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.614388437 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.263686484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.265322698 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.612564285 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.35850457 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.285480703 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.277298168 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.27606202 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.368639852 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.286433342 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.349318421 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.349496796 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.378093468 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.307819805 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.263472334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.267839096 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.270643658 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.270287164 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.266944534 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.297146854 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.26891173 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.267310407 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.608440685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.279627756 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.277101766 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.267289056 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.26710444 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.288955336 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.267405511 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.270426827 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.359651117 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.270378456 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.332470662 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.649818546 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.644509646 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.27142682 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.266854953 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.268697614 seconds)
  done (took 100.090134724 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.336860992 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.344484381 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.380538755 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.272313003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321050907 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.383986255 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.274897844 seconds)
  done (took 10.493459649 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.276865926 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27233093 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.321790422 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322036756 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.272419209 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.487534445 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272805482 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.28300491 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.270225863 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.350337218 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.283334905 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.273663149 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.278823945 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.270512437 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.320396724 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.283946735 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.38895439 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.272709925 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.272745583 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.425738569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269600773 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.279799634 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.354771442 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.283606939 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283850039 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.282575464 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.229094031 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273629985 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271946183 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.273742489 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27101206 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.38083826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274811482 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.273603102 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27335572 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434248777 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.274327614 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271318886 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.275394669 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.27423171 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.274361669 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.27535692 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.275525877 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.272252543 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.273530548 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.298105591 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.275749738 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.273478046 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.273751216 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.275304817 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.351921579 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276448223 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.272473497 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.272228496 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.352696996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282603466 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.275953553 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.272355555 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.27578238 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.273951946 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428277032 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32392719 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.274453995 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322656851 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.276556175 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.2766352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.275486504 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.276198387 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367971508 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.27587857 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323846791 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.273132872 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.500649243 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.30040292 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.27956162 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.278956214 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.280586499 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277107313 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.275666802 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.285631781 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273416221 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.277719974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.282391587 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.27522479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274452268 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459756244 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435283688 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.275208668 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289081868 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.283749024 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.275457925 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.352355129 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.277992299 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.274900945 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329402947 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391930735 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.357599046 seconds)
  done (took 132.423047643 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.282099644 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.284893253 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.281799162 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.301275003 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.27955072 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.277635059 seconds)
  done (took 8.893693057 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.2798496 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.278823513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.278053983 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.279625241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.277727359 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.288408161 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.288636419 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280352151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.281712715 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.278351057 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.288747934 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.280626964 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.282665857 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.279888052 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289253508 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.280757959 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.2906791 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.276714032 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.280873805 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280027877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.277830224 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.279291494 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.278459334 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.281101318 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.291946337 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.279891353 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.287535437 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.280439186 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.280866347 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.284455442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.29901833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.291410135 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28255252 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.285234843 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.294460969 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.282990476 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285192654 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.283884994 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.27789 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.291829972 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.283721886 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.281556154 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.282783747 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.283279618 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.283369668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286085692 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.285714725 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.291084035 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.291068702 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.284643409 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.284173043 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.282699462 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.29185568 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.283549362 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.285106067 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.302717055 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.287522341 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.293077566 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.283809098 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.284291355 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.284436714 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.293243278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285098855 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.296435165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.281028569 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.283813187 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.285001303 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.286042509 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284659519 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.28487007 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.285384418 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.282207849 seconds)
  done (took 94.692201701 seconds)
done (took 347.769119915 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.699743604 seconds)
  done (took 3.892770593 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.37946276 seconds)
  done (took 3.575767923 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.934192303 seconds)
  done (took 22.137369742 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.331763801 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.307045932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.303261118 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.284163213 seconds)
  done (took 10.422190586 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.518235597 seconds)
  done (took 3.712530371 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.288641262 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.283590777 seconds)
  done (took 5.769941049 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.539374717 seconds)
  done (took 3.735361404 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.592474371 seconds)
  done (took 3.797272156 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.301126604 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.295843694 seconds)
  done (took 5.801414148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.267569893 seconds)
  done (took 3.463504939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.859188041 seconds)
  done (took 17.055868412 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.284049371 seconds)
  done (took 3.48507773 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.314077621 seconds)
  done (took 3.510621876 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.760295228 seconds)
  done (took 5.956198583 seconds)
done (took 97.508333701 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.283786322 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.290349855 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.286409005 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.288052131 seconds)
  done (took 10.344446018 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.322261294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.321773935 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.323550945 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.332679111 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.325616795 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.322697259 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.316762832 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.315167865 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.332792062 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.325142343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.323093774 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.325502271 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.322551835 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.314604055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.325179387 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.323027273 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.334072917 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.324336132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.314695401 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.325984875 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.290560905 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33466851 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.325481151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.291570364 seconds)
  done (took 32.913562276 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.784544179 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.361554189 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.443789921 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.342211292 seconds)
  done (took 7.131062302 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.358173128 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.359152874 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.367729439 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.406495632 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.432359451 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.386387736 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.317472571 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.311589637 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.297474711 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.360246067 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.419241321 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.356035958 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.444362341 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.290732558 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562640365 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.291632347 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.290940179 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.369505567 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.407800437 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.420545291 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.29209298 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.368797731 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.369499364 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.356332168 seconds)
  done (took 34.035530881 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.291947278 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.309673897 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.290977291 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.289862211 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.298631563 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.291198524 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.291886406 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.291498704 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.290982485 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.804511655 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.296611078 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.305051539 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.790546803 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.298274833 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.299579984 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.29324288 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.803583738 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.797171649 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.2984086 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.299873424 seconds)
  done (took 29.13446355 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.285208044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.286789007 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.638080073 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.542339613 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.285515639 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.291627498 seconds)
  done (took 13.529690287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.364737056 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.509029357 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.3012773 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.640539929 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.724994393 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.297751287 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.297948409 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.539250746 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853785821 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836773814 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.353923927 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.368921616 seconds)
  done (took 19.291422182 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.289909283 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.292335449 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.305957657 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.31168869 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.345942607 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.303032839 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.302503465 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.286794832 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.35270582 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.360917186 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.303076111 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.351377432 seconds)
  done (took 21.009449659 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38380314 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289443349 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289590645 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32775679 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294808693 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133939079 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306348034 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026375946 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.317171139 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56434347 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289772101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39285182 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.546135942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29015215 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295267895 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.283689867 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526467735 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782851435 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298434056 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303039672 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330668715 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302304906 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307967496 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509420739 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299325924 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291640641 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.553847789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29299946 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573426931 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312232748 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304468731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2918279 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566755402 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945934459 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421013425 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501607438 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313035944 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316183567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.286958222 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.30841545 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311986392 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300314242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303911695 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293012021 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291724219 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300910962 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040844711 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.322464337 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.290168715 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.293555785 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546367028 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397567301 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.297427274 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293540229 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351525485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297158446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.296145831 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292492034 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878947699 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29341643 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326198232 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.300489179 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30986282 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332684112 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925333069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.305733193 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.298513709 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29954163 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294174842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306629983 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.31712803 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293771743 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.318525083 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293572544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989716413 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30395822 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302034005 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855733236 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303092289 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.302305701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526048867 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296431541 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296625236 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.294740571 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29677924 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00803199 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309663771 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.281679532 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320400596 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054712928 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532753422 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321396023 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327099196 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521676136 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.282084092 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296993034 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.296609465 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320096605 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318542029 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03718258 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319900743 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.298842714 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554373607 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.50737831 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295954022 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.310824597 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789951931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32766302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.317094112 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304517075 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511829134 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.880601895 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31780431 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29668005 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32074249 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.296061321 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041969546 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309745924 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.403294294 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299905406 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572305264 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.092970644 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304894003 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365439912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300348915 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.29852318 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.297544388 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320993923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296563005 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.500374416 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32170707 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.330530655 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.308186176 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298231267 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.304392046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312169363 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.304790131 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521547249 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304134878 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.580070959 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298139795 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297354551 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300067082 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.521837174 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.29576562 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.640838524 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562552162 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313443601 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317515051 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.315548285 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318489439 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406947176 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321579682 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.304485938 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561952236 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.30354692 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.303120213 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29928107 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305478241 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304913455 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.305719523 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310496487 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884794276 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284340365 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309012125 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189820679 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.315541036 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368569265 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307044942 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.513648127 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.304112277 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338797506 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.327799395 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.303418914 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533626122 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310832014 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.300367078 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403927646 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.786382174 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90399656 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320500005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.301336702 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.300017856 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.299830472 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30150819 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301040447 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303005827 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51339684 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32201687 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305257554 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890014048 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31120224 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303540391 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.329579716 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314330894 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.308808177 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302917498 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.299820741 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308966657 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314438694 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.319717468 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449139554 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.317090699 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302223254 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.819516334 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309800396 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304116938 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303221605 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338981896 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303476715 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204894329 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573040039 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33353797 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580500588 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311349785 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.345879439 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.301555387 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304251416 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316573318 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.332162244 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335306847 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.317056365 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303167031 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328088064 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879659514 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034850301 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845545239 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31204601 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.315390576 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312222514 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051925591 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330789512 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304779724 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.539919217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05397187 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331105369 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797125219 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.328581727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062583862 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566765121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544415189 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306995314 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.311580122 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570055277 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524879969 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341432857 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311292915 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312105953 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.292070485 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886289882 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33062922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389146081 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052346071 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330323052 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31332578 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.350473398 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32805565 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717889007 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331422477 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307230298 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312870806 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32135806 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195537984 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321249014 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307775107 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934887873 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326717848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.800274575 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333495046 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.521286971 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.324081167 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.313026474 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.31708575 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.319604527 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.569769569 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564569554 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316477787 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322040935 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85161342 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.183955626 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.315140578 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308614814 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060159591 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315619351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597946663 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.32878768 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.313678855 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31918936 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308123793 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309919414 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.306591525 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.313724839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286843572 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804835674 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.342610579 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346220327 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315163279 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333250615 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564899767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.324704986 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891001476 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547263275 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31934867 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33985538 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.313974297 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320019694 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.302831377 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311048318 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310887545 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372834208 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.539381165 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325970923 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.303098272 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3292616 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529097963 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310416349 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321580623 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558039508 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.314723899 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.320074467 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044234297 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350955334 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320245463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314035821 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33159963 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336187083 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390048551 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526605173 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.329609537 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.32273973 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717344497 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349161095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320317521 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.327372088 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407913363 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312107137 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.325368907 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.093581707 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899666757 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054297006 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907347087 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577616001 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322097019 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315062128 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312398418 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476720495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313659282 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587326214 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314515876 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.312088175 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341976085 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324805181 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3211815 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53143262 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588976528 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313935599 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314242365 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320416162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.313620965 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324894958 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.52574505 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816540016 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888435204 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32346571 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315235911 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.069261547 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613275513 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315483254 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315115816 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315441399 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.317329296 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321897979 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.327213895 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315645562 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464986775 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572161466 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98770553 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.350684294 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.343236975 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.089768638 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315155371 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577118581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315144636 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.535767958 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911324816 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022345446 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588855561 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388018585 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531946531 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.323106497 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480675393 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.314036035 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323595061 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316189875 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316543457 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.31489904 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.328221826 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907849562 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589099302 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.321999091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.314001774 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35400981 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.328496789 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54070439 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04442742 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5474075 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328226288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322773369 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31844811 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912302573 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58869037 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326356358 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.322331101 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558997019 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324671983 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343753806 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.770647623 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.315538215 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883816521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.298235748 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340524868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322439667 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025229859 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915492392 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.331679167 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828233144 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327465859 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32445474 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60015465 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.324924337 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323844409 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603137561 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.323633329 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332591261 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542183442 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.914548437 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086761103 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.325196707 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32930334 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.329684487 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319773361 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350096987 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327383945 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327460593 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.743040272 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345753773 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322681642 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333760915 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.318625353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331793298 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.325469308 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320905871 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.327851007 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.329709763 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.327950245 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327723042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325553942 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914639326 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351836678 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.99005449 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.64825155 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577391467 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322546298 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.329843528 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.32544641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322025559 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322548621 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323546436 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327468857 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890636035 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.34543181 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.34022566 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326091575 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.538999281 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534600515 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338402106 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541254776 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34120904 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343546374 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.310389928 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323907561 seconds)
  done (took 948.671992325 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.342968943 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.343692448 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.373719186 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.352126189 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.357247859 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.36552244 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.404286259 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.336322807 seconds)
  done (took 20.111265485 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.324631211 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.33371431 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.329223474 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.33976575 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.333351264 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.800443009 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.35564863 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.333330299 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.334228567 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.333075777 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.333106448 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.014301034 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.357601284 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.333685759 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.33235341 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.3340029 seconds)
  done (took 31.767125708 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.272369112 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.460465607 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.226065457 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.365963778 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.370436677 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.326989693 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.554814325 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.341725605 seconds)
  done (took 26.157086984 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.335828263 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.338104533 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.336324647 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.336189318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.337237967 seconds)
  done (took 7.922053733 seconds)
done (took 1203.21733697 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.330129926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.332536709 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.330447089 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.331217806 seconds)
  done (took 6.561812909 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.313318627 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.314491695 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.316122414 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.32670086 seconds)
  done (took 9.50737764 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.030734809 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.969502018 seconds)
  done (took 5.238143688 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.328701386 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.090431055 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.065127538 seconds)
  done (took 7.723618016 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.628795404 seconds)
  done (took 2.868241226 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.748506226 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.703651962 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.524911739 seconds)
  done (took 6.21644749 seconds)
done (took 39.352740281 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.338430047 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.57692176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.487585059 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336271101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490281115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.488098909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.061328783 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.328107248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.328910323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.327464705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.337880076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.494231644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.058026433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.580759158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.052006716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.579031416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.489219864 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.331427727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.328404819 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361024881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.06641339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.32853656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334194475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.336488936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.492536886 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.47720718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.344422893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.578668747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.329296307 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.331708585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477876423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.329372508 seconds)
  done (took 81.042783345 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3322859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.350162234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.347458151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.340324885 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.334753168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.345020595 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.33207136 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.337736429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.330025001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.330078436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360507399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.329909107 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.332518596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.329145008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.346436998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.329525317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.358409084 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.334870793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.329927449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330719661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.332174879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.344856608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.331710778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.330403151 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.333364166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.334254056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.352100902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.332272621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.347684739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.335114927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.337022882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.36207803 seconds)
  done (took 76.077502375 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.33724507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.331569027 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.354164624 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.332109617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.351928449 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.3361669 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.334520237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.332707284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.348553134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.338818861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.349799283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.354031436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.334781719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.332908505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336400541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.334160996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.333678766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.347302794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.33316492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.333717909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.353467332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.331937653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334791153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.334720828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332854587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.354605716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.336083416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334076873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334007692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356358402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.33749027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.333028022 seconds)
  done (took 76.104925144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616310158 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.340587226 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.34162432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.334475747 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.34200585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.342094707 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.335788754 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.614729102 seconds)
  done (took 14.512720719 seconds)
done (took 248.976057017 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.334122426 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.340412628 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.564352211 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.367600295 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.335791239 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.36888804 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.36281294 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.560188421 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.326110368 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.585600881 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.355971726 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.359230499 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.338905084 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.36008454 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.617445922 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.493227739 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.225795861 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.324328214 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.681527977 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.365338142 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.609083119 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.340778006 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.610382322 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.295633446 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.35577092 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.335772799 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.34347436 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.215468957 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.378888064 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.687948933 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.34476704 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.33885556 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.421509767 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.444339971 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.552752624 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.496826227 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.339872836 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.421875613 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.564728743 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.347316508 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.336761687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.128764081 seconds)
  done (took 81.425676427 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.343633727 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.466151859 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.343552603 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.345972293 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.344324142 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.464607538 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.440028235 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.344471241 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.344123985 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.344811961 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.344874902 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.344710933 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.345340602 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.344842649 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.345321524 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.34476596 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.344807637 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.358642187 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.356952352 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.391514309 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.468757149 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.37188026 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.34031555 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.346077063 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.449342397 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.485292257 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.346136083 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.340031842 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.388536698 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.348658955 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.350131515 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.393060004 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.347201721 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.347446974 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.462843693 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.448146701 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.358758439 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.345431266 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.463389838 seconds)
  done (took 54.953525177 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.348701396 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60330527 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.778883358 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.35476611 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.347216606 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.352341788 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.426062925 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.349580131 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.352355539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.356311869 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.523156565 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.352662413 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384469431 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.80526083 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.357720008 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.349203382 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.350823794 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.350813685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.614147781 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.357877947 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.446737527 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.350119931 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.427458488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.365189722 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.373414787 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350536933 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.355360919 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.918191978 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.357443185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.520578671 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.13155518 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.430362604 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.866576171 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.793794001 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.140281222 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.35777534 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.352222542 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.524837156 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.353439316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.350536637 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.429393819 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.35495172 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.79025008 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.021580227 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.375541277 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.35739125 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.94196089 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.528008411 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.591425306 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366938386 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.814700676 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.360141442 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.353462295 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353556883 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.591497055 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.360616382 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.351548604 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.929577591 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.374558098 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.428719043 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.354323634 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.35364357 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.615457362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.35396002 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.602149452 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.355052591 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.360821515 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37413606 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.796389157 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.357043187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.038844917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.375087416 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.353441966 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.52056958 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.604675762 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.974719559 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.358239109 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.618867888 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88034316 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.431986638 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.358697727 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.939658856 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.431351983 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.358552277 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.356463473 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.355805829 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.354403775 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.404220657 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.428046132 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.983533187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.020146691 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.954962741 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451717762 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.368797285 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.355236807 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.930028916 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.372601414 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.353875508 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.788989011 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.034503158 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.378402554 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36247073 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.03701453 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.380938285 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.433702601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.364231771 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.804157179 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.36293329 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.40385371 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.35517161 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.362474004 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.379012553 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.431407976 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.36555768 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.35593421 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.996452482 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.558279407 seconds)
  done (took 179.026540911 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.348977064 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.365004217 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.350532819 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.366415608 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.349650334 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.357943495 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.348514077 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.349426345 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.355471645 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.349010681 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.351741288 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.352523961 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.350723673 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.349984191 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.361619782 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.357973717 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.350205391 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.3493211 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.351724524 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.351149675 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.348736 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.376007879 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.350519024 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.351079769 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.351132561 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.352828236 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.353248866 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.353519456 seconds)
  done (took 63.164435631 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.3574075 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.913166911 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.364537908 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.487277232 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.383488318 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.35497401 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.485547016 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.419594412 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.364722028 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.35562545 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.355652777 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.652646073 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.358805685 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.868840507 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.551251612 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.49197797 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.873366306 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.380883425 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.3560397 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.356581548 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.486936945 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.375031236 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656893953 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.925125809 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.364163517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.920315174 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.356149071 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.359862125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.359449377 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.921539893 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.362583718 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.660933324 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.441824214 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.419804245 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.929802148 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.871474367 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.881726782 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.507741043 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.365324721 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.358287843 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.357809585 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.350502529 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.91818967 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.364323116 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.362253064 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.917611837 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.383739827 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.361579624 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.366114016 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.359373767 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419389484 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.425192456 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.663059779 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.929160706 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.439067338 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.378768033 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489015945 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.716713757 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.3681802 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.867009094 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.350647743 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.928029209 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.386364919 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.352941575 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.361146805 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.365983641 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.509930319 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.497113409 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.875243671 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.382565124 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.869123656 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.52713953 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.366106838 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.361024945 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.36287694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.9280093 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.875620504 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.527453802 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.500713157 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.558317701 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.358536116 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.360789377 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.353670705 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.438270564 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.367319545 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.929558222 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.892131545 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.382503177 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363980971 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.362540305 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.363722824 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.538531144 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.936438732 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.446198444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.871758861 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.686729737 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.673684906 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.370459492 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.423857791 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.378941086 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.67216605 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.372519059 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.423807078 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.771251424 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.669726174 seconds)
  done (took 162.252809616 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.599229144 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.385992723 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.462248332 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.513794706 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.970325511 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.948990141 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.364302167 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51203882 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.478629811 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.626910242 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.374452075 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.45881116 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.577317858 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.446662127 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.06807276 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.433336438 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.459250769 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.508789546 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.510173695 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.361693345 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.026818734 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.679429044 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.549583929 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.380137763 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.472851965 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.149996703 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.948879679 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.898328059 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.549030815 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.364683054 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.920907463 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.36434843 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.336238703 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032486542 seconds)
  done (took 64.002762463 seconds)
done (took 606.070226136 seconds)
SAVING RESULT...
DONE!
