cset: moving following pidspec: 32573
cset: moving 1 userspace tasks to /user/child
cset: done
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/parameters.jl:8.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:5.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:89.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:136.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/trials.jl:181.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:5.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "immutable" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/groups.jl:141.
	From worker 2:	Use "struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/execution.jl:10.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/serialization.jl:5.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	
	From worker 2:	WARNING: deprecated syntax "type" at /home/nanosoldier/.julia/v0.7/BenchmarkTools/src/serialization.jl:16.
	From worker 2:	Use "mutable struct" instead.
	From worker 2:	WARNING: importing deprecated binding Compat.UTF8String into BaseBenchmarks.
LOADING SUITE...
loading group "string"...done (took 0.749071768 seconds)
loading group "linalg"...done (took 7.560307259 seconds)
loading group "parallel"...done (took 0.182628147 seconds)
loading group "tuple"...done (took 1.853545268 seconds)
loading group "dates"...done (took 1.227442225 seconds)
loading group "micro"...done (took 0.181092436 seconds)
loading group "io"...done (took 0.435572082 seconds)
loading group "scalar"...done (took 35.527645391 seconds)
loading group "sparse"...done (took 12.061834256 seconds)
loading group "broadcast"...done (took 1.066552339 seconds)
loading group "simd"...done (took 2.342734328 seconds)
loading group "random"...done (took 8.834418789 seconds)
loading group "problem"...done (took 1.823136451 seconds)
loading group "array"...done (took 18.812308941 seconds)
loading group "misc"...done (took 0.945326237 seconds)
loading group "sort"...done (took 3.271968894 seconds)
loading group "nullable"...done (took 5.745377983 seconds)
loading group "shootout"...done (took 0.773020238 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.833333318 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.149621539 seconds)
    (2/2) benchmarking "String"...
    done (took 0.155285646 seconds)
  done (took 1.16192876 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.118137296 seconds)
    (2/2) benchmarking "String"...
    done (took 0.121505746 seconds)
  done (took 1.076562255 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.111540512 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140512167 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111045202 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111085735 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113256689 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109792062 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109220092 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.123934288 seconds)
  done (took 1.653168666 seconds)
done (took 5.733692485 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.410373716 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.965792715 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.574102157 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.171705656 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.298424397 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.2448482 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.247300043 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.237975078 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119742387 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.108708766 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.185817391 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.456233964 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.347828606 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.861303311 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.108419665 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127508743 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.147014763 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.876968097 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.110659853 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.1441112 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431846269 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.167943486 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.132957605 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144942946 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.2281445 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.145443749 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176681195 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111444632 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.799487576 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139940319 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.222128371 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.112939185 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173964247 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.177109496 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207503863 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.130934435 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.786315405 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.221933348 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.158987781 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.120486703 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.809304449 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121504445 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.191457449 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.123128483 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.095389876 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.191942749 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115403034 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.121743213 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.132475295 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.112357949 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205617161 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.54493692 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.139972269 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.180621375 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.141092957 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.780386434 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.133608593 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.291440959 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.157753339 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.136233061 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.10966763 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.108600525 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.196394839 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.1143633 seconds)
  done (took 21.659113239 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.173278032 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.160040401 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.109530133 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165482508 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148149827 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.113384371 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.11649014 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.111082057 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125988021 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.168751619 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12387864 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.190867632 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.111274413 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.142825792 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.150098671 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253206453 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120022927 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126332474 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.121338854 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.120003373 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141945209 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117308714 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.129722107 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.117972719 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173570084 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.235607101 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.148141653 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.156641343 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.122114788 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112907836 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.157209049 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161435971 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123332694 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.123440677 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162197687 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.138894095 seconds)
  done (took 6.04517957 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195814972 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.137689974 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.193345843 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180401239 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138926635 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163885006 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.167663661 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.271509952 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.194093793 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.455337815 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189168439 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145029552 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.153428263 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.135997007 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107869273 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.115681139 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.168271603 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.126358884 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.162289134 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165005789 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148286484 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.152427611 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146570263 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.11403673 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.763104095 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112632602 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.108459938 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11045156 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.098437186 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.180130672 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125087928 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.771936271 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115706946 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.094794346 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.159440867 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.222804827 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114437155 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.162158471 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113331663 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.111766711 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.110238154 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112668749 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110149791 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.891470198 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.12217504 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129623173 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144164844 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.154273611 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.124621404 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109448929 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220785556 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.110238348 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102081164 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.891917754 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199430841 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.16907707 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107154244 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241694931 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128825206 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112808767 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129047444 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109300832 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193001943 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110184739 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.110502634 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.108642709 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109882197 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.108247327 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107868206 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.485790852 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.11159737 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11144218 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.111278672 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.723280952 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120160667 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114999813 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.130260489 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.10755725 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10736671 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10894407 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.1271858 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.112938509 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113171288 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110739333 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.109055295 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184961899 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108061639 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128648679 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13638378 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.111673902 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.124249054 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140700909 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.1084 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.109836749 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184532049 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095867486 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116095986 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126551765 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.157419903 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.109660762 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20679139 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.115161069 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.13223067 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.121691743 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142351863 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107450465 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107988534 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12433869 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.108992 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111752589 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.173563417 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.108503464 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.108516338 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.109522724 seconds)
  done (took 25.358953032 seconds)
done (took 53.897062919 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.361931931 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093234847 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096864891 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09618592 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096451079 seconds)
  done (took 1.637335809 seconds)
done (took 2.521575475 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.488473605 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.743358547 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.170396036 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.214986983 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.248709709 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214651241 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27047326 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.172421012 seconds)
  done (took 4.47067035 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.148828782 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.124534355 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.157402658 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.123797661 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.124758684 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.142547199 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.127354967 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.126208206 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.123687073 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.122296478 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.129487873 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.123962302 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.144326824 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.123566144 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.122333234 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.122408191 seconds)
  done (took 3.012308576 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.156796166 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140912108 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123860039 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.12489614 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.121207721 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.124221606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143252211 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.122677408 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.122308498 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.121682601 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.126260618 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.121585563 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.124577014 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.136233535 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.123782557 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.144375185 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.121818346 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.125374275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.139737437 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123636375 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.139791399 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.123883275 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.125314665 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.125533777 seconds)
  done (took 4.038619273 seconds)
done (took 12.412759244 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.141532724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112398641 seconds)
  done (took 1.136476878 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163423913 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.16255767 seconds)
  done (took 1.220416962 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.144055168 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.12305388 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127759078 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123694219 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.120765055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.122866663 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.141441479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.121865935 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.122026483 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.123411755 seconds)
  done (took 2.193407508 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.123640907 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.119650009 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119012915 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154478748 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.123536452 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.140239566 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.123700215 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.120180831 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.121334903 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.11721561 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.117300219 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127070447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.117604976 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.143108931 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.121768201 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118934856 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.121866458 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.117634602 seconds)
  done (took 3.14901718 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.119307731 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.122415626 seconds)
  done (took 1.138548872 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.121994681 seconds)
    (2/7) benchmarking "second"...
    done (took 0.118772452 seconds)
    (3/7) benchmarking "month"...
    done (took 0.116922394 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116566621 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.117583829 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.120424891 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.120836293 seconds)
  done (took 1.729544934 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.453330144 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.292072169 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358007356 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117930471 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120458275 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349781325 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.117968262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.118160158 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.129170943 seconds)
  done (took 2.975262287 seconds)
done (took 14.438007975 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.119709817 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.168031043 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.584933334 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.157514211 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.123511482 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.175834759 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.21633244 seconds)
done (took 2.454435908 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.30730744 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158803095 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.157687119 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.166124812 seconds)
  done (took 1.67706556 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.113375959 seconds)
    (2/2) benchmarking "read"...
    done (took 0.122696986 seconds)
  done (took 1.140202202 seconds)
done (took 3.722756931 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.118903803 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.120496838 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11714182 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.118873735 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.117338097 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116606706 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.117650289 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.133909945 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.116954369 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.118271747 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117895016 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.119051991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.120826765 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.119944474 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136209557 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.117936061 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.116552439 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116902634 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121162601 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.120957781 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117617126 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117963437 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.135893629 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117325334 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.12043671 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117145599 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.117831481 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.118711219 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11845887 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.133539439 seconds)
  done (took 4.52309117 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.122491488 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.116330992 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.120655444 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.126833802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.120510996 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.120578676 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.114658845 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.137806397 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.118567876 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.12128127 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.126694662 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.11810872 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.119328916 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.117813754 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.139655537 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.120579998 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.123902983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.117994909 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.117288905 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.118360056 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.118956866 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.134672053 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.118676247 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.119651567 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.121500167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.118627433 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.11994284 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.11817747 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.117645377 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.134018575 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.12143303 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.123309545 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.118462073 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122821427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117900367 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.120194032 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.135382332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.115603169 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.119407703 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.115622298 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.115325101 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.117446643 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.117940202 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.13439013 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.120748694 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.121745659 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.120685528 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.121410518 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.118638841 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.119100937 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.119092898 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.137429996 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.124028709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.118323192 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.121953712 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.117608625 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.118448493 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.115526863 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.135207853 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.119866635 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.117754906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.115201038 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118431703 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.118578972 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12225544 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.138280422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.122921463 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.12201861 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.120880314 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.117666957 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.118744956 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121357906 seconds)
  done (took 9.685485339 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19170766 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.124186382 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147618562 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12233526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.121385704 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.136578783 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.117700237 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119836713 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118680397 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117742519 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117399534 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116927211 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.135724259 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120948182 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117989426 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123501571 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121737149 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122185753 seconds)
  done (took 3.213875641 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127068527 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117712892 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127416339 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121666372 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.121587488 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11652986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.122138248 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.134413718 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.1198276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.117756797 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.117829125 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.117831933 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11940032 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117889868 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.134887868 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118813427 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120278924 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117838085 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121669498 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.121810259 seconds)
  done (took 3.357564542 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179196262 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130635805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130653864 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130354471 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133067702 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.154714008 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130433125 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.135257989 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130606398 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131511719 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131103209 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131446863 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.147739843 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130760471 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131965098 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130774402 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131752154 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134280511 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.148270638 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134904484 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134526951 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134063479 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130138218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130331197 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130364756 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151816517 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13578339 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133244204 seconds)
  done (took 4.743819331 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.124803874 seconds)
    (2/2) benchmarking "in"...
    done (took 0.120441734 seconds)
  done (took 1.165522772 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.161763585 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164211936 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.119965095 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12868678 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.181468259 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.153729989 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144679847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.121771406 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.133375526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.148758489 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159014155 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.111360213 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11723607 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128769117 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.114287295 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115668436 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.122398307 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.130283273 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.127097503 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.119219052 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.138629777 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116024154 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113119762 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.123077239 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.114381607 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.120633939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116237239 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.140583 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111566202 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.116225719 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113924164 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.12544282 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.123831511 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.123114393 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.136150699 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16569869 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114574558 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11499093 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.127125943 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122035939 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.140509137 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.119087564 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113335134 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.114181754 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115550206 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.120648505 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.120548375 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.13577206 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.110491323 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.11133676 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.121778626 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11074462 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.122355012 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115595908 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.132208852 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115313715 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.120136577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.11077707 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.115316998 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.119145718 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.116726998 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110493885 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.129729224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.120875996 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114144635 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.114446805 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113912051 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.117862005 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.119111494 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.135913378 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.115790124 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133814086 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113818959 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.124635898 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123802149 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.122242508 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128347954 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12153176 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11328405 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115738819 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.126802866 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125443948 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112730571 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128171796 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.111082872 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.124766449 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.119407192 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.120389612 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.108734437 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115581057 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.136611802 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.120972022 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.109197852 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112725273 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.117283975 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.122972557 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.112319647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.131812111 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.119584925 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.121984392 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124322143 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118256853 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116132577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121715582 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.140248838 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114000969 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152308181 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112259311 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.113549669 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.120685011 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120986085 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.131823389 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.117924603 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.119817975 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112503911 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.115280603 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.123435423 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11527738 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.136857243 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.120862815 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113751638 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11649886 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.127028692 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.120926298 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.111284833 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.138017255 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122614494 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113140182 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120076787 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.118921269 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.118787215 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.111924739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.120594641 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.134589633 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122604226 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111251653 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.123096563 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.122118284 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.124398488 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11197431 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.129106814 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111910476 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116571427 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.119091957 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.123355745 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113868452 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.112448078 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.126777716 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.113679104 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111784121 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.120193032 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121375194 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111734195 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.121476703 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.133850837 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122883513 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112800713 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.125986879 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12446175 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.124994421 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120128148 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.110382369 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.129854953 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.123672606 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.123251174 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111535768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.1188282 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.119787272 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121452876 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.126671862 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.120698065 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.110145251 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.111151804 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.12118777 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.119868154 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.122866632 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.129081731 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1305461 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.129980158 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124761124 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116180761 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114879546 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.120518433 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.131203192 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.125782731 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13026351 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.121768981 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112838835 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114882639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122670421 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.130075751 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121188597 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114398187 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115592558 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.110489125 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.120299281 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.112325072 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.139436892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114525984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.126702024 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.125472177 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124009935 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112545102 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121726482 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.112080631 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.141017517 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.119750423 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.12093756 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122598122 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121129969 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120452292 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115711445 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.129305736 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.120352672 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121113183 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121086432 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115329877 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.121732104 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109983298 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.127661112 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.126208342 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.125684865 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.11648344 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.119124618 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114604174 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114280488 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.133237119 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.119640053 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120613552 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11474746 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111943418 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113869313 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.114552472 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112141918 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.132170884 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.111424371 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.113968245 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117012201 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.122456848 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.11944408 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.11379827 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.142763833 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.129354934 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.124047339 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.122499415 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111668039 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123301807 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.117477302 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.146928629 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112716211 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121274334 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.111762818 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.119854086 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112725472 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.113089453 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111386498 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.131415216 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121353161 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.124979315 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.12164413 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122411664 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.121505923 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12700342 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133165735 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.125341238 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.113543443 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.110239803 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112083333 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.113298299 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.130789065 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.128799317 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.122063126 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113070959 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114396804 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.121423401 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111302431 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112101163 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.138431832 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111955604 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.114779977 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.111065831 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112988481 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112606616 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.116400337 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.116939736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.140829051 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116807566 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.122253313 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114936712 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.116123992 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.129690756 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.122647133 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.129653169 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.123101282 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121946923 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.121573031 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.112454779 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.121832325 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113293429 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.130945245 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.11433339 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115033852 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11461148 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112997356 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.116468559 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.116017613 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.133616149 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111374275 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111932998 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121507612 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.118041992 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.128509892 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114902401 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112163687 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.130318937 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.114758996 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122145741 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.1126374 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122961464 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.120887464 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.111482099 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.131110442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.122113034 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115509455 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.121235721 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.117167356 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.126218991 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124899926 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.140488841 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.121865445 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.125102425 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.130339645 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.129423483 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115972488 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.111368462 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.130758745 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115928374 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.119380695 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.121396986 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.120572724 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.111363964 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113935595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.124529928 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.133512429 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112685392 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.111492145 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.124591844 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.125312981 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.124957623 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.122458064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.137131829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115687576 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.120478028 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.128584824 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.12166147 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114629121 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121527073 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.132971353 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.122878029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.113020521 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122850056 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.12967891 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.112383133 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.113510222 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112443557 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.140814345 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.11188149 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.129368233 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.126087347 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.116045903 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114037472 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121709077 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.131442718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121462999 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.130703627 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113893494 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12346785 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.120368057 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113469316 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.140032565 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122001448 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.11159063 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112737523 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1157145 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121730015 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113479144 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.122211169 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131266813 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126578978 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.124669107 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125399871 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122285224 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121136062 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110783082 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.147086544 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123365787 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120533859 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113129147 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113515844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.111566138 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114321652 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.139924234 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.112837186 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125066957 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.127161606 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112796399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113773128 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.124008351 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.131769503 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12799934 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11754636 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118566525 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111796382 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114607104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113669488 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.128921865 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.138501508 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.112216829 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124496086 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.123802628 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122281618 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114481856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122625059 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.129641858 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.112891334 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.122753547 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112453718 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121794349 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115465047 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113541419 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.13626482 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.125695591 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.124427421 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122260307 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110772583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112942123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.12086286 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.123468107 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.131057116 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.112542358 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.122102604 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113482348 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114969612 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114006778 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.11113478 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.130809176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.126058607 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113708218 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.114115117 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11326933 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122686591 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.12034926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.135145963 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.11563837 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116987112 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114699547 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12509519 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.117418039 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.121690618 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113820824 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.14072158 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124738934 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11327002 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116311003 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113081109 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12294911 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115560235 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.132305425 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113574619 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124289222 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12219942 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.114384681 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.125398616 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118343022 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.144960178 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123952899 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.122035363 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.115127773 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.116264506 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.121891387 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.112033795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.139672605 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116263858 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115163713 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113108179 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122307152 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123456224 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.12211405 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.123432347 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.131108111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124237622 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113429011 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115685305 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.117108061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.116140229 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.125114182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.141496548 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114223725 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.118584408 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.126020686 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.129087642 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.113421287 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113025993 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.135318771 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124992618 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.124156429 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114637035 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113604546 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.12204211 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12672689 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.122617916 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.132648773 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118767478 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124166317 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119085295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.117990905 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119360662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121853743 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.139344702 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126152862 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117534602 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1219029 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.12429979 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123658202 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117945315 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.132588169 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.113758203 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.123371497 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114116623 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.11518576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116045389 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124656675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.142359209 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115598958 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.115478907 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128761099 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120653737 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11941398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112875397 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114418378 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.144219322 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11923035 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.131284166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113047158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124496503 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.122322496 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123751498 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.146624679 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.112948039 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116125242 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118424766 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126484396 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.12310345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113108107 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.131774128 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12229391 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.129090599 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.131090402 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.125922048 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.12251078 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122971062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.134770527 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121535803 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.122678313 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123643434 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.122917618 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.122449241 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115499007 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113545754 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.133197476 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.122981208 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.126497074 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123636591 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114542588 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123450891 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.124169761 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.133053485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.12007161 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119370983 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.12651795 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.117394764 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124325076 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.117434263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.135411542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133379169 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123901201 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115033121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125814825 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.122451596 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.114074685 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115571393 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.142733972 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12779731 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121640595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115831538 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122724245 seconds)
  done (took 73.599845957 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144073985 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123071471 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127776206 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128353586 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125568766 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122188485 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185028928 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.140858363 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126151469 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.130621431 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121975805 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121614139 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122074123 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121389186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141176097 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122542378 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122768556 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124994832 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122409662 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121394617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121484825 seconds)
  done (took 3.70015416 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.124911692 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.123823766 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.119220056 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.126797069 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.125894008 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.121815505 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124856377 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.140439683 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.12914381 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.122538963 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.113015417 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.113591828 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115129914 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122171483 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.131837845 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.123296075 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125632296 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.125896783 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.124060896 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121904621 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.114042721 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.140733612 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.124441549 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.118766976 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12892438 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.127468808 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.123233591 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.127348089 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112527297 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1459513 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.130627955 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.114313289 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113304229 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112890614 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.113607905 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.122832228 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.141328988 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.122754087 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.12563575 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.11298185 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122030363 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124114631 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.114055584 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.141156619 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.128245344 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.120882215 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.127674034 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.122085901 seconds)
  done (took 6.94074897 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.139832054 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.139840841 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.126869758 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146891233 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121668303 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121750713 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.141838992 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138687138 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.123036851 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123680296 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125370836 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121967071 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123317659 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.142375715 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122764874 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123483442 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122761102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.128232239 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127346902 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.126835514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122460936 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.145827033 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123364529 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127697337 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131136066 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.123574181 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122433045 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.121286002 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143308074 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12279864 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122694247 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124129199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122334137 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122771395 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122644797 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.141476029 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123210889 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123846828 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128118054 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.127375795 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126400671 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.122584487 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.125045571 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.142333085 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126981794 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.131771208 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123056502 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122524704 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.122150065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123392309 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.141307019 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123036733 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125238005 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.122695884 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123721898 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121740245 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122031331 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123339853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.141326191 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127724821 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.128891895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127527822 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.123250396 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.124605905 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.122993942 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.145446346 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132287425 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123596881 seconds)
  done (took 9.755086972 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160180872 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.140101668 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140106829 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139830429 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13933444 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.161443418 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.141539502 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.141113845 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.140453245 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138923794 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139556846 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.222664062 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.145529784 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.14849361 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143454531 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.141317382 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.139900082 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.159941035 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.144579419 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.148996438 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.140646336 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.140579834 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.140378301 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159805081 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141804535 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.141262439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.143060773 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.140547679 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139643793 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159273297 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140754398 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.139693433 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.140077994 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145306572 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144526541 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.144253154 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.161482378 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.141383199 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.140563284 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.144621733 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14810814 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140372886 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158931321 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.140348812 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.140816658 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.140494079 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.140686347 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.142202441 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.163087501 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142006156 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.140854183 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14169101 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.140639114 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.141342106 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1451486 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.167066957 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145177897 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143234989 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140772354 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.140221196 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144163082 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.170441017 seconds)
  done (took 10.08772107 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.136205131 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135976212 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.173410728 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.125900309 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124200868 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.147576481 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.125934831 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123555917 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.123444353 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132786364 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.123164145 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123790086 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.15532616 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.130768365 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.129461875 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.127415398 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.125387007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123424328 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.124676884 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.200215961 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.132320249 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.124015281 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123147089 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125695312 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.123856294 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.144558759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.126636562 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.125019296 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126079669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12262118 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.122704494 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123825327 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123958137 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.145418764 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.131686937 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.130495239 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.127637967 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126424304 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123049549 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.12443442 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.14769604 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.13222558 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.122947815 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.125492243 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123968815 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122812215 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.122715947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.145623448 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125249961 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.123690783 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123009293 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126681846 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.123128472 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.124045724 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124781974 seconds)
  done (took 8.183401948 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.140071015 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129257888 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137735023 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.127120545 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123416851 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.123472852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127210508 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15338076 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124557597 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122931079 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124109085 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125953495 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123803041 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126148631 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.143966797 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123371113 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124397644 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123732672 seconds)
  done (took 3.325348607 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.131593836 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.177529225 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123883073 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.185156226 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.141266534 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.119550896 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126494781 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.115795732 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.127491274 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118494712 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.123540355 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.13599607 seconds)
  done (took 2.628113889 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147904277 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153248419 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139619342 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143836011 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145409349 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160518376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141688016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141878764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144457335 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140019527 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140927364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163861799 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150333058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14667939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150215612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144063459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140578636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139946577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166396075 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152588249 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140373598 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14376165 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140649985 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140754154 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159664726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143423728 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144536587 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139612279 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140719515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143127019 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16383277 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141684724 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144083997 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146149063 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149353534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150240345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15970632 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145457889 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14468701 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146271445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.15272348 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144264983 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164614255 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141828598 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145266112 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141350658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142816041 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140579449 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140757521 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164447481 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14464513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140515533 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143446513 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144288454 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14980835 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169730254 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147245557 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142908509 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144039518 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140713472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144459729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174175978 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141697033 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141411477 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144264533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140398954 seconds)
  done (took 10.732189798 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149616324 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.144364974 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140847542 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14148869 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14178522 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14087305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161573985 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142239302 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141058814 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14682962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159522597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147314042 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160710189 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14204071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141286322 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145070457 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150154123 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14029774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161078622 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14575428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141256796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142726063 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140762556 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141064613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161704997 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145849234 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142626842 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141097641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141300259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141496226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146717454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167173356 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147729743 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.140757578 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141550086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141753157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144765591 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169685772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142112514 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145302017 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141054993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145591899 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144042756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160834753 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141924803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142128998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141497455 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141552924 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141303468 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160906739 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142421667 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147292093 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147010255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148358295 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142361201 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141056886 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161027583 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146102272 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1498081 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14429723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141302206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141713989 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164162878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144259345 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141339352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141577454 seconds)
  done (took 10.69954061 seconds)
done (took 167.253875528 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175161435 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193787917 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.250167429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.206912531 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.175082424 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.16459886 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.161710446 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.123003626 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.122732515 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115060401 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.194906357 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.117098866 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.228121587 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.125805931 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.264836621 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.116375478 seconds)
  done (took 3.737064479 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207375573 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.292397698 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130681975 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.136991277 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.120792139 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.116053528 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117251165 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119795487 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117946102 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11587278 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.116152252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.141659901 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125625013 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.120272324 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.118114963 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.115453116 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.116603827 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.119979195 seconds)
  done (took 3.46947046 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.143599005 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159787727 seconds)
  done (took 1.318901802 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.148303074 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163601729 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315741207 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15595138 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.155529348 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120441736 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151035216 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128759458 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.189818651 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136779478 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.116852419 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11932324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141333132 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.124424857 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138322556 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11915825 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.157058949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.130244858 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.137211235 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125618941 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138475759 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117770792 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115885373 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.15264092 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181373477 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.116996619 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.116608911 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.117103333 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115706198 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.131106156 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.137144503 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115951558 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115603857 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.12166342 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127386175 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.121959961 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118143317 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.13610247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.132801458 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120626982 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125805467 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115940674 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122701685 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11843352 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.138168475 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120655485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117114635 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.117365072 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116971167 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.12022868 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116876582 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116860243 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135137754 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121207987 seconds)
  done (took 8.251197905 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.913097542 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166419681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122889967 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.045199921 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1393966 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118356701 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.950293003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.160320211 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.189594091 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.023963924 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131195001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119499637 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129716417 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212502136 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.079984939 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.235941226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.839202915 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118904488 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144764203 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.125548404 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116942436 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149271424 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132430167 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422656946 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122046662 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11924181 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11636482 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121938658 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152873867 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119917276 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11723296 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.131329224 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.227445858 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.121987654 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116628455 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.137249735 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1179688 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.127143273 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.169094222 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.124290846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156794853 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117084173 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.145458871 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123657798 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127904032 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117435445 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.118549345 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.131562672 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.132963937 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.146636315 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118150197 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118277405 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117001507 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121681708 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118836275 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.235930341 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257067196 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119057788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118161289 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11805983 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.168240394 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122463126 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.129302619 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156541414 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130971252 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123173826 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.703612359 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128903376 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117571845 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122909208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.146419763 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118983263 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116888338 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147566649 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400885819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117127623 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117370077 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117439641 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.173950606 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.118321048 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118157927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.122948389 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116772424 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117739935 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124238692 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142905464 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.135388824 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.204037378 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118353642 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117295215 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122370029 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130335096 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.138189172 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.176797958 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.119394063 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.12191465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.170011007 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11712624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.120719302 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148645666 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118728974 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.128178951 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117115054 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120248923 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118199708 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.126517215 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147605817 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12849092 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11935885 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117484248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126295792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127207546 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127086244 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149575614 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.419937793 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.130506291 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.117883765 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122814484 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117441088 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.125316495 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118568253 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.189843611 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118665948 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125893386 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117955217 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.117909806 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12524288 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.125633003 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.146285947 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118655979 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117565087 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121273119 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216603724 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132957727 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117738908 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182252738 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164218608 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119139339 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.132942551 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117403913 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.129500125 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121078947 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137631262 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11740094 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.704603148 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12036337 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117656511 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125580481 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175288658 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.14354355 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124137897 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.117842495 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117853621 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.701810756 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.132027499 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119186954 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.144103134 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122069003 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11940268 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117537091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118444834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.119492566 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.128770685 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13828855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117454798 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.118282024 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.124124733 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116861079 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125940802 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124742532 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123834925 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.139433434 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.1180368 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12475253 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.133318605 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.128864062 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.120574087 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512191238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.140722016 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119883753 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.130367621 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118346566 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.21005897 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117586081 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.127507361 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143396671 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120055169 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.236807836 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.126543542 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174283092 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128274334 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.136108712 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.138188085 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118206279 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.119283939 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124270914 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127629515 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.120159514 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117461979 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14016599 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.062828476 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119446698 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.191023744 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118019272 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.130726607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1173743 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117388526 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.230958609 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119784296 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122735588 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124409941 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124792909 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123604109 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.927749689 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.13947603 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120156419 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122700571 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.129387278 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.125016958 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117100016 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119803323 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139001866 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.122186331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.170687543 seconds)
  done (took 42.789574166 seconds)
done (took 60.577276435 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191919568 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157396403 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.213420041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165511363 seconds)
  done (took 1.794614208 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.220826438 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.144485778 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.185745402 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.144828902 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.201615198 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122691001 seconds)
  done (took 2.058376892 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.159509664 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.139823907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.140849423 seconds)
  done (took 1.482615144 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.187681055 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189371452 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.509481824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.355963773 seconds)
  done (took 2.332318853 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211462497 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132759044 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.130937117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.179887383 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.21035423 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147679444 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137503918 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.140812724 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.15816962 seconds)
  done (took 2.519297461 seconds)
done (took 11.229151905 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19342031 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12547634 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.130897143 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.134789591 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.209474874 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.136455761 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142317666 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.130418908 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.141689347 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136307712 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117211445 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.162051564 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.126338037 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.180996342 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.131109377 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.118536824 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117489848 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.15786961 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.144903888 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.140326178 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.182052678 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121888238 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.136513757 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.145971796 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.188354834 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127347896 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12531175 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.130596138 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.141251858 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.153676326 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141811939 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119091478 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.142280517 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.140853434 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119973648 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.126628514 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.142518694 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108022136 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.12705428 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.128731561 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.139809385 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.126760488 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.12482128 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117701028 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1549453 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.133966576 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126765941 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.130173082 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117561968 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13366493 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127093788 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.171462226 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.128186835 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.117942471 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117726365 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.118359342 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.136759102 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121104945 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.160579414 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121244861 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121482067 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120728576 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.126735209 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120704896 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.126095143 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.145622495 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135617506 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133252451 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.128086947 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121518064 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12302141 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132075898 seconds)
done (took 10.856865315 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.13892839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.151633124 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175165041 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.175719421 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.147366518 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120539409 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127937687 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133725609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.12947651 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121691018 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 0.13197987 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.207083636 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 0.129875044 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119192418 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13403684 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 0.127512501 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.132631578 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.122024286 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205722052 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 0.129733465 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.134624914 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144207142 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 0.120404788 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120769677 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.143624823 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126121716 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.127985275 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.120866036 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 0.127922715 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126264243 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.12043098 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.150047981 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.134472907 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 0.128013821 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.129995754 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.125049652 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.134554731 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.123173659 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.140349679 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120200404 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13140658 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 0.136253415 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128569212 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119741089 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127150382 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.127788665 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.149865368 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128367129 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12145332 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.128689107 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124191245 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 0.126360091 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134280438 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.148695173 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 0.127865623 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 0.121014992 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.134117724 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.135048819 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.133190272 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 0.12730858 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.127955132 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.142462796 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.126413243 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13131775 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128609071 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127977196 seconds)
  done (took 9.911630379 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130445513 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142527673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128935633 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128865959 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117726923 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.121052188 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.139534167 seconds)
  done (took 1.972118526 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.120598679 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189678007 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182576552 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205157926 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184402295 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195281604 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153825996 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.150618245 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.149744982 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121679589 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.192765017 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.207575398 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.155365707 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122381555 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184154228 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118574865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183566426 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.196244338 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.128497343 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183158618 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127712079 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.172748444 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.121952045 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118940839 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.185564558 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.125015539 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237365855 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138130352 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131217331 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.183537061 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127217401 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.162863006 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.2181895 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122350865 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130895488 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.179103215 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.202679751 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.126952335 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.182379194 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121736749 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.2073311 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.128049119 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.128550452 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.132943472 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.132092799 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.174646968 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.160152562 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13944599 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.133959202 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.191872628 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.122540634 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.206927531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137384001 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.141536867 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120761933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.129834377 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134984224 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.127995415 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.218895128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.130449699 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180889898 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208766901 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.186749577 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180370989 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134516785 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210662562 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.178756354 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.134494585 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183113146 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.134374884 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.205711651 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132731916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122210592 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.181161453 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164086897 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.187176633 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185531325 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129172158 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122962344 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.143081113 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.130037662 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1291526 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.184715468 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128569166 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129244042 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146642551 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124047438 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.132599248 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.180405765 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.131134054 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.134717269 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.144973325 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13354224 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.133413057 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127183071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.192472413 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.120476936 seconds)
  done (took 16.234503369 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.121334121 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120228652 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123013787 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118811668 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.118928749 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122744534 seconds)
  done (took 1.81458848 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145580865 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13222065 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1438015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.128764191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137637577 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.209699785 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.197428101 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125944759 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.142619834 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.138059488 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215386817 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191731311 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.198489735 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.13979142 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.216627514 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.139843011 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.192447922 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127731664 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13766327 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128255071 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.152124954 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129679031 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130063116 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.177974409 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130683338 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137559573 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.14385237 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.14560859 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.145910345 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124105961 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.129358277 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.13358084 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11826641 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.147740303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.205712173 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119200678 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.128774615 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.131047095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127788296 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.154018222 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.197501268 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131108041 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13865757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.135484459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.118099846 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.142347257 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.130932317 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119291846 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.199415827 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.137125443 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140606639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.130276678 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.154049676 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.135948314 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123927686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129205295 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.13549089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.191722511 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.152983577 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119748064 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.128331751 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.131427772 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121900792 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.132299076 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129374585 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.159135024 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119695446 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12925514 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129035843 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.133637068 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.137408291 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.133360879 seconds)
  done (took 11.558238396 seconds)
done (took 42.544820087 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.608516456 seconds)
  done (took 2.685929709 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.872512863 seconds)
  done (took 1.954100109 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.104997609 seconds)
  done (took 9.22633134 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.412456328 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.336313503 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.0010635 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153063565 seconds)
  done (took 2.988189896 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.077084526 seconds)
  done (took 2.181764905 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.30307672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.246391004 seconds)
  done (took 1.642420946 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737479783 seconds)
  done (took 1.843382947 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.516297167 seconds)
  done (took 2.613107584 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.24446433 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.211009205 seconds)
  done (took 1.565624057 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.524989836 seconds)
  done (took 1.637507208 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.635973782 seconds)
  done (took 8.749154173 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271170326 seconds)
  done (took 1.384152944 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275060441 seconds)
  done (took 1.392451837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.257429098 seconds)
  done (took 3.364742401 seconds)
done (took 44.332467207 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.133220171 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135756252 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.134538308 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131466782 seconds)
  done (took 1.630086546 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.132074815 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119376204 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.123306099 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122674103 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1226849 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.118600597 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.118137912 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.142693297 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.12909093 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.126623057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128257326 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118247409 seconds)
  done (took 2.616652037 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.185997224 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.176587612 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.197562263 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.258998542 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198335672 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.31732649 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.271277648 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26062738 seconds)
  done (took 2.98016538 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122291584 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.136563333 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.157735501 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.119597998 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.12087638 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.356311281 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136361104 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121281789 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.193023427 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126797411 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.149774064 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.444780264 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118809869 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143935985 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128344583 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131962377 seconds)
  done (took 3.825668619 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.620871317 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.443980559 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.381989023 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.211458833 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179777451 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.126715319 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.642002853 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.127885475 seconds)
  done (took 10.85689162 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.207630466 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.13908135 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.152666455 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.154868688 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.152967531 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.178029233 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.179837812 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.13558208 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144877829 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.139602732 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.132308769 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.128829757 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.208755397 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138098711 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.131881614 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.129389845 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.133121038 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.139292682 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.19770638 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.134580656 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.137414508 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.138711882 seconds)
  done (took 4.46063359 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.132312504 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.123382447 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.126506986 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12283959 seconds)
  done (took 1.630668519 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.189081008 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.129310827 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127069325 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126819382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.128422064 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.124775987 seconds)
  done (took 1.953965616 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185032098 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149699698 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206901451 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.358037018 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146406409 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160873601 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.300093591 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157282302 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.157341397 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142534229 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190058062 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161571482 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155628304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171546165 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141163688 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.180304789 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166526199 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189781258 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151839862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182098257 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179583638 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167924218 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183687488 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148822668 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140738658 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169179973 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.138536044 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136749481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156387241 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155036643 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174816255 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151589906 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137671141 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169344557 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151359696 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15192547 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254759865 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146022513 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.206426682 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175885216 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182631569 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141570521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186553242 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160973902 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139401313 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173157521 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142892448 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.182721984 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141311895 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14568592 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154427994 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171581824 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.181857559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13967422 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279754189 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136088622 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168370872 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165615718 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184150252 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179727687 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188379729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.132200829 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172646061 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166119339 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203562213 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147135639 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.149917775 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129678724 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160146985 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200387759 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164116501 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156506099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.165982069 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136909359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181724467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159162807 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148778186 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165260774 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155336426 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.161670663 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155437001 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14285529 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134407565 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197079639 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131247685 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218343205 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137344367 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163957331 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169795672 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150388514 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172633306 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152913793 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158462905 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148559817 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.121572034 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169595253 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155238078 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151328011 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133337878 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146131094 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147258992 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.163916434 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153800592 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.135032497 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158608258 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.138052092 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161516256 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185394442 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.142913785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164431981 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145943597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156242664 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176827946 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17489978 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137253578 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136637004 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179065114 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185552157 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140179551 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161341316 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168868114 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151232847 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146527722 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177289686 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183655315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166160827 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173150192 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152708678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137398139 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133343426 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161814214 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171724345 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149210524 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136396084 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152438169 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166094394 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.158259374 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142950591 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162990995 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134434571 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133364754 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139069822 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170339079 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.153405987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.15899986 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14148472 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14702671 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159698963 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196469995 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143039399 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139111861 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152670259 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136403455 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.186662806 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149975985 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.25621636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.155042624 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171274583 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134723183 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197061752 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150606379 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178558118 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183302243 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143986132 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18246165 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167635703 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.132875398 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14742805 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152908182 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162627036 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1677057 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199601607 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.149331812 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15225203 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188707011 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149797802 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167654934 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149980436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138566401 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182816012 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158624234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133236029 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.131524053 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134540152 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147322092 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143314403 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171432857 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1547651 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149500674 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196103828 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174122834 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141033691 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170351431 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132484166 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149086713 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.184812155 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142912599 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.165213229 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167542638 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168037379 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163280643 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143704696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.132367705 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133537899 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134704583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156590283 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173010404 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143733627 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138583766 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172217609 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151345505 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155816065 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20340501 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149358339 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178055247 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.15684634 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169796988 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151331636 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161217224 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.1798239 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138275371 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17163914 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169626368 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141458471 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179991551 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156131472 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189686942 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17626205 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168719278 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135208187 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141064495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154266928 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177461051 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152883436 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141566885 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136691106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140057705 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140179232 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156296961 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155893217 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142106431 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149411713 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148673005 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146577849 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161184252 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137735387 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164711716 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148434273 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.132229024 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155200341 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18062899 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145193737 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143200356 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168345599 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135090979 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.326590465 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161541712 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155466201 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139989957 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137450607 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163265595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174249923 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144649251 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199342046 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138549879 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166338525 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160309179 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140286857 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142771447 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178500083 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153337492 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133029287 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130330948 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154722401 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.158896822 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179969224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138883112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163941893 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157490703 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152287102 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177298363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140383628 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183223487 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155508503 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158784891 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.184850393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.153171546 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172673395 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133872778 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141279762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.142240364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207566285 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136785722 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157470231 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196090404 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215461998 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164811731 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156656095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142704068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134071996 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156577348 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168384011 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176348214 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137319999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138244028 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18997689 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13686623 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136446359 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154068269 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293131491 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153245815 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161585625 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.126830669 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290395723 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136573457 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137886295 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166323303 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155023012 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139794312 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18168337 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182066565 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141732209 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151242175 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136994604 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197074763 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171796309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151589223 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151825433 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138869071 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172918862 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143206102 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161547857 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154680303 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.15197639 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154037046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194379488 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16268903 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15196554 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157400326 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156494163 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183021491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148567112 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141061202 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174567768 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134953263 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146770954 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164787585 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130215111 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151100155 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.171048365 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160144377 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153787423 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162406418 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146035786 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139755742 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140817701 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184997854 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140806234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.151732177 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156779545 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13759832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183669037 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168002355 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136529395 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161105402 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142315861 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153962122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138943518 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145552601 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138163003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176588215 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158750488 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130373847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161828726 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15342727 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183648136 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142734506 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139675438 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.145458703 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.150113701 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167490106 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176574731 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174934842 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145534216 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159943469 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160795571 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169915889 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14875678 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140620807 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227801376 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147386917 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155880342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163083189 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143352308 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146570315 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144710746 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152630159 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15640944 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165456052 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137897482 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168911093 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145171159 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138848924 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142543015 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197958247 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151010268 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155915851 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200316659 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139220934 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158415459 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148275937 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135392673 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173372349 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15569773 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145231318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147702764 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.14724076 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.144830324 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167129979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.160901836 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152467221 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172880689 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157899809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158989627 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.156211034 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158506981 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139155812 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158794615 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130974631 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143083978 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18757795 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137566953 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134922043 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161943552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143075163 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.157555852 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16269494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.185660338 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1782534 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.134048732 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136057661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291893494 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170540125 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183081822 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.15933903 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140294846 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142863027 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14857101 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.153914867 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163050314 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.162260204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137165648 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135879862 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.163438809 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.134968078 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187221116 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168329392 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151506141 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183968254 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.148266857 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287346133 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144132638 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163145502 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139734467 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133634134 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142430342 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162975572 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141647027 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17472854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169903022 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.187363265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142449912 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130892571 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.136328119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137171379 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151233137 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166491416 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159649282 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147953781 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128726362 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146003214 seconds)
  done (took 78.294428414 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.151797342 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.158383393 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.24196622 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.260330166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142734655 seconds)
  done (took 2.157090732 seconds)
done (took 111.507368506 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.136975025 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.135681089 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.133362415 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135296764 seconds)
  done (took 1.724648419 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172695793 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.109772298 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.110029314 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.130218802 seconds)
  done (took 1.724108936 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.355892618 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.110848925 seconds)
  done (took 1.686016349 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157123384 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.150344179 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.150315961 seconds)
  done (took 1.668075175 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.151091973 seconds)
  done (took 1.355515424 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.132643446 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132953092 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.192551093 seconds)
  done (took 1.660642201 seconds)
done (took 11.02741136 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.241181414 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.960123831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.439454254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.194893956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.778575552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415750867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.430880743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126392104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16095707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128709005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.126541593 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.708416509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.411638915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.897283462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.456930699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90305383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.717104508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132542317 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126445898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127929198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.411930932 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.165876877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125669451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125694559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707861402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425087911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126626553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919316723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126976756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126964743 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.415307784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126103973 seconds)
  done (took 21.481423198 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163984635 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147519466 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131370374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127202642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.132520279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136698245 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.161600095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127043018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145504297 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126414293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142573769 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125512894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154672168 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12738613 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142062138 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126805686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126039593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126084384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12651829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.155265426 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.130455534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12637314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12684375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126736883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125466627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167437065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137035638 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133919685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127634416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12875352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127809661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141759401 seconds)
  done (took 5.577521462 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.180350427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169120765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132918938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.158955392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.157829409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.15480136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.187578415 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128763267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147447758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126633206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.152328045 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127691855 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.144955066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128957757 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150069308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.136860303 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.158519681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127569085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129692096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127532794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145475316 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.126972428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126121941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.151999182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.127219251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137749769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127030252 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128023666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.129900971 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.152856038 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129673632 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.130073288 seconds)
  done (took 5.76841863 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.136116353 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143401844 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.159410238 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16725481 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.14586183 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.139459464 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157388152 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.138290003 seconds)
  done (took 2.411763771 seconds)
done (took 36.447686822 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 0.140267008 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 0.153089067 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 0.131821428 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 0.126252857 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 0.133955089 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 0.135496448 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 0.137105384 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 0.157212454 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 0.132594444 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 0.139032998 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 0.131513249 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 0.132655854 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 0.138235695 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 0.133306043 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 0.159656973 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 0.132418175 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 0.141390495 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 0.142286884 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 0.139797097 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 0.132357027 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 0.134489157 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 0.157884196 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 0.149459679 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 0.13176522 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 0.133541086 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 0.132533017 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 0.132779975 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 0.135644992 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 0.131548786 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 0.158512175 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 0.136021807 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 0.133602151 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 0.13308026 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 0.133908846 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 0.131777176 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 0.131132156 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 0.159265279 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 0.131825756 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 0.141147957 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 0.140477253 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 0.134369769 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 0.131881215 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 0.131817104 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 0.173083554 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 0.135561449 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 0.133390067 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 0.132681128 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 0.132255902 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 0.133216237 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 0.122578231 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 0.131268877 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 0.160005859 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 0.133196176 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 0.133617281 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 0.133276475 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 0.132623652 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 0.12350658 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 0.13432849 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 0.164830918 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 0.14264046 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 0.140827678 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 0.134957658 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 0.132759359 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 0.133227868 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 0.147117894 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 0.123550211 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 0.16126284 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 0.13487681 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 0.133063973 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 0.133420251 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 0.123717428 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 0.132220649 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 0.135835683 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 0.158344031 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 0.133888886 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 0.132732514 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 0.134103997 seconds)
  done (took 11.844059913 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 0.147637056 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 0.138925835 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 0.153364711 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 0.150737223 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 0.145994959 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 0.141702563 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 0.160762772 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 0.142676267 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 0.151800971 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 0.141195423 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 0.140161787 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 0.134078124 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 0.138767053 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 0.171136743 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 0.145287017 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 0.200089816 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 0.149862303 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 0.135162273 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 0.145229659 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 0.166870424 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 0.138998518 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 0.141038282 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 0.144373992 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 0.153830943 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 0.150745528 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 0.148983199 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 0.169119335 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 0.145785886 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 0.13554686 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 0.155460761 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 0.138425704 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 0.144690357 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 0.14066637 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 0.168346472 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 0.139401338 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 0.142144988 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 0.138383412 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 0.13754919 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 0.140195552 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 0.140238698 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 0.162207202 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 0.140175997 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 0.142890158 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 0.1411595 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 0.153763464 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 0.149991792 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 0.144765276 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 0.166576031 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 0.141105259 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 0.132278247 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 0.156017628 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 0.134005667 seconds)
  done (took 8.927445988 seconds)
done (took 21.99495682 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.341728012 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.15578771 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.215429472 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.251016137 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242159514 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.217067042 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.182434646 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.147936818 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.265082446 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.19281211 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.176862324 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.338995441 seconds)
done (took 6.968720268 seconds)
RUNNING BENCHMARKS...
(1/18) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.57083986 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.344702438 seconds)
    (2/2) benchmarking "String"...
    done (took 1.472766075 seconds)
  done (took 4.053568654 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.344302737 seconds)
    (2/2) benchmarking "String"...
    done (took 1.393788751 seconds)
  done (took 3.951527958 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.231376337 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.230079335 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.605889974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.229679562 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.231564017 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.232224298 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.243753804 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235574799 seconds)
  done (took 16.22604613 seconds)
done (took 30.248392341 seconds)
(2/18) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.289890206 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.542800475 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.51484944 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.227938234 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.232570836 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.23950341 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.233439489 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.283042771 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.23646737 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.227533883 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.621015387 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.516475301 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.247326691 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.655155966 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.228000532 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.252912174 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.238335772 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.598191402 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.227380637 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.284435504 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.233008665 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.236644025 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.233817 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.262023512 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.229122829 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.24287266 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.289658262 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.237961962 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.528072974 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.267438147 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.284928545 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.228113775 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.272624752 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.227765043 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.226186403 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.230478458 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.543121822 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.234605395 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.246305323 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.234310881 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.565104753 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.244733843 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.226867946 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.226362615 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.234169113 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.24553832 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.356392874 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.998565709 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.247730417 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.233587009 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.238588159 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.64845372 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.249503535 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.232240483 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.235573689 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.594989096 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.241669483 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.310150105 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.265342675 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.234354062 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.226309753 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.226360534 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.238538084 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.228554423 seconds)
  done (took 147.373528052 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.23237545 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.23347631 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.234292304 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.241286268 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.255092609 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.230330976 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.233521153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.234657053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.234350821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.262146476 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.23352254 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.227761238 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.233768147 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.172265602 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.23156844 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.260608027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.234195722 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.247470502 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.227646061 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.236358425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.23704281 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.233931845 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.234744975 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.234214924 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.266343247 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.324702003 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.236430899 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.257425222 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.229877121 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.233804907 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.277415438 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.232218858 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.806864034 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.086210308 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.240898644 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.244397536 seconds)
  done (took 81.312813116 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.248289728 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.234820483 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.235552328 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.263629386 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.259368269 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.747104542 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.757371253 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.298747375 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.621955677 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.339616466 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.532225435 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511958686 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.24513348 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.257565771 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325932482 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.241651788 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.241118291 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.239545127 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.247908896 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.261392938 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.235230451 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.235402248 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762025069 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.247982247 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.636554705 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.404351481 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.259937882 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262739931 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.641948753 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228549422 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.269691914 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.640274662 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261035265 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264191551 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596736642 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.305154183 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344147402 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.228621107 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263229753 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.25011881 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.510802073 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.229230677 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.234273764 seconds)
    (44/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.452500534 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.228966602 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.234881867 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868482752 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.254788423 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761863775 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236600567 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153353013 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.25240524 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257146632 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.63831407 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.81729253 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237191879 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.247489064 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235674241 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.25749261 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252657206 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.234276222 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.262615668 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.58703587 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.333230829 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237025136 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235130778 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262114817 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.235120056 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233407425 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.237202522 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293864462 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762232203 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275622225 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.584201018 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322703114 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343454835 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.231656793 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.266765529 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.233255894 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.256635226 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.341865837 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.24304004 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637274211 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.395757037 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.233639999 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.539963888 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326780818 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.229514662 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581908891 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.249149749 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.267153765 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94309031 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323849825 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.253521606 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.262069881 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.251180217 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642124903 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.75805319 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503661732 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.234510544 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.713686697 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.246651274 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.630535384 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.758577859 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891977281 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.236520893 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341957697 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.395128192 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234222516 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.248055736 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.559181928 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.235350113 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.294834141 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.267312708 seconds)
  done (took 371.776993956 seconds)
done (took 601.678901232 seconds)
(3/18) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.039169069 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.004691015 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.120804135 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.999638345 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.98493522 seconds)
  done (took 11.366537373 seconds)
done (took 12.581627414 seconds)
(4/18) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.232226411 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43100556 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.267058999 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.472647947 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.257012191 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.435892192 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.996733622 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.281082954 seconds)
  done (took 13.591681892 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.253556249 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.322064078 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.253565967 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.32470719 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.259070622 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.583397656 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.570866949 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.580148414 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.257836938 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.275822473 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.578574693 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.255213021 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.325001144 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.321758479 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.258710941 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.257731724 seconds)
  done (took 22.901589288 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 2.232761243 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.264593822 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.274744397 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.27707077 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.289254161 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.602083371 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 2.06911883 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.276943818 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.256525384 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.289353695 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.332328921 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.261879152 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.26768968 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.258747722 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.454552485 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.548774629 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.259008667 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.437019917 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.944595651 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.321988555 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.277231764 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.259301442 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.268306829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.265016175 seconds)
  done (took 35.216396541 seconds)
done (took 72.927045576 seconds)
(5/18) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.239419741 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.246538277 seconds)
  done (took 5.701684756 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.597207908 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.619641443 seconds)
  done (took 4.433284958 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.851371818 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.27180507 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 2.052354945 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.764865225 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.254106411 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.254219851 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.936790868 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.274745244 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.249956887 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.255448031 seconds)
  done (took 16.389228023 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.265076653 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.419232147 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.427361025 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.365102026 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.404789044 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.282623888 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.282609417 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.264251919 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.443699308 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.26309352 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.397701656 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.442649274 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.387765782 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.478867892 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.281784788 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.414640199 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.462624744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.385525723 seconds)
  done (took 25.890438552 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.273967189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.257332925 seconds)
  done (took 3.752230549 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.378421067 seconds)
    (2/7) benchmarking "second"...
    done (took 1.284531725 seconds)
    (3/7) benchmarking "month"...
    done (took 1.346818205 seconds)
    (4/7) benchmarking "year"...
    done (took 1.336252177 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.282685597 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.260600719 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.284043359 seconds)
  done (took 10.39061191 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.865790036 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.483221674 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.613864142 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.867423312 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 2.025952701 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 2.243145021 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.032287948 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 2.242493629 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 2.246041656 seconds)
  done (took 18.839603954 seconds)
done (took 86.614723431 seconds)
(6/18) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.233464814 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.23033083 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.252212367 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.251848723 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.636352635 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.291126943 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.237238245 seconds)
done (took 16.357036088 seconds)
(7/18) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.238916898 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.232265973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.24493011 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.24214684 seconds)
  done (took 10.174643485 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.232107454 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547242591 seconds)
  done (took 4.996134473 seconds)
done (took 16.389049417 seconds)
(8/18) benchmarking "scalar"...
  (1/16) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.317148488 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.301803094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.319343546 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.313028602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.369925012 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.318190039 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.32237256 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.273394367 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.322267497 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.285359968 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271806167 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.384226876 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.269151193 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.366692983 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279781258 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.368767581 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.323227428 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275921855 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276374725 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.365880061 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.310644834 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2736126 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.36291931 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266013736 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.359690026 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272918454 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.286522152 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.30102419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277538097 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.356819111 seconds)
  done (took 40.621381704 seconds)
  (2/16) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 2.238486563 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.237724601 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.269910227 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.313465408 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.256299213 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.255907245 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.238365359 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.25340813 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.253025964 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.254083527 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.252448082 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.253128167 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.253480612 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.253815762 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.252423594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.266240325 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.371988577 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.255156511 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.253090128 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.264262444 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.272295058 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.252537116 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.258673393 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.273372973 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.251088806 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.241601341 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.256720662 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.254401054 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.256007939 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.252978194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.271626763 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.267132876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.262809299 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.328699705 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.2874273 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.262014526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 2.237836193 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233170081 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.265637714 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236977611 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.238099887 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253676374 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251463659 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.282884873 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.271471659 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.253799561 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.255719085 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.259210032 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.252866182 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.256218491 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.252073423 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253025668 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.261551354 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.257284843 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.252499196 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237830832 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.250627399 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.238717151 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.252793768 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.256133212 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.253413247 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.238428841 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.281372569 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253465431 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.50636961 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.297192001 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.250517173 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.259324482 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.255157675 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.381527079 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.261321083 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.378991039 seconds)
  done (took 94.428130487 seconds)
  (3/16) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271721318 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.17768663 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.269459705 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.182587066 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.227413914 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.181745888 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.266432432 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.172293867 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269409265 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276824748 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274598439 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276409447 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.232461081 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273814952 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29536825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.230475339 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267365298 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.234927521 seconds)
  done (took 31.60568045 seconds)
  (4/16) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275650676 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28460298 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.316710655 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.316997127 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268195523 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27435846 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.297536728 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.274287286 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 2.216521276 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.268902694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276225673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.271403347 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 2.231923035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29488595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.347855274 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277626014 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2870239 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318594409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272840811 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274442976 seconds)
  done (took 28.874438007 seconds)
  (5/16) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308247713 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27991928 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275355427 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307420963 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283957282 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.272470823 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30655568 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277957372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28055144 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.568878239 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280152566 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279043412 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309794694 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282609199 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273848915 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305819566 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306281183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.311968189 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300656463 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277672184 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.569200734 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280891624 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306773658 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274819618 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280360315 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274315087 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.280556737 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282440931 seconds)
  done (took 37.867594804 seconds)
  (6/16) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.287914147 seconds)
    (2/2) benchmarking "in"...
    done (took 1.291856443 seconds)
  done (took 3.797649446 seconds)
  (7/16) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 2.232260427 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253263416 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256215011 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.282076026 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252744543 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 2.233272018 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.247854017 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257119597 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 2.240485522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 2.26001326 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 2.244267297 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 2.228747388 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 2.251130306 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 2.236626344 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 2.22902984 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.228227024 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.253791675 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.319074631 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.264032363 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252824117 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256646766 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.235561476 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.239802772 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.747365239 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 2.235365885 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 2.235571666 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 2.2329286 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.863549401 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.248911568 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 2.251925796 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 2.265133494 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.765792468 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253474119 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262857916 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254478457 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253295817 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897428351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.234896927 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 2.246331006 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252347581 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345048828 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251679062 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 2.233471684 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 2.243994266 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.229072246 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.268027551 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.261581702 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257405942 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 2.236037359 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 2.240935343 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258288963 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 2.247294385 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.261120565 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.244576035 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 2.251657272 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.247940524 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248901121 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 2.244421303 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 2.248286897 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 2.242322401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 2.004327991 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 2.230011315 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.233963991 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.280433443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.234890385 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 2.235751788 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.253878217 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.248185787 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 2.233523443 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.256019208 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 2.251342014 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.471166648 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 2.265113798 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.278106191 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271679691 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260161186 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.231706406 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261535761 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.232471923 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 2.242853022 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.25711736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.382944974 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.23517412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 2.235250136 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 2.237393119 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.334228743 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.253779781 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.323304161 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 2.245112179 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.24727311 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24946133 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256558877 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 2.23714162 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 2.249976239 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 2.236152254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.258064607 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 2.236356834 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.248921281 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248958475 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.275370704 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255819623 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.234426159 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 2.245534893 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370278014 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372041849 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 2.233314598 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.25607559 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 2.233219294 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 2.237098492 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 2.048834257 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.255495856 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 2.234968238 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 2.239441273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.251986658 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.253669499 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 2.233627009 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.253041627 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 2.248648322 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.2512382 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259297278 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.2344546 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.234235708 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.257731444 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25428322 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 2.255408019 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.251876947 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259324752 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 2.23332997 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.256280472 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258417966 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256233222 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 2.239892105 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.256128365 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 2.233593227 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.375849916 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 2.258442647 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.259105046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.256838585 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.324597757 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 2.243257989 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 2.229215741 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 2.232327542 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 2.255059576 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 2.242672058 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.249788762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 2.234226841 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 2.251008494 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 2.229028686 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 2.252327733 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 2.22875745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.2566241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267016208 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 2.241781529 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248502052 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 2.237669634 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259209343 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 2.252949668 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.256618109 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258217692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.284477089 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24939946 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 2.115081666 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 2.242075309 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248594092 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 2.247231253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 2.228140675 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261797247 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250721199 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.279178913 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 2.233389554 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.254452143 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 2.234681898 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 2.253857747 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250873295 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.258822097 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.280107229 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 2.239132933 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354204256 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319569457 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260244672 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 2.243310949 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 2.243000474 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254354637 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 2.241638171 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252190292 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264279951 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252908566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 2.247584893 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 2.24530936 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.368156874 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 2.247815019 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 2.097378108 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.477117058 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.250646294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 2.229616863 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267123011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 2.243515776 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.32465523 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 2.249538821 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.337446559 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262051441 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256835509 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.24377448 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262483622 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 2.243715195 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252355724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 2.254358803 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.279926443 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.948203257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342050098 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262521451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 2.233346997 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.23419457 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251747781 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255023511 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254064523 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 2.232055656 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.258914177 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 2.237550804 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 2.259577193 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.262564538 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.254787184 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 2.242021171 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.248594577 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.236555843 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.239248661 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 2.251920806 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 2.235387393 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25808876 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.248481854 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 2.232889838 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.235973756 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 2.239528715 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 2.233904565 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.233527808 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 2.242477348 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 2.232548517 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 2.245392874 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267322341 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258493585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 2.255157652 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252030049 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.917279199 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25672642 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.256900782 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.251192842 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335671149 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 2.245022023 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.25464335 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 2.234980159 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.251125425 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 2.232506652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268073126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 2.233347445 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 2.244061411 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 2.237055545 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.244746649 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263044099 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.274305049 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.238393415 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259668457 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.303043614 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254809802 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.247181464 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254046868 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 2.233824749 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 2.250962633 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 2.228718378 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 2.24375698 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251643404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 2.232793476 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.252586926 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 2.233844044 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.472295944 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.254055977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.42585428 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 2.240983231 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252327796 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.243214341 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 2.232571758 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 2.236075173 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 2.253651056 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.242846774 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 2.236651181 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 2.236353549 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250332849 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.252012666 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24878131 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.234072414 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 2.231325701 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.258667857 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.279122238 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 2.235757958 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.318114358 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256823723 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.261365877 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 2.25018179 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254789794 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 2.232474703 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 2.236542918 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 2.230476412 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 2.236101756 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.256886764 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.242726411 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 2.243552192 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 2.230621375 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 2.234412719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 2.242384817 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 2.230026983 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.259579568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 2.234982923 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280045277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 2.235958722 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 2.236124958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 2.229065697 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 2.235995143 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268126476 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 2.234511406 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254889819 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258234881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 2.240726986 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 2.254227981 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.248695673 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.248700816 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27720495 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 2.236208554 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262552766 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.268661336 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.253739407 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253813853 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.342809918 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333868255 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254375237 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 2.171202406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 2.238312363 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 2.245012434 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.246747069 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.254049245 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278883184 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.256755142 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 2.247337919 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.251443098 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274622908 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 2.247129124 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 2.251381147 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 2.256372733 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.252903565 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.282476727 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.276570599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.672442083 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254161051 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.234026 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 2.247691321 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254419898 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264612467 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 2.241444038 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254546303 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.239555286 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.254067161 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 2.234759985 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262797179 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253427456 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 2.233168606 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 2.24514773 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 2.240268816 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.254168138 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 2.257745109 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 2.243403515 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258832806 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 2.237270409 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 2.244571589 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254248279 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 2.233151045 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.238830832 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257541696 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 2.233566804 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266941448 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258357011 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 2.233586259 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.256603487 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.259007115 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 2.248569682 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.240767826 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 2.252291323 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260571586 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 2.231965953 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.267283532 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 2.252061128 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254414574 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261455661 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.258408389 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.253046191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.253786799 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 2.232909765 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26440384 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 2.234695246 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259144042 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 2.256269501 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 2.252530261 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 2.251120568 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 2.24761994 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25697229 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 2.247851414 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334222621 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 2.14524791 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 2.232941753 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 2.247064066 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.334572847 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 2.247715388 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262135377 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 2.237335943 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.256830358 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 2.242101689 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 2.255798391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 2.249579859 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.260066858 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 2.236941803 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 2.23416483 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.258175466 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279270286 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254104179 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 2.253996911 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280855205 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 2.237676517 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 2.248900166 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256768639 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 2.23587522 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257827056 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.263561183 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 2.267928142 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 2.241253272 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.260079773 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257380344 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254122011 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 2.236079946 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 2.243253759 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 2.241475836 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.248627855 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.255856534 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 2.255935689 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254065579 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 2.233734241 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 2.255787788 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 2.242355799 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 2.231797823 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 2.241771968 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258004692 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 2.233863873 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 2.144111376 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 2.254891434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271188851 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 2.23374729 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 2.244813227 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 2.24245853 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.90900307 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 2.242802909 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257226937 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 2.235117432 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 2.25494708 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 2.230008168 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251456738 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275457981 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 2.237652401 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.234800124 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 2.245943389 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252743779 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.250964545 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.766300697 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 2.234005017 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265906981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262701918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 2.278279673 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.254582129 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 2.244761211 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262331464 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254366826 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257291994 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 2.235187931 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 2.255918129 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 2.256651302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 2.235126856 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261091771 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.252043488 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 2.234335967 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 2.235739839 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262562547 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256909902 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252477723 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.251869066 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 2.2378021 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257010135 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 2.241562627 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 2.248634381 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 2.247835175 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 2.241100215 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266890683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.253250983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 2.249349562 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.254492574 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.254596254 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258790138 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 2.233035744 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 2.249555601 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 2.241769243 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256903419 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.253475738 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.24666752 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 2.243640116 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.252611934 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269239247 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254930791 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 2.241998077 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.948214337 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28116602 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 2.231672015 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 2.233916948 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.233436587 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.282809311 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.252115923 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.253606683 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 2.234109674 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 2.23630286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.262950256 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.255518671 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.236469501 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 2.257016609 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 2.229375011 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2633836 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 2.262814725 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.250986613 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 2.234232783 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26501973 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.259210499 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 2.241027421 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.273842226 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.340308624 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.25080985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.238671352 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 2.238867023 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 2.239605251 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.254575049 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 2.23386412 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.25292533 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 2.239199739 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.254148189 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.254103717 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.331907638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.325110278 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 2.252957605 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.259662581 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 2.255406357 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 2.202306745 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.253633641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 2.237325123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 2.244432104 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27840205 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255706709 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 2.236786463 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.260379862 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.253558528 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.254661109 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 2.234037534 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.476449975 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.236554806 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266798458 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.25376117 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259361276 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 2.241380161 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 2.257773772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.237077332 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26180422 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.256606875 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280244536 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 2.249780783 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25653852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.69758076 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 2.24749772 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 2.237107028 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 2.238090119 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255951442 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.039611822 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264095375 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.238486931 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 2.254406625 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250654711 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.263999147 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 2.2425552 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379366701 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369469754 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 2.233270238 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 2.233778041 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345249853 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.784576293 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.254383711 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 2.242206596 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.25824132 seconds)
  done (took 1078.37583829 seconds)
  (8/16) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.598942726 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296374328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270156915 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.272325617 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.33017578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277435876 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2667975 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276411755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277598638 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301333219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266633163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269006074 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303717844 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.594286008 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339488995 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.308910989 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269345737 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276598874 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266728848 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276498968 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306316381 seconds)
  done (took 28.874520262 seconds)
  (9/16) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26349175 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278209333 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 2.231798179 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.271396926 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257821904 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.252866742 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.319629471 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.254178217 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259371703 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 2.235605915 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 2.248074824 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 2.234145166 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.251659602 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.255451408 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 2.234000436 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.254541544 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265838165 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.254937719 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256901298 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.253725842 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.232467578 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.272854083 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.282438417 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 2.234921249 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.332548496 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.25777069 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.253741486 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.254539898 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 2.254532792 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.250233697 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.254470138 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.23366927 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.249370562 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 2.234422967 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 2.263497217 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.25026759 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253957825 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.256328183 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.254105739 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.240692311 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.258641374 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.257349156 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.438172887 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.281458114 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.257595267 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.239500497 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.259242199 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.254133374 seconds)
  done (took 76.7443227 seconds)
  (10/16) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.276788673 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.377654432 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.296678077 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284650261 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.376669707 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.292157527 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.289993704 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289378964 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290449206 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280563927 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.388376265 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.433389956 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295015009 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288033369 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.337528721 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296317241 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.313698313 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.291579493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.304893747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300776554 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.300767218 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290656601 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.367700074 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.427001018 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.292612903 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295908365 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295163714 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288879022 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.425606324 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.303637745 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289707648 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29658604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.378897587 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.378982147 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302104674 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.282769614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.384299019 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.316610786 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290074103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286637414 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.295176896 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290909243 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28804282 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.387881703 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294899752 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.36762237 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291699707 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.278888111 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.42827522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284969177 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.297571043 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.432254494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294416174 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.290688857 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292110997 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.374496385 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290751354 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288759523 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299640256 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.426533545 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.293456477 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293864403 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.433395491 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277460941 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.295379109 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.432581968 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.365649692 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292437028 seconds)
  done (took 91.228577644 seconds)
  (11/16) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266901972 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.355980589 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.402744494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.403777644 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349711365 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.356260672 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.356172821 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.352788491 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.353315441 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.359623215 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357393641 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.350287379 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.311373612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.335846985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.362015546 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349857274 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.349543417 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.348577408 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.357815788 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35463668 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.349633589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.404059627 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350084868 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.403798922 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.643661574 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.310861011 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.358287662 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.35491325 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.404549119 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.349740574 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.641082831 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.362208053 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.376552171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.403918202 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.646951458 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.355696262 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268508517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355315935 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.354726983 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.353419977 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312144389 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.402417845 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.351870167 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.315167328 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349185247 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354581905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.404758515 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.643156567 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.3254106 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.361458244 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.349730825 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.402063084 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364685066 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.375198184 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.403947085 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345333039 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406663044 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.404816086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355365195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.40210675 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.402665471 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.340597996 seconds)
  done (took 86.710933971 seconds)
  (12/16) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.339763386 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272308176 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.277360073 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.26808514 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.292575423 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.258152865 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.27892117 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274241933 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278164311 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.633010058 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.277196069 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.305800985 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30558246 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.25619231 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.266254127 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.306693843 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277018058 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271135117 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.276115015 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.261581626 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.884997708 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.256550508 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285977744 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259792383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.31333325 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.874393501 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282183902 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308439319 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.262090188 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.266055054 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.326725542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.645933323 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.287816777 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293468323 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.25925059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.279702792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.277994067 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272272039 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303106284 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272078682 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.267257349 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.325995797 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.276920322 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.260716275 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.277033916 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269192356 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279864153 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.650981609 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.260650307 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.339289416 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274305434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267123833 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.271697107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.653626831 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29688721 seconds)
  done (took 74.403883683 seconds)
  (13/16) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281036936 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296311574 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276738791 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.268762781 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294666736 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.27184307 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274817348 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.232986128 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26861867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274110437 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307433924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.188925684 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271173204 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289118893 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309749869 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275348347 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.27426353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.347214618 seconds)
  done (took 26.226725935 seconds)
  (14/16) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.79264968 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.607515303 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.652127267 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 2.232828203 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.595113595 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.599949631 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.688867797 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.682946162 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.466602204 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.466533508 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 2.238849037 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.789797651 seconds)
  done (took 22.041920026 seconds)
  (15/16) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282260936 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305724247 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262452501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282755322 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310874912 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322150905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316322115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318979708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309239184 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605939395 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32650268 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334284975 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308878763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362003261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309129542 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311256389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317944856 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324031867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282305977 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315792888 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325821683 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305267228 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31794693 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315536535 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319736621 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359672297 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311280197 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.616454152 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318754137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306737403 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302823254 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32580677 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340329473 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.636891667 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2874394 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311316588 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318341665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315861622 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302039016 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352406767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261525173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305173469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308397136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320665959 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305648695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32700113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322927242 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322979766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319362919 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.611712862 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311235903 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353214289 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311239034 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339783576 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308867452 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.649985945 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.615315011 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352757254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306117562 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.606324954 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358573875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302724205 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351849359 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617079953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305870742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357358307 seconds)
  done (took 90.602345079 seconds)
  (16/16) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352590597 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266971579 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314882408 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617027594 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355737603 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32113041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319159064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320935799 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338259463 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291945999 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319607407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327863889 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352926826 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359268202 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320758088 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320804671 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318711733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351015855 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292521306 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.603523591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323653683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352407521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356170156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357200694 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597841721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311180025 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310340945 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320915324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325626645 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343044883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325192131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327733833 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361374701 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264320299 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351560421 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323523048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322664563 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325760289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31913728 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310686768 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358698652 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315616087 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320006407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319084141 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.61057445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318366767 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317747373 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292235222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31573613 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298253993 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.62627286 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597051922 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625806674 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355835882 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320950591 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322647648 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317592628 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30963121 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323524345 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311731387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355854728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320419735 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608489878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32046934 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310562889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357154188 seconds)
  done (took 90.995734749 seconds)
done (took 1904.624566906 seconds)
(9/18) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.407990104 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.402529758 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.285509731 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.327757922 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.265602306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.249567417 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.264689862 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.759508099 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.803485311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.605465558 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.271933394 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.476736087 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.300183692 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.996953824 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.28691339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.343055569 seconds)
  done (took 32.271984254 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.231452486 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 2.241203955 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.235074747 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.234490512 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.2437854 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.236646932 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.66292202 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.236015992 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.231084208 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.248279469 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.248811153 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.23326027 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.243057858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.24488809 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.233361091 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.235024624 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.22345351 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.235179667 seconds)
  done (took 40.92450092 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.241572087 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.238468341 seconds)
  done (took 5.700708022 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.236182712 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 2.236992857 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 2.233807724 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 2.229783667 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.234583377 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.233087251 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 2.238908731 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.240856951 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.23295096 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.24382116 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.242684311 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.255415159 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 2.234330311 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 2.243819388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.331510416 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.704035188 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.368720634 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298157613 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.294143457 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 2.232062056 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 2.237180001 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.839458757 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.646188068 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.324550052 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.243624598 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.235453634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.238641597 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 2.238840401 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.367605668 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301079378 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 2.232027034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.244301916 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.254630211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.016526807 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.78916875 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.243121212 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.22928005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 2.237876737 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.309109827 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.397591086 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 2.238510108 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 2.233387379 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.234489 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.762567063 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.95794399 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.111439672 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.232963537 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 2.237571032 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 2.238130407 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.807670901 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 2.242649608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 2.245860369 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.65020853 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.035137764 seconds)
  done (took 109.664834113 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.255045519 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.239299425 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418473098 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.241974706 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.22954513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233293939 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.234057889 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.241860308 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.231463611 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.232956857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.522975258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.743390138 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.241806972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.282505577 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.115944522 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.319273264 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.232917625 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.233568896 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.234904627 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.239687544 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.746574479 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244503945 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.246040234 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.436649964 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.525899252 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77896729 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.233375226 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.233774302 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.23375563 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.229714588 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.732952525 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.236812937 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.303943642 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.231164704 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.515686406 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605271283 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.578284682 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.241284307 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.26405962 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.236397752 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.259823172 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787123482 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607261301 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.2421869 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.236146205 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780403522 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.235191746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.235163133 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.236825828 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480307721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.23358234 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.2332522 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.234017819 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.236656136 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.232931118 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.307731091 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.313501217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793720369 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234492887 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.233172025 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.247283431 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24803048 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.260920125 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.238959415 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.242632106 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.604511807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.407466032 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.232462153 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607034169 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.723396543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.233999971 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782002728 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.233712046 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.261663356 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.353624701 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233175388 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.23410343 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776853063 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.236202464 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.229544538 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.576458356 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.235674463 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.525444591 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.254183332 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.23284564 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74100504 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.241590492 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.263261431 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.232260296 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.232817068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.232403958 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.235499286 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.504109846 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.279469719 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.232862472 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.233534226 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.242817621 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.232063602 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.234416629 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.233543248 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783353855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.240735447 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.232344602 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245057611 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.255497611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.233314235 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.243721015 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.23971684 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492349584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.233378074 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.238110243 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.233813134 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.236720848 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.235574046 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.434126407 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.232784637 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.23518266 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.233730474 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23390703 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.24099382 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23237708 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.256143854 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.235784976 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.234296842 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.162239681 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.621240545 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.235537275 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.245369468 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.237593945 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.234360062 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233310949 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.232274676 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.272701633 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.235413566 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909733467 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.27476226 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.270030503 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.23302361 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.236530147 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.233871117 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.242064258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.234219936 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.5615903 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.510437026 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.408988438 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24241111 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.260178291 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925006325 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.260192983 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420529567 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.234646429 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.230751695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541430477 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.390297179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.236798918 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.230615894 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.231776071 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492670165 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.232726871 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565402737 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.746248984 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.238855667 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.240148947 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914424543 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956592305 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.233889762 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.243172994 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.540528149 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.23597214 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.240176036 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.236630443 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.233487543 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.230521594 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.237706131 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.234806367 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.233947086 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.233694632 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410697035 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.427912645 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.235142265 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.2421029 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.753403682 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.244566003 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.235942506 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.233482816 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.232675806 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.232763653 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.301228049 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.252637288 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.254182872 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.24320267 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.235540761 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847330698 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.233721242 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.234975794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428826313 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847563865 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.235248128 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233470046 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.231273009 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.122640077 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789869002 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.235365357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.236030575 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.234843719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.491709816 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23372394 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.258612848 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797407249 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.263480872 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.234323043 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855980334 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.237464979 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.043212364 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.229287213 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.232491346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.794921354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.234671302 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.232990484 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.229785586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.230638616 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51620781 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.23330406 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.241851832 seconds)
  done (took 478.951989092 seconds)
done (took 668.736940461 seconds)
(10/18) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.236550991 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.233102039 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.234427098 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.22964106 seconds)
  done (took 10.155187587 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.408460602 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.244423923 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347420773 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.195242471 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.351654667 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.248650217 seconds)
  done (took 12.024335903 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.232382891 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.231111674 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.233563348 seconds)
  done (took 7.921714369 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.239782486 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.238367187 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.566801907 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.243084163 seconds)
  done (took 9.510689154 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.276455252 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.256723047 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.256247391 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.258857258 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.273015923 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.366926906 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.256840748 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.303415744 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.271030655 seconds)
  done (took 12.740093876 seconds)
done (took 53.574632832 seconds)
(11/18) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448351043 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.376209705 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.235084816 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.091404677 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.067402361 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.918147964 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351543183 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.061191433 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 2.012755704 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 2.033489922 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.918096092 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.909353937 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.40057865 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.991536067 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.523880263 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.068372198 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.236487238 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 2.089296623 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.232768665 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.233072643 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.233448318 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.08255987 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.46500327 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.042334462 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356405364 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345328646 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.12284671 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.233388271 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.948638206 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.233523201 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.232617214 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.127438547 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.187641142 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.004428396 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.151848192 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 2.078496686 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.082274565 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.353676838 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353030363 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.983204467 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.055155366 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.173500951 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.243890644 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.257432468 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.020422392 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.446403778 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342534279 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.416917877 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.242465047 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.875870212 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439466387 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.144203943 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.077673317 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.880336605 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.230997677 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.415144994 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 2.207440679 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440816806 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.646567166 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.104038734 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.523913058 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440161892 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.113466995 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345955223 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.680927468 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.402588635 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 2.239124027 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.236995937 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.944945942 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.080028241 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.162911578 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.83025786 seconds)
done (took 137.741357169 seconds)
(12/18) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.363362307 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.240764006 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.373859756 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.620868802 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401022076 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.368845546 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.326545833 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.157545651 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348460122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.159715693 seconds)
    (11/66) benchmarking ("rand!", "RandomDevice", "large IntSet")...
    done (took 2.238427539 seconds)
    (12/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.241244394 seconds)
    (13/66) benchmarking ("rand!", "ImplicitRNG", "large IntSet")...
    done (took 1.511775461 seconds)
    (14/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.394390631 seconds)
    (15/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.620592985 seconds)
    (16/66) benchmarking ("rand!", "MersenneTwister", "large IntSet")...
    done (took 1.508220311 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.334346688 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.036874611 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.152677871 seconds)
    (20/66) benchmarking ("rand", "ImplicitRNG", "small IntSet")...
    done (took 2.232947396 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.239141364 seconds)
    (22/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.45375316 seconds)
    (23/66) benchmarking ("rand!", "ImplicitRNG", "small IntSet")...
    done (took 2.234740861 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.162790686 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.23984839 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.237557735 seconds)
    (27/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.492592247 seconds)
    (28/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.047940781 seconds)
    (29/66) benchmarking ("rand", "MersenneTwister", "small IntSet")...
    done (took 2.23705794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.23736119 seconds)
    (31/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.047906121 seconds)
    (32/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.232342144 seconds)
    (33/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.241251552 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large IntSet")...
    done (took 2.247541227 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.26474715 seconds)
    (36/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.401949113 seconds)
    (37/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.24816821 seconds)
    (38/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.367852137 seconds)
    (39/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.365794813 seconds)
    (40/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.375527594 seconds)
    (41/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.238359402 seconds)
    (42/66) benchmarking ("rand!", "RandomDevice", "small IntSet")...
    done (took 2.23895834 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.236757778 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.23495902 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.493014481 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.041952493 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347362069 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.242396408 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.239039246 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.243779119 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.037496395 seconds)
    (52/66) benchmarking ("rand", "MersenneTwister", "large IntSet")...
    done (took 1.505262632 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.234938451 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.03530375 seconds)
    (55/66) benchmarking ("rand", "RandomDevice", "small IntSet")...
    done (took 2.247505309 seconds)
    (56/66) benchmarking ("rand!", "MersenneTwister", "small IntSet")...
    done (took 2.259444586 seconds)
    (57/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.233064986 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.168217855 seconds)
    (59/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.151896241 seconds)
    (60/66) benchmarking ("rand", "ImplicitRNG", "large IntSet")...
    done (took 1.507390188 seconds)
    (61/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.035739706 seconds)
    (62/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.365285668 seconds)
    (63/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.163572589 seconds)
    (64/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.160724187 seconds)
    (65/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.451142294 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.032147937 seconds)
  done (took 127.407217406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.532291976 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.560987143 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.817519994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.231968689 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.556739282 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.81884644 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.243032352 seconds)
  done (took 13.983386554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.240669506 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.060444959 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.599074191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.624423029 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.14415727 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.45047974 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.116478434 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.368419838 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.233813736 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.648356083 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.233623474 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 2.121915012 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.238592734 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.238931578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.596759666 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.369843312 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.507790984 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.245806514 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.171712853 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.436562502 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.233065074 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.24162539 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.57683152 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380071452 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.260109563 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.176609932 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.001281044 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.236733328 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.300981206 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.831420537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299273132 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.624170987 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.012872769 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.231551118 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275213931 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362363986 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.147323885 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301746971 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.969276806 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.277161707 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.952777141 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.897075881 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.229981199 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.014919379 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.826723908 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.479626788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.051127788 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.133077569 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.971773076 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.989536546 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.609366275 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.01903679 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.870653037 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.232392727 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.663497763 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.232903166 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.16111544 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.028064976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.993574006 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291896782 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.440337851 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.605707935 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.958315199 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.607557634 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980514746 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.987316207 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.887110918 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.97421045 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.563794103 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.989425271 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.592367254 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.995808384 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.439393019 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.456347605 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.234835316 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.230876404 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.233489699 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.158901014 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.236822081 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.174326159 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.938264186 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.242004616 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.238355172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.240355153 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.278230025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.414632554 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.3670256 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.005848337 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.431158678 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.100203342 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.762014567 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.624081371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.990973796 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.839450004 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.640120649 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505959778 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.603531436 seconds)
  done (took 182.279768077 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388686684 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.391475972 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.231892982 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.556726582 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.243512111 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.243099962 seconds)
  done (took 12.279162072 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.234053862 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.362489919 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367333533 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381763636 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.669301769 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.373372846 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.323025112 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.246271051 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.668206357 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.316539002 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349325765 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.459186881 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.304500679 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.662901547 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.294624608 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.316453733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.29062974 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311091692 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.313757636 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.60925481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.241557478 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.662010472 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.672958143 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.233796732 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.352382752 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.326740499 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.502454133 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.318186351 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.321949561 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.236657996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.48823018 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346968267 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.247421857 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.236030588 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.294856115 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.233489241 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378776525 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.460372462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310309049 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.349511005 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.439095711 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.677265615 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.3176934 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.446467497 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.234920871 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.233948573 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.465216479 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.501611643 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.297313171 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.462059376 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.575675139 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.314365747 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.350360758 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.440177096 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.239543231 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.233995031 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.444489976 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.321087882 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.485550172 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.233627791 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.367555414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.347729425 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.245097657 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.293823822 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.232526137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32344519 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.250779404 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.427424128 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.636376542 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367137921 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.612505187 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.386763142 seconds)
  done (took 116.539181851 seconds)
done (took 453.710842888 seconds)
(13/18) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.554187152 seconds)
  done (took 3.775534363 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.698157261 seconds)
  done (took 3.921609298 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.859926296 seconds)
  done (took 11.094429705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.299307129 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.250235936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.244643786 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.235074029 seconds)
  done (took 10.252382539 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.740477883 seconds)
  done (took 3.963579923 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.241916687 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.241176452 seconds)
  done (took 5.706191388 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.429654783 seconds)
  done (took 3.651224388 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.883056868 seconds)
  done (took 4.111711888 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.265503484 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.258713565 seconds)
  done (took 5.752342429 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.235978891 seconds)
  done (took 3.459278431 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.833347355 seconds)
  done (took 9.056015945 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.245410656 seconds)
  done (took 3.470426857 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.246473939 seconds)
  done (took 3.471943135 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.247985886 seconds)
  done (took 4.471051369 seconds)
done (took 77.384317373 seconds)
(14/18) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.23211066 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.235704298 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.233965213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.234627533 seconds)
  done (took 10.159010967 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.235408636 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.888991887 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.188155857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.243490815 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.641448309 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.237767165 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.253059754 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.942796204 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.224317787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.246881406 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.233034913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.75361529 seconds)
  done (took 26.320789491 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.235289137 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.281728777 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.243127296 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.273719269 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.283471914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.369864077 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.263110484 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.322341109 seconds)
  done (took 19.499170194 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.240306768 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 2.236829247 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.236592381 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 2.237971041 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.236460046 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.840083339 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.237681604 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 2.251610548 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.42757445 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.243390862 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.237636711 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.578686202 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 2.245138498 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.24039863 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.242568389 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 2.243630893 seconds)
  done (took 35.218087437 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.867252372 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.531556448 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.575772207 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.280360391 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.24139447 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.245218783 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.311961066 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.23972794 seconds)
  done (took 24.519176322 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 2.011681527 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.406181 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 2.153272675 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 2.24403842 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 2.259658223 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 2.069069222 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.402094158 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 2.106267018 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.085169337 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.948861494 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.976939192 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 2.163787719 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387795081 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.072911693 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 2.233537881 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 2.072664605 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 2.245146855 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.123154028 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.473166464 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 2.121168009 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.073453882 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 2.070865119 seconds)
  done (took 44.935844669 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.447026738 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.58885749 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.403385201 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.574255911 seconds)
  done (took 7.235841835 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.240545325 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.241206612 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.587217105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.488811041 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.234068383 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.233979617 seconds)
  done (took 13.249167835 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545122002 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232876013 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241945647 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283510956 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229826266 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2319592 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311827308 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68589671 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.293475492 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508763313 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233505648 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545954556 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.481123868 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247235489 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261116259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.173007072 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468345113 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777120294 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232093592 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245874719 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458067258 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.243050943 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2326333 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.249632774 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234290504 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233573343 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.496831724 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23302715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242841392 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240228977 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232926588 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23448933 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508732576 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6114914 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363848678 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259615729 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241930064 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232755865 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.237492906 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.232387178 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238400859 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.234623461 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23575765 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232800539 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233762055 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233560735 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696163593 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.236375716 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.234161388 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233641978 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247763238 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543717969 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.26935222 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232932388 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245517209 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237370975 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40701725 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575965977 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885430793 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246308276 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235415419 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.23327383 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232701615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231102615 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884456935 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.278159336 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.270416253 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288547154 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232985558 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241375316 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384765089 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236787604 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.382665595 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234700134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028848383 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235732105 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247639954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857519106 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239177443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.233502374 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.461841062 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232889327 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233622713 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.233364304 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233142845 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98397088 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120710854 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.23259038 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537071876 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.686588959 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2455877 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355641478 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45495616 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.453978593 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.232032903 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233324745 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.244000921 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24708059 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40909992 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695432884 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239466038 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.372995505 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481580428 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.442070635 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235617717 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.158194659 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671186171 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238867966 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.426740167 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23537608 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243834594 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.818033609 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241407955 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237359248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488590343 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.232660699 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040225791 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234602238 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.295260813 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258569168 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504557238 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.120753792 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235184542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598657561 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234766616 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234169557 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232990061 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235173234 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23335154 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.248286484 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241021024 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235948641 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.233306512 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231742378 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.239512685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231869961 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.235720076 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.454837182 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238529418 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513389334 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259606171 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235844037 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233112943 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.454695828 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.240131434 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.393382406 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57368795 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23399645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236144763 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237022932 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486853509 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352375989 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484783416 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.241147367 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.479143354 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.260313627 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.708306047 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232867627 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235784891 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237703828 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.243671807 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263958968 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822042112 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217741195 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261697214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234929106 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.338800951 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587319913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233172862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234284465 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.243390835 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243912438 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.708477299 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.238405396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455256004 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238229858 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.237531302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410514452 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.688966933 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817369356 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093848811 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.243620834 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.253620799 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.235431511 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242181761 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235670638 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23382057 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250467422 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243466941 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241947193 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823114047 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234160117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232845042 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.262388242 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239597104 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.233470108 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235507297 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.24517956 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232228686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238321811 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245221777 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459997026 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.357891558 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.258244393 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.754448415 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246627123 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237409411 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233200273 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4609967 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234145933 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769414188 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570933446 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250960915 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243243981 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23734056 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.351113235 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.235748284 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242417238 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244764531 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.237999507 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130102028 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.246873287 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243720543 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247649846 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908494719 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040251739 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762886514 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236951686 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.240448084 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232097285 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667705797 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232171844 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233044826 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469904919 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690451053 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233679578 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695100321 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.236606507 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93798799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249897621 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460020055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232670127 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.232206871 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238478685 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.454310465 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502578361 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242299634 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242063799 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.23568521 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761845116 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234914822 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411905956 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696098405 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236738495 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235532902 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.258527328 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236004976 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236619483 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233390517 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231895352 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247753603 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237671524 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762991716 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258460537 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233625109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903125371 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263831846 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.673941682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233826726 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251718566 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248713497 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.234203252 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.233854155 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.241873439 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.477084527 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245293537 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233230188 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243197848 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776092841 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.109785882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.232525532 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237876349 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04418869 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23135392 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246509425 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.237068045 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.254499963 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259594921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23611593 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239222545 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.237335376 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233863578 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216228609 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772649878 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.238861589 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26185446 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234513044 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233012503 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.481633591 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.338669901 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82392211 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462184911 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242359398 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482580529 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.277183023 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234116706 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.235147213 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243277212 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261946365 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254685351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.454643424 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252671588 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.231335533 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287614191 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.44338344 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233115166 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246383191 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246503283 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.233145607 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.240868971 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039096182 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45108 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.244075798 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238810567 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237941707 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509849358 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516376769 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233937363 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.248073462 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264530599 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241579906 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247287153 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240515678 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.341232345 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539500445 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245781766 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.247643964 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.233012833 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826580253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035199045 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820301014 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24143492 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234410067 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237752498 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236557296 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481488507 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233569146 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509235893 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233731755 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.246763289 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411068611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245667519 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246371374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44803279 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507560161 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233459074 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240841605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233533156 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.232719384 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244191118 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.44530484 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773726803 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842651794 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232554089 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.235298837 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698593763 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50949832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233223329 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233227732 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233611062 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.255315816 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259131391 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.244084595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23310301 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467880472 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245032261 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614835525 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246059232 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.231738524 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.124427557 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233890294 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.482748136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232466115 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245833994 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829563206 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923740618 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490089056 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591839931 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234459545 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.233984487 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480680668 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.252244708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253470371 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236858488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24097148 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.236193867 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245367556 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832531473 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487808673 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.386334898 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.232776416 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454963264 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.233293985 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.455803975 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982319572 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.451953057 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24152824 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23811714 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233461463 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.836750698 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245941996 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234108587 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.293161783 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265467697 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236085581 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49695586 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.109307825 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.235297126 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853921074 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.443514175 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39416667 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236700642 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.925885687 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829710206 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.237979773 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773961071 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232190618 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234701025 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515059863 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.243844939 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237033393 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520607672 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.25964781 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246972243 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263310956 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.82765048 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954243922 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.245334479 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247106237 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.234984209 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233050055 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304002763 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232005002 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245120159 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.23534176 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236136664 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233446304 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083730904 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.241790854 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239950822 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.232667114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233526699 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.232834267 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.237297868 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.246855621 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26652298 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553778417 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772028234 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234529946 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.853654427 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.56153817 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.48214954 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237299263 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.232747659 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.37241266 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233887911 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232721789 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232488355 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237615859 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852709079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.240472134 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.237455738 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289113767 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.444773695 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44639775 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.242112499 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280036124 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239714633 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418070769 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.237400559 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233613741 seconds)
  done (took 970.432496267 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.232188091 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.234318663 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.219668068 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.031578718 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.135953791 seconds)
  done (took 12.079858478 seconds)
done (took 1164.880728418 seconds)
(15/18) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.259372509 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.258762561 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.260304628 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.257636428 seconds)
  done (took 6.26066717 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.235788975 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.238226507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.233417022 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.234058376 seconds)
  done (took 10.167678051 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.601865162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.766175777 seconds)
  done (took 4.593319169 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.241329843 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.005335219 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.979389186 seconds)
  done (took 7.451917126 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.535709863 seconds)
  done (took 2.75947305 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.558717859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.613400829 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.389572248 seconds)
  done (took 5.787264476 seconds)
done (took 38.251728294 seconds)
(16/18) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.233231407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.999646113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391352252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.245987909 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395535119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.395044164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.513875055 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.23879757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.237790582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.240387458 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.244335738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.394976376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.51440246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.030565383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.506086436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.010427442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.398937404 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.238875005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.24026462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.239847046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.512708485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.241591532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.23659775 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.231218223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393658504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380410748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.233528248 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.00136022 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.235852578 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.237137864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378074122 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.233541663 seconds)
  done (took 78.26266795 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.232871563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.238190368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.261471586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.24308005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.233652128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.242766878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.234228089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.231846468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.232315994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.235124791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.234947814 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.232020665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.233309501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.233987902 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.234849272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.237621335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.23716297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.236780106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.233165535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.233537196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.233822107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.239800455 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.239441134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.250370435 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.236276635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.247460311 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.235557625 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.233281099 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.23171403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.23146161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.233867803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.235951864 seconds)
  done (took 72.817801803 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.233507304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.233224404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.234413645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.242525749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.231673366 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.233803971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.236737464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.232605212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.237145715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.234599113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.243116647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.245839114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.251424258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.241929861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.235567093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.243091598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.232484595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.231588228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.231794821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.243610613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.234605878 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.232102289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.231229746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.234280541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.242925699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.234858424 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.240914975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.238474077 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.240265166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.236837045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.241522136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.233222793 seconds)
  done (took 72.826174104 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.472850508 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.639887382 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.237757617 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.234296051 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.237960962 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.509467322 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.232730699 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.475588913 seconds)
  done (took 16.27203026 seconds)
done (took 241.404819782 seconds)
(17/18) benchmarking "nullable"...
  (1/2) benchmarking "basic"...
    (1/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(true)")...
    done (took 1.256530663 seconds)
    (2/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}()")...
    done (took 1.257878391 seconds)
    (3/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}()")...
    done (took 1.257574179 seconds)
    (4/77) benchmarking ("get2", "Nullable{BigFloat}()")...
    done (took 1.256161399 seconds)
    (5/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(1.0)")...
    done (took 1.254451946 seconds)
    (6/77) benchmarking ("isnull", "Nullable{Float32}()")...
    done (took 1.255896882 seconds)
    (7/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}()")...
    done (took 1.262683953 seconds)
    (8/77) benchmarking ("get1", "Nullable{Float64}(1.0)")...
    done (took 1.25126839 seconds)
    (9/77) benchmarking ("isnull", "Nullable{BigFloat}(1.0)")...
    done (took 1.257769951 seconds)
    (10/77) benchmarking ("isnull", "Nullable{Int64}()")...
    done (took 1.253774707 seconds)
    (11/77) benchmarking ("isnull", "Nullable{Bool}()")...
    done (took 1.253956854 seconds)
    (12/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(1.0)")...
    done (took 1.262145559 seconds)
    (13/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(1)")...
    done (took 1.254366404 seconds)
    (14/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(1.0)")...
    done (took 1.399005834 seconds)
    (15/77) benchmarking ("isequal", "Nullable{Float64}(1.0)", "Nullable{Float64}(0.0)")...
    done (took 1.289754601 seconds)
    (16/77) benchmarking ("get2", "Nullable{Float32}()")...
    done (took 1.266243446 seconds)
    (17/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}(0.0)")...
    done (took 1.262785539 seconds)
    (18/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(1.0)")...
    done (took 1.266078406 seconds)
    (19/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(0.0)")...
    done (took 1.262752447 seconds)
    (20/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}()")...
    done (took 1.262873558 seconds)
    (21/77) benchmarking ("get2", "Nullable{Float64}()")...
    done (took 1.253810955 seconds)
    (22/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}()")...
    done (took 1.256891426 seconds)
    (23/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(1)")...
    done (took 1.25689348 seconds)
    (24/77) benchmarking ("isnull", "Nullable{Int8}()")...
    done (took 1.253333938 seconds)
    (25/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(1)")...
    done (took 1.285896866 seconds)
    (26/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(1)")...
    done (took 1.2568947 seconds)
    (27/77) benchmarking ("get1", "Nullable{Bool}(true)")...
    done (took 1.252180897 seconds)
    (28/77) benchmarking ("get2", "Nullable{Int8}()")...
    done (took 1.253481497 seconds)
    (29/77) benchmarking ("get2", "Nullable{Int64}()")...
    done (took 1.253838412 seconds)
    (30/77) benchmarking ("isequal", "Nullable{Float32}()", "Nullable{Float32}(0.0)")...
    done (took 1.266117842 seconds)
    (31/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(1)")...
    done (took 1.257151488 seconds)
    (32/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}(0.0)")...
    done (took 1.359688164 seconds)
    (33/77) benchmarking ("isequal", "Nullable{Bool}(true)", "Nullable{Bool}(false)")...
    done (took 1.257515738 seconds)
    (34/77) benchmarking ("isequal", "Nullable{BigFloat}(1.0)", "Nullable{BigFloat}()")...
    done (took 1.257196598 seconds)
    (35/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(true)")...
    done (took 1.266744827 seconds)
    (36/77) benchmarking ("isnull", "Nullable{Float32}(1.0)")...
    done (took 1.280369505 seconds)
    (37/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}()")...
    done (took 1.261555082 seconds)
    (38/77) benchmarking ("get2", "Nullable{BigFloat}(1.0)")...
    done (took 1.265064004 seconds)
    (39/77) benchmarking ("isnull", "Nullable{Float64}()")...
    done (took 1.257908043 seconds)
    (40/77) benchmarking ("get2", "Nullable{Bool}(true)")...
    done (took 1.254286514 seconds)
    (41/77) benchmarking ("get1", "Nullable{Float32}(1.0)")...
    done (took 1.251116833 seconds)
    (42/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}()")...
    done (took 1.261590902 seconds)
    (43/77) benchmarking ("get2", "Nullable{Int64}(1)")...
    done (took 1.254347748 seconds)
    (44/77) benchmarking ("isnull", "Nullable{Int64}(1)")...
    done (took 1.253982348 seconds)
    (45/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}(1.0)")...
    done (took 1.262343691 seconds)
    (46/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}()")...
    done (took 1.258907171 seconds)
    (47/77) benchmarking ("isequal", "Nullable{Int8}()", "Nullable{Int8}(0)")...
    done (took 1.256739436 seconds)
    (48/77) benchmarking ("isnull", "Nullable{BigInt}()")...
    done (took 1.254214282 seconds)
    (49/77) benchmarking ("get2", "Nullable{Float32}(1.0)")...
    done (took 1.255225664 seconds)
    (50/77) benchmarking ("get1", "Nullable{BigInt}(1)")...
    done (took 1.256592766 seconds)
    (51/77) benchmarking ("isnull", "Nullable{Float64}(1.0)")...
    done (took 1.258024854 seconds)
    (52/77) benchmarking ("get1", "Nullable{Int64}(1)")...
    done (took 1.252744218 seconds)
    (53/77) benchmarking ("isnull", "Nullable{BigFloat}()")...
    done (took 1.254589427 seconds)
    (54/77) benchmarking ("get2", "Nullable{Bool}()")...
    done (took 1.257092264 seconds)
    (55/77) benchmarking ("isnull", "Nullable{Bool}(true)")...
    done (took 1.254893788 seconds)
    (56/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}()")...
    done (took 1.265997142 seconds)
    (57/77) benchmarking ("get2", "Nullable{BigInt}()")...
    done (took 1.281668737 seconds)
    (58/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}()")...
    done (took 1.258188021 seconds)
    (59/77) benchmarking ("get2", "Nullable{Float64}(1.0)")...
    done (took 1.261984796 seconds)
    (60/77) benchmarking ("isequal", "Nullable{Float64}()", "Nullable{Float64}()")...
    done (took 1.266847748 seconds)
    (61/77) benchmarking ("isequal", "Nullable{BigFloat}()", "Nullable{BigFloat}()")...
    done (took 1.254678464 seconds)
    (62/77) benchmarking ("isequal", "Nullable{Int8}(1)", "Nullable{Int8}(0)")...
    done (took 1.256931599 seconds)
    (63/77) benchmarking ("get1", "Nullable{Int8}(1)")...
    done (took 1.251670118 seconds)
    (64/77) benchmarking ("isequal", "Nullable{Int64}()", "Nullable{Int64}(0)")...
    done (took 1.257947644 seconds)
    (65/77) benchmarking ("isnull", "Nullable{BigInt}(1)")...
    done (took 1.253169131 seconds)
    (66/77) benchmarking ("get2", "Nullable{BigInt}(1)")...
    done (took 1.259521879 seconds)
    (67/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(1.0)")...
    done (took 1.262246058 seconds)
    (68/77) benchmarking ("isequal", "Nullable{BigInt}()", "Nullable{BigInt}(0)")...
    done (took 1.257095247 seconds)
    (69/77) benchmarking ("isnull", "Nullable{Int8}(1)")...
    done (took 1.252697055 seconds)
    (70/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}()")...
    done (took 1.257326958 seconds)
    (71/77) benchmarking ("get1", "Nullable{BigFloat}(1.0)")...
    done (took 1.255502026 seconds)
    (72/77) benchmarking ("get2", "Nullable{Int8}(1)")...
    done (took 1.258234304 seconds)
    (73/77) benchmarking ("isequal", "Nullable{Float32}(1.0)", "Nullable{Float32}(0.0)")...
    done (took 1.26300863 seconds)
    (74/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(0)")...
    done (took 1.25904954 seconds)
    (75/77) benchmarking ("isequal", "Nullable{Bool}()", "Nullable{Bool}(false)")...
    done (took 1.257768958 seconds)
    (76/77) benchmarking ("isequal", "Nullable{Int64}(1)", "Nullable{Int64}(1)")...
    done (took 1.257084591 seconds)
    (77/77) benchmarking ("isequal", "Nullable{BigInt}(1)", "Nullable{BigInt}(0)")...
    done (took 1.286412073 seconds)
  done (took 98.486313559 seconds)
  (2/2) benchmarking "nullablearray"...
    (1/52) benchmarking ("perf_countequals", "Array", "Int64")...
    done (took 1.388206288 seconds)
    (2/52) benchmarking ("perf_countnulls", "Array", "Float32")...
    done (took 2.119687061 seconds)
    (3/52) benchmarking ("perf_countequals", "NullableArray", "Float64")...
    done (took 1.492892434 seconds)
    (4/52) benchmarking ("perf_sum", "NullableArray", "Float64")...
    done (took 1.410881109 seconds)
    (5/52) benchmarking ("perf_countnulls", "Array", "BigFloat")...
    done (took 1.685225791 seconds)
    (6/52) benchmarking ("perf_countnulls", "Array", "Complex{Float64}")...
    done (took 2.233358042 seconds)
    (7/52) benchmarking ("perf_sum", "Array", "BigFloat")...
    done (took 2.235284249 seconds)
    (8/52) benchmarking ("perf_countnulls", "NullableArray", "BigFloat")...
    done (took 2.2443987 seconds)
    (9/52) benchmarking ("perf_countnulls", "NullableArray", "Float64")...
    done (took 2.068861857 seconds)
    (10/52) benchmarking ("perf_countnulls", "NullableArray", "Int64")...
    done (took 2.070265008 seconds)
    (11/52) benchmarking ("perf_countequals", "Array", "Float32")...
    done (took 1.41734482 seconds)
    (12/52) benchmarking ("perf_sum", "NullableArray", "BigFloat")...
    done (took 2.252114271 seconds)
    (13/52) benchmarking ("perf_countnulls", "Array", "Int8")...
    done (took 2.124395613 seconds)
    (14/52) benchmarking ("perf_countequals", "Array", "BigInt")...
    done (took 1.48156018 seconds)
    (15/52) benchmarking ("perf_sum", "Array", "Float64")...
    done (took 1.356122066 seconds)
    (16/52) benchmarking ("perf_all", "Array")...
    done (took 2.237129374 seconds)
    (17/52) benchmarking ("perf_sum", "NullableArray", "Complex{Float64}")...
    done (took 1.396931959 seconds)
    (18/52) benchmarking ("perf_countnulls", "Array", "Bool")...
    done (took 2.117010534 seconds)
    (19/52) benchmarking ("perf_countequals", "NullableArray", "Float32")...
    done (took 1.483517685 seconds)
    (20/52) benchmarking ("perf_countequals", "Array", "Bool")...
    done (took 1.343803868 seconds)
    (21/52) benchmarking ("perf_any", "Array")...
    done (took 1.378952638 seconds)
    (22/52) benchmarking ("perf_countequals", "Array", "Complex{Float64}")...
    done (took 1.533201693 seconds)
    (23/52) benchmarking ("perf_countequals", "NullableArray", "Complex{Float64}")...
    done (took 1.53007221 seconds)
    (24/52) benchmarking ("perf_countequals", "NullableArray", "BigFloat")...
    done (took 1.86831963 seconds)
    (25/52) benchmarking ("perf_countequals", "NullableArray", "Int64")...
    done (took 1.45885998 seconds)
    (26/52) benchmarking ("perf_countnulls", "NullableArray", "BigInt")...
    done (took 2.248224344 seconds)
    (27/52) benchmarking ("perf_countnulls", "NullableArray", "Complex{Float64}")...
    done (took 2.071775984 seconds)
    (28/52) benchmarking ("perf_sum", "NullableArray", "Bool")...
    done (took 1.350624176 seconds)
    (29/52) benchmarking ("perf_sum", "NullableArray", "BigInt")...
    done (took 2.241876352 seconds)
    (30/52) benchmarking ("perf_sum", "Array", "Complex{Float64}")...
    done (took 1.361593821 seconds)
    (31/52) benchmarking ("perf_all", "NullableArray")...
    done (took 1.34216512 seconds)
    (32/52) benchmarking ("perf_sum", "NullableArray", "Int8")...
    done (took 1.400186487 seconds)
    (33/52) benchmarking ("perf_countequals", "NullableArray", "Bool")...
    done (took 1.47619155 seconds)
    (34/52) benchmarking ("perf_countequals", "Array", "Int8")...
    done (took 1.367451061 seconds)
    (35/52) benchmarking ("perf_sum", "Array", "Int64")...
    done (took 2.234419391 seconds)
    (36/52) benchmarking ("perf_sum", "NullableArray", "Int64")...
    done (took 1.344177428 seconds)
    (37/52) benchmarking ("perf_countnulls", "Array", "Int64")...
    done (took 2.237086283 seconds)
    (38/52) benchmarking ("perf_countnulls", "NullableArray", "Bool")...
    done (took 2.071031331 seconds)
    (39/52) benchmarking ("perf_sum", "Array", "Bool")...
    done (took 2.23339702 seconds)
    (40/52) benchmarking ("perf_countequals", "Array", "Float64")...
    done (took 1.432409654 seconds)
    (41/52) benchmarking ("perf_countnulls", "Array", "BigInt")...
    done (took 1.667706948 seconds)
    (42/52) benchmarking ("perf_any", "NullableArray")...
    done (took 1.388069974 seconds)
    (43/52) benchmarking ("perf_countequals", "NullableArray", "Int8")...
    done (took 1.480166097 seconds)
    (44/52) benchmarking ("perf_countequals", "Array", "BigFloat")...
    done (took 1.559092311 seconds)
    (45/52) benchmarking ("perf_countequals", "NullableArray", "BigInt")...
    done (took 1.861277782 seconds)
    (46/52) benchmarking ("perf_sum", "Array", "Float32")...
    done (took 1.3650454 seconds)
    (47/52) benchmarking ("perf_countnulls", "NullableArray", "Float32")...
    done (took 2.07022182 seconds)
    (48/52) benchmarking ("perf_countnulls", "NullableArray", "Int8")...
    done (took 2.070049985 seconds)
    (49/52) benchmarking ("perf_sum", "Array", "Int8")...
    done (took 1.370483951 seconds)
    (50/52) benchmarking ("perf_sum", "Array", "BigInt")...
    done (took 2.25975751 seconds)
    (51/52) benchmarking ("perf_sum", "NullableArray", "Float32")...
    done (took 1.388325399 seconds)
    (52/52) benchmarking ("perf_countnulls", "Array", "Float64")...
    done (took 2.231766018 seconds)
  done (took 92.306056841 seconds)
done (took 192.017206579 seconds)
(18/18) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.235097527 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.454035602 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.235562937 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.234113595 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.267885562 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.257861029 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.233264328 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.236862128 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.759362271 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.236923617 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.245884872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.257833065 seconds)
done (took 28.884033685 seconds)
SAVING RESULT...
DONE!
